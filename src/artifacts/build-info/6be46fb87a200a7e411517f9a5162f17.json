{"id":"6be46fb87a200a7e411517f9a5162f17","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nlibrary DataTypes {\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    //timestamp of last update\n    uint40 lastUpdateTimestamp;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint16 id;\n    //aToken address\n    address aTokenAddress;\n    //stableDebtToken address\n    address stableDebtTokenAddress;\n    //variableDebtToken address\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the current treasury balance, scaled\n    uint128 accruedToTreasury;\n    //the outstanding unbacked aTokens minted through the bridging feature\n    uint128 unbacked;\n    //the outstanding debt borrowed against this asset in isolation mode\n    uint128 isolationModeTotalDebt;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60: asset is paused\n    //bit 61: borrowing in isolation mode is enabled\n    //bit 62-63: reserved\n    //bit 64-79: reserve factor\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\n    //bit 152-167 liquidation protocol fee\n    //bit 168-175 eMode category\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\n    //bit 252-255 unused\n\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    /**\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\n     * asset is borrowed by the user.\n     */\n    uint256 data;\n  }\n\n  struct EModeCategory {\n    // each eMode category has a custom ltv and liquidation threshold\n    uint16 ltv;\n    uint16 liquidationThreshold;\n    uint16 liquidationBonus;\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\n    address priceSource;\n    string label;\n  }\n\n  enum InterestRateMode {\n    NONE,\n    STABLE,\n    VARIABLE\n  }\n\n  struct ReserveCache {\n    uint256 currScaledVariableDebt;\n    uint256 nextScaledVariableDebt;\n    uint256 currPrincipalStableDebt;\n    uint256 currAvgStableBorrowRate;\n    uint256 currTotalStableDebt;\n    uint256 nextAvgStableBorrowRate;\n    uint256 nextTotalStableDebt;\n    uint256 currLiquidityIndex;\n    uint256 nextLiquidityIndex;\n    uint256 currVariableBorrowIndex;\n    uint256 nextVariableBorrowIndex;\n    uint256 currLiquidityRate;\n    uint256 currVariableBorrowRate;\n    uint256 reserveFactor;\n    ReserveConfigurationMap reserveConfiguration;\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    uint40 reserveLastUpdateTimestamp;\n    uint40 stableDebtLastUpdateTimestamp;\n  }\n\n  struct ExecuteLiquidationCallParams {\n    uint256 reservesCount;\n    uint256 debtToCover;\n    address collateralAsset;\n    address debtAsset;\n    address user;\n    bool receiveAToken;\n    address priceOracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteSupplyParams {\n    address asset;\n    uint256 amount;\n    address onBehalfOf;\n    uint16 referralCode;\n  }\n\n  struct ExecuteBorrowParams {\n    address asset;\n    address user;\n    address onBehalfOf;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint16 referralCode;\n    bool releaseUnderlying;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteRepayParams {\n    address asset;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    address onBehalfOf;\n    bool useATokens;\n  }\n\n  struct ExecuteWithdrawParams {\n    address asset;\n    uint256 amount;\n    address to;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ExecuteSetUserEModeParams {\n    uint256 reservesCount;\n    address oracle;\n    uint8 categoryId;\n  }\n\n  struct FinalizeTransferParams {\n    address asset;\n    address from;\n    address to;\n    uint256 amount;\n    uint256 balanceFromBefore;\n    uint256 balanceToBefore;\n    uint256 reservesCount;\n    address oracle;\n    uint8 fromEModeCategory;\n  }\n\n  struct FlashloanParams {\n    address receiverAddress;\n    address[] assets;\n    uint256[] amounts;\n    uint256[] interestRateModes;\n    address onBehalfOf;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address addressesProvider;\n    uint8 userEModeCategory;\n    bool isAuthorizedFlashBorrower;\n  }\n\n  struct FlashloanSimpleParams {\n    address receiverAddress;\n    address asset;\n    uint256 amount;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n  }\n\n  struct FlashLoanRepaymentParams {\n    uint256 amount;\n    uint256 totalPremium;\n    uint256 flashLoanPremiumToProtocol;\n    address asset;\n    address receiverAddress;\n    uint16 referralCode;\n  }\n\n  struct CalculateUserAccountDataParams {\n    UserConfigurationMap userConfig;\n    uint256 reservesCount;\n    address user;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ValidateBorrowParams {\n    ReserveCache reserveCache;\n    UserConfigurationMap userConfig;\n    address asset;\n    address userAddress;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint256 maxStableLoanPercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n    bool isolationModeActive;\n    address isolationModeCollateralAddress;\n    uint256 isolationModeDebtCeiling;\n  }\n\n  struct ValidateLiquidationCallParams {\n    ReserveCache debtReserveCache;\n    uint256 totalDebt;\n    uint256 healthFactor;\n    address priceOracleSentinel;\n  }\n\n  struct CalculateInterestRatesParams {\n    uint256 unbacked;\n    uint256 liquidityAdded;\n    uint256 liquidityTaken;\n    uint256 totalStableDebt;\n    uint256 totalVariableDebt;\n    uint256 averageStableBorrowRate;\n    uint256 reserveFactor;\n    address reserve;\n    address aToken;\n  }\n\n  struct InitReserveParams {\n    address asset;\n    address aTokenAddress;\n    address stableDebtAddress;\n    address variableDebtAddress;\n    address interestRateStrategyAddress;\n    uint16 reservesCount;\n    uint16 maxNumberReserves;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(\r\n        address account\r\n    ) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(\r\n        address spender,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(\r\n        address spender,\r\n        uint256 addedValue\r\n    ) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(\r\n        address spender,\r\n        uint256 subtractedValue\r\n    ) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(\r\n            currentAllowance >= subtractedValue,\r\n            \"ERC20: decreased allowance below zero\"\r\n        );\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(\r\n            fromBalance >= amount,\r\n            \"ERC20: transfer amount exceeds balance\"\r\n        );\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\r\n            // decrementing then incrementing.\r\n            _balances[to] += amount;\r\n        }\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        unchecked {\r\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n            _balances[account] += amount;\r\n        }\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\r\n            _totalSupply -= amount;\r\n        }\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(\r\n                currentAllowance >= amount,\r\n                \"ERC20: insufficient allowance\"\r\n            );\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n"},"contracts/Exchange.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./PriceChecker.sol\";\r\nimport \"./TradingFees.sol\";\r\nimport \"./Wallet.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Exchange is Ownable {\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n    PriceChecker priceChecker;\r\n    TradingFees tradingFees;\r\n    Wallet wallet;\r\n\r\n    uint256 decimals = 10 ** 18;\r\n    address public ethToken = address(0);\r\n\r\n    //Token Address List available in DEX\r\n    _tokenInfo[] public tokenList;\r\n\r\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\r\n    mapping(address => mapping(address => mapping(uint256 => _Order[])))\r\n        public s_orderBook;\r\n\r\n    mapping(address => mapping(uint256 => _filledOrder[]))\r\n        public s_filledOrders;\r\n\r\n    uint256 public s_orderId = 0;\r\n    bool private s_isManual = true;\r\n\r\n    struct _tokenInfo {\r\n        address add;\r\n        uint256 decimals;\r\n    }\r\n\r\n    struct _fillOrderValues {\r\n        uint256 rate;\r\n        uint256 amount;\r\n    }\r\n\r\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\r\n    struct _Order {\r\n        uint256 id;\r\n        Side side;\r\n        address user;\r\n        address tokenA;\r\n        uint256 amountA;\r\n        address tokenB;\r\n        uint256 amountB;\r\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\r\n        uint256 originalAmountA;\r\n        uint256 originalAmountB;\r\n        bool waiveFees;\r\n    }\r\n\r\n    _Order public orderStruct;\r\n\r\n    //For any order that is filled even if it is partially filled or fully filled\r\n    struct _filledOrder {\r\n        uint256 id;\r\n        Side side;\r\n        address user;\r\n        address tokenA;\r\n        address tokenB;\r\n        uint256 amountFilled;\r\n        uint256 fillRate;\r\n        uint256 originalRate;\r\n        uint256 originalAmountA;\r\n        uint256 originalAmountB;\r\n        bool feesWaived;\r\n        uint256 feesPaid; //in terms of USD\r\n    }\r\n\r\n    enum Side {\r\n        BUY,\r\n        SELL\r\n    }\r\n\r\n    //add events\r\n    /// @notice Event when an order is placed on an exchange\r\n    event Order(\r\n        uint256 id,\r\n        Side side,\r\n        address user,\r\n        address tokenA,\r\n        uint256 amountA,\r\n        address tokenB,\r\n        uint256 amountB,\r\n        uint256 rate,\r\n        uint256 originalAmountA,\r\n        uint256 originalAmountB,\r\n        bool waiveFees\r\n    );\r\n\r\n    /// @notice Event when an order is cancelled\r\n    event Cancel(\r\n        uint256 id,\r\n        Side side,\r\n        address user,\r\n        address tokenA,\r\n        uint256 amountA,\r\n        address tokenB,\r\n        uint256 amountB,\r\n        uint256 rate,\r\n        uint256 originalAmountA,\r\n        uint256 originalAmountB,\r\n        bool waiveFees\r\n    );\r\n\r\n    event filledOrder(\r\n        uint256 id,\r\n        Side side,\r\n        address user,\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountFilled,\r\n        uint256 fillRate,\r\n        uint256 originalRate,\r\n        uint256 originalAmountA,\r\n        uint256 originalAmountB,\r\n        bool feesWaived,\r\n        uint256 feesPaid\r\n    );\r\n\r\n    constructor(address _wallet, address _fees, address _priceChecker) {\r\n        wallet = Wallet(_wallet);\r\n        tradingFees = TradingFees(_fees);\r\n        priceChecker = PriceChecker(_priceChecker);\r\n    }\r\n\r\n    function createLimitBuyOrder(\r\n        // TokenA/TokenB\r\n        address _tokenA,\r\n        uint256 _amountA,\r\n        address _tokenB,\r\n        uint256 _amountB,\r\n        uint256 _rate,\r\n        bool _waiveFees\r\n    ) external validToken(_tokenA) validToken(_tokenB) {\r\n        //Amount user has deposited in the DEX must be >= value he wants to buy\r\n        require(\r\n            wallet.balanceOf(_tokenB, msg.sender).sub(\r\n                wallet.getlockedFunds(msg.sender, _tokenB)\r\n            ) >= _amountB,\r\n            \"Insufficient Funds\"\r\n        );\r\n\r\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenB, _amountB, true);\r\n\r\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\r\n            _Order(\r\n                s_orderId,\r\n                Side.BUY,\r\n                msg.sender,\r\n                _tokenA,\r\n                _amountA,\r\n                _tokenB,\r\n                _amountB,\r\n                _rate,\r\n                _amountA,\r\n                _amountB,\r\n                _waiveFees\r\n            )\r\n        );\r\n\r\n        emit Order(\r\n            s_orderId,\r\n            Side.BUY,\r\n            msg.sender,\r\n            _tokenA,\r\n            _amountA,\r\n            _tokenB,\r\n            _amountB,\r\n            _rate,\r\n            _amountA,\r\n            _amountB,\r\n            _waiveFees\r\n        );\r\n\r\n        s_orderId = s_orderId.add(1);\r\n    }\r\n\r\n    function createLimitSellOrder(\r\n        address _tokenA,\r\n        uint256 _amountA,\r\n        address _tokenB,\r\n        uint256 _amountB,\r\n        uint256 _rate,\r\n        bool _waiveFees\r\n    ) external validToken(_tokenA) validToken(_tokenB) {\r\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\r\n        require(\r\n            wallet.balanceOf(_tokenA, msg.sender).sub(\r\n                wallet.getlockedFunds(msg.sender, _tokenA)\r\n            ) >= _amountA,\r\n            \"Insufficient Funds\"\r\n        );\r\n\r\n        //Lock the funds (tokens) in the wallet\r\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenA, _amountA, true);\r\n\r\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\r\n            _Order(\r\n                s_orderId,\r\n                Side.SELL,\r\n                msg.sender,\r\n                _tokenA,\r\n                _amountA,\r\n                _tokenB,\r\n                _amountB,\r\n                _rate,\r\n                _amountA,\r\n                _amountB,\r\n                _waiveFees\r\n            )\r\n        );\r\n\r\n        emit Order(\r\n            s_orderId,\r\n            Side.SELL,\r\n            msg.sender,\r\n            _tokenA,\r\n            _amountA,\r\n            _tokenB,\r\n            _amountB,\r\n            _rate,\r\n            _amountA,\r\n            _amountB,\r\n            _waiveFees\r\n        );\r\n\r\n        s_orderId = s_orderId.add(1);\r\n    }\r\n\r\n    function cancelOrder(\r\n        Side side,\r\n        uint256 _id,\r\n        address _tokenA,\r\n        address _tokenB\r\n    )\r\n        public\r\n        validOrder(_id, side, _tokenA, _tokenB)\r\n        validToken(_tokenA)\r\n        validToken(_tokenB)\r\n    {\r\n        uint256 _side = uint256(side);\r\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\r\n        uint256 size = _order.length;\r\n        _Order memory order;\r\n\r\n        uint256 index;\r\n        for (uint256 i = 0; i < size; i++) {\r\n            if (_order[i].id == _id) {\r\n                index = i;\r\n                order = _order[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        //Manual cancellation of orders\r\n        if (s_isManual) {\r\n            require(msg.sender == order.user, \"Not Owner\");\r\n\r\n            //Unlock funds\r\n            if (side == Side.BUY) {\r\n                wallet.exchangeUpdateLockedFunds(\r\n                    msg.sender,\r\n                    order.tokenB,\r\n                    order.amountB,\r\n                    false\r\n                );\r\n            } else if (side == Side.SELL) {\r\n                wallet.exchangeUpdateLockedFunds(\r\n                    msg.sender,\r\n                    order.tokenA,\r\n                    order.amountA,\r\n                    false\r\n                );\r\n            }\r\n        }\r\n        for (uint256 j = index; j < size - 1; j++) {\r\n            _order[j] = _order[j.add(1)];\r\n        }\r\n\r\n        _order.pop();\r\n\r\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\r\n\r\n        emit Cancel(\r\n            _id,\r\n            order.side,\r\n            order.user,\r\n            order.tokenA,\r\n            order.amountA,\r\n            order.tokenB,\r\n            order.amountB,\r\n            order.rate,\r\n            order.originalAmountA,\r\n            order.originalAmountB,\r\n            order.waiveFees\r\n        );\r\n    }\r\n\r\n    function updateFilledOrders(\r\n        _filledOrder memory order,\r\n        uint256 _side\r\n    ) external {\r\n        s_filledOrders[order.user][_side].push(order);\r\n\r\n        emit filledOrder(\r\n            order.id,\r\n            order.side,\r\n            order.user,\r\n            order.tokenA,\r\n            order.tokenB,\r\n            order.amountFilled,\r\n            order.fillRate,\r\n            order.originalRate,\r\n            order.originalAmountA,\r\n            order.originalAmountB,\r\n            order.feesWaived,\r\n            order.feesPaid\r\n        );\r\n    }\r\n\r\n    function updateOrder(\r\n        _Order memory order,\r\n        uint256 _amountA,\r\n        uint256 _amountB,\r\n        uint256 _index\r\n    ) external validOrder(order.id, order.side, order.tokenA, order.tokenB) {\r\n        uint256 a = s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\r\n            _index\r\n        ].amountA;\r\n        uint256 b = s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\r\n            _index\r\n        ].amountB;\r\n        s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\r\n            .amountA = _amountA;\r\n        s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\r\n            .amountB = _amountB;\r\n\r\n        require(\r\n            s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\r\n                .amountA <\r\n                a &&\r\n                s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\r\n                    _index\r\n                ].amountB <\r\n                b,\r\n            \"Order not updated properly\"\r\n        );\r\n    }\r\n\r\n    function setManual(bool _isManual) external {\r\n        s_isManual = _isManual;\r\n        require(s_isManual == _isManual, \"Invalid s_isManual bool\");\r\n    }\r\n\r\n    function getOrderLength(\r\n        Side side,\r\n        address _tokenA,\r\n        address _tokenB\r\n    ) public view returns (uint256) {\r\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\r\n    }\r\n\r\n    function getOrder(\r\n        address _tokenA,\r\n        address _tokenB,\r\n        uint256 index,\r\n        Side side\r\n    ) public view returns (_Order memory) {\r\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][\r\n            index\r\n        ];\r\n        return (order);\r\n    }\r\n\r\n    function getFilledOrderLength(\r\n        address _user,\r\n        Side side\r\n    ) public view returns (uint256) {\r\n        return s_filledOrders[_user][uint256(side)].length;\r\n    }\r\n\r\n    function getFilledOrder(\r\n        address _user,\r\n        Side side,\r\n        uint256 index\r\n    ) public view returns (_filledOrder memory) {\r\n        return s_filledOrders[_user][uint256(side)][index];\r\n    }\r\n\r\n    function getOrderFromArray(\r\n        address _tokenA,\r\n        address _tokenB,\r\n        uint256 side,\r\n        uint256 _id\r\n    ) public view returns (_Order memory, uint256) {\r\n        uint256 i = 0;\r\n        for (i; i < s_orderBook[_tokenA][_tokenB][side].length; i++) {\r\n            if (s_orderBook[_tokenA][_tokenB][side][i].id == _id) {\r\n                return (s_orderBook[_tokenA][_tokenB][side][i], i);\r\n            }\r\n        }\r\n        revert(\"Order not Found\");\r\n    }\r\n\r\n    function orderExists(\r\n        uint256 _id,\r\n        Side side,\r\n        address _tokenA,\r\n        address _tokenB\r\n    ) public view returns (bool) {\r\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\r\n\r\n        for (uint256 i = 0; i < orders.length; i++) {\r\n            if (orders[i].id == _id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\r\n        require(!isVerifiedToken(_token), \"Token already verified\");\r\n        tokenList.push(_tokenInfo(_token, _decimals));\r\n    }\r\n\r\n    function isVerifiedToken(address _token) public view returns (bool) {\r\n        //uint256 size = tokenList.length;\r\n\r\n        for (uint256 i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].add == _token) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getTokenInfo(address _token) public view returns (uint256) {\r\n        for (uint256 i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].add == _token) {\r\n                return tokenList[i].decimals;\r\n            }\r\n        }\r\n        revert(\"Token not available\");\r\n    }\r\n\r\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\r\n        wallet = Wallet(_Walletaddress);\r\n    }\r\n\r\n    function setPriceCheckerAddress(\r\n        address _PriceCheckeraddress\r\n    ) public onlyOwner {\r\n        priceChecker = PriceChecker(_PriceCheckeraddress);\r\n    }\r\n\r\n    function setTradingFees(address _tradingFees) public onlyOwner {\r\n        tradingFees = TradingFees(_tradingFees);\r\n    }\r\n\r\n    modifier validOrder(\r\n        uint256 _id,\r\n        Side side,\r\n        address _tokenA,\r\n        address _tokenB\r\n    ) {\r\n        require(orderExists(_id, side, _tokenA, _tokenB), \"Invalid Order ID\");\r\n        _;\r\n    }\r\n\r\n    modifier validToken(address _token) {\r\n        require(isVerifiedToken(_token), \"Token unavailable in DEX\");\r\n        _;\r\n    }\r\n}\r\n"},"contracts/fillLogic.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Exchange.sol\";\r\nimport \"./TradingFees.sol\";\r\nimport \"./Wallet.sol\";\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract fillLogic is Ownable {\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n    Exchange exchange;\r\n    TradingFees tradingFees;\r\n    Wallet wallet;\r\n    uint256 decimals = 10 ** 18;\r\n\r\n    event fillBuyOrder(\r\n        Exchange._Order remainingOrder,\r\n        uint256 amountBought,\r\n        uint256 fillBuyRate,\r\n        bool feesWaived,\r\n        uint256 feesPaid\r\n    );\r\n\r\n    event fillSellOrder(\r\n        Exchange._Order remainingOrder,\r\n        uint256 amountSold,\r\n        uint256 fillSellRate,\r\n        bool feesWaived,\r\n        uint256 feesPaid\r\n    );\r\n\r\n    constructor(address _Exchange, address _fees, address _Wallet) {\r\n        exchange = Exchange(_Exchange); // Set the address of the Exchange contract\r\n        tradingFees = TradingFees(_fees);\r\n        wallet = Wallet(_Wallet);\r\n    }\r\n\r\n    function fillOrder(\r\n        address _tokenA,\r\n        address _tokenB,\r\n        uint256[][] memory _ordersToFill\r\n    ) external {\r\n        Exchange._Order memory order;\r\n        uint256 index;\r\n\r\n        for (uint256 i = 0; i < _ordersToFill.length; i++) {\r\n            require(\r\n                _ordersToFill[i][2] != 0 && _ordersToFill[i][3] != 0,\r\n                \"Order values error\"\r\n            );\r\n\r\n            (order, index) = exchange.getOrderFromArray(\r\n                _tokenA,\r\n                _tokenB,\r\n                _ordersToFill[i][1],\r\n                _ordersToFill[i][0]\r\n            );\r\n\r\n            require(\r\n                order.amountA != 0 && order.amountB != 0,\r\n                \"Invalid Order Amount\"\r\n            );\r\n            exchange.updateOrder(\r\n                order,\r\n                order.amountA.sub(_ordersToFill[i][2]),\r\n                order.amountB.sub(\r\n                    order.rate.mul(_ordersToFill[i][2]).div(decimals)\r\n                ),\r\n                index\r\n            );\r\n\r\n            order.amountA = order.amountA.sub(_ordersToFill[i][2]);\r\n\r\n            uint256 fees = tradingFees.calculateFees(\r\n                _ordersToFill[i][2],\r\n                _ordersToFill[i][3],\r\n                order.tokenB\r\n            );\r\n            require(fees != 0, \"Fees cannot be 0\");\r\n\r\n            bool feesWaived = order.waiveFees &&\r\n                tradingFees.checkSufficientaDAI(fees, order.user);\r\n\r\n            if (_ordersToFill[i][1] == 0) {\r\n                fillBuyOrders(\r\n                    order,\r\n                    _ordersToFill[i][2],\r\n                    _ordersToFill[i][3],\r\n                    feesWaived,\r\n                    fees\r\n                );\r\n                emit fillBuyOrder(\r\n                    order,\r\n                    _ordersToFill[i][2],\r\n                    _ordersToFill[i][3],\r\n                    feesWaived,\r\n                    fees\r\n                );\r\n            } else {\r\n                fillSellOrders(\r\n                    order,\r\n                    _ordersToFill[i][2],\r\n                    _ordersToFill[i][3],\r\n                    feesWaived,\r\n                    fees\r\n                );\r\n                emit fillSellOrder(\r\n                    order,\r\n                    _ordersToFill[i][2],\r\n                    _ordersToFill[i][3],\r\n                    feesWaived,\r\n                    fees\r\n                );\r\n            }\r\n\r\n            if (order.amountA == 0) {\r\n                exchange.setManual(false);\r\n                exchange.cancelOrder(\r\n                    (\r\n                        _ordersToFill[i][1] == 0\r\n                            ? Exchange.Side.BUY\r\n                            : Exchange.Side.SELL\r\n                    ),\r\n                    order.id,\r\n                    order.tokenA,\r\n                    order.tokenB\r\n                );\r\n                exchange.setManual(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    function fillBuyOrders(\r\n        Exchange._Order memory order,\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        bool feesWaived,\r\n        uint256 fees\r\n    ) internal {\r\n        if (feesWaived) {\r\n            //Deduct aDAI\r\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\r\n            wallet.exchangeUpdateBalance(\r\n                tradingFees.aDAI(),\r\n                order.user,\r\n                aDAIToDeduct,\r\n                false\r\n            );\r\n            wallet.exchangeUpdateBalance(\r\n                tradingFees.aDAI(),\r\n                wallet.fundWallet(),\r\n                aDAIToDeduct,\r\n                true\r\n            );\r\n\r\n            //Credit Bought tokens\r\n            wallet.exchangeUpdateBalance(\r\n                order.tokenA,\r\n                order.user,\r\n                _amount,\r\n                true\r\n            );\r\n        } else {\r\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\r\n                order.tokenA,\r\n                fees\r\n            );\r\n            //Credit Bought tokens after minusing fees\r\n            wallet.exchangeUpdateBalance(\r\n                order.tokenA,\r\n                order.user,\r\n                _amount.sub(amountTokenToDeduct),\r\n                true\r\n            );\r\n\r\n            wallet.exchangeUpdateBalance(\r\n                order.tokenA,\r\n                wallet.fundWallet(),\r\n                amountTokenToDeduct,\r\n                true\r\n            );\r\n        }\r\n\r\n        //Original Locked Funds unlocked\r\n        wallet.exchangeUpdateLockedFunds(\r\n            order.user,\r\n            order.tokenB,\r\n            (order.rate.mul(_amount)).div(decimals),\r\n            false\r\n        );\r\n\r\n        //buyer update\r\n        //Buyer balance deducted from what he paid\r\n        wallet.exchangeUpdateBalance(\r\n            order.tokenB,\r\n            order.user,\r\n            (_rate.mul(_amount)).div(decimals),\r\n            false\r\n        );\r\n        exchange.updateFilledOrders(\r\n            Exchange._filledOrder(\r\n                order.id,\r\n                Exchange.Side.BUY,\r\n                order.user,\r\n                order.tokenA,\r\n                order.tokenB,\r\n                _amount,\r\n                _rate,\r\n                order.rate,\r\n                order.originalAmountA,\r\n                order.originalAmountB,\r\n                feesWaived,\r\n                fees\r\n            ),\r\n            uint256(Exchange.Side.BUY)\r\n        );\r\n    }\r\n\r\n    function fillSellOrders(\r\n        Exchange._Order memory order,\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        bool feesWaived,\r\n        uint256 fees\r\n    ) internal {\r\n        if (feesWaived) {\r\n            //Deduct aDAI\r\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\r\n            wallet.exchangeUpdateBalance(\r\n                tradingFees.aDAI(),\r\n                order.user,\r\n                aDAIToDeduct,\r\n                false\r\n            );\r\n            wallet.exchangeUpdateBalance(\r\n                tradingFees.aDAI(),\r\n                wallet.fundWallet(),\r\n                aDAIToDeduct,\r\n                true\r\n            );\r\n\r\n            //Credit Earned tokens\r\n            wallet.exchangeUpdateBalance(\r\n                order.tokenB,\r\n                order.user,\r\n                (_rate.mul(_amount)).div(decimals),\r\n                true\r\n            );\r\n        } else {\r\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\r\n                order.tokenB,\r\n                fees\r\n            );\r\n            wallet.exchangeUpdateBalance(\r\n                order.tokenB,\r\n                wallet.fundWallet(),\r\n                amountTokensToDeduct,\r\n                true\r\n            );\r\n            //Credit Earned tokens after minusing fees\r\n            wallet.exchangeUpdateBalance(\r\n                order.tokenB,\r\n                order.user,\r\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\r\n                true\r\n            );\r\n        }\r\n\r\n        wallet.exchangeUpdateLockedFunds(\r\n            order.user,\r\n            order.tokenA,\r\n            _amount,\r\n            false\r\n        );\r\n        //seller update\r\n        wallet.exchangeUpdateBalance(order.tokenA, order.user, _amount, false);\r\n\r\n        exchange.updateFilledOrders(\r\n            Exchange._filledOrder(\r\n                order.id,\r\n                Exchange.Side.SELL,\r\n                order.user,\r\n                order.tokenA,\r\n                order.tokenB,\r\n                _amount,\r\n                _rate,\r\n                order.rate,\r\n                order.originalAmountA,\r\n                order.originalAmountB,\r\n                feesWaived,\r\n                fees\r\n            ),\r\n            uint256(Exchange.Side.SELL)\r\n        );\r\n    }\r\n\r\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\r\n        wallet = Wallet(_Walletaddress);\r\n    }\r\n\r\n    function setExchangeAddress(address _exchange) public onlyOwner {\r\n        exchange = Exchange(_exchange);\r\n    }\r\n\r\n    function setTradingFeesAddress(address _fees) public onlyOwner {\r\n        tradingFees = TradingFees(_fees);\r\n    }\r\n}\r\n"},"contracts/interface/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256 remaining);\r\n\r\n    function approve(\r\n        address spender,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    function decimals() external view returns (uint8 decimalPlaces);\r\n\r\n    function decreaseApproval(\r\n        address spender,\r\n        uint256 subtractedValue\r\n    ) external returns (bool success);\r\n\r\n    function increaseApproval(\r\n        address spender,\r\n        uint256 addedValue\r\n    ) external returns (bool success);\r\n\r\n    function name() external view returns (string memory tokenName);\r\n\r\n    function symbol() external view returns (string memory tokenSymbol);\r\n\r\n    function totalSupply() external view returns (uint256 totalTokensIssued);\r\n\r\n    function transfer(\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool success);\r\n}\r\n"},"contracts/interface/IPool.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\nimport {IPoolAddressesProvider} from \"./IPoolAddressesProvider.sol\";\r\nimport {DataTypes} from \"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\";\r\n\r\n/**\r\n * @title IPool\r\n * @author Aave\r\n * @notice Defines the basic interface for an Aave Pool.\r\n */\r\ninterface IPool {\r\n    /**\r\n     * @dev Emitted on mintUnbacked()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address initiating the supply\r\n     * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\r\n     * @param amount The amount of supplied assets\r\n     * @param referralCode The referral code used\r\n     */\r\n    event MintUnbacked(\r\n        address indexed reserve,\r\n        address user,\r\n        address indexed onBehalfOf,\r\n        uint256 amount,\r\n        uint16 indexed referralCode\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on backUnbacked()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param backer The address paying for the backing\r\n     * @param amount The amount added as backing\r\n     * @param fee The amount paid in fees\r\n     */\r\n    event BackUnbacked(\r\n        address indexed reserve,\r\n        address indexed backer,\r\n        uint256 amount,\r\n        uint256 fee\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on supply()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address initiating the supply\r\n     * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\r\n     * @param amount The amount supplied\r\n     * @param referralCode The referral code used\r\n     */\r\n    event Supply(\r\n        address indexed reserve,\r\n        address user,\r\n        address indexed onBehalfOf,\r\n        uint256 amount,\r\n        uint16 indexed referralCode\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on withdraw()\r\n     * @param reserve The address of the underlying asset being withdrawn\r\n     * @param user The address initiating the withdrawal, owner of aTokens\r\n     * @param to The address that will receive the underlying\r\n     * @param amount The amount to be withdrawn\r\n     */\r\n    event Withdraw(\r\n        address indexed reserve,\r\n        address indexed user,\r\n        address indexed to,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\r\n     * @param reserve The address of the underlying asset being borrowed\r\n     * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\r\n     * initiator of the transaction on flashLoan()\r\n     * @param onBehalfOf The address that will be getting the debt\r\n     * @param amount The amount borrowed out\r\n     * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\r\n     * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\r\n     * @param referralCode The referral code used\r\n     */\r\n    event Borrow(\r\n        address indexed reserve,\r\n        address user,\r\n        address indexed onBehalfOf,\r\n        uint256 amount,\r\n        DataTypes.InterestRateMode interestRateMode,\r\n        uint256 borrowRate,\r\n        uint16 indexed referralCode\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on repay()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The beneficiary of the repayment, getting his debt reduced\r\n     * @param repayer The address of the user initiating the repay(), providing the funds\r\n     * @param amount The amount repaid\r\n     * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\r\n     */\r\n    event Repay(\r\n        address indexed reserve,\r\n        address indexed user,\r\n        address indexed repayer,\r\n        uint256 amount,\r\n        bool useATokens\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on swapBorrowRateMode()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address of the user swapping his rate mode\r\n     * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\r\n     */\r\n    event SwapBorrowRateMode(\r\n        address indexed reserve,\r\n        address indexed user,\r\n        DataTypes.InterestRateMode interestRateMode\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @param totalDebt The total isolation mode debt for the reserve\r\n     */\r\n    event IsolationModeTotalDebtUpdated(\r\n        address indexed asset,\r\n        uint256 totalDebt\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the user selects a certain asset category for eMode\r\n     * @param user The address of the user\r\n     * @param categoryId The category id\r\n     */\r\n    event UserEModeSet(address indexed user, uint8 categoryId);\r\n\r\n    /**\r\n     * @dev Emitted on setUserUseReserveAsCollateral()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address of the user enabling the usage as collateral\r\n     */\r\n    event ReserveUsedAsCollateralEnabled(\r\n        address indexed reserve,\r\n        address indexed user\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on setUserUseReserveAsCollateral()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address of the user enabling the usage as collateral\r\n     */\r\n    event ReserveUsedAsCollateralDisabled(\r\n        address indexed reserve,\r\n        address indexed user\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on rebalanceStableBorrowRate()\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param user The address of the user for which the rebalance has been executed\r\n     */\r\n    event RebalanceStableBorrowRate(\r\n        address indexed reserve,\r\n        address indexed user\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted on flashLoan()\r\n     * @param target The address of the flash loan receiver contract\r\n     * @param initiator The address initiating the flash loan\r\n     * @param asset The address of the asset being flash borrowed\r\n     * @param amount The amount flash borrowed\r\n     * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\r\n     * @param premium The fee flash borrowed\r\n     * @param referralCode The referral code used\r\n     */\r\n    event FlashLoan(\r\n        address indexed target,\r\n        address initiator,\r\n        address indexed asset,\r\n        uint256 amount,\r\n        DataTypes.InterestRateMode interestRateMode,\r\n        uint256 premium,\r\n        uint16 indexed referralCode\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when a borrower is liquidated.\r\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\r\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\r\n     * @param user The address of the borrower getting liquidated\r\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\r\n     * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\r\n     * @param liquidator The address of the liquidator\r\n     * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\r\n     * to receive the underlying collateral asset directly\r\n     */\r\n    event LiquidationCall(\r\n        address indexed collateralAsset,\r\n        address indexed debtAsset,\r\n        address indexed user,\r\n        uint256 debtToCover,\r\n        uint256 liquidatedCollateralAmount,\r\n        address liquidator,\r\n        bool receiveAToken\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the state of a reserve is updated.\r\n     * @param reserve The address of the underlying asset of the reserve\r\n     * @param liquidityRate The next liquidity rate\r\n     * @param stableBorrowRate The next stable borrow rate\r\n     * @param variableBorrowRate The next variable borrow rate\r\n     * @param liquidityIndex The next liquidity index\r\n     * @param variableBorrowIndex The next variable borrow index\r\n     */\r\n    event ReserveDataUpdated(\r\n        address indexed reserve,\r\n        uint256 liquidityRate,\r\n        uint256 stableBorrowRate,\r\n        uint256 variableBorrowRate,\r\n        uint256 liquidityIndex,\r\n        uint256 variableBorrowIndex\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\r\n     * @param reserve The address of the reserve\r\n     * @param amountMinted The amount minted to the treasury\r\n     */\r\n    event MintedToTreasury(address indexed reserve, uint256 amountMinted);\r\n\r\n    /**\r\n     * @notice Mints an `amount` of aTokens to the `onBehalfOf`\r\n     * @param asset The address of the underlying asset to mint\r\n     * @param amount The amount to mint\r\n     * @param onBehalfOf The address that will receive the aTokens\r\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     */\r\n    function mintUnbacked(\r\n        address asset,\r\n        uint256 amount,\r\n        address onBehalfOf,\r\n        uint16 referralCode\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Back the current unbacked underlying with `amount` and pay `fee`.\r\n     * @param asset The address of the underlying asset to back\r\n     * @param amount The amount to back\r\n     * @param fee The amount paid in fees\r\n     * @return The backed amount\r\n     */\r\n    function backUnbacked(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 fee\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\r\n     * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\r\n     * @param asset The address of the underlying asset to supply\r\n     * @param amount The amount to be supplied\r\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\r\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\r\n     *   is a different wallet\r\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     */\r\n    function supply(\r\n        address asset,\r\n        uint256 amount,\r\n        address onBehalfOf,\r\n        uint16 referralCode\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Supply with transfer approval of asset to be supplied done via permit function\r\n     * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\r\n     * @param asset The address of the underlying asset to supply\r\n     * @param amount The amount to be supplied\r\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\r\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\r\n     *   is a different wallet\r\n     * @param deadline The deadline timestamp that the permit is valid\r\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     * @param permitV The V parameter of ERC712 permit sig\r\n     * @param permitR The R parameter of ERC712 permit sig\r\n     * @param permitS The S parameter of ERC712 permit sig\r\n     */\r\n    function supplyWithPermit(\r\n        address asset,\r\n        uint256 amount,\r\n        address onBehalfOf,\r\n        uint16 referralCode,\r\n        uint256 deadline,\r\n        uint8 permitV,\r\n        bytes32 permitR,\r\n        bytes32 permitS\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\r\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\r\n     * @param asset The address of the underlying asset to withdraw\r\n     * @param amount The underlying amount to be withdrawn\r\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\r\n     * @param to The address that will receive the underlying, same as msg.sender if the user\r\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\r\n     *   different wallet\r\n     * @return The final amount withdrawn\r\n     */\r\n    function withdraw(\r\n        address asset,\r\n        uint256 amount,\r\n        address to\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\r\n     * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\r\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\r\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\r\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\r\n     * @param asset The address of the underlying asset to borrow\r\n     * @param amount The amount to be borrowed\r\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\r\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\r\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\r\n     * if he has been given credit delegation allowance\r\n     */\r\n    function borrow(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 interestRateMode,\r\n        uint16 referralCode,\r\n        address onBehalfOf\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\r\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\r\n     * @param asset The address of the borrowed underlying asset previously borrowed\r\n     * @param amount The amount to repay\r\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\r\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\r\n     * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\r\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\r\n     * other borrower whose debt should be removed\r\n     * @return The final amount repaid\r\n     */\r\n    function repay(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 interestRateMode,\r\n        address onBehalfOf\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @notice Repay with transfer approval of asset to be repaid done via permit function\r\n     * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\r\n     * @param asset The address of the borrowed underlying asset previously borrowed\r\n     * @param amount The amount to repay\r\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\r\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\r\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\r\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\r\n     * other borrower whose debt should be removed\r\n     * @param deadline The deadline timestamp that the permit is valid\r\n     * @param permitV The V parameter of ERC712 permit sig\r\n     * @param permitR The R parameter of ERC712 permit sig\r\n     * @param permitS The S parameter of ERC712 permit sig\r\n     * @return The final amount repaid\r\n     */\r\n    function repayWithPermit(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 interestRateMode,\r\n        address onBehalfOf,\r\n        uint256 deadline,\r\n        uint8 permitV,\r\n        bytes32 permitR,\r\n        bytes32 permitS\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\r\n     * equivalent debt tokens\r\n     * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\r\n     * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\r\n     * balance is not enough to cover the whole debt\r\n     * @param asset The address of the borrowed underlying asset previously borrowed\r\n     * @param amount The amount to repay\r\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\r\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\r\n     * @return The final amount repaid\r\n     */\r\n    function repayWithATokens(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 interestRateMode\r\n    ) external returns (uint256);\r\n\r\n    /**\r\n     * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\r\n     * @param asset The address of the underlying asset borrowed\r\n     * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\r\n     */\r\n    function swapBorrowRateMode(\r\n        address asset,\r\n        uint256 interestRateMode\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\r\n     * - Users can be rebalanced if the following conditions are satisfied:\r\n     *     1. Usage ratio is above 95%\r\n     *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\r\n     *        much has been borrowed at a stable rate and suppliers are not earning enough\r\n     * @param asset The address of the underlying asset borrowed\r\n     * @param user The address of the user to be rebalanced\r\n     */\r\n    function rebalanceStableBorrowRate(address asset, address user) external;\r\n\r\n    /**\r\n     * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\r\n     * @param asset The address of the underlying asset supplied\r\n     * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\r\n     */\r\n    function setUserUseReserveAsCollateral(\r\n        address asset,\r\n        bool useAsCollateral\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\r\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\r\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\r\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\r\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\r\n     * @param user The address of the borrower getting liquidated\r\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\r\n     * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\r\n     * to receive the underlying collateral asset directly\r\n     */\r\n    function liquidationCall(\r\n        address collateralAsset,\r\n        address debtAsset,\r\n        address user,\r\n        uint256 debtToCover,\r\n        bool receiveAToken\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\r\n     * as long as the amount taken plus a fee is returned.\r\n     * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\r\n     * into consideration. For further details please visit https://docs.aave.com/developers/\r\n     * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\r\n     * @param assets The addresses of the assets being flash-borrowed\r\n     * @param amounts The amounts of the assets being flash-borrowed\r\n     * @param interestRateModes Types of the debt to open if the flash loan is not returned:\r\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\r\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\r\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\r\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\r\n     * @param params Variadic packed params to pass to the receiver as extra information\r\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     */\r\n    function flashLoan(\r\n        address receiverAddress,\r\n        address[] calldata assets,\r\n        uint256[] calldata amounts,\r\n        uint256[] calldata interestRateModes,\r\n        address onBehalfOf,\r\n        bytes calldata params,\r\n        uint16 referralCode\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\r\n     * as long as the amount taken plus a fee is returned.\r\n     * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\r\n     * into consideration. For further details please visit https://docs.aave.com/developers/\r\n     * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\r\n     * @param asset The address of the asset being flash-borrowed\r\n     * @param amount The amount of the asset being flash-borrowed\r\n     * @param params Variadic packed params to pass to the receiver as extra information\r\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     */\r\n    function flashLoanSimple(\r\n        address receiverAddress,\r\n        address asset,\r\n        uint256 amount,\r\n        bytes calldata params,\r\n        uint16 referralCode\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Returns the user account data across all the reserves\r\n     * @param user The address of the user\r\n     * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\r\n     * @return totalDebtBase The total debt of the user in the base currency used by the price feed\r\n     * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\r\n     * @return currentLiquidationThreshold The liquidation threshold of the user\r\n     * @return ltv The loan to value of The user\r\n     * @return healthFactor The current health factor of the user\r\n     */\r\n    function getUserAccountData(\r\n        address user\r\n    )\r\n        external\r\n        view\r\n        returns (\r\n            uint256 totalCollateralBase,\r\n            uint256 totalDebtBase,\r\n            uint256 availableBorrowsBase,\r\n            uint256 currentLiquidationThreshold,\r\n            uint256 ltv,\r\n            uint256 healthFactor\r\n        );\r\n\r\n    /**\r\n     * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\r\n     * interest rate strategy\r\n     * @dev Only callable by the PoolConfigurator contract\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @param aTokenAddress The address of the aToken that will be assigned to the reserve\r\n     * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\r\n     * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\r\n     * @param interestRateStrategyAddress The address of the interest rate strategy contract\r\n     */\r\n    function initReserve(\r\n        address asset,\r\n        address aTokenAddress,\r\n        address stableDebtAddress,\r\n        address variableDebtAddress,\r\n        address interestRateStrategyAddress\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Drop a reserve\r\n     * @dev Only callable by the PoolConfigurator contract\r\n     * @param asset The address of the underlying asset of the reserve\r\n     */\r\n    function dropReserve(address asset) external;\r\n\r\n    /**\r\n     * @notice Updates the address of the interest rate strategy contract\r\n     * @dev Only callable by the PoolConfigurator contract\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @param rateStrategyAddress The address of the interest rate strategy contract\r\n     */\r\n    function setReserveInterestRateStrategyAddress(\r\n        address asset,\r\n        address rateStrategyAddress\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Sets the configuration bitmap of the reserve as a whole\r\n     * @dev Only callable by the PoolConfigurator contract\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @param configuration The new configuration bitmap\r\n     */\r\n    function setConfiguration(\r\n        address asset,\r\n        DataTypes.ReserveConfigurationMap calldata configuration\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Returns the configuration of the reserve\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @return The configuration of the reserve\r\n     */\r\n    function getConfiguration(\r\n        address asset\r\n    ) external view returns (DataTypes.ReserveConfigurationMap memory);\r\n\r\n    /**\r\n     * @notice Returns the configuration of the user across all the reserves\r\n     * @param user The user address\r\n     * @return The configuration of the user\r\n     */\r\n    function getUserConfiguration(\r\n        address user\r\n    ) external view returns (DataTypes.UserConfigurationMap memory);\r\n\r\n    /**\r\n     * @notice Returns the normalized income of the reserve\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @return The reserve's normalized income\r\n     */\r\n    function getReserveNormalizedIncome(\r\n        address asset\r\n    ) external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Returns the normalized variable debt per unit of asset\r\n     * @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\r\n     * \"dynamic\" variable index based on time, current stored index and virtual rate at the current\r\n     * moment (approx. a borrower would get if opening a position). This means that is always used in\r\n     * combination with variable debt supply/balances.\r\n     * If using this function externally, consider that is possible to have an increasing normalized\r\n     * variable debt that is not equivalent to how the variable debt index would be updated in storage\r\n     * (e.g. only updates with non-zero variable debt supply)\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @return The reserve normalized variable debt\r\n     */\r\n    function getReserveNormalizedVariableDebt(\r\n        address asset\r\n    ) external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Returns the state and configuration of the reserve\r\n     * @param asset The address of the underlying asset of the reserve\r\n     * @return The state and configuration data of the reserve\r\n     */\r\n    function getReserveData(\r\n        address asset\r\n    ) external view returns (DataTypes.ReserveData memory);\r\n\r\n    /**\r\n     * @notice Validates and finalizes an aToken transfer\r\n     * @dev Only callable by the overlying aToken of the `asset`\r\n     * @param asset The address of the underlying asset of the aToken\r\n     * @param from The user from which the aTokens are transferred\r\n     * @param to The user receiving the aTokens\r\n     * @param amount The amount being transferred/withdrawn\r\n     * @param balanceFromBefore The aToken balance of the `from` user before the transfer\r\n     * @param balanceToBefore The aToken balance of the `to` user before the transfer\r\n     */\r\n    function finalizeTransfer(\r\n        address asset,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        uint256 balanceFromBefore,\r\n        uint256 balanceToBefore\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Returns the list of the underlying assets of all the initialized reserves\r\n     * @dev It does not include dropped reserves\r\n     * @return The addresses of the underlying assets of the initialized reserves\r\n     */\r\n    function getReservesList() external view returns (address[] memory);\r\n\r\n    /**\r\n     * @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\r\n     * @param id The id of the reserve as stored in the DataTypes.ReserveData struct\r\n     * @return The address of the reserve associated with id\r\n     */\r\n    function getReserveAddressById(uint16 id) external view returns (address);\r\n\r\n    /**\r\n     * @notice Returns the PoolAddressesProvider connected to this contract\r\n     * @return The address of the PoolAddressesProvider\r\n     */\r\n    function ADDRESSES_PROVIDER()\r\n        external\r\n        view\r\n        returns (IPoolAddressesProvider);\r\n\r\n    /**\r\n     * @notice Updates the protocol fee on the bridging\r\n     * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\r\n     */\r\n    function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\r\n\r\n    /**\r\n     * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\r\n     * - A part is sent to aToken holders as extra, one time accumulated interest\r\n     * - A part is collected by the protocol treasury\r\n     * @dev The total premium is calculated on the total borrowed amount\r\n     * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\r\n     * @dev Only callable by the PoolConfigurator contract\r\n     * @param flashLoanPremiumTotal The total premium, expressed in bps\r\n     * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\r\n     */\r\n    function updateFlashloanPremiums(\r\n        uint128 flashLoanPremiumTotal,\r\n        uint128 flashLoanPremiumToProtocol\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Configures a new category for the eMode.\r\n     * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\r\n     * The category 0 is reserved as it's the default for volatile assets\r\n     * @param id The id of the category\r\n     * @param config The configuration of the category\r\n     */\r\n    function configureEModeCategory(\r\n        uint8 id,\r\n        DataTypes.EModeCategory memory config\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Returns the data of an eMode category\r\n     * @param id The id of the category\r\n     * @return The configuration data of the category\r\n     */\r\n    function getEModeCategoryData(\r\n        uint8 id\r\n    ) external view returns (DataTypes.EModeCategory memory);\r\n\r\n    /**\r\n     * @notice Allows a user to use the protocol in eMode\r\n     * @param categoryId The id of the category\r\n     */\r\n    function setUserEMode(uint8 categoryId) external;\r\n\r\n    /**\r\n     * @notice Returns the eMode the user is using\r\n     * @param user The address of the user\r\n     * @return The eMode id\r\n     */\r\n    function getUserEMode(address user) external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Resets the isolation mode total debt of the given asset to zero\r\n     * @dev It requires the given asset has zero debt ceiling\r\n     * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\r\n     */\r\n    function resetIsolationModeTotalDebt(address asset) external;\r\n\r\n    /**\r\n     * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\r\n     * @return The percentage of available liquidity to borrow, expressed in bps\r\n     */\r\n    function MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @notice Returns the total fee on flash loans\r\n     * @return The total fee on flashloans\r\n     */\r\n    function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\r\n\r\n    /**\r\n     * @notice Returns the part of the bridge fees sent to protocol\r\n     * @return The bridge fee sent to the protocol treasury\r\n     */\r\n    function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\r\n\r\n    /**\r\n     * @notice Returns the part of the flashloan fees sent to protocol\r\n     * @return The flashloan fee sent to the protocol treasury\r\n     */\r\n    function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\r\n\r\n    /**\r\n     * @notice Returns the maximum number of reserves supported to be listed in this Pool\r\n     * @return The maximum number of reserves supported\r\n     */\r\n    function MAX_NUMBER_RESERVES() external view returns (uint16);\r\n\r\n    /**\r\n     * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\r\n     * @param assets The list of reserves for which the minting needs to be executed\r\n     */\r\n    function mintToTreasury(address[] calldata assets) external;\r\n\r\n    /**\r\n     * @notice Rescue and transfer tokens locked in this contract\r\n     * @param token The address of the token\r\n     * @param to The address of the recipient\r\n     * @param amount The amount of token to transfer\r\n     */\r\n    function rescueTokens(address token, address to, uint256 amount) external;\r\n\r\n    /**\r\n     * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\r\n     * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\r\n     * @dev Deprecated: Use the `supply` function instead\r\n     * @param asset The address of the underlying asset to supply\r\n     * @param amount The amount to be supplied\r\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\r\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\r\n     *   is a different wallet\r\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\r\n     *   0 if the action is executed directly by the user, without any middle-man\r\n     */\r\n    function deposit(\r\n        address asset,\r\n        uint256 amount,\r\n        address onBehalfOf,\r\n        uint16 referralCode\r\n    ) external;\r\n}\r\n"},"contracts/interface/IPoolAddressesProvider.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title IPoolAddressesProvider\r\n * @author Aave\r\n * @notice Defines the basic interface for a Pool Addresses Provider.\r\n */\r\ninterface IPoolAddressesProvider {\r\n    /**\r\n     * @dev Emitted when the market identifier is updated.\r\n     * @param oldMarketId The old id of the market\r\n     * @param newMarketId The new id of the market\r\n     */\r\n    event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\r\n\r\n    /**\r\n     * @dev Emitted when the pool is updated.\r\n     * @param oldAddress The old address of the Pool\r\n     * @param newAddress The new address of the Pool\r\n     */\r\n    event PoolUpdated(address indexed oldAddress, address indexed newAddress);\r\n\r\n    /**\r\n     * @dev Emitted when the pool configurator is updated.\r\n     * @param oldAddress The old address of the PoolConfigurator\r\n     * @param newAddress The new address of the PoolConfigurator\r\n     */\r\n    event PoolConfiguratorUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the price oracle is updated.\r\n     * @param oldAddress The old address of the PriceOracle\r\n     * @param newAddress The new address of the PriceOracle\r\n     */\r\n    event PriceOracleUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the ACL manager is updated.\r\n     * @param oldAddress The old address of the ACLManager\r\n     * @param newAddress The new address of the ACLManager\r\n     */\r\n    event ACLManagerUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the ACL admin is updated.\r\n     * @param oldAddress The old address of the ACLAdmin\r\n     * @param newAddress The new address of the ACLAdmin\r\n     */\r\n    event ACLAdminUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the price oracle sentinel is updated.\r\n     * @param oldAddress The old address of the PriceOracleSentinel\r\n     * @param newAddress The new address of the PriceOracleSentinel\r\n     */\r\n    event PriceOracleSentinelUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the pool data provider is updated.\r\n     * @param oldAddress The old address of the PoolDataProvider\r\n     * @param newAddress The new address of the PoolDataProvider\r\n     */\r\n    event PoolDataProviderUpdated(\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when a new proxy is created.\r\n     * @param id The identifier of the proxy\r\n     * @param proxyAddress The address of the created proxy contract\r\n     * @param implementationAddress The address of the implementation contract\r\n     */\r\n    event ProxyCreated(\r\n        bytes32 indexed id,\r\n        address indexed proxyAddress,\r\n        address indexed implementationAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when a new non-proxied contract address is registered.\r\n     * @param id The identifier of the contract\r\n     * @param oldAddress The address of the old contract\r\n     * @param newAddress The address of the new contract\r\n     */\r\n    event AddressSet(\r\n        bytes32 indexed id,\r\n        address indexed oldAddress,\r\n        address indexed newAddress\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when the implementation of the proxy registered with id is updated\r\n     * @param id The identifier of the contract\r\n     * @param proxyAddress The address of the proxy contract\r\n     * @param oldImplementationAddress The address of the old implementation contract\r\n     * @param newImplementationAddress The address of the new implementation contract\r\n     */\r\n    event AddressSetAsProxy(\r\n        bytes32 indexed id,\r\n        address indexed proxyAddress,\r\n        address oldImplementationAddress,\r\n        address indexed newImplementationAddress\r\n    );\r\n\r\n    /**\r\n     * @notice Returns the id of the Aave market to which this contract points to.\r\n     * @return The market id\r\n     */\r\n    function getMarketId() external view returns (string memory);\r\n\r\n    /**\r\n     * @notice Associates an id with a specific PoolAddressesProvider.\r\n     * @dev This can be used to create an onchain registry of PoolAddressesProviders to\r\n     * identify and validate multiple Aave markets.\r\n     * @param newMarketId The market id\r\n     */\r\n    function setMarketId(string calldata newMarketId) external;\r\n\r\n    /**\r\n     * @notice Returns an address by its identifier.\r\n     * @dev The returned address might be an EOA or a contract, potentially proxied\r\n     * @dev It returns ZERO if there is no registered address with the given id\r\n     * @param id The id\r\n     * @return The address of the registered for the specified id\r\n     */\r\n    function getAddress(bytes32 id) external view returns (address);\r\n\r\n    /**\r\n     * @notice General function to update the implementation of a proxy registered with\r\n     * certain `id`. If there is no proxy registered, it will instantiate one and\r\n     * set as implementation the `newImplementationAddress`.\r\n     * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\r\n     * setter function, in order to avoid unexpected consequences\r\n     * @param id The id\r\n     * @param newImplementationAddress The address of the new implementation\r\n     */\r\n    function setAddressAsProxy(\r\n        bytes32 id,\r\n        address newImplementationAddress\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Sets an address for an id replacing the address saved in the addresses map.\r\n     * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\r\n     * @param id The id\r\n     * @param newAddress The address to set\r\n     */\r\n    function setAddress(bytes32 id, address newAddress) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the Pool proxy.\r\n     * @return The Pool proxy address\r\n     */\r\n    function getPool() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the implementation of the Pool, or creates a proxy\r\n     * setting the new `pool` implementation when the function is called for the first time.\r\n     * @param newPoolImpl The new Pool implementation\r\n     */\r\n    function setPoolImpl(address newPoolImpl) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the PoolConfigurator proxy.\r\n     * @return The PoolConfigurator proxy address\r\n     */\r\n    function getPoolConfigurator() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\r\n     * setting the new `PoolConfigurator` implementation when the function is called for the first time.\r\n     * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\r\n     */\r\n    function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the price oracle.\r\n     * @return The address of the PriceOracle\r\n     */\r\n    function getPriceOracle() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the address of the price oracle.\r\n     * @param newPriceOracle The address of the new PriceOracle\r\n     */\r\n    function setPriceOracle(address newPriceOracle) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the ACL manager.\r\n     * @return The address of the ACLManager\r\n     */\r\n    function getACLManager() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the address of the ACL manager.\r\n     * @param newAclManager The address of the new ACLManager\r\n     */\r\n    function setACLManager(address newAclManager) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the ACL admin.\r\n     * @return The address of the ACL admin\r\n     */\r\n    function getACLAdmin() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the address of the ACL admin.\r\n     * @param newAclAdmin The address of the new ACL admin\r\n     */\r\n    function setACLAdmin(address newAclAdmin) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the price oracle sentinel.\r\n     * @return The address of the PriceOracleSentinel\r\n     */\r\n    function getPriceOracleSentinel() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the address of the price oracle sentinel.\r\n     * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\r\n     */\r\n    function setPriceOracleSentinel(address newPriceOracleSentinel) external;\r\n\r\n    /**\r\n     * @notice Returns the address of the data provider.\r\n     * @return The address of the DataProvider\r\n     */\r\n    function getPoolDataProvider() external view returns (address);\r\n\r\n    /**\r\n     * @notice Updates the address of the data provider.\r\n     * @param newDataProvider The address of the new DataProvider\r\n     */\r\n    function setPoolDataProvider(address newDataProvider) external;\r\n}\r\n"},"contracts/interface/test.sol":{"content":""},"contracts/PriceChecker.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract PriceChecker is Ownable {\r\n    _priceFeed[] public priceFeeds;\r\n\r\n    struct _priceFeed {\r\n        string name;\r\n        address token;\r\n        AggregatorV3Interface priceFeed;\r\n    }\r\n\r\n    //only using PriceFeeds pegged to USD\r\n    function addPriceFeed(\r\n        string memory _name,\r\n        address _token,\r\n        address _address\r\n    ) external onlyOwner {\r\n        _priceFeed[] memory pricefeed = priceFeeds;\r\n        bool isAdded = false;\r\n        for (uint256 i = 0; i < pricefeed.length; i++) {\r\n            if (\r\n                keccak256(abi.encodePacked(_name)) ==\r\n                keccak256(abi.encodePacked(pricefeed[i].name))\r\n            ) {\r\n                isAdded = true;\r\n                break;\r\n            }\r\n        }\r\n        require(!isAdded, \"Price Feed already added\");\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\r\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\r\n    }\r\n\r\n    function getPriceFeed(\r\n        address _token\r\n    ) internal view returns (AggregatorV3Interface priceFeed) {\r\n        _priceFeed[] memory pricefeed = priceFeeds;\r\n\r\n        for (uint256 i = 0; i < pricefeed.length; i++) {\r\n            if (_token == pricefeed[i].token) {\r\n                return pricefeed[i].priceFeed;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPrice(address _address) external view returns (uint256) {\r\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\r\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\r\n        return uint256(answer);\r\n    }\r\n}\r\n"},"contracts/TradingFees.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./PriceChecker.sol\";\r\nimport \"./Wallet.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TradingFees is Ownable {\r\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\r\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\r\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\r\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\r\n    //and waive trading fees\r\n\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n\r\n    uint256 decimals = 10 ** 18;\r\n    address public daiToken =\r\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\r\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\r\n    PriceChecker private priceFeed;\r\n    Wallet wallet;\r\n\r\n    constructor(address _priceCheckerAddress) {\r\n        priceFeed = PriceChecker(_priceCheckerAddress);\r\n    }\r\n\r\n    function calculateFees(\r\n        uint256 _amount,\r\n        uint256 _rate,\r\n        address _refToken\r\n    ) public view returns (uint256) {\r\n        //Calculated based on TokenB price, require actual price in 18dp\r\n        //trading fees is 0.1% of trade = 0.001\r\n        //moving up 18dp is 0.001 x 10**18 = 10**14\r\n        //have to fetch tokenPrice from PriceFeed\r\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\r\n        uint256 value = (\r\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\r\n        ).div(decimals);\r\n        uint256 fees = value.div(10 ** 4);\r\n\r\n        return fees; //based on USD value\r\n    }\r\n\r\n    //Amount of DAI to deduct from fees\r\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\r\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\r\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\r\n        return uint256(amt);\r\n    }\r\n\r\n    //Amount of Tokens to deduct from fees\r\n    function amountTokensToDeduct(\r\n        address _refToken,\r\n        uint256 _fees\r\n    ) public view returns (uint256) {\r\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\r\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\r\n        return uint256(amt);\r\n    }\r\n\r\n    function checkSufficientaDAI(\r\n        uint256 _fees,\r\n        address _user\r\n    ) public view returns (bool) {\r\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\r\n        uint256 balance = wallet.s_tokens(aDAI, _user);\r\n\r\n        return balance >= amtDAI;\r\n    }\r\n\r\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\r\n        wallet = Wallet(_Walletaddress);\r\n    }\r\n\r\n    function setPriceCheckerAddress(\r\n        address _PriceCheckeraddress\r\n    ) public onlyOwner {\r\n        priceFeed = PriceChecker(_PriceCheckeraddress);\r\n    }\r\n}\r\n"},"contracts/Wallet.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./ERC20.sol\";\r\nimport \"./Exchange.sol\";\r\nimport \"./fillLogic.sol\";\r\n\r\n/// @notice Library SafeMath used to prevent overflows and underflows\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Wallet is Ownable {\r\n    using SafeMath for uint256; //for prevention of integer overflow\r\n\r\n    address public fundWallet;\r\n    uint256 decimals = 18;\r\n    address public aDAI;\r\n\r\n    //For prevention of reentrancy\r\n    bool private locked;\r\n\r\n    address public ethToken = address(0);\r\n\r\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\r\n    mapping(address => mapping(address => uint256)) public lockedFunds;\r\n\r\n    Exchange exchange;\r\n    fillLogic fillContract;\r\n    IERC20 token;\r\n\r\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\r\n\r\n    /// @notice Event when amount withdrawn exchange\r\n    event Withdraw(\r\n        address token,\r\n        address user,\r\n        uint256 amount,\r\n        uint256 balance\r\n    );\r\n\r\n    function depositETH() external payable {\r\n        updateBalance(ethToken, msg.sender, msg.value, true);\r\n\r\n        emit Deposit(\r\n            ethToken,\r\n            msg.sender,\r\n            msg.value,\r\n            balanceOf(ethToken, msg.sender)\r\n        );\r\n    }\r\n\r\n    function withdrawETH(uint256 _amount) external {\r\n        require(\r\n            balanceOf(ethToken, msg.sender).sub(\r\n                getlockedFunds(msg.sender, ethToken)\r\n            ) >= _amount,\r\n            \"Insufficient balance ETH to withdraw\"\r\n        );\r\n        require(!locked, \"Reentrant call detected!\");\r\n        locked = true;\r\n        updateBalance(ethToken, msg.sender, _amount, false);\r\n        (bool success, ) = msg.sender.call{value: _amount}(\"\");\r\n        require(success, \"failed to send amount\");\r\n        locked = false;\r\n\r\n        emit Withdraw(\r\n            ethToken,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(ethToken, msg.sender)\r\n        );\r\n    }\r\n\r\n    //from and transferFrom is from ERC20 contract\r\n    //_token should be an ERC20 token\r\n    function depositToken(\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _decimals\r\n    ) external {\r\n        require(_token != ethToken, \"Invalid Token Type\");\r\n        require(\r\n            exchange.isVerifiedToken(_token) || _token == aDAI,\r\n            \"Token not verified on Exchange\"\r\n        );\r\n        //need to add a check to prove that it is an ERC20 token\r\n        token = IERC20(_token);\r\n\r\n        //Requires approval first\r\n        require(\r\n            token.transferFrom(msg.sender, address(this), _amount),\r\n            \"No Approval yet\"\r\n        );\r\n\r\n        updateBalance(\r\n            _token,\r\n            msg.sender,\r\n            _amount.mul(10 ** decimals.sub(_decimals)),\r\n            true\r\n        );\r\n\r\n        emit Deposit(\r\n            _token,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(_token, msg.sender)\r\n        );\r\n    }\r\n\r\n    function withdrawToken(\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _decimals\r\n    ) external {\r\n        require(_token != ethToken);\r\n        require(\r\n            exchange.isVerifiedToken(_token),\r\n            \"Token not verified on Exchange\"\r\n        );\r\n\r\n        require(\r\n            balanceOf(_token, msg.sender).sub(\r\n                getlockedFunds(msg.sender, _token)\r\n            ) >= _amount,\r\n            \"Insufficient Tokens to withdraw\"\r\n        );\r\n        require(!locked, \"Reentrant call detected!\");\r\n        locked = true;\r\n\r\n        token = IERC20(_token);\r\n        updateBalance(\r\n            _token,\r\n            msg.sender,\r\n            _amount.mul(10 ** decimals.sub(_decimals)),\r\n            false\r\n        );\r\n        require(\r\n            token.transfer(\r\n                msg.sender,\r\n                _amount.div(10 ** decimals.sub(_decimals))\r\n            )\r\n        );\r\n\r\n        locked = false;\r\n        emit Withdraw(\r\n            _token,\r\n            msg.sender,\r\n            _amount,\r\n            balanceOf(_token, msg.sender)\r\n        );\r\n    }\r\n\r\n    function getlockedFunds(\r\n        address _user,\r\n        address _token\r\n    ) public view returns (uint256) {\r\n        return lockedFunds[_user][_token];\r\n    }\r\n\r\n    function exchangeUpdateLockedFunds(\r\n        address _user,\r\n        address _token,\r\n        uint256 _amount,\r\n        bool isAdd\r\n    ) external isExchange {\r\n        updateLockedFunds(_user, _token, _amount, isAdd);\r\n    }\r\n\r\n    function updateLockedFunds(\r\n        address _user,\r\n        address _token,\r\n        uint256 _amount,\r\n        bool isAdd\r\n    ) internal {\r\n        if (isAdd) {\r\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\r\n                _amount\r\n            );\r\n        } else if (!isAdd) {\r\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\r\n                _amount\r\n            );\r\n        }\r\n    }\r\n\r\n    //balance of specific tokens in the dex owned by specific user\r\n    function balanceOf(\r\n        address _token,\r\n        address _user\r\n    ) public view returns (uint256) {\r\n        return s_tokens[_token][_user];\r\n    }\r\n\r\n    function exchangeUpdateBalance(\r\n        address _token,\r\n        address _user,\r\n        uint256 _amount,\r\n        bool isAdd\r\n    ) external isExchange {\r\n        updateBalance(_token, _user, _amount, isAdd);\r\n    }\r\n\r\n    function updateBalance(\r\n        address _token,\r\n        address _user,\r\n        uint256 _amount,\r\n        bool isAdd\r\n    ) internal {\r\n        if (isAdd) {\r\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\r\n        } else if (!isAdd) {\r\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\r\n        }\r\n    }\r\n\r\n    function updateFundWallet(address _fundwallet) public onlyOwner {\r\n        fundWallet = _fundwallet;\r\n    }\r\n\r\n    function withdrawToFundWallet(address _token, uint256 _decimals) external {\r\n        //Only allow fundWallet address to make the call\r\n        require(\r\n            msg.sender == fundWallet,\r\n            \"Invalid FundWallet address to withdraw\"\r\n        );\r\n        uint256 totalAmount = s_tokens[_token][fundWallet];\r\n        uint256 actualAmount = totalAmount.div(10 ** decimals.sub(_decimals));\r\n        token = IERC20(_token);\r\n\r\n        require(!locked, \"Reentrant call detected!\");\r\n        locked = true;\r\n        updateBalance(_token, fundWallet, totalAmount, false);\r\n        require(token.transfer(fundWallet, actualAmount));\r\n        locked = false;\r\n    }\r\n\r\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\r\n        exchange = Exchange(_exchangeAddress);\r\n    }\r\n\r\n    function updateFillLogicAddress(address _contract) public onlyOwner {\r\n        fillContract = fillLogic(_contract);\r\n    }\r\n\r\n    function updateaDaiAddress(address _address) public onlyOwner {\r\n        aDAI = address(_address);\r\n    }\r\n\r\n    modifier isExchange() {\r\n        require(\r\n            msg.sender == address(exchange) ||\r\n                msg.sender == address(fillContract),\r\n            \"Not Exchange or fillOrder contract\"\r\n        );\r\n        _;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interface/test.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interface/test.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"\n--> contracts/interface/test.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interface/test.sol","start":-1},"type":"Warning"}],"sources":{"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","exportedSymbols":{"DataTypes":[351]},"id":352,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":351,"linearizedBaseContracts":[351],"name":"DataTypes","nameLocation":"70:9:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataTypes.ReserveData","id":33,"members":[{"constant":false,"id":4,"mutability":"mutable","name":"configuration","nameLocation":"172:13:0","nodeType":"VariableDeclaration","scope":33,"src":"148:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":3,"nodeType":"UserDefinedTypeName","pathNode":{"id":2,"name":"ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":36,"src":"148:23:0"},"referencedDeclaration":36,"src":"148:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"liquidityIndex","nameLocation":"243:14:0","nodeType":"VariableDeclaration","scope":33,"src":"235:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5,"name":"uint128","nodeType":"ElementaryTypeName","src":"235:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":8,"mutability":"mutable","name":"currentLiquidityRate","nameLocation":"319:20:0","nodeType":"VariableDeclaration","scope":33,"src":"311:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7,"name":"uint128","nodeType":"ElementaryTypeName","src":"311:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"399:19:0","nodeType":"VariableDeclaration","scope":33,"src":"391:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":9,"name":"uint128","nodeType":"ElementaryTypeName","src":"391:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"currentVariableBorrowRate","nameLocation":"489:25:0","nodeType":"VariableDeclaration","scope":33,"src":"481:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":11,"name":"uint128","nodeType":"ElementaryTypeName","src":"481:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"currentStableBorrowRate","nameLocation":"583:23:0","nodeType":"VariableDeclaration","scope":33,"src":"575:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":13,"name":"uint128","nodeType":"ElementaryTypeName","src":"575:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"lastUpdateTimestamp","nameLocation":"650:19:0","nodeType":"VariableDeclaration","scope":33,"src":"643:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":15,"name":"uint40","nodeType":"ElementaryTypeName","src":"643:6:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"id","nameLocation":"770:2:0","nodeType":"VariableDeclaration","scope":33,"src":"763:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":17,"name":"uint16","nodeType":"ElementaryTypeName","src":"763:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"aTokenAddress","nameLocation":"807:13:0","nodeType":"VariableDeclaration","scope":33,"src":"799:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"864:22:0","nodeType":"VariableDeclaration","scope":33,"src":"856:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"932:24:0","nodeType":"VariableDeclaration","scope":33,"src":"924:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"1014:27:0","nodeType":"VariableDeclaration","scope":33,"src":"1006:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"accruedToTreasury","nameLocation":"1098:17:0","nodeType":"VariableDeclaration","scope":33,"src":"1090:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":27,"name":"uint128","nodeType":"ElementaryTypeName","src":"1090:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":30,"mutability":"mutable","name":"unbacked","nameLocation":"1204:8:0","nodeType":"VariableDeclaration","scope":33,"src":"1196:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":29,"name":"uint128","nodeType":"ElementaryTypeName","src":"1196:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"isolationModeTotalDebt","nameLocation":"1299:22:0","nodeType":"VariableDeclaration","scope":33,"src":"1291:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":31,"name":"uint128","nodeType":"ElementaryTypeName","src":"1291:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"ReserveData","nameLocation":"91:11:0","nodeType":"StructDefinition","scope":351,"src":"84:1242:0","visibility":"public"},{"canonicalName":"DataTypes.ReserveConfigurationMap","id":36,"members":[{"constant":false,"id":35,"mutability":"mutable","name":"data","nameLocation":"2212:4:0","nodeType":"VariableDeclaration","scope":36,"src":"2204:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReserveConfigurationMap","nameLocation":"1337:23:0","nodeType":"StructDefinition","scope":351,"src":"1330:891:0","visibility":"public"},{"canonicalName":"DataTypes.UserConfigurationMap","id":40,"members":[{"constant":false,"id":39,"mutability":"mutable","name":"data","nameLocation":"2530:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2522:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"2522:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserConfigurationMap","nameLocation":"2232:20:0","nodeType":"StructDefinition","scope":351,"src":"2225:314:0","visibility":"public"},{"canonicalName":"DataTypes.EModeCategory","id":51,"members":[{"constant":false,"id":42,"mutability":"mutable","name":"ltv","nameLocation":"2647:3:0","nodeType":"VariableDeclaration","scope":51,"src":"2640:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":41,"name":"uint16","nodeType":"ElementaryTypeName","src":"2640:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"liquidationThreshold","nameLocation":"2663:20:0","nodeType":"VariableDeclaration","scope":51,"src":"2656:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":43,"name":"uint16","nodeType":"ElementaryTypeName","src":"2656:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"liquidationBonus","nameLocation":"2696:16:0","nodeType":"VariableDeclaration","scope":51,"src":"2689:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":45,"name":"uint16","nodeType":"ElementaryTypeName","src":"2689:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"priceSource","nameLocation":"2837:11:0","nodeType":"VariableDeclaration","scope":51,"src":"2829:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"label","nameLocation":"2861:5:0","nodeType":"VariableDeclaration","scope":51,"src":"2854:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":49,"name":"string","nodeType":"ElementaryTypeName","src":"2854:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EModeCategory","nameLocation":"2550:13:0","nodeType":"StructDefinition","scope":351,"src":"2543:328:0","visibility":"public"},{"canonicalName":"DataTypes.InterestRateMode","id":55,"members":[{"id":52,"name":"NONE","nameLocation":"2903:4:0","nodeType":"EnumValue","src":"2903:4:0"},{"id":53,"name":"STABLE","nameLocation":"2913:6:0","nodeType":"EnumValue","src":"2913:6:0"},{"id":54,"name":"VARIABLE","nameLocation":"2925:8:0","nodeType":"EnumValue","src":"2925:8:0"}],"name":"InterestRateMode","nameLocation":"2880:16:0","nodeType":"EnumDefinition","src":"2875:62:0"},{"canonicalName":"DataTypes.ReserveCache","id":97,"members":[{"constant":false,"id":57,"mutability":"mutable","name":"currScaledVariableDebt","nameLocation":"2975:22:0","nodeType":"VariableDeclaration","scope":97,"src":"2967:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"2967:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"nextScaledVariableDebt","nameLocation":"3011:22:0","nodeType":"VariableDeclaration","scope":97,"src":"3003:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"3003:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":61,"mutability":"mutable","name":"currPrincipalStableDebt","nameLocation":"3047:23:0","nodeType":"VariableDeclaration","scope":97,"src":"3039:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"3039:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"currAvgStableBorrowRate","nameLocation":"3084:23:0","nodeType":"VariableDeclaration","scope":97,"src":"3076:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"3076:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"currTotalStableDebt","nameLocation":"3121:19:0","nodeType":"VariableDeclaration","scope":97,"src":"3113:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"3113:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"nextAvgStableBorrowRate","nameLocation":"3154:23:0","nodeType":"VariableDeclaration","scope":97,"src":"3146:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"nextTotalStableDebt","nameLocation":"3191:19:0","nodeType":"VariableDeclaration","scope":97,"src":"3183:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"currLiquidityIndex","nameLocation":"3224:18:0","nodeType":"VariableDeclaration","scope":97,"src":"3216:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"3216:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":73,"mutability":"mutable","name":"nextLiquidityIndex","nameLocation":"3256:18:0","nodeType":"VariableDeclaration","scope":97,"src":"3248:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"3248:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"currVariableBorrowIndex","nameLocation":"3288:23:0","nodeType":"VariableDeclaration","scope":97,"src":"3280:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"nextVariableBorrowIndex","nameLocation":"3325:23:0","nodeType":"VariableDeclaration","scope":97,"src":"3317:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"3317:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"currLiquidityRate","nameLocation":"3362:17:0","nodeType":"VariableDeclaration","scope":97,"src":"3354:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"3354:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"currVariableBorrowRate","nameLocation":"3393:22:0","nodeType":"VariableDeclaration","scope":97,"src":"3385:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"3385:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"reserveFactor","nameLocation":"3429:13:0","nodeType":"VariableDeclaration","scope":97,"src":"3421:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"3421:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":86,"mutability":"mutable","name":"reserveConfiguration","nameLocation":"3472:20:0","nodeType":"VariableDeclaration","scope":97,"src":"3448:44:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":85,"nodeType":"UserDefinedTypeName","pathNode":{"id":84,"name":"ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":36,"src":"3448:23:0"},"referencedDeclaration":36,"src":"3448:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"aTokenAddress","nameLocation":"3506:13:0","nodeType":"VariableDeclaration","scope":97,"src":"3498:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"3498:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"3533:22:0","nodeType":"VariableDeclaration","scope":97,"src":"3525:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"3525:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"3569:24:0","nodeType":"VariableDeclaration","scope":97,"src":"3561:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"reserveLastUpdateTimestamp","nameLocation":"3606:26:0","nodeType":"VariableDeclaration","scope":97,"src":"3599:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":93,"name":"uint40","nodeType":"ElementaryTypeName","src":"3599:6:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"stableDebtLastUpdateTimestamp","nameLocation":"3645:29:0","nodeType":"VariableDeclaration","scope":97,"src":"3638:36:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":95,"name":"uint40","nodeType":"ElementaryTypeName","src":"3638:6:0","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"name":"ReserveCache","nameLocation":"2948:12:0","nodeType":"StructDefinition","scope":351,"src":"2941:738:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteLiquidationCallParams","id":116,"members":[{"constant":false,"id":99,"mutability":"mutable","name":"reservesCount","nameLocation":"3733:13:0","nodeType":"VariableDeclaration","scope":116,"src":"3725:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"3725:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101,"mutability":"mutable","name":"debtToCover","nameLocation":"3760:11:0","nodeType":"VariableDeclaration","scope":116,"src":"3752:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"collateralAsset","nameLocation":"3785:15:0","nodeType":"VariableDeclaration","scope":116,"src":"3777:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"3777:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"debtAsset","nameLocation":"3814:9:0","nodeType":"VariableDeclaration","scope":116,"src":"3806:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"3806:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"user","nameLocation":"3837:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3829:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"3829:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"receiveAToken","nameLocation":"3852:13:0","nodeType":"VariableDeclaration","scope":116,"src":"3847:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":108,"name":"bool","nodeType":"ElementaryTypeName","src":"3847:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"priceOracle","nameLocation":"3879:11:0","nodeType":"VariableDeclaration","scope":116,"src":"3871:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"3871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"userEModeCategory","nameLocation":"3902:17:0","nodeType":"VariableDeclaration","scope":116,"src":"3896:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":112,"name":"uint8","nodeType":"ElementaryTypeName","src":"3896:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"3933:19:0","nodeType":"VariableDeclaration","scope":116,"src":"3925:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"3925:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ExecuteLiquidationCallParams","nameLocation":"3690:28:0","nodeType":"StructDefinition","scope":351,"src":"3683:274:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteSupplyParams","id":125,"members":[{"constant":false,"id":118,"mutability":"mutable","name":"asset","nameLocation":"4002:5:0","nodeType":"VariableDeclaration","scope":125,"src":"3994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"3994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"amount","nameLocation":"4021:6:0","nodeType":"VariableDeclaration","scope":125,"src":"4013:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4041:10:0","nodeType":"VariableDeclaration","scope":125,"src":"4033:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"4033:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"referralCode","nameLocation":"4064:12:0","nodeType":"VariableDeclaration","scope":125,"src":"4057:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":123,"name":"uint16","nodeType":"ElementaryTypeName","src":"4057:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"ExecuteSupplyParams","nameLocation":"3968:19:0","nodeType":"StructDefinition","scope":351,"src":"3961:120:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteBorrowParams","id":151,"members":[{"constant":false,"id":127,"mutability":"mutable","name":"asset","nameLocation":"4126:5:0","nodeType":"VariableDeclaration","scope":151,"src":"4118:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"user","nameLocation":"4145:4:0","nodeType":"VariableDeclaration","scope":151,"src":"4137:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"4137:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4163:10:0","nodeType":"VariableDeclaration","scope":151,"src":"4155:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"4155:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"amount","nameLocation":"4187:6:0","nodeType":"VariableDeclaration","scope":151,"src":"4179:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"4179:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"interestRateMode","nameLocation":"4216:16:0","nodeType":"VariableDeclaration","scope":151,"src":"4199:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":135,"nodeType":"UserDefinedTypeName","pathNode":{"id":134,"name":"InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"4199:16:0"},"referencedDeclaration":55,"src":"4199:16:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":138,"mutability":"mutable","name":"referralCode","nameLocation":"4245:12:0","nodeType":"VariableDeclaration","scope":151,"src":"4238:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":137,"name":"uint16","nodeType":"ElementaryTypeName","src":"4238:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":140,"mutability":"mutable","name":"releaseUnderlying","nameLocation":"4268:17:0","nodeType":"VariableDeclaration","scope":151,"src":"4263:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":139,"name":"bool","nodeType":"ElementaryTypeName","src":"4263:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"maxStableRateBorrowSizePercent","nameLocation":"4299:30:0","nodeType":"VariableDeclaration","scope":151,"src":"4291:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"4291:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":144,"mutability":"mutable","name":"reservesCount","nameLocation":"4343:13:0","nodeType":"VariableDeclaration","scope":151,"src":"4335:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"4335:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"oracle","nameLocation":"4370:6:0","nodeType":"VariableDeclaration","scope":151,"src":"4362:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"4362:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"userEModeCategory","nameLocation":"4388:17:0","nodeType":"VariableDeclaration","scope":151,"src":"4382:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":147,"name":"uint8","nodeType":"ElementaryTypeName","src":"4382:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"4419:19:0","nodeType":"VariableDeclaration","scope":151,"src":"4411:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"4411:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ExecuteBorrowParams","nameLocation":"4092:19:0","nodeType":"StructDefinition","scope":351,"src":"4085:358:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteRepayParams","id":163,"members":[{"constant":false,"id":153,"mutability":"mutable","name":"asset","nameLocation":"4487:5:0","nodeType":"VariableDeclaration","scope":163,"src":"4479:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4479:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"amount","nameLocation":"4506:6:0","nodeType":"VariableDeclaration","scope":163,"src":"4498:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4498:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"interestRateMode","nameLocation":"4535:16:0","nodeType":"VariableDeclaration","scope":163,"src":"4518:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":157,"nodeType":"UserDefinedTypeName","pathNode":{"id":156,"name":"InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"4518:16:0"},"referencedDeclaration":55,"src":"4518:16:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4565:10:0","nodeType":"VariableDeclaration","scope":163,"src":"4557:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"4557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"useATokens","nameLocation":"4586:10:0","nodeType":"VariableDeclaration","scope":163,"src":"4581:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":161,"name":"bool","nodeType":"ElementaryTypeName","src":"4581:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExecuteRepayParams","nameLocation":"4454:18:0","nodeType":"StructDefinition","scope":351,"src":"4447:154:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteWithdrawParams","id":176,"members":[{"constant":false,"id":165,"mutability":"mutable","name":"asset","nameLocation":"4648:5:0","nodeType":"VariableDeclaration","scope":176,"src":"4640:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":167,"mutability":"mutable","name":"amount","nameLocation":"4667:6:0","nodeType":"VariableDeclaration","scope":176,"src":"4659:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"4659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"to","nameLocation":"4687:2:0","nodeType":"VariableDeclaration","scope":176,"src":"4679:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"4679:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"reservesCount","nameLocation":"4703:13:0","nodeType":"VariableDeclaration","scope":176,"src":"4695:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"4695:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"oracle","nameLocation":"4730:6:0","nodeType":"VariableDeclaration","scope":176,"src":"4722:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"4722:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"userEModeCategory","nameLocation":"4748:17:0","nodeType":"VariableDeclaration","scope":176,"src":"4742:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":174,"name":"uint8","nodeType":"ElementaryTypeName","src":"4742:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ExecuteWithdrawParams","nameLocation":"4612:21:0","nodeType":"StructDefinition","scope":351,"src":"4605:165:0","visibility":"public"},{"canonicalName":"DataTypes.ExecuteSetUserEModeParams","id":183,"members":[{"constant":false,"id":178,"mutability":"mutable","name":"reservesCount","nameLocation":"4821:13:0","nodeType":"VariableDeclaration","scope":183,"src":"4813:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"4813:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"oracle","nameLocation":"4848:6:0","nodeType":"VariableDeclaration","scope":183,"src":"4840:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"4840:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"categoryId","nameLocation":"4866:10:0","nodeType":"VariableDeclaration","scope":183,"src":"4860:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"4860:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ExecuteSetUserEModeParams","nameLocation":"4781:25:0","nodeType":"StructDefinition","scope":351,"src":"4774:107:0","visibility":"public"},{"canonicalName":"DataTypes.FinalizeTransferParams","id":202,"members":[{"constant":false,"id":185,"mutability":"mutable","name":"asset","nameLocation":"4929:5:0","nodeType":"VariableDeclaration","scope":202,"src":"4921:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"4921:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"from","nameLocation":"4948:4:0","nodeType":"VariableDeclaration","scope":202,"src":"4940:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"4940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"to","nameLocation":"4966:2:0","nodeType":"VariableDeclaration","scope":202,"src":"4958:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"4958:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"amount","nameLocation":"4982:6:0","nodeType":"VariableDeclaration","scope":202,"src":"4974:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"4974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"balanceFromBefore","nameLocation":"5002:17:0","nodeType":"VariableDeclaration","scope":202,"src":"4994:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4994:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"balanceToBefore","nameLocation":"5033:15:0","nodeType":"VariableDeclaration","scope":202,"src":"5025:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"5025:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"reservesCount","nameLocation":"5062:13:0","nodeType":"VariableDeclaration","scope":202,"src":"5054:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"5054:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"oracle","nameLocation":"5089:6:0","nodeType":"VariableDeclaration","scope":202,"src":"5081:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"5081:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"fromEModeCategory","nameLocation":"5107:17:0","nodeType":"VariableDeclaration","scope":202,"src":"5101:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":200,"name":"uint8","nodeType":"ElementaryTypeName","src":"5101:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"FinalizeTransferParams","nameLocation":"4892:22:0","nodeType":"StructDefinition","scope":351,"src":"4885:244:0","visibility":"public"},{"canonicalName":"DataTypes.FlashloanParams","id":234,"members":[{"constant":false,"id":204,"mutability":"mutable","name":"receiverAddress","nameLocation":"5170:15:0","nodeType":"VariableDeclaration","scope":234,"src":"5162:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"5162:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"assets","nameLocation":"5201:6:0","nodeType":"VariableDeclaration","scope":234,"src":"5191:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"5191:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":206,"nodeType":"ArrayTypeName","src":"5191:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"amounts","nameLocation":"5223:7:0","nodeType":"VariableDeclaration","scope":234,"src":"5213:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"5213:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":209,"nodeType":"ArrayTypeName","src":"5213:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"interestRateModes","nameLocation":"5246:17:0","nodeType":"VariableDeclaration","scope":234,"src":"5236:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":212,"nodeType":"ArrayTypeName","src":"5236:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"onBehalfOf","nameLocation":"5277:10:0","nodeType":"VariableDeclaration","scope":234,"src":"5269:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"5269:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"params","nameLocation":"5299:6:0","nodeType":"VariableDeclaration","scope":234,"src":"5293:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":216,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"referralCode","nameLocation":"5318:12:0","nodeType":"VariableDeclaration","scope":234,"src":"5311:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":218,"name":"uint16","nodeType":"ElementaryTypeName","src":"5311:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5344:26:0","nodeType":"VariableDeclaration","scope":234,"src":"5336:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"5384:21:0","nodeType":"VariableDeclaration","scope":234,"src":"5376:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"maxStableRateBorrowSizePercent","nameLocation":"5419:30:0","nodeType":"VariableDeclaration","scope":234,"src":"5411:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5411:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"reservesCount","nameLocation":"5463:13:0","nodeType":"VariableDeclaration","scope":234,"src":"5455:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"5455:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"addressesProvider","nameLocation":"5490:17:0","nodeType":"VariableDeclaration","scope":234,"src":"5482:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"5482:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":231,"mutability":"mutable","name":"userEModeCategory","nameLocation":"5519:17:0","nodeType":"VariableDeclaration","scope":234,"src":"5513:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":230,"name":"uint8","nodeType":"ElementaryTypeName","src":"5513:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"isAuthorizedFlashBorrower","nameLocation":"5547:25:0","nodeType":"VariableDeclaration","scope":234,"src":"5542:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":232,"name":"bool","nodeType":"ElementaryTypeName","src":"5542:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FlashloanParams","nameLocation":"5140:15:0","nodeType":"StructDefinition","scope":351,"src":"5133:444:0","visibility":"public"},{"canonicalName":"DataTypes.FlashloanSimpleParams","id":249,"members":[{"constant":false,"id":236,"mutability":"mutable","name":"receiverAddress","nameLocation":"5624:15:0","nodeType":"VariableDeclaration","scope":249,"src":"5616:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"5616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"asset","nameLocation":"5653:5:0","nodeType":"VariableDeclaration","scope":249,"src":"5645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"amount","nameLocation":"5672:6:0","nodeType":"VariableDeclaration","scope":249,"src":"5664:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"5664:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"params","nameLocation":"5690:6:0","nodeType":"VariableDeclaration","scope":249,"src":"5684:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":241,"name":"bytes","nodeType":"ElementaryTypeName","src":"5684:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"referralCode","nameLocation":"5709:12:0","nodeType":"VariableDeclaration","scope":249,"src":"5702:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":243,"name":"uint16","nodeType":"ElementaryTypeName","src":"5702:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5735:26:0","nodeType":"VariableDeclaration","scope":249,"src":"5727:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"5727:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"5775:21:0","nodeType":"VariableDeclaration","scope":249,"src":"5767:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"5767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FlashloanSimpleParams","nameLocation":"5588:21:0","nodeType":"StructDefinition","scope":351,"src":"5581:220:0","visibility":"public"},{"canonicalName":"DataTypes.FlashLoanRepaymentParams","id":262,"members":[{"constant":false,"id":251,"mutability":"mutable","name":"amount","nameLocation":"5851:6:0","nodeType":"VariableDeclaration","scope":262,"src":"5843:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"5843:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"totalPremium","nameLocation":"5871:12:0","nodeType":"VariableDeclaration","scope":262,"src":"5863:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5897:26:0","nodeType":"VariableDeclaration","scope":262,"src":"5889:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"5889:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"asset","nameLocation":"5937:5:0","nodeType":"VariableDeclaration","scope":262,"src":"5929:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"receiverAddress","nameLocation":"5956:15:0","nodeType":"VariableDeclaration","scope":262,"src":"5948:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"5948:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"referralCode","nameLocation":"5984:12:0","nodeType":"VariableDeclaration","scope":262,"src":"5977:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":260,"name":"uint16","nodeType":"ElementaryTypeName","src":"5977:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"FlashLoanRepaymentParams","nameLocation":"5812:24:0","nodeType":"StructDefinition","scope":351,"src":"5805:196:0","visibility":"public"},{"canonicalName":"DataTypes.CalculateUserAccountDataParams","id":274,"members":[{"constant":false,"id":265,"mutability":"mutable","name":"userConfig","nameLocation":"6070:10:0","nodeType":"VariableDeclaration","scope":274,"src":"6049:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":264,"nodeType":"UserDefinedTypeName","pathNode":{"id":263,"name":"UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":40,"src":"6049:20:0"},"referencedDeclaration":40,"src":"6049:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"reservesCount","nameLocation":"6094:13:0","nodeType":"VariableDeclaration","scope":274,"src":"6086:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"6086:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"user","nameLocation":"6121:4:0","nodeType":"VariableDeclaration","scope":274,"src":"6113:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"6113:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"oracle","nameLocation":"6139:6:0","nodeType":"VariableDeclaration","scope":274,"src":"6131:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"6131:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"userEModeCategory","nameLocation":"6157:17:0","nodeType":"VariableDeclaration","scope":274,"src":"6151:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":272,"name":"uint8","nodeType":"ElementaryTypeName","src":"6151:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"CalculateUserAccountDataParams","nameLocation":"6012:30:0","nodeType":"StructDefinition","scope":351,"src":"6005:174:0","visibility":"public"},{"canonicalName":"DataTypes.ValidateBorrowParams","id":306,"members":[{"constant":false,"id":277,"mutability":"mutable","name":"reserveCache","nameLocation":"6230:12:0","nodeType":"VariableDeclaration","scope":306,"src":"6217:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$97_storage_ptr","typeString":"struct DataTypes.ReserveCache"},"typeName":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"ReserveCache","nodeType":"IdentifierPath","referencedDeclaration":97,"src":"6217:12:0"},"referencedDeclaration":97,"src":"6217:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$97_storage_ptr","typeString":"struct DataTypes.ReserveCache"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"userConfig","nameLocation":"6269:10:0","nodeType":"VariableDeclaration","scope":306,"src":"6248:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":40,"src":"6248:20:0"},"referencedDeclaration":40,"src":"6248:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"asset","nameLocation":"6293:5:0","nodeType":"VariableDeclaration","scope":306,"src":"6285:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"6285:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"userAddress","nameLocation":"6312:11:0","nodeType":"VariableDeclaration","scope":306,"src":"6304:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"6304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"amount","nameLocation":"6337:6:0","nodeType":"VariableDeclaration","scope":306,"src":"6329:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"6329:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"interestRateMode","nameLocation":"6366:16:0","nodeType":"VariableDeclaration","scope":306,"src":"6349:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":288,"nodeType":"UserDefinedTypeName","pathNode":{"id":287,"name":"InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"6349:16:0"},"referencedDeclaration":55,"src":"6349:16:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"maxStableLoanPercent","nameLocation":"6396:20:0","nodeType":"VariableDeclaration","scope":306,"src":"6388:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":293,"mutability":"mutable","name":"reservesCount","nameLocation":"6430:13:0","nodeType":"VariableDeclaration","scope":306,"src":"6422:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"6422:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"oracle","nameLocation":"6457:6:0","nodeType":"VariableDeclaration","scope":306,"src":"6449:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"6449:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"userEModeCategory","nameLocation":"6475:17:0","nodeType":"VariableDeclaration","scope":306,"src":"6469:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":296,"name":"uint8","nodeType":"ElementaryTypeName","src":"6469:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"6506:19:0","nodeType":"VariableDeclaration","scope":306,"src":"6498:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6498:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"isolationModeActive","nameLocation":"6536:19:0","nodeType":"VariableDeclaration","scope":306,"src":"6531:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":300,"name":"bool","nodeType":"ElementaryTypeName","src":"6531:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"isolationModeCollateralAddress","nameLocation":"6569:30:0","nodeType":"VariableDeclaration","scope":306,"src":"6561:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"6561:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"isolationModeDebtCeiling","nameLocation":"6613:24:0","nodeType":"VariableDeclaration","scope":306,"src":"6605:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"6605:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ValidateBorrowParams","nameLocation":"6190:20:0","nodeType":"StructDefinition","scope":351,"src":"6183:459:0","visibility":"public"},{"canonicalName":"DataTypes.ValidateLiquidationCallParams","id":316,"members":[{"constant":false,"id":309,"mutability":"mutable","name":"debtReserveCache","nameLocation":"6702:16:0","nodeType":"VariableDeclaration","scope":316,"src":"6689:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$97_storage_ptr","typeString":"struct DataTypes.ReserveCache"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"ReserveCache","nodeType":"IdentifierPath","referencedDeclaration":97,"src":"6689:12:0"},"referencedDeclaration":97,"src":"6689:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$97_storage_ptr","typeString":"struct DataTypes.ReserveCache"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"totalDebt","nameLocation":"6732:9:0","nodeType":"VariableDeclaration","scope":316,"src":"6724:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"6724:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"healthFactor","nameLocation":"6755:12:0","nodeType":"VariableDeclaration","scope":316,"src":"6747:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6747:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":315,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"6781:19:0","nodeType":"VariableDeclaration","scope":316,"src":"6773:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"6773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ValidateLiquidationCallParams","nameLocation":"6653:29:0","nodeType":"StructDefinition","scope":351,"src":"6646:159:0","visibility":"public"},{"canonicalName":"DataTypes.CalculateInterestRatesParams","id":335,"members":[{"constant":false,"id":318,"mutability":"mutable","name":"unbacked","nameLocation":"6859:8:0","nodeType":"VariableDeclaration","scope":335,"src":"6851:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"6851:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"liquidityAdded","nameLocation":"6881:14:0","nodeType":"VariableDeclaration","scope":335,"src":"6873:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"6873:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"liquidityTaken","nameLocation":"6909:14:0","nodeType":"VariableDeclaration","scope":335,"src":"6901:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"6901:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"totalStableDebt","nameLocation":"6937:15:0","nodeType":"VariableDeclaration","scope":335,"src":"6929:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"totalVariableDebt","nameLocation":"6966:17:0","nodeType":"VariableDeclaration","scope":335,"src":"6958:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6958:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"averageStableBorrowRate","nameLocation":"6997:23:0","nodeType":"VariableDeclaration","scope":335,"src":"6989:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"6989:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"reserveFactor","nameLocation":"7034:13:0","nodeType":"VariableDeclaration","scope":335,"src":"7026:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"7026:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"reserve","nameLocation":"7061:7:0","nodeType":"VariableDeclaration","scope":335,"src":"7053:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"7053:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"aToken","nameLocation":"7082:6:0","nodeType":"VariableDeclaration","scope":335,"src":"7074:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"7074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CalculateInterestRatesParams","nameLocation":"6816:28:0","nodeType":"StructDefinition","scope":351,"src":"6809:284:0","visibility":"public"},{"canonicalName":"DataTypes.InitReserveParams","id":350,"members":[{"constant":false,"id":337,"mutability":"mutable","name":"asset","nameLocation":"7136:5:0","nodeType":"VariableDeclaration","scope":350,"src":"7128:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"7128:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"aTokenAddress","nameLocation":"7155:13:0","nodeType":"VariableDeclaration","scope":350,"src":"7147:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"7147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"7182:17:0","nodeType":"VariableDeclaration","scope":350,"src":"7174:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"7174:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"7213:19:0","nodeType":"VariableDeclaration","scope":350,"src":"7205:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"7205:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"7246:27:0","nodeType":"VariableDeclaration","scope":350,"src":"7238:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"7238:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"reservesCount","nameLocation":"7286:13:0","nodeType":"VariableDeclaration","scope":350,"src":"7279:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":346,"name":"uint16","nodeType":"ElementaryTypeName","src":"7279:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"maxNumberReserves","nameLocation":"7312:17:0","nodeType":"VariableDeclaration","scope":350,"src":"7305:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":348,"name":"uint16","nodeType":"ElementaryTypeName","src":"7305:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"InitReserveParams","nameLocation":"7104:17:0","nodeType":"StructDefinition","scope":351,"src":"7097:237:0","visibility":"public"}],"scope":352,"src":"62:7274:0","usedErrors":[]}],"src":"37:7300:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[397]},"id":398,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":353,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":397,"linearizedBaseContracts":[397],"name":"AggregatorV3Interface","nameLocation":"67:21:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":358,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:1","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"110:2:1"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":358,"src":"136:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":355,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:1"},"scope":397,"src":"93:50:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"167:2:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"193:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":360,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:1"},"scope":397,"src":"147:61:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":368,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:1","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"228:2:1"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":368,"src":"254:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:1"},"scope":397,"src":"212:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:1","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:1","nodeType":"VariableDeclaration","scope":383,"src":"289:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":369,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:1"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"roundId","nameLocation":"355:7:1","nodeType":"VariableDeclaration","scope":383,"src":"348:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":372,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"answer","nameLocation":"377:6:1","nodeType":"VariableDeclaration","scope":383,"src":"370:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":374,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:1","nodeType":"VariableDeclaration","scope":383,"src":"391:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:1","nodeType":"VariableDeclaration","scope":383,"src":"416:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:1","nodeType":"VariableDeclaration","scope":383,"src":"441:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":380,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:1"},"scope":397,"src":"267:203:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":396,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:1","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"498:2:1"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"roundId","nameLocation":"550:7:1","nodeType":"VariableDeclaration","scope":396,"src":"543:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":385,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"answer","nameLocation":"572:6:1","nodeType":"VariableDeclaration","scope":396,"src":"565:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":387,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:1","nodeType":"VariableDeclaration","scope":396,"src":"586:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:1","nodeType":"VariableDeclaration","scope":396,"src":"611:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:1","nodeType":"VariableDeclaration","scope":396,"src":"636:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":393,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:1"},"scope":397,"src":"474:191:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":398,"src":"57:610:1","usedErrors":[]}],"src":"32:636:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[635],"Ownable":[510]},"id":511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":399,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":511,"sourceUnit":636,"src":"127:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":402,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":635,"src":"683:7:2"},"id":403,"nodeType":"InheritanceSpecifier","src":"683:7:2"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"159:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":510,"linearizedBaseContracts":[510,635],"name":"Ownable","nameLocation":"672:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":405,"mutability":"mutable","name":"_owner","nameLocation":"713:6:2","nodeType":"VariableDeclaration","scope":510,"src":"697:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":411,"name":"OwnershipTransferred","nameLocation":"732:20:2","nodeType":"EventDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:2","nodeType":"VariableDeclaration","scope":411,"src":"753:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:2","nodeType":"VariableDeclaration","scope":411,"src":"784:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:2"},"src":"726:84:2"},{"body":{"id":420,"nodeType":"Block","src":"926:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":416,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"955:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"936:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"ExpressionStatement","src":"936:32:2"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"816:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":421,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"923:2:2"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"926:0:2"},"scope":510,"src":"912:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"1084:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":424,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1094:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":426,"nodeType":"ExpressionStatement","src":"1094:13:2"},{"id":427,"nodeType":"PlaceholderStatement","src":"1117:1:2"}]},"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"981:77:2","text":" @dev Throws if called by any account other than the owner."},"id":429,"name":"onlyOwner","nameLocation":"1072:9:2","nodeType":"ModifierDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"1081:2:2"},"src":"1063:62:2","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"1256:30:2","statements":[{"expression":{"id":435,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"1273:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":434,"id":436,"nodeType":"Return","src":"1266:13:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1131:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":438,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:2","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1215:2:2"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"1247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:2"},"scope":510,"src":"1201:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":451,"nodeType":"Block","src":"1404:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":443,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"1422:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":445,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"1433:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":442,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"1414:68:2"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"1292:62:2","text":" @dev Throws if the sender is not the owner."},"id":452,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:2","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"1379:2:2"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"1404:0:2"},"scope":510,"src":"1359:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"1885:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:2","typeDescriptions":{}}},"id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":458,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"1895:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"ExpressionStatement","src":"1895:30:2"}]},"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"1495:331:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":466,"implemented":true,"kind":"function","modifiers":[{"id":456,"kind":"modifierInvocation","modifierName":{"id":455,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"1875:9:2"},"nodeType":"ModifierInvocation","src":"1875:9:2"}],"name":"renounceOwnership","nameLocation":"1840:17:2","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"1857:2:2"},"returnParameters":{"id":457,"nodeType":"ParameterList","parameters":[],"src":"1885:0:2"},"scope":510,"src":"1831:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":488,"nodeType":"Block","src":"2151:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":475,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"2169:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:2","typeDescriptions":{}}},"id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"2161:73:2"},{"expression":{"arguments":[{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"2263:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":484,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2244:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":487,"nodeType":"ExpressionStatement","src":"2244:28:2"}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"1938:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":489,"implemented":true,"kind":"function","modifiers":[{"id":472,"kind":"modifierInvocation","modifierName":{"id":471,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"2141:9:2"},"nodeType":"ModifierInvocation","src":"2141:9:2"}],"name":"transferOwnership","nameLocation":"2090:17:2","nodeType":"FunctionDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:2","nodeType":"VariableDeclaration","scope":489,"src":"2108:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:2"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[],"src":"2151:0:2"},"scope":510,"src":"2081:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":508,"nodeType":"Block","src":"2496:124:2","statements":[{"assignments":[496],"declarations":[{"constant":false,"id":496,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:2","nodeType":"VariableDeclaration","scope":508,"src":"2506:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":498,"initialValue":{"id":497,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2525:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:2"},{"expression":{"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":499,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2541:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":500,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"2550:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":502,"nodeType":"ExpressionStatement","src":"2541:17:2"},{"eventCall":{"arguments":[{"id":504,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"2594:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"2604:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":503,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2573:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"EmitStatement","src":"2568:45:2"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"2285:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":509,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:2","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:2","nodeType":"VariableDeclaration","scope":509,"src":"2461:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:2"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[],"src":"2496:0:2"},"scope":510,"src":"2433:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":511,"src":"654:1968:2","usedErrors":[]}],"src":"102:2521:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[588]},"id":589,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":512,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":588,"linearizedBaseContracts":[588],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":522,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":522,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":518,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":522,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":520,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":522,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":531,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":531,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":531,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":531,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":537,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":588,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":545,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":545,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":588,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":555,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":555,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":555,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":552,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":588,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":565,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":565,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":565,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":588,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":575,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":575,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":575,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":575,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":572,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":588,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":587,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":587,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":587,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":587,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":587,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":584,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":588,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":589,"src":"202:2564:3","usedErrors":[]}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[588],"IERC20Metadata":[613]},"id":614,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":590,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":614,"sourceUnit":589,"src":"135:23:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":593,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":588,"src":"305:6:4"},"id":594,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"160:116:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":613,"linearizedBaseContracts":[613,588],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":600,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":600,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":597,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":613,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":606,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":603,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":613,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":612,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":609,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":613,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":614,"src":"277:405:4","usedErrors":[]}],"src":"110:573:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[635]},"id":636,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":615,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"111:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":635,"linearizedBaseContracts":[635],"name":"Context","nameLocation":"626:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":624,"nodeType":"Block","src":"702:34:5","statements":[{"expression":{"expression":{"id":621,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":620,"id":623,"nodeType":"Return","src":"712:17:5"}]},"id":625,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:5","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[],"src":"659:2:5"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":625,"src":"693:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:5"},"scope":635,"src":"640:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":633,"nodeType":"Block","src":"809:32:5","statements":[{"expression":{"expression":{"id":630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":629,"id":632,"nodeType":"Return","src":"819:15:5"}]},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:5","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"759:2:5"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":634,"src":"793:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:5"},"scope":635,"src":"742:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":636,"src":"608:235:5","usedErrors":[]}],"src":"86:758:5"},"id":5},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[947]},"id":948,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":637,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"285:196:6","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":947,"linearizedBaseContracts":[947],"name":"SafeMath","nameLocation":"490:8:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":669,"nodeType":"Block","src":"717:140:6","statements":[{"id":668,"nodeType":"UncheckedBlock","src":"727:124:6","statements":[{"assignments":[651],"declarations":[{"constant":false,"id":651,"mutability":"mutable","name":"c","nameLocation":"759:1:6","nodeType":"VariableDeclaration","scope":668,"src":"751:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":655,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"763:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"767:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":656,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"786:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"790:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":663,"nodeType":"IfStatement","src":"782:28:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":649,"id":662,"nodeType":"Return","src":"793:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":665,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"838:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":649,"id":667,"nodeType":"Return","src":"824:16:6"}]}]},"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"505:131:6","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":670,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:6","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"a","nameLocation":"665:1:6","nodeType":"VariableDeclaration","scope":670,"src":"657:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":643,"mutability":"mutable","name":"b","nameLocation":"676:1:6","nodeType":"VariableDeclaration","scope":670,"src":"668:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:6"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"702:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":645,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"708:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:6"},"scope":947,"src":"641:216:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"1078:113:6","statements":[{"id":696,"nodeType":"UncheckedBlock","src":"1088:97:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":682,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1116:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":683,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"1120:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":689,"nodeType":"IfStatement","src":"1112:28:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":681,"id":688,"nodeType":"Return","src":"1123:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":691,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"1168:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":692,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1172:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":681,"id":695,"nodeType":"Return","src":"1154:20:6"}]}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"863:134:6","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:6","nodeType":"FunctionDefinition","parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"a","nameLocation":"1026:1:6","nodeType":"VariableDeclaration","scope":698,"src":"1018:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"b","nameLocation":"1037:1:6","nodeType":"VariableDeclaration","scope":698,"src":"1029:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:6"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"1063:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":677,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"1069:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:6"},"scope":947,"src":"1002:189:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"1415:417:6","statements":[{"id":738,"nodeType":"UncheckedBlock","src":"1425:401:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":710,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"1683:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":717,"nodeType":"IfStatement","src":"1679:28:6","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":709,"id":716,"nodeType":"Return","src":"1691:16:6"}},{"assignments":[719],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"c","nameLocation":"1729:1:6","nodeType":"VariableDeclaration","scope":738,"src":"1721:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":723,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"1733:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":721,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"1737:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":724,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"1756:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"1760:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":727,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"1765:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":733,"nodeType":"IfStatement","src":"1752:33:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":709,"id":732,"nodeType":"Return","src":"1768:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":735,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"1813:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":709,"id":737,"nodeType":"Return","src":"1799:16:6"}]}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"1197:137:6","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:6","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"a","nameLocation":"1363:1:6","nodeType":"VariableDeclaration","scope":740,"src":"1355:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"b","nameLocation":"1374:1:6","nodeType":"VariableDeclaration","scope":740,"src":"1366:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:6"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"1400:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":705,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"1406:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:6"},"scope":947,"src":"1339:493:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":767,"nodeType":"Block","src":"2057:114:6","statements":[{"id":766,"nodeType":"UncheckedBlock","src":"2067:98:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":752,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"2095:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":759,"nodeType":"IfStatement","src":"2091:29:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":751,"id":758,"nodeType":"Return","src":"2103:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":761,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"2148:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":762,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"2152:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":751,"id":765,"nodeType":"Return","src":"2134:20:6"}]}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"1838:138:6","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:6","nodeType":"FunctionDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"a","nameLocation":"2005:1:6","nodeType":"VariableDeclaration","scope":768,"src":"1997:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"b","nameLocation":"2016:1:6","nodeType":"VariableDeclaration","scope":768,"src":"2008:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:6"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"2042:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":747,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"2048:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:6"},"scope":947,"src":"1981:190:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"2406:114:6","statements":[{"id":794,"nodeType":"UncheckedBlock","src":"2416:98:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":780,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"2444:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":787,"nodeType":"IfStatement","src":"2440:29:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":779,"id":786,"nodeType":"Return","src":"2452:17:6"}},{"expression":{"components":[{"hexValue":"74727565","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"2497:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"2501:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":779,"id":793,"nodeType":"Return","src":"2483:20:6"}]}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"2177:148:6","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":796,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:6","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"a","nameLocation":"2354:1:6","nodeType":"VariableDeclaration","scope":796,"src":"2346:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"b","nameLocation":"2365:1:6","nodeType":"VariableDeclaration","scope":796,"src":"2357:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:6"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":796,"src":"2391:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":775,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":796,"src":"2397:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:6"},"scope":947,"src":"2330:190:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":810,"nodeType":"Block","src":"2822:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"2839:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":807,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"2843:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":805,"id":809,"nodeType":"Return","src":"2832:12:6"}]},"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"2526:224:6","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":811,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:6","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"a","nameLocation":"2776:1:6","nodeType":"VariableDeclaration","scope":811,"src":"2768:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"b","nameLocation":"2787:1:6","nodeType":"VariableDeclaration","scope":811,"src":"2779:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:6"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":811,"src":"2813:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:6"},"scope":947,"src":"2755:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"3189:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3206:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"3210:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":820,"id":824,"nodeType":"Return","src":"3199:12:6"}]},"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"2857:260:6","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:6","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"a","nameLocation":"3143:1:6","nodeType":"VariableDeclaration","scope":826,"src":"3135:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"b","nameLocation":"3154:1:6","nodeType":"VariableDeclaration","scope":826,"src":"3146:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:6"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"3180:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:6"},"scope":947,"src":"3122:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"3532:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":836,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"3549:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":837,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"3553:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":835,"id":839,"nodeType":"Return","src":"3542:12:6"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"3224:236:6","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:6","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"a","nameLocation":"3486:1:6","nodeType":"VariableDeclaration","scope":841,"src":"3478:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"b","nameLocation":"3497:1:6","nodeType":"VariableDeclaration","scope":841,"src":"3489:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:6"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"3523:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:6"},"scope":947,"src":"3465:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":855,"nodeType":"Block","src":"3917:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":851,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"3934:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":852,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"3938:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":850,"id":854,"nodeType":"Return","src":"3927:12:6"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"3567:278:6","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":856,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:6","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"a","nameLocation":"3871:1:6","nodeType":"VariableDeclaration","scope":856,"src":"3863:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"b","nameLocation":"3882:1:6","nodeType":"VariableDeclaration","scope":856,"src":"3874:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:6"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"3908:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:6"},"scope":947,"src":"3850:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":870,"nodeType":"Block","src":"4466:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":866,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"4483:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":867,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"4487:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":865,"id":869,"nodeType":"Return","src":"4476:12:6"}]},"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"3952:442:6","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:6","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"a","nameLocation":"4420:1:6","nodeType":"VariableDeclaration","scope":871,"src":"4412:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"b","nameLocation":"4431:1:6","nodeType":"VariableDeclaration","scope":871,"src":"4423:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:6"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":871,"src":"4457:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:6"},"scope":947,"src":"4399:96:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"5084:106:6","statements":[{"id":894,"nodeType":"UncheckedBlock","src":"5094:90:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"5126:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":885,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"5131:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":887,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"5134:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":889,"nodeType":"ExpressionStatement","src":"5118:29:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"5168:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":891,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"5172:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":882,"id":893,"nodeType":"Return","src":"5161:12:6"}]}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"4501:453:6","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:6","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"a","nameLocation":"4989:1:6","nodeType":"VariableDeclaration","scope":896,"src":"4981:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"b","nameLocation":"5008:1:6","nodeType":"VariableDeclaration","scope":896,"src":"5000:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:6","nodeType":"VariableDeclaration","scope":896,"src":"5019:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":877,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:6"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"5075:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:6"},"scope":947,"src":"4959:231:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":920,"nodeType":"Block","src":"5799:105:6","statements":[{"id":919,"nodeType":"UncheckedBlock","src":"5809:89:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":909,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"5841:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":912,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"5848:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":908,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"5833:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":915,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"5882:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":916,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"5886:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":907,"id":918,"nodeType":"Return","src":"5875:12:6"}]}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"5196:473:6","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":921,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:6","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"a","nameLocation":"5704:1:6","nodeType":"VariableDeclaration","scope":921,"src":"5696:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"b","nameLocation":"5723:1:6","nodeType":"VariableDeclaration","scope":921,"src":"5715:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:6","nodeType":"VariableDeclaration","scope":921,"src":"5734:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":902,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:6"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"5790:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:6"},"scope":947,"src":"5674:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"6675:105:6","statements":[{"id":944,"nodeType":"UncheckedBlock","src":"6685:89:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":934,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"6717:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":937,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"6724:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"6709:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"6758:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":941,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"6762:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":932,"id":943,"nodeType":"Return","src":"6751:12:6"}]}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"5910:635:6","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:6","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"a","nameLocation":"6580:1:6","nodeType":"VariableDeclaration","scope":946,"src":"6572:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"b","nameLocation":"6599:1:6","nodeType":"VariableDeclaration","scope":946,"src":"6591:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:6","nodeType":"VariableDeclaration","scope":946,"src":"6610:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":927,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:6"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":946,"src":"6666:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:6"},"scope":947,"src":"6550:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":948,"src":"482:6300:6","usedErrors":[]}],"src":"107:6676:6"},"id":6},"contracts/ERC20.sol":{"ast":{"absolutePath":"contracts/ERC20.sol","exportedSymbols":{"Context":[635],"ERC20":[1534],"IERC20":[588],"IERC20Metadata":[613]},"id":1535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":949,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1535,"sourceUnit":589,"src":"135:56:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1535,"sourceUnit":614,"src":"193:75:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1535,"sourceUnit":636,"src":"270:51:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":954,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":635,"src":"1539:7:7"},"id":955,"nodeType":"InheritanceSpecifier","src":"1539:7:7"},{"baseName":{"id":956,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":588,"src":"1548:6:7"},"id":957,"nodeType":"InheritanceSpecifier","src":"1548:6:7"},{"baseName":{"id":958,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"1556:14:7"},"id":959,"nodeType":"InheritanceSpecifier","src":"1556:14:7"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"325:1194:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1534,"linearizedBaseContracts":[1534,613,588,635],"name":"ERC20","nameLocation":"1530:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":963,"mutability":"mutable","name":"_balances","nameLocation":"1614:9:7","nodeType":"VariableDeclaration","scope":1534,"src":"1578:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":962,"keyType":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1578:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":969,"mutability":"mutable","name":"_allowances","nameLocation":"1688:11:7","nodeType":"VariableDeclaration","scope":1534,"src":"1632:67:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":968,"keyType":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"1640:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1632:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":967,"keyType":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"1659:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1651:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":971,"mutability":"mutable","name":"_totalSupply","nameLocation":"1724:12:7","nodeType":"VariableDeclaration","scope":1534,"src":"1708:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":973,"mutability":"mutable","name":"_name","nameLocation":"1760:5:7","nodeType":"VariableDeclaration","scope":1534,"src":"1745:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":972,"name":"string","nodeType":"ElementaryTypeName","src":"1745:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":975,"mutability":"mutable","name":"_symbol","nameLocation":"1787:7:7","nodeType":"VariableDeclaration","scope":1534,"src":"1772:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":974,"name":"string","nodeType":"ElementaryTypeName","src":"1772:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":991,"nodeType":"Block","src":"2171:60:7","statements":[{"expression":{"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":983,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2182:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":984,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"2190:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2182:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":986,"nodeType":"ExpressionStatement","src":"2182:13:7"},{"expression":{"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":987,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"2206:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":988,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"2216:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2206:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":990,"nodeType":"ExpressionStatement","src":"2206:17:7"}]},"documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"1803:306:7","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":992,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"name_","nameLocation":"2141:5:7","nodeType":"VariableDeclaration","scope":992,"src":"2127:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":977,"name":"string","nodeType":"ElementaryTypeName","src":"2127:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"symbol_","nameLocation":"2162:7:7","nodeType":"VariableDeclaration","scope":992,"src":"2148:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":979,"name":"string","nodeType":"ElementaryTypeName","src":"2148:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2126:44:7"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"2171:0:7"},"scope":1534,"src":"2115:116:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[600],"body":{"id":1001,"nodeType":"Block","src":"2370:31:7","statements":[{"expression":{"id":999,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2388:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":998,"id":1000,"nodeType":"Return","src":"2381:12:7"}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"2239:56:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2310:4:7","nodeType":"FunctionDefinition","overrides":{"id":995,"nodeType":"OverrideSpecifier","overrides":[],"src":"2337:8:7"},"parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"2314:2:7"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"2355:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":996,"name":"string","nodeType":"ElementaryTypeName","src":"2355:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2354:15:7"},"scope":1534,"src":"2301:100:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[606],"body":{"id":1011,"nodeType":"Block","src":"2591:33:7","statements":[{"expression":{"id":1009,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"2609:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1008,"id":1010,"nodeType":"Return","src":"2602:14:7"}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"2409:105:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1012,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2529:6:7","nodeType":"FunctionDefinition","overrides":{"id":1005,"nodeType":"OverrideSpecifier","overrides":[],"src":"2558:8:7"},"parameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"2535:2:7"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1012,"src":"2576:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1006,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2575:15:7"},"scope":1534,"src":"2520:104:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[612],"body":{"id":1021,"nodeType":"Block","src":"3328:28:7","statements":[{"expression":{"hexValue":"3138","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3346:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1018,"id":1020,"nodeType":"Return","src":"3339:9:7"}]},"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"2632:625:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3272:8:7","nodeType":"FunctionDefinition","overrides":{"id":1015,"nodeType":"OverrideSpecifier","overrides":[],"src":"3303:8:7"},"parameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"3280:2:7"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1022,"src":"3321:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1016,"name":"uint8","nodeType":"ElementaryTypeName","src":"3321:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3320:7:7"},"scope":1534,"src":"3263:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[537],"body":{"id":1031,"nodeType":"Block","src":"3491:38:7","statements":[{"expression":{"id":1029,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"3509:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1028,"id":1030,"nodeType":"Return","src":"3502:19:7"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"3364:51:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3430:11:7","nodeType":"FunctionDefinition","overrides":{"id":1025,"nodeType":"OverrideSpecifier","overrides":[],"src":"3464:8:7"},"parameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"3441:2:7"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1032,"src":"3482:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:9:7"},"scope":1534,"src":"3421:108:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[545],"body":{"id":1045,"nodeType":"Block","src":"3691:44:7","statements":[{"expression":{"baseExpression":{"id":1041,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"3709:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1043,"indexExpression":{"id":1042,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"3719:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3709:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1040,"id":1044,"nodeType":"Return","src":"3702:25:7"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"3537:49:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3601:9:7","nodeType":"FunctionDefinition","overrides":{"id":1037,"nodeType":"OverrideSpecifier","overrides":[],"src":"3664:8:7"},"parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"account","nameLocation":"3629:7:7","nodeType":"VariableDeclaration","scope":1046,"src":"3621:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3610:33:7"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1046,"src":"3682:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"3682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3681:9:7"},"scope":1534,"src":"3592:143:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[555],"body":{"id":1070,"nodeType":"Block","src":"4051:108:7","statements":[{"assignments":[1058],"declarations":[{"constant":false,"id":1058,"mutability":"mutable","name":"owner","nameLocation":"4070:5:7","nodeType":"VariableDeclaration","scope":1070,"src":"4062:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"4062:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1061,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1059,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"4078:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4078:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4062:28:7"},{"expression":{"arguments":[{"id":1063,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"4111:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1064,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"4118:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1065,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"4122:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1062,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"4101:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4101:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"4101:28:7"},{"expression":{"hexValue":"74727565","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4147:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1056,"id":1069,"nodeType":"Return","src":"4140:11:7"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"3743:192:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3950:8:7","nodeType":"FunctionDefinition","overrides":{"id":1053,"nodeType":"OverrideSpecifier","overrides":[],"src":"4027:8:7"},"parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"to","nameLocation":"3977:2:7","nodeType":"VariableDeclaration","scope":1071,"src":"3969:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"amount","nameLocation":"3998:6:7","nodeType":"VariableDeclaration","scope":1071,"src":"3990:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"3990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3958:53:7"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1071,"src":"4045:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1054,"name":"bool","nodeType":"ElementaryTypeName","src":"4045:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4044:6:7"},"scope":1534,"src":"3941:218:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[565],"body":{"id":1088,"nodeType":"Block","src":"4345:53:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1082,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"4363:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1084,"indexExpression":{"id":1083,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"4375:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4363:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1086,"indexExpression":{"id":1085,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"4382:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4363:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1081,"id":1087,"nodeType":"Return","src":"4356:34:7"}]},"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"4167:49:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4231:9:7","nodeType":"FunctionDefinition","overrides":{"id":1078,"nodeType":"OverrideSpecifier","overrides":[],"src":"4318:8:7"},"parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"owner","nameLocation":"4259:5:7","nodeType":"VariableDeclaration","scope":1089,"src":"4251:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"4251:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"spender","nameLocation":"4283:7:7","nodeType":"VariableDeclaration","scope":1089,"src":"4275:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"4275:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4240:57:7"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1089,"src":"4336:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"4336:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4335:9:7"},"scope":1534,"src":"4222:176:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[575],"body":{"id":1113,"nodeType":"Block","src":"4832:112:7","statements":[{"assignments":[1101],"declarations":[{"constant":false,"id":1101,"mutability":"mutable","name":"owner","nameLocation":"4851:5:7","nodeType":"VariableDeclaration","scope":1113,"src":"4843:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"4843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1104,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1102,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"4859:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4859:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4843:28:7"},{"expression":{"arguments":[{"id":1106,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"4891:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1107,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4898:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"4907:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1105,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"4882:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4882:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"4882:32:7"},{"expression":{"hexValue":"74727565","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4932:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1099,"id":1112,"nodeType":"Return","src":"4925:11:7"}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"4406:306:7","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1114,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4727:7:7","nodeType":"FunctionDefinition","overrides":{"id":1096,"nodeType":"OverrideSpecifier","overrides":[],"src":"4808:8:7"},"parameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"spender","nameLocation":"4753:7:7","nodeType":"VariableDeclaration","scope":1114,"src":"4745:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"4745:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"amount","nameLocation":"4779:6:7","nodeType":"VariableDeclaration","scope":1114,"src":"4771:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"4771:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:58:7"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1114,"src":"4826:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1097,"name":"bool","nodeType":"ElementaryTypeName","src":"4826:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4825:6:7"},"scope":1534,"src":"4718:226:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[587],"body":{"id":1146,"nodeType":"Block","src":"5661:158:7","statements":[{"assignments":[1128],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"spender","nameLocation":"5680:7:7","nodeType":"VariableDeclaration","scope":1146,"src":"5672:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"5672:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1131,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1129,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5690:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5690:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5672:30:7"},{"expression":{"arguments":[{"id":1133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"5729:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5735:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1135,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5744:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1132,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"5713:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5713:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1137,"nodeType":"ExpressionStatement","src":"5713:38:7"},{"expression":{"arguments":[{"id":1139,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"5772:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1140,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"5778:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1141,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5782:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1138,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"5762:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5762:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1143,"nodeType":"ExpressionStatement","src":"5762:27:7"},{"expression":{"hexValue":"74727565","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5807:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1126,"id":1145,"nodeType":"Return","src":"5800:11:7"}]},"documentation":{"id":1115,"nodeType":"StructuredDocumentation","src":"4952:566:7","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5533:12:7","nodeType":"FunctionDefinition","overrides":{"id":1123,"nodeType":"OverrideSpecifier","overrides":[],"src":"5637:8:7"},"parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"from","nameLocation":"5564:4:7","nodeType":"VariableDeclaration","scope":1147,"src":"5556:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"5556:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"to","nameLocation":"5587:2:7","nodeType":"VariableDeclaration","scope":1147,"src":"5579:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"5579:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"amount","nameLocation":"5608:6:7","nodeType":"VariableDeclaration","scope":1147,"src":"5600:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"5600:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5545:76:7"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"5655:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1124,"name":"bool","nodeType":"ElementaryTypeName","src":"5655:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5654:6:7"},"scope":1534,"src":"5524:295:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1175,"nodeType":"Block","src":"6347:144:7","statements":[{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"owner","nameLocation":"6366:5:7","nodeType":"VariableDeclaration","scope":1175,"src":"6358:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1161,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1159,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"6374:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6374:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6358:28:7"},{"expression":{"arguments":[{"id":1163,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"6406:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"6413:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1166,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"6432:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"6439:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1165,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"6422:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1169,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"6450:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6422:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1162,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"6397:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6397:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1172,"nodeType":"ExpressionStatement","src":"6397:64:7"},{"expression":{"hexValue":"74727565","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6479:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1156,"id":1174,"nodeType":"Return","src":"6472:11:7"}]},"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"5827:395:7","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1176,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6237:17:7","nodeType":"FunctionDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"spender","nameLocation":"6273:7:7","nodeType":"VariableDeclaration","scope":1176,"src":"6265:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"6265:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"addedValue","nameLocation":"6299:10:7","nodeType":"VariableDeclaration","scope":1176,"src":"6291:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"6291:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6254:62:7"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1176,"src":"6341:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1154,"name":"bool","nodeType":"ElementaryTypeName","src":"6341:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6340:6:7"},"scope":1534,"src":"6228:263:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1216,"nodeType":"Block","src":"7118:374:7","statements":[{"assignments":[1187],"declarations":[{"constant":false,"id":1187,"mutability":"mutable","name":"owner","nameLocation":"7137:5:7","nodeType":"VariableDeclaration","scope":1216,"src":"7129:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"7129:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1190,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1188,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"7145:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7145:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7129:28:7"},{"assignments":[1192],"declarations":[{"constant":false,"id":1192,"mutability":"mutable","name":"currentAllowance","nameLocation":"7176:16:7","nodeType":"VariableDeclaration","scope":1216,"src":"7168:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"7168:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1197,"initialValue":{"arguments":[{"id":1194,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"7205:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1195,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"7212:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1193,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"7195:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7195:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7168:52:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"7253:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1200,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7273:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7253:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7303:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7231:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7231:122:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"ExpressionStatement","src":"7231:122:7"},{"id":1213,"nodeType":"UncheckedBlock","src":"7364:97:7","statements":[{"expression":{"arguments":[{"id":1206,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"7398:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1207,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"7405:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"7414:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1209,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7433:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7414:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1205,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"7389:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7389:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"ExpressionStatement","src":"7389:60:7"}]},{"expression":{"hexValue":"74727565","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7480:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1185,"id":1215,"nodeType":"Return","src":"7473:11:7"}]},"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"6499:489:7","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"7003:17:7","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"spender","nameLocation":"7039:7:7","nodeType":"VariableDeclaration","scope":1217,"src":"7031:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"7031:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"subtractedValue","nameLocation":"7065:15:7","nodeType":"VariableDeclaration","scope":1217,"src":"7057:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"7057:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7020:67:7"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1217,"src":"7112:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1183,"name":"bool","nodeType":"ElementaryTypeName","src":"7112:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7111:6:7"},"scope":1534,"src":"6994:498:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1293,"nodeType":"Block","src":"8074:765:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1228,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8093:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8109:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8101:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"8101:7:7","typeDescriptions":{}}},"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8101:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8093:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8113:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1227,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8085:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8085:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"ExpressionStatement","src":"8085:68:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8172:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8186:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8178:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"8178:7:7","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8178:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8172:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8190:37:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8164:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8164:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"ExpressionStatement","src":"8164:64:7"},{"expression":{"arguments":[{"id":1248,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8262:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1249,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8268:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1250,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8272:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1247,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"8241:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8241:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1252,"nodeType":"ExpressionStatement","src":"8241:38:7"},{"assignments":[1254],"declarations":[{"constant":false,"id":1254,"mutability":"mutable","name":"fromBalance","nameLocation":"8300:11:7","nodeType":"VariableDeclaration","scope":1293,"src":"8292:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"8292:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1258,"initialValue":{"baseExpression":{"id":1255,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"8314:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1257,"indexExpression":{"id":1256,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8324:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8314:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8292:37:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"8362:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1261,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8377:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8362:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8398:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8340:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8340:109:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1265,"nodeType":"ExpressionStatement","src":"8340:109:7"},{"id":1280,"nodeType":"UncheckedBlock","src":"8460:278:7","statements":[{"expression":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1266,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"8485:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1268,"indexExpression":{"id":1267,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8495:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8485:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1269,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"8503:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1270,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8517:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8503:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8485:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1273,"nodeType":"ExpressionStatement","src":"8485:38:7"},{"expression":{"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1274,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"8703:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1276,"indexExpression":{"id":1275,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8713:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8703:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1277,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8720:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8703:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1279,"nodeType":"ExpressionStatement","src":"8703:23:7"}]},{"eventCall":{"arguments":[{"id":1282,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8764:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1283,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8770:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1284,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8774:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1281,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8755:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8755:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"EmitStatement","src":"8750:31:7"},{"expression":{"arguments":[{"id":1288,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8814:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1289,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8820:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1290,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8824:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1287,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"8794:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8794:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1292,"nodeType":"ExpressionStatement","src":"8794:37:7"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"7500:456:7","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1294,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7971:9:7","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"from","nameLocation":"7999:4:7","nodeType":"VariableDeclaration","scope":1294,"src":"7991:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"7991:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"to","nameLocation":"8022:2:7","nodeType":"VariableDeclaration","scope":1294,"src":"8014:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1224,"mutability":"mutable","name":"amount","nameLocation":"8043:6:7","nodeType":"VariableDeclaration","scope":1294,"src":"8035:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"8035:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7980:76:7"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[],"src":"8074:0:7"},"scope":1534,"src":"7962:877:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1350,"nodeType":"Block","src":"9191:483:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"9210:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9229:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9221:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"9221:7:7","typeDescriptions":{}}},"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9221:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9210:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9233:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9202:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9202:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"9202:65:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9309:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9301:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"9301:7:7","typeDescriptions":{}}},"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9301:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1317,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"9313:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1318,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9322:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1312,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"9280:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9280:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1320,"nodeType":"ExpressionStatement","src":"9280:49:7"},{"expression":{"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1321,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"9342:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1322,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9358:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9342:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1324,"nodeType":"ExpressionStatement","src":"9342:22:7"},{"id":1331,"nodeType":"UncheckedBlock","src":"9375:178:7","statements":[{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1325,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"9513:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1327,"indexExpression":{"id":1326,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"9523:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9513:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1328,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9535:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9513:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1330,"nodeType":"ExpressionStatement","src":"9513:28:7"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9585:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9577:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"9577:7:7","typeDescriptions":{}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9577:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1337,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"9589:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1338,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9598:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1332,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9568:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9568:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1340,"nodeType":"EmitStatement","src":"9563:42:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9646:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9638:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:7","typeDescriptions":{}}},"id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9638:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1346,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"9650:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1347,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9659:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1341,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"9618:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9618:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1349,"nodeType":"ExpressionStatement","src":"9618:48:7"}]},"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"8847:273:7","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1351,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9135:5:7","nodeType":"FunctionDefinition","parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"account","nameLocation":"9149:7:7","nodeType":"VariableDeclaration","scope":1351,"src":"9141:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"9141:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"amount","nameLocation":"9166:6:7","nodeType":"VariableDeclaration","scope":1351,"src":"9158:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"9158:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9140:33:7"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[],"src":"9191:0:7"},"scope":1534,"src":"9126:548:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1422,"nodeType":"Block","src":"10072:610:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1360,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"10091:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10102:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"10102:7:7","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10102:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10091:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10114:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10083:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10083:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1368,"nodeType":"ExpressionStatement","src":"10083:67:7"},{"expression":{"arguments":[{"id":1370,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"10184:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10201:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10193:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"10193:7:7","typeDescriptions":{}}},"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10193:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"10205:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1369,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"10163:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10163:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"ExpressionStatement","src":"10163:49:7"},{"assignments":[1379],"declarations":[{"constant":false,"id":1379,"mutability":"mutable","name":"accountBalance","nameLocation":"10233:14:7","nodeType":"VariableDeclaration","scope":1422,"src":"10225:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"10225:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1383,"initialValue":{"baseExpression":{"id":1380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"10250:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1382,"indexExpression":{"id":1381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"10260:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10250:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10225:43:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1385,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10287:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1386,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"10305:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10287:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10313:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10279:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10279:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"ExpressionStatement","src":"10279:71:7"},{"id":1403,"nodeType":"UncheckedBlock","src":"10361:198:7","statements":[{"expression":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1391,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"10386:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1393,"indexExpression":{"id":1392,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"10396:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10386:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1394,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10407:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1395,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"10424:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10407:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10386:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1398,"nodeType":"ExpressionStatement","src":"10386:44:7"},{"expression":{"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1399,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"10525:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1400,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"10541:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10525:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1402,"nodeType":"ExpressionStatement","src":"10525:22:7"}]},{"eventCall":{"arguments":[{"id":1405,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"10585:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10602:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10594:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"10594:7:7","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10594:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1410,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"10606:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1404,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"10576:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10576:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1412,"nodeType":"EmitStatement","src":"10571:42:7"},{"expression":{"arguments":[{"id":1414,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"10646:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10663:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10655:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"10655:7:7","typeDescriptions":{}}},"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10655:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1419,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"10667:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1413,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"10626:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10626:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1421,"nodeType":"ExpressionStatement","src":"10626:48:7"}]},"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"9682:319:7","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1423,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10016:5:7","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"account","nameLocation":"10030:7:7","nodeType":"VariableDeclaration","scope":1423,"src":"10022:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"10022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"amount","nameLocation":"10047:6:7","nodeType":"VariableDeclaration","scope":1423,"src":"10039:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10021:33:7"},"returnParameters":{"id":1358,"nodeType":"ParameterList","parameters":[],"src":"10072:0:7"},"scope":1534,"src":"10007:675:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1467,"nodeType":"Block","src":"11237:263:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"11256:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11273:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11265:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"11265:7:7","typeDescriptions":{}}},"id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11265:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11256:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11248:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11248:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"ExpressionStatement","src":"11248:68:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"11335:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11354:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11346:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"11346:7:7","typeDescriptions":{}}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11335:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11358:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11327:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11327:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"ExpressionStatement","src":"11327:68:7"},{"expression":{"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1453,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11408:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1456,"indexExpression":{"id":1454,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"11420:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11408:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1457,"indexExpression":{"id":1455,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"11427:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11408:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1458,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"11438:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11408:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1460,"nodeType":"ExpressionStatement","src":"11408:36:7"},{"eventCall":{"arguments":[{"id":1462,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"11469:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1463,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"11476:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1464,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"11485:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1461,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11460:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11460:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1466,"nodeType":"EmitStatement","src":"11455:37:7"}]},"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"10690:424:7","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1468,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11129:8:7","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"owner","nameLocation":"11156:5:7","nodeType":"VariableDeclaration","scope":1468,"src":"11148:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"11148:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"spender","nameLocation":"11180:7:7","nodeType":"VariableDeclaration","scope":1468,"src":"11172:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"11172:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"amount","nameLocation":"11206:6:7","nodeType":"VariableDeclaration","scope":1468,"src":"11198:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"11198:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11137:82:7"},"returnParameters":{"id":1432,"nodeType":"ParameterList","parameters":[],"src":"11237:0:7"},"scope":1534,"src":"11120:380:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1510,"nodeType":"Block","src":"11915:378:7","statements":[{"assignments":[1479],"declarations":[{"constant":false,"id":1479,"mutability":"mutable","name":"currentAllowance","nameLocation":"11934:16:7","nodeType":"VariableDeclaration","scope":1510,"src":"11926:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"11926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1484,"initialValue":{"arguments":[{"id":1481,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"11963:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1482,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11970:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1480,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"11953:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11953:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11926:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1485,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"11993:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12018:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1486,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12013:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12013:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12013:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11993:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"11989:297:7","trueBody":{"id":1508,"nodeType":"Block","src":"12032:254:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"12073:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1494,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"12093:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12073:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12118:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12047:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12047:117:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1498,"nodeType":"ExpressionStatement","src":"12047:117:7"},{"id":1507,"nodeType":"UncheckedBlock","src":"12179:96:7","statements":[{"expression":{"arguments":[{"id":1500,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"12217:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1501,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"12224:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1502,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"12233:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"12252:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12233:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1499,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"12208:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12208:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"ExpressionStatement","src":"12208:51:7"}]}]}}]},"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"11508:277:7","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11800:15:7","nodeType":"FunctionDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"owner","nameLocation":"11834:5:7","nodeType":"VariableDeclaration","scope":1511,"src":"11826:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"11826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1473,"mutability":"mutable","name":"spender","nameLocation":"11858:7:7","nodeType":"VariableDeclaration","scope":1511,"src":"11850:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"11850:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"amount","nameLocation":"11884:6:7","nodeType":"VariableDeclaration","scope":1511,"src":"11876:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"11876:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11815:82:7"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[],"src":"11915:0:7"},"scope":1534,"src":"11791:502:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1521,"nodeType":"Block","src":"13016:2:7","statements":[]},"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"12301:586:7","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12902:20:7","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"from","nameLocation":"12941:4:7","nodeType":"VariableDeclaration","scope":1522,"src":"12933:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"12933:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"to","nameLocation":"12964:2:7","nodeType":"VariableDeclaration","scope":1522,"src":"12956:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"12956:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1518,"mutability":"mutable","name":"amount","nameLocation":"12985:6:7","nodeType":"VariableDeclaration","scope":1522,"src":"12977:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"12977:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12922:76:7"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[],"src":"13016:0:7"},"scope":1534,"src":"12893:125:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1532,"nodeType":"Block","src":"13744:2:7","statements":[]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"13026:590:7","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1533,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13631:19:7","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"from","nameLocation":"13669:4:7","nodeType":"VariableDeclaration","scope":1533,"src":"13661:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"13661:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"to","nameLocation":"13692:2:7","nodeType":"VariableDeclaration","scope":1533,"src":"13684:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"13684:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"amount","nameLocation":"13713:6:7","nodeType":"VariableDeclaration","scope":1533,"src":"13705:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"13705:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13650:76:7"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[],"src":"13744:0:7"},"scope":1534,"src":"13622:124:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1535,"src":"1521:12228:7","usedErrors":[]}],"src":"108:13643:7"},"id":7},"contracts/Exchange.sol":{"ast":{"absolutePath":"contracts/Exchange.sol","exportedSymbols":{"AggregatorV3Interface":[397],"Context":[635],"ERC20":[1534],"Exchange":[2785],"IERC20":[588],"IERC20Metadata":[613],"Ownable":[510],"PriceChecker":[2954],"SafeMath":[947],"TradingFees":[3184],"Wallet":[3859],"fillLogic":[4606]},"id":2786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1536,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:8"},{"absolutePath":"contracts/PriceChecker.sol","file":"./PriceChecker.sol","id":1537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2786,"sourceUnit":2955,"src":"62:28:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/TradingFees.sol","file":"./TradingFees.sol","id":1538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2786,"sourceUnit":3185,"src":"92:27:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Wallet.sol","file":"./Wallet.sol","id":1539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2786,"sourceUnit":3860,"src":"121:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":1540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2786,"sourceUnit":948,"src":"218:57:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":1541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2786,"sourceUnit":398,"src":"277:76:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2786,"sourceUnit":511,"src":"355:52:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1543,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"432:7:8"},"id":1544,"nodeType":"InheritanceSpecifier","src":"432:7:8"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2785,"linearizedBaseContracts":[2785,510,635],"name":"Exchange","nameLocation":"420:8:8","nodeType":"ContractDefinition","nodes":[{"id":1547,"libraryName":{"id":1545,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":947,"src":"453:8:8"},"nodeType":"UsingForDirective","src":"447:27:8","typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"466:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1550,"mutability":"mutable","name":"priceChecker","nameLocation":"530:12:8","nodeType":"VariableDeclaration","scope":2785,"src":"517:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"},"typeName":{"id":1549,"nodeType":"UserDefinedTypeName","pathNode":{"id":1548,"name":"PriceChecker","nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"517:12:8"},"referencedDeclaration":2954,"src":"517:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"visibility":"internal"},{"constant":false,"id":1553,"mutability":"mutable","name":"tradingFees","nameLocation":"561:11:8","nodeType":"VariableDeclaration","scope":2785,"src":"549:23:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"},"typeName":{"id":1552,"nodeType":"UserDefinedTypeName","pathNode":{"id":1551,"name":"TradingFees","nodeType":"IdentifierPath","referencedDeclaration":3184,"src":"549:11:8"},"referencedDeclaration":3184,"src":"549:11:8","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"wallet","nameLocation":"586:6:8","nodeType":"VariableDeclaration","scope":2785,"src":"579:13:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"},"typeName":{"id":1555,"nodeType":"UserDefinedTypeName","pathNode":{"id":1554,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"579:6:8"},"referencedDeclaration":3859,"src":"579:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"decimals","nameLocation":"609:8:8","nodeType":"VariableDeclaration","scope":2785,"src":"601:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"620:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"626:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"620:8:8","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":false,"functionSelector":"7bf1a627","id":1567,"mutability":"mutable","name":"ethToken","nameLocation":"650:8:8","nodeType":"VariableDeclaration","scope":2785,"src":"635:36:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1562,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"669:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"661:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1563,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:8","typeDescriptions":{}}},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"661:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9ead7222","id":1571,"mutability":"mutable","name":"tokenList","nameLocation":"743:9:8","nodeType":"VariableDeclaration","scope":2785,"src":"723:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1600_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo[]"},"typeName":{"baseType":{"id":1569,"nodeType":"UserDefinedTypeName","pathNode":{"id":1568,"name":"_tokenInfo","nodeType":"IdentifierPath","referencedDeclaration":1600,"src":"723:10:8"},"referencedDeclaration":1600,"src":"723:10:8","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$1600_storage_ptr","typeString":"struct Exchange._tokenInfo"}},"id":1570,"nodeType":"ArrayTypeName","src":"723:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1600_storage_$dyn_storage_ptr","typeString":"struct Exchange._tokenInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"e4c3c7cd","id":1581,"mutability":"mutable","name":"s_orderBook","nameLocation":"931:11:8","nodeType":"VariableDeclaration","scope":2785,"src":"846:96:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order[])))"},"typeName":{"id":1580,"keyType":{"id":1572,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"846:68:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order[])))"},"valueType":{"id":1579,"keyType":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"865:48:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order[]))"},"valueType":{"id":1578,"keyType":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"884:28:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order[])"},"valueType":{"baseType":{"id":1576,"nodeType":"UserDefinedTypeName","pathNode":{"id":1575,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"903:6:8"},"referencedDeclaration":1629,"src":"903:6:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"id":1577,"nodeType":"ArrayTypeName","src":"903:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}}}}},"visibility":"public"},{"constant":false,"functionSelector":"bd8098ec","id":1589,"mutability":"mutable","name":"s_filledOrders","nameLocation":"1022:14:8","nodeType":"VariableDeclaration","scope":2785,"src":"951:85:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))"},"typeName":{"id":1588,"keyType":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"951:54:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))"},"valueType":{"id":1587,"keyType":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"970:34:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder[])"},"valueType":{"baseType":{"id":1585,"nodeType":"UserDefinedTypeName","pathNode":{"id":1584,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":1658,"src":"989:12:8"},"referencedDeclaration":1658,"src":"989:12:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_storage_ptr","typeString":"struct Exchange._filledOrder"}},"id":1586,"nodeType":"ArrayTypeName","src":"989:14:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_ptr","typeString":"struct Exchange._filledOrder[]"}}}},"visibility":"public"},{"constant":false,"functionSelector":"9c07ce26","id":1592,"mutability":"mutable","name":"s_orderId","nameLocation":"1060:9:8","nodeType":"VariableDeclaration","scope":2785,"src":"1045:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1045:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1072:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"id":1595,"mutability":"mutable","name":"s_isManual","nameLocation":"1093:10:8","nodeType":"VariableDeclaration","scope":2785,"src":"1080:30:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1593,"name":"bool","nodeType":"ElementaryTypeName","src":"1080:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1106:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"private"},{"canonicalName":"Exchange._tokenInfo","id":1600,"members":[{"constant":false,"id":1597,"mutability":"mutable","name":"add","nameLocation":"1156:3:8","nodeType":"VariableDeclaration","scope":1600,"src":"1148:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"decimals","nameLocation":"1178:8:8","nodeType":"VariableDeclaration","scope":1600,"src":"1170:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1170:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_tokenInfo","nameLocation":"1126:10:8","nodeType":"StructDefinition","scope":2785,"src":"1119:75:8","visibility":"public"},{"canonicalName":"Exchange._fillOrderValues","id":1605,"members":[{"constant":false,"id":1602,"mutability":"mutable","name":"rate","nameLocation":"1245:4:8","nodeType":"VariableDeclaration","scope":1605,"src":"1237:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"amount","nameLocation":"1268:6:8","nodeType":"VariableDeclaration","scope":1605,"src":"1260:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_fillOrderValues","nameLocation":"1209:16:8","nodeType":"StructDefinition","scope":2785,"src":"1202:80:8","visibility":"public"},{"canonicalName":"Exchange._Order","id":1629,"members":[{"constant":false,"id":1607,"mutability":"mutable","name":"id","nameLocation":"1444:2:8","nodeType":"VariableDeclaration","scope":1629,"src":"1436:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"1436:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"side","nameLocation":"1462:4:8","nodeType":"VariableDeclaration","scope":1629,"src":"1457:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":1609,"nodeType":"UserDefinedTypeName","pathNode":{"id":1608,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"1457:4:8"},"referencedDeclaration":1661,"src":"1457:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1612,"mutability":"mutable","name":"user","nameLocation":"1485:4:8","nodeType":"VariableDeclaration","scope":1629,"src":"1477:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"1477:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1614,"mutability":"mutable","name":"tokenA","nameLocation":"1508:6:8","nodeType":"VariableDeclaration","scope":1629,"src":"1500:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"amountA","nameLocation":"1533:7:8","nodeType":"VariableDeclaration","scope":1629,"src":"1525:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"tokenB","nameLocation":"1559:6:8","nodeType":"VariableDeclaration","scope":1629,"src":"1551:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"1551:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"amountB","nameLocation":"1584:7:8","nodeType":"VariableDeclaration","scope":1629,"src":"1576:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1576:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"rate","nameLocation":"1610:4:8","nodeType":"VariableDeclaration","scope":1629,"src":"1602:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"1602:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"originalAmountA","nameLocation":"1677:15:8","nodeType":"VariableDeclaration","scope":1629,"src":"1669:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1669:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"originalAmountB","nameLocation":"1711:15:8","nodeType":"VariableDeclaration","scope":1629,"src":"1703:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"waiveFees","nameLocation":"1742:9:8","nodeType":"VariableDeclaration","scope":1629,"src":"1737:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1627,"name":"bool","nodeType":"ElementaryTypeName","src":"1737:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"_Order","nameLocation":"1418:6:8","nodeType":"StructDefinition","scope":2785,"src":"1411:348:8","visibility":"public"},{"constant":false,"functionSelector":"1cb67fb3","id":1632,"mutability":"mutable","name":"orderStruct","nameLocation":"1781:11:8","nodeType":"VariableDeclaration","scope":2785,"src":"1767:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order"},"typeName":{"id":1631,"nodeType":"UserDefinedTypeName","pathNode":{"id":1630,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"1767:6:8"},"referencedDeclaration":1629,"src":"1767:6:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"public"},{"canonicalName":"Exchange._filledOrder","id":1658,"members":[{"constant":false,"id":1634,"mutability":"mutable","name":"id","nameLocation":"1923:2:8","nodeType":"VariableDeclaration","scope":1658,"src":"1915:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1915:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"side","nameLocation":"1941:4:8","nodeType":"VariableDeclaration","scope":1658,"src":"1936:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":1636,"nodeType":"UserDefinedTypeName","pathNode":{"id":1635,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"1936:4:8"},"referencedDeclaration":1661,"src":"1936:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"user","nameLocation":"1964:4:8","nodeType":"VariableDeclaration","scope":1658,"src":"1956:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"tokenA","nameLocation":"1987:6:8","nodeType":"VariableDeclaration","scope":1658,"src":"1979:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"tokenB","nameLocation":"2012:6:8","nodeType":"VariableDeclaration","scope":1658,"src":"2004:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1642,"name":"address","nodeType":"ElementaryTypeName","src":"2004:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"amountFilled","nameLocation":"2037:12:8","nodeType":"VariableDeclaration","scope":1658,"src":"2029:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"2029:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"fillRate","nameLocation":"2068:8:8","nodeType":"VariableDeclaration","scope":1658,"src":"2060:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2060:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"originalRate","nameLocation":"2095:12:8","nodeType":"VariableDeclaration","scope":1658,"src":"2087:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"2087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"originalAmountA","nameLocation":"2126:15:8","nodeType":"VariableDeclaration","scope":1658,"src":"2118:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"2118:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"originalAmountB","nameLocation":"2160:15:8","nodeType":"VariableDeclaration","scope":1658,"src":"2152:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"feesWaived","nameLocation":"2191:10:8","nodeType":"VariableDeclaration","scope":1658,"src":"2186:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1654,"name":"bool","nodeType":"ElementaryTypeName","src":"2186:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"feesPaid","nameLocation":"2220:8:8","nodeType":"VariableDeclaration","scope":1658,"src":"2212:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_filledOrder","nameLocation":"1891:12:8","nodeType":"StructDefinition","scope":2785,"src":"1884:370:8","visibility":"public"},{"canonicalName":"Exchange.Side","id":1661,"members":[{"id":1659,"name":"BUY","nameLocation":"2283:3:8","nodeType":"EnumValue","src":"2283:3:8"},{"id":1660,"name":"SELL","nameLocation":"2297:4:8","nodeType":"EnumValue","src":"2297:4:8"}],"name":"Side","nameLocation":"2267:4:8","nodeType":"EnumDefinition","src":"2262:46:8"},{"anonymous":false,"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"2334:56:8","text":"@notice Event when an order is placed on an exchange"},"id":1687,"name":"Order","nameLocation":"2402:5:8","nodeType":"EventDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"2426:2:8","nodeType":"VariableDeclaration","scope":1687,"src":"2418:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"2418:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1667,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2444:4:8","nodeType":"VariableDeclaration","scope":1687,"src":"2439:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":1666,"nodeType":"UserDefinedTypeName","pathNode":{"id":1665,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"2439:4:8"},"referencedDeclaration":1661,"src":"2439:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1669,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2467:4:8","nodeType":"VariableDeclaration","scope":1687,"src":"2459:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"2459:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1671,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"2490:6:8","nodeType":"VariableDeclaration","scope":1687,"src":"2482:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2515:7:8","nodeType":"VariableDeclaration","scope":1687,"src":"2507:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1675,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"2541:6:8","nodeType":"VariableDeclaration","scope":1687,"src":"2533:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"2533:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1677,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2566:7:8","nodeType":"VariableDeclaration","scope":1687,"src":"2558:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1679,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2592:4:8","nodeType":"VariableDeclaration","scope":1687,"src":"2584:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1681,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"2615:15:8","nodeType":"VariableDeclaration","scope":1687,"src":"2607:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1683,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"2649:15:8","nodeType":"VariableDeclaration","scope":1687,"src":"2641:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1685,"indexed":false,"mutability":"mutable","name":"waiveFees","nameLocation":"2680:9:8","nodeType":"VariableDeclaration","scope":1687,"src":"2675:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1684,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2407:289:8"},"src":"2396:301:8"},{"anonymous":false,"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"2705:44:8","text":"@notice Event when an order is cancelled"},"id":1713,"name":"Cancel","nameLocation":"2761:6:8","nodeType":"EventDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"2786:2:8","nodeType":"VariableDeclaration","scope":1713,"src":"2778:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"2778:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1693,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2804:4:8","nodeType":"VariableDeclaration","scope":1713,"src":"2799:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":1692,"nodeType":"UserDefinedTypeName","pathNode":{"id":1691,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"2799:4:8"},"referencedDeclaration":1661,"src":"2799:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1695,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2827:4:8","nodeType":"VariableDeclaration","scope":1713,"src":"2819:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"2819:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1697,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"2850:6:8","nodeType":"VariableDeclaration","scope":1713,"src":"2842:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"2842:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1699,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2875:7:8","nodeType":"VariableDeclaration","scope":1713,"src":"2867:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1701,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"2901:6:8","nodeType":"VariableDeclaration","scope":1713,"src":"2893:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"2893:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2926:7:8","nodeType":"VariableDeclaration","scope":1713,"src":"2918:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"2918:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1705,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2952:4:8","nodeType":"VariableDeclaration","scope":1713,"src":"2944:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2944:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1707,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"2975:15:8","nodeType":"VariableDeclaration","scope":1713,"src":"2967:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2967:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1709,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"3009:15:8","nodeType":"VariableDeclaration","scope":1713,"src":"3001:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"3001:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1711,"indexed":false,"mutability":"mutable","name":"waiveFees","nameLocation":"3040:9:8","nodeType":"VariableDeclaration","scope":1713,"src":"3035:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1710,"name":"bool","nodeType":"ElementaryTypeName","src":"3035:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2767:289:8"},"src":"2755:302:8"},{"anonymous":false,"id":1740,"name":"filledOrder","nameLocation":"3071:11:8","nodeType":"EventDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"3101:2:8","nodeType":"VariableDeclaration","scope":1740,"src":"3093:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1718,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"3119:4:8","nodeType":"VariableDeclaration","scope":1740,"src":"3114:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":1717,"nodeType":"UserDefinedTypeName","pathNode":{"id":1716,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"3114:4:8"},"referencedDeclaration":1661,"src":"3114:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1720,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3142:4:8","nodeType":"VariableDeclaration","scope":1740,"src":"3134:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"3134:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"3165:6:8","nodeType":"VariableDeclaration","scope":1740,"src":"3157:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"3157:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1724,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"3190:6:8","nodeType":"VariableDeclaration","scope":1740,"src":"3182:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"3182:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1726,"indexed":false,"mutability":"mutable","name":"amountFilled","nameLocation":"3215:12:8","nodeType":"VariableDeclaration","scope":1740,"src":"3207:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"3207:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1728,"indexed":false,"mutability":"mutable","name":"fillRate","nameLocation":"3246:8:8","nodeType":"VariableDeclaration","scope":1740,"src":"3238:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"3238:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1730,"indexed":false,"mutability":"mutable","name":"originalRate","nameLocation":"3273:12:8","nodeType":"VariableDeclaration","scope":1740,"src":"3265:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"3265:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1732,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"3304:15:8","nodeType":"VariableDeclaration","scope":1740,"src":"3296:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3296:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1734,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"3338:15:8","nodeType":"VariableDeclaration","scope":1740,"src":"3330:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"3330:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1736,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"3369:10:8","nodeType":"VariableDeclaration","scope":1740,"src":"3364:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1735,"name":"bool","nodeType":"ElementaryTypeName","src":"3364:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1738,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"3398:8:8","nodeType":"VariableDeclaration","scope":1740,"src":"3390:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"3390:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3082:331:8"},"src":"3065:349:8"},{"body":{"id":1767,"nodeType":"Block","src":"3489:139:8","statements":[{"expression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1749,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"3500:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1751,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3516:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1750,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"3509:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3859_$","typeString":"type(contract Wallet)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3509:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"src":"3500:24:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":1754,"nodeType":"ExpressionStatement","src":"3500:24:8"},{"expression":{"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1755,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"3535:11:8","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1757,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3561:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1756,"name":"TradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"3549:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TradingFees_$3184_$","typeString":"type(contract TradingFees)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3549:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"src":"3535:32:8","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":1760,"nodeType":"ExpressionStatement","src":"3535:32:8"},{"expression":{"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1761,"name":"priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"3578:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1763,"name":"_priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"3606:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1762,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"3593:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2954_$","typeString":"type(contract PriceChecker)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3593:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"src":"3578:42:8","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"id":1766,"nodeType":"ExpressionStatement","src":"3578:42:8"}]},"id":1768,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"_wallet","nameLocation":"3442:7:8","nodeType":"VariableDeclaration","scope":1768,"src":"3434:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1741,"name":"address","nodeType":"ElementaryTypeName","src":"3434:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"_fees","nameLocation":"3459:5:8","nodeType":"VariableDeclaration","scope":1768,"src":"3451:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"_priceChecker","nameLocation":"3474:13:8","nodeType":"VariableDeclaration","scope":1768,"src":"3466:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3433:55:8"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[],"src":"3489:0:8"},"scope":2785,"src":"3422:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1871,"nodeType":"Block","src":"3903:1117:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":1799,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4099:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4099:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1801,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4111:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1797,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"4077:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getlockedFunds","nodeType":"MemberAccess","referencedDeclaration":3553,"src":"4077:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4077:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1792,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4034:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4043:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4043:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1790,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"4017:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3639,"src":"4017:16:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4017:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"4017:41:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4017:117:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1804,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"4138:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4017:129:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742046756e6473","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4161:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""},"value":"Insufficient Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""}],"id":1789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3995:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3995:197:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"ExpressionStatement","src":"3995:197:8"},{"expression":{"arguments":[{"expression":{"id":1812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4238:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4238:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1814,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4250:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1815,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"4259:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4269:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1809,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"4205:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"4205:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4205:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1818,"nodeType":"ExpressionStatement","src":"4205:69:8"},{"expression":{"arguments":[{"arguments":[{"id":1832,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"4380:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1833,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"4408:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"4408:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"expression":{"id":1835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4435:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4435:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1837,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"4464:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1838,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4490:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1839,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4517:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1840,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"4543:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1841,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"4570:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1842,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4594:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1843,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"4621:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1844,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"4648:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1831,"name":"_Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"4355:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__Order_$1629_storage_ptr_$","typeString":"type(struct Exchange._Order storage pointer)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4355:318:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}],"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1819,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4287:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1827,"indexExpression":{"id":1820,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"4299:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4287:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1828,"indexExpression":{"id":1821,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4308:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4287:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1829,"indexExpression":{"arguments":[{"expression":{"id":1824,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"4325:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"4325:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4317:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"4317:7:8","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4317:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4287:48:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4287:53:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr_$_t_struct$__Order_$1629_storage_$returns$__$bound_to$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer,struct Exchange._Order storage ref)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4287:397:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1847,"nodeType":"ExpressionStatement","src":"4287:397:8"},{"eventCall":{"arguments":[{"id":1849,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"4722:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1850,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"4746:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"4746:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"expression":{"id":1852,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4769:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4769:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1854,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"4794:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1855,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4816:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1856,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4839:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1857,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"4861:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1858,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"4884:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1859,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4904:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1860,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"4927:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1861,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"4950:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1848,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"4702:5:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$1661_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4702:269:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"EmitStatement","src":"4697:274:8"},{"expression":{"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1864,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"4984:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5010:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1865,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"4996:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":811,"src":"4996:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4996:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4984:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1870,"nodeType":"ExpressionStatement","src":"4984:28:8"}]},"functionSelector":"62c09cfa","id":1872,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1783,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"3874:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1784,"kind":"modifierInvocation","modifierName":{"id":1782,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"3863:10:8"},"nodeType":"ModifierInvocation","src":"3863:19:8"},{"arguments":[{"id":1786,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"3894:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1787,"kind":"modifierInvocation","modifierName":{"id":1785,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"3883:10:8"},"nodeType":"ModifierInvocation","src":"3883:19:8"}],"name":"createLimitBuyOrder","nameLocation":"3645:19:8","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"_tokenA","nameLocation":"3709:7:8","nodeType":"VariableDeclaration","scope":1872,"src":"3701:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"_amountA","nameLocation":"3735:8:8","nodeType":"VariableDeclaration","scope":1872,"src":"3727:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3727:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1774,"mutability":"mutable","name":"_tokenB","nameLocation":"3762:7:8","nodeType":"VariableDeclaration","scope":1872,"src":"3754:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"3754:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"_amountB","nameLocation":"3788:8:8","nodeType":"VariableDeclaration","scope":1872,"src":"3780:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3780:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"_rate","nameLocation":"3815:5:8","nodeType":"VariableDeclaration","scope":1872,"src":"3807:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"3807:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"_waiveFees","nameLocation":"3836:10:8","nodeType":"VariableDeclaration","scope":1872,"src":"3831:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1779,"name":"bool","nodeType":"ElementaryTypeName","src":"3831:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3664:189:8"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[],"src":"3903:0:8"},"scope":2785,"src":"3636:1384:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1975,"nodeType":"Block","src":"5270:1186:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":1903,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5483:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5483:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1905,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5495:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1901,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"5461:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getlockedFunds","nodeType":"MemberAccess","referencedDeclaration":3553,"src":"5461:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5461:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1896,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5418:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1897,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5427:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5427:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1894,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"5401:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3639,"src":"5401:16:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5401:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"5401:41:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5401:117:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1908,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"5522:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5401:129:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742046756e6473","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5545:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""},"value":"Insufficient Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""}],"id":1893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5379:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5379:197:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1912,"nodeType":"ExpressionStatement","src":"5379:197:8"},{"expression":{"arguments":[{"expression":{"id":1916,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5671:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5671:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1918,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5683:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1919,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"5692:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5702:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1913,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"5638:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"5638:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5638:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1922,"nodeType":"ExpressionStatement","src":"5638:69:8"},{"expression":{"arguments":[{"arguments":[{"id":1936,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"5814:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1937,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"5842:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"5842:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"expression":{"id":1939,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5870:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5870:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1941,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5899:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1942,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"5925:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1943,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"5952:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1944,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"5978:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1945,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"6005:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1946,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6029:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1947,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"6056:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1948,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"6083:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1935,"name":"_Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"5789:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__Order_$1629_storage_ptr_$","typeString":"type(struct Exchange._Order storage pointer)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5789:319:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}],"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1923,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"5720:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1931,"indexExpression":{"id":1924,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5732:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5720:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1932,"indexExpression":{"id":1925,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"5741:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5720:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1933,"indexExpression":{"arguments":[{"expression":{"id":1928,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"5758:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"5758:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5750:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:8","typeDescriptions":{}}},"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5750:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5720:49:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5720:54:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr_$_t_struct$__Order_$1629_storage_$returns$__$bound_to$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer,struct Exchange._Order storage ref)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5720:399:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1951,"nodeType":"ExpressionStatement","src":"5720:399:8"},{"eventCall":{"arguments":[{"id":1953,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"6157:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1954,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"6181:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"6181:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"expression":{"id":1956,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6205:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6205:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1958,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"6230:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1959,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6252:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1960,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6275:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1961,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"6297:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1962,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"6320:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1963,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6340:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1964,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"6363:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1965,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"6386:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1952,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"6137:5:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$1661_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6137:270:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1967,"nodeType":"EmitStatement","src":"6132:275:8"},{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1968,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"6420:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6446:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1969,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"6432:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":811,"src":"6432:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6432:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6420:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"6420:28:8"}]},"functionSelector":"6f4e410b","id":1976,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1887,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5241:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1888,"kind":"modifierInvocation","modifierName":{"id":1886,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"5230:10:8"},"nodeType":"ModifierInvocation","src":"5230:19:8"},{"arguments":[{"id":1890,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"5261:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1891,"kind":"modifierInvocation","modifierName":{"id":1889,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"5250:10:8"},"nodeType":"ModifierInvocation","src":"5250:19:8"}],"name":"createLimitSellOrder","nameLocation":"5037:20:8","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"_tokenA","nameLocation":"5076:7:8","nodeType":"VariableDeclaration","scope":1976,"src":"5068:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"5068:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"_amountA","nameLocation":"5102:8:8","nodeType":"VariableDeclaration","scope":1976,"src":"5094:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"5094:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"_tokenB","nameLocation":"5129:7:8","nodeType":"VariableDeclaration","scope":1976,"src":"5121:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"5121:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"_amountB","nameLocation":"5155:8:8","nodeType":"VariableDeclaration","scope":1976,"src":"5147:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"5147:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"_rate","nameLocation":"5182:5:8","nodeType":"VariableDeclaration","scope":1976,"src":"5174:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"5174:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"_waiveFees","nameLocation":"5203:10:8","nodeType":"VariableDeclaration","scope":1976,"src":"5198:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1883,"name":"bool","nodeType":"ElementaryTypeName","src":"5198:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5057:163:8"},"returnParameters":{"id":1892,"nodeType":"ParameterList","parameters":[],"src":"5270:0:8"},"scope":2785,"src":"5028:1428:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2175,"nodeType":"Block","src":"6714:1620:8","statements":[{"assignments":[2001],"declarations":[{"constant":false,"id":2001,"mutability":"mutable","name":"_side","nameLocation":"6733:5:8","nodeType":"VariableDeclaration","scope":2175,"src":"6725:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2000,"name":"uint256","nodeType":"ElementaryTypeName","src":"6725:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2006,"initialValue":{"arguments":[{"id":2004,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"6749:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6741:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"6741:7:8","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6741:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6725:29:8"},{"assignments":[2011],"declarations":[{"constant":false,"id":2011,"mutability":"mutable","name":"_order","nameLocation":"6782:6:8","nodeType":"VariableDeclaration","scope":2175,"src":"6765:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2009,"nodeType":"UserDefinedTypeName","pathNode":{"id":2008,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"6765:6:8"},"referencedDeclaration":1629,"src":"6765:6:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"id":2010,"nodeType":"ArrayTypeName","src":"6765:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2019,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2012,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"6791:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2014,"indexExpression":{"id":2013,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"6803:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6791:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2016,"indexExpression":{"id":2015,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6812:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6791:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2018,"indexExpression":{"id":2017,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"6821:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6791:36:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6765:62:8"},{"assignments":[2021],"declarations":[{"constant":false,"id":2021,"mutability":"mutable","name":"size","nameLocation":"6846:4:8","nodeType":"VariableDeclaration","scope":2175,"src":"6838:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"6838:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2024,"initialValue":{"expression":{"id":2022,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"6853:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6853:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6838:28:8"},{"assignments":[2027],"declarations":[{"constant":false,"id":2027,"mutability":"mutable","name":"order","nameLocation":"6891:5:8","nodeType":"VariableDeclaration","scope":2175,"src":"6877:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2026,"nodeType":"UserDefinedTypeName","pathNode":{"id":2025,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"6877:6:8"},"referencedDeclaration":1629,"src":"6877:6:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":2028,"nodeType":"VariableDeclarationStatement","src":"6877:19:8"},{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"index","nameLocation":"6917:5:8","nodeType":"VariableDeclaration","scope":2175,"src":"6909:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"6909:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2031,"nodeType":"VariableDeclarationStatement","src":"6909:13:8"},{"body":{"id":2061,"nodeType":"Block","src":"6968:155:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2042,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"6987:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":2044,"indexExpression":{"id":2043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"6994:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6987:9:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"id":2045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"6987:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2046,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"7003:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6987:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2060,"nodeType":"IfStatement","src":"6983:129:8","trueBody":{"id":2059,"nodeType":"Block","src":"7008:104:8","statements":[{"expression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2048,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7027:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"7035:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7027:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2051,"nodeType":"ExpressionStatement","src":"7027:9:8"},{"expression":{"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2052,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7055:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2053,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"7063:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":2055,"indexExpression":{"id":2054,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"7070:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7063:9:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"src":"7055:17:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2057,"nodeType":"ExpressionStatement","src":"7055:17:8"},{"id":2058,"nodeType":"Break","src":"7091:5:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"6953:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2037,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"6957:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6953:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2062,"initializationExpression":{"assignments":[2033],"declarations":[{"constant":false,"id":2033,"mutability":"mutable","name":"i","nameLocation":"6946:1:8","nodeType":"VariableDeclaration","scope":2062,"src":"6938:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"6938:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2035,"initialValue":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6950:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6938:13:8"},"loopExpression":{"expression":{"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6963:3:8","subExpression":{"id":2039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"6963:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2041,"nodeType":"ExpressionStatement","src":"6963:3:8"},"nodeType":"ForStatement","src":"6933:190:8"},{"condition":{"id":2063,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"7180:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"nodeType":"IfStatement","src":"7176:620:8","trueBody":{"id":2109,"nodeType":"Block","src":"7192:604:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7215:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7215:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2067,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7229:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"7229:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7215:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74204f776e6572","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7241:11:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""},"value":"Not Owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""}],"id":2064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7207:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7207:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2072,"nodeType":"ExpressionStatement","src":"7207:46:8"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"7302:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2074,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"7310:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"7310:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"src":"7302:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2090,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"7548:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2091,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"7556:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"7556:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"src":"7548:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2107,"nodeType":"IfStatement","src":"7544:241:8","trueBody":{"id":2106,"nodeType":"Block","src":"7567:218:8","statements":[{"expression":{"arguments":[{"expression":{"id":2097,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7641:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7641:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2099,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7674:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"7674:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2101,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7709:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"7709:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7745:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2094,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"7586:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"7586:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7586:183:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2105,"nodeType":"ExpressionStatement","src":"7586:183:8"}]}},"id":2108,"nodeType":"IfStatement","src":"7298:487:8","trueBody":{"id":2089,"nodeType":"Block","src":"7320:218:8","statements":[{"expression":{"arguments":[{"expression":{"id":2080,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7394:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7394:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2082,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7427:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"7427:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2084,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7462:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"7462:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7498:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2077,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"7339:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"7339:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7339:183:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2088,"nodeType":"ExpressionStatement","src":"7339:183:8"}]}}]}},{"body":{"id":2134,"nodeType":"Block","src":"7849:55:8","statements":[{"expression":{"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2123,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"7864:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":2125,"indexExpression":{"id":2124,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"7871:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7864:9:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2126,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"7876:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":2131,"indexExpression":{"arguments":[{"hexValue":"31","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7889:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2127,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"7883:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":811,"src":"7883:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7883:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7876:16:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"src":"7864:28:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"id":2133,"nodeType":"ExpressionStatement","src":"7864:28:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2115,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"7830:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2116,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"7834:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7841:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7834:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7830:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2135,"initializationExpression":{"assignments":[2112],"declarations":[{"constant":false,"id":2112,"mutability":"mutable","name":"j","nameLocation":"7819:1:8","nodeType":"VariableDeclaration","scope":2135,"src":"7811:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"7811:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2114,"initialValue":{"id":2113,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7823:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7811:17:8"},"loopExpression":{"expression":{"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7844:3:8","subExpression":{"id":2120,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"7844:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2122,"nodeType":"ExpressionStatement","src":"7844:3:8"},"nodeType":"ForStatement","src":"7806:98:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2136,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"7916:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"7916:10:8","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2140,"nodeType":"ExpressionStatement","src":"7916:12:8"},{"expression":{"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2141,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"7941:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2145,"indexExpression":{"id":2142,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"7953:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7941:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2146,"indexExpression":{"id":2143,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"7962:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7941:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2147,"indexExpression":{"id":2144,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"7971:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7941:36:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2148,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"7980:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"src":"7941:45:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2150,"nodeType":"ExpressionStatement","src":"7941:45:8"},{"eventCall":{"arguments":[{"id":2152,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"8025:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2153,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8043:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"8043:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"expression":{"id":2155,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8068:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"8068:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2157,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8093:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"8093:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2159,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8120:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"8120:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2161,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8148:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"8148:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2163,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8175:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"8175:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2165,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8203:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1622,"src":"8203:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2167,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8228:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":1624,"src":"8228:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2169,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8264:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":1626,"src":"8264:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2171,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8300:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"waiveFees","nodeType":"MemberAccess","referencedDeclaration":1628,"src":"8300:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2151,"name":"Cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"8004:6:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$1661_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8004:322:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2174,"nodeType":"EmitStatement","src":"7999:327:8"}]},"functionSelector":"f90ef4f2","id":2176,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1988,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"6622:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1989,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"6627:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"id":1990,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"6633:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1991,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6642:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1992,"kind":"modifierInvocation","modifierName":{"id":1987,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2771,"src":"6611:10:8"},"nodeType":"ModifierInvocation","src":"6611:39:8"},{"arguments":[{"id":1994,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"6671:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1995,"kind":"modifierInvocation","modifierName":{"id":1993,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"6660:10:8"},"nodeType":"ModifierInvocation","src":"6660:19:8"},{"arguments":[{"id":1997,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"6700:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1998,"kind":"modifierInvocation","modifierName":{"id":1996,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":2784,"src":"6689:10:8"},"nodeType":"ModifierInvocation","src":"6689:19:8"}],"name":"cancelOrder","nameLocation":"6473:11:8","nodeType":"FunctionDefinition","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"side","nameLocation":"6500:4:8","nodeType":"VariableDeclaration","scope":2176,"src":"6495:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":1978,"nodeType":"UserDefinedTypeName","pathNode":{"id":1977,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"6495:4:8"},"referencedDeclaration":1661,"src":"6495:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1981,"mutability":"mutable","name":"_id","nameLocation":"6523:3:8","nodeType":"VariableDeclaration","scope":2176,"src":"6515:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1980,"name":"uint256","nodeType":"ElementaryTypeName","src":"6515:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"_tokenA","nameLocation":"6545:7:8","nodeType":"VariableDeclaration","scope":2176,"src":"6537:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1982,"name":"address","nodeType":"ElementaryTypeName","src":"6537:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"_tokenB","nameLocation":"6571:7:8","nodeType":"VariableDeclaration","scope":2176,"src":"6563:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"6563:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6484:101:8"},"returnParameters":{"id":1999,"nodeType":"ParameterList","parameters":[],"src":"6714:0:8"},"scope":2785,"src":"6464:1870:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2221,"nodeType":"Block","src":"8446:458:8","statements":[{"expression":{"arguments":[{"id":2191,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8496:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}],"expression":{"baseExpression":{"baseExpression":{"id":2184,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"8457:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":2188,"indexExpression":{"expression":{"id":2185,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8472:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1639,"src":"8472:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8457:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":2189,"indexExpression":{"id":2187,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"8484:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8457:33:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8457:38:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_ptr_$_t_struct$__filledOrder_$1658_storage_$returns$__$bound_to$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._filledOrder storage ref[] storage pointer,struct Exchange._filledOrder storage ref)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8457:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2193,"nodeType":"ExpressionStatement","src":"8457:45:8"},{"eventCall":{"arguments":[{"expression":{"id":2195,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8546:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1634,"src":"8546:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2197,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8569:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"8569:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"expression":{"id":2199,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8594:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1639,"src":"8594:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2201,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8619:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1641,"src":"8619:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2203,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8646:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1643,"src":"8646:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2205,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8673:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountFilled","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"8673:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2207,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8706:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fillRate","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"8706:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2209,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8735:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalRate","nodeType":"MemberAccess","referencedDeclaration":1649,"src":"8735:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2211,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8768:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"8768:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2213,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8804:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":1653,"src":"8804:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2215,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8840:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feesWaived","nodeType":"MemberAccess","referencedDeclaration":1655,"src":"8840:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2217,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"8871:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"id":2218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feesPaid","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"8871:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2194,"name":"filledOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"8520:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$1661_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,address,uint256,uint256,uint256,uint256,uint256,bool,uint256)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8520:376:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2220,"nodeType":"EmitStatement","src":"8515:381:8"}]},"functionSelector":"0af4e4f0","id":2222,"implemented":true,"kind":"function","modifiers":[],"name":"updateFilledOrders","nameLocation":"8351:18:8","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"order","nameLocation":"8400:5:8","nodeType":"VariableDeclaration","scope":2222,"src":"8380:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder"},"typeName":{"id":2178,"nodeType":"UserDefinedTypeName","pathNode":{"id":2177,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":1658,"src":"8380:12:8"},"referencedDeclaration":1658,"src":"8380:12:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_storage_ptr","typeString":"struct Exchange._filledOrder"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"_side","nameLocation":"8424:5:8","nodeType":"VariableDeclaration","scope":2222,"src":"8416:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"8416:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8369:67:8"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[],"src":"8446:0:8"},"scope":2785,"src":"8342:562:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2361,"nodeType":"Block","src":"9119:828:8","statements":[{"assignments":[2245],"declarations":[{"constant":false,"id":2245,"mutability":"mutable","name":"a","nameLocation":"9138:1:8","nodeType":"VariableDeclaration","scope":2361,"src":"9130:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"9130:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2262,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2246,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9142:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2249,"indexExpression":{"expression":{"id":2247,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9154:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"9154:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9142:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2252,"indexExpression":{"expression":{"id":2250,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9168:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"9168:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9142:39:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2258,"indexExpression":{"arguments":[{"expression":{"id":2255,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9188:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"9188:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9182:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2253,"name":"uint8","nodeType":"ElementaryTypeName","src":"9182:5:8","typeDescriptions":{}}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9182:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9142:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2260,"indexExpression":{"id":2259,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9215:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9142:90:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"id":2261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"9142:98:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9130:110:8"},{"assignments":[2264],"declarations":[{"constant":false,"id":2264,"mutability":"mutable","name":"b","nameLocation":"9259:1:8","nodeType":"VariableDeclaration","scope":2361,"src":"9251:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"9251:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2281,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2265,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9263:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2268,"indexExpression":{"expression":{"id":2266,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9275:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"9275:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9263:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2271,"indexExpression":{"expression":{"id":2269,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9289:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"9289:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9263:39:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2277,"indexExpression":{"arguments":[{"expression":{"id":2274,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9309:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"9309:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9303:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2272,"name":"uint8","nodeType":"ElementaryTypeName","src":"9303:5:8","typeDescriptions":{}}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9303:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9263:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2279,"indexExpression":{"id":2278,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9336:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9263:90:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"id":2280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"9263:98:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9251:110:8"},{"expression":{"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2282,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9372:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2293,"indexExpression":{"expression":{"id":2283,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9384:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"9384:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9372:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2294,"indexExpression":{"expression":{"id":2285,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9398:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"9398:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9372:39:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2295,"indexExpression":{"arguments":[{"expression":{"id":2289,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9418:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"9418:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9412:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2287,"name":"uint8","nodeType":"ElementaryTypeName","src":"9412:5:8","typeDescriptions":{}}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9412:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9372:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2296,"indexExpression":{"id":2292,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9431:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9372:66:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"id":2297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"9372:88:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2298,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"9463:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9372:99:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2300,"nodeType":"ExpressionStatement","src":"9372:99:8"},{"expression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2301,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9482:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2312,"indexExpression":{"expression":{"id":2302,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9494:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"9494:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9482:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2313,"indexExpression":{"expression":{"id":2304,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9508:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"9508:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9482:39:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2314,"indexExpression":{"arguments":[{"expression":{"id":2308,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9528:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"9528:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9522:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2306,"name":"uint8","nodeType":"ElementaryTypeName","src":"9522:5:8","typeDescriptions":{}}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9522:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9482:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2315,"indexExpression":{"id":2311,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9541:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9482:66:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"id":2316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"9482:88:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2317,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"9573:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9482:99:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2319,"nodeType":"ExpressionStatement","src":"9482:99:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2321,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9616:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2324,"indexExpression":{"expression":{"id":2322,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9628:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"9628:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9616:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2327,"indexExpression":{"expression":{"id":2325,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9642:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"9642:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9616:39:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2333,"indexExpression":{"arguments":[{"expression":{"id":2330,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9662:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"9662:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9656:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2328,"name":"uint8","nodeType":"ElementaryTypeName","src":"9656:5:8","typeDescriptions":{}}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9656:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9616:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2335,"indexExpression":{"id":2334,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9675:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9616:66:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"id":2336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"9616:92:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2337,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"9728:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9616:113:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2339,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9750:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2342,"indexExpression":{"expression":{"id":2340,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9762:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"9762:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9750:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2345,"indexExpression":{"expression":{"id":2343,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9776:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"9776:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9750:39:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2351,"indexExpression":{"arguments":[{"expression":{"id":2348,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9796:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"9796:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9790:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2346,"name":"uint8","nodeType":"ElementaryTypeName","src":"9790:5:8","typeDescriptions":{}}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9790:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9750:58:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2353,"indexExpression":{"id":2352,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9831:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9750:106:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"id":2354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"9750:114:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"9884:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9750:135:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9616:269:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f72646572206e6f7420757064617465642070726f7065726c79","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9900:28:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e","typeString":"literal_string \"Order not updated properly\""},"value":"Order not updated properly"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e","typeString":"literal_string \"Order not updated properly\""}],"id":2320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9594:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9594:345:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2360,"nodeType":"ExpressionStatement","src":"9594:345:8"}]},"functionSelector":"fb310c9b","id":2362,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2234,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9069:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"9069:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2236,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9079:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1610,"src":"9079:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"expression":{"id":2238,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9091:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"9091:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2240,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"9105:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"9105:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2242,"kind":"modifierInvocation","modifierName":{"id":2233,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":2771,"src":"9058:10:8"},"nodeType":"ModifierInvocation","src":"9058:60:8"}],"name":"updateOrder","nameLocation":"8921:11:8","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"order","nameLocation":"8957:5:8","nodeType":"VariableDeclaration","scope":2362,"src":"8943:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2224,"nodeType":"UserDefinedTypeName","pathNode":{"id":2223,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"8943:6:8"},"referencedDeclaration":1629,"src":"8943:6:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"_amountA","nameLocation":"8981:8:8","nodeType":"VariableDeclaration","scope":2362,"src":"8973:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"8973:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"_amountB","nameLocation":"9008:8:8","nodeType":"VariableDeclaration","scope":2362,"src":"9000:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"9000:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"_index","nameLocation":"9035:6:8","nodeType":"VariableDeclaration","scope":2362,"src":"9027:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"9027:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8932:116:8"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[],"src":"9119:0:8"},"scope":2785,"src":"8912:1035:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2378,"nodeType":"Block","src":"9999:111:8","statements":[{"expression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2367,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"10010:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2368,"name":"_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"10023:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10010:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2370,"nodeType":"ExpressionStatement","src":"10010:22:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"10051:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2373,"name":"_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"10065:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10051:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420735f69734d616e75616c20626f6f6c","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10076:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f","typeString":"literal_string \"Invalid s_isManual bool\""},"value":"Invalid s_isManual bool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f","typeString":"literal_string \"Invalid s_isManual bool\""}],"id":2371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10043:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10043:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2377,"nodeType":"ExpressionStatement","src":"10043:59:8"}]},"functionSelector":"ff09cdfa","id":2379,"implemented":true,"kind":"function","modifiers":[],"name":"setManual","nameLocation":"9964:9:8","nodeType":"FunctionDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"_isManual","nameLocation":"9979:9:8","nodeType":"VariableDeclaration","scope":2379,"src":"9974:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2363,"name":"bool","nodeType":"ElementaryTypeName","src":"9974:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9973:16:8"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[],"src":"9999:0:8"},"scope":2785,"src":"9955:155:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2403,"nodeType":"Block","src":"10251:77:8","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2391,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"10269:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2393,"indexExpression":{"id":2392,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10281:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10269:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2395,"indexExpression":{"id":2394,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"10290:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10269:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2400,"indexExpression":{"arguments":[{"id":2398,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"10307:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10299:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"10299:7:8","typeDescriptions":{}}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10299:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10269:44:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10269:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2390,"id":2402,"nodeType":"Return","src":"10262:58:8"}]},"functionSelector":"14eca9dc","id":2404,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderLength","nameLocation":"10127:14:8","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"side","nameLocation":"10157:4:8","nodeType":"VariableDeclaration","scope":2404,"src":"10152:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":2381,"nodeType":"UserDefinedTypeName","pathNode":{"id":2380,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"10152:4:8"},"referencedDeclaration":1661,"src":"10152:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"_tokenA","nameLocation":"10180:7:8","nodeType":"VariableDeclaration","scope":2404,"src":"10172:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2383,"name":"address","nodeType":"ElementaryTypeName","src":"10172:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"_tokenB","nameLocation":"10206:7:8","nodeType":"VariableDeclaration","scope":2404,"src":"10198:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2385,"name":"address","nodeType":"ElementaryTypeName","src":"10198:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10141:79:8"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2404,"src":"10242:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"10242:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10241:9:8"},"scope":2785,"src":"10118:210:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2438,"nodeType":"Block","src":"10493:141:8","statements":[{"assignments":[2421],"declarations":[{"constant":false,"id":2421,"mutability":"mutable","name":"order","nameLocation":"10518:5:8","nodeType":"VariableDeclaration","scope":2438,"src":"10504:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2420,"nodeType":"UserDefinedTypeName","pathNode":{"id":2419,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"10504:6:8"},"referencedDeclaration":1629,"src":"10504:6:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":2434,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2422,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"10526:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2424,"indexExpression":{"id":2423,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10538:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10526:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2426,"indexExpression":{"id":2425,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"10547:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10526:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2431,"indexExpression":{"arguments":[{"id":2429,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"10564:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10556:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"10556:7:8","typeDescriptions":{}}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10556:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10526:44:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2433,"indexExpression":{"id":2432,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"10585:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10526:75:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10504:97:8"},{"expression":{"components":[{"id":2435,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"10620:5:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}}],"id":2436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10619:7:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"functionReturnParameters":2418,"id":2437,"nodeType":"Return","src":"10612:14:8"}]},"functionSelector":"ea42f349","id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"getOrder","nameLocation":"10345:8:8","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"_tokenA","nameLocation":"10372:7:8","nodeType":"VariableDeclaration","scope":2439,"src":"10364:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"10364:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"_tokenB","nameLocation":"10398:7:8","nodeType":"VariableDeclaration","scope":2439,"src":"10390:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"10390:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"index","nameLocation":"10424:5:8","nodeType":"VariableDeclaration","scope":2439,"src":"10416:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"10416:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"side","nameLocation":"10445:4:8","nodeType":"VariableDeclaration","scope":2439,"src":"10440:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":2412,"nodeType":"UserDefinedTypeName","pathNode":{"id":2411,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"10440:4:8"},"referencedDeclaration":1661,"src":"10440:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"10353:103:8"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2439,"src":"10478:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2416,"nodeType":"UserDefinedTypeName","pathNode":{"id":2415,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"10478:6:8"},"referencedDeclaration":1629,"src":"10478:6:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"src":"10477:15:8"},"scope":2785,"src":"10336:298:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2459,"nodeType":"Block","src":"10753:69:8","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":2449,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10771:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":2451,"indexExpression":{"id":2450,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"10786:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10771:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":2456,"indexExpression":{"arguments":[{"id":2454,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"10801:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:8","typeDescriptions":{}}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10793:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10771:36:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10771:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2448,"id":2458,"nodeType":"Return","src":"10764:50:8"}]},"functionSelector":"c3364be4","id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"getFilledOrderLength","nameLocation":"10651:20:8","nodeType":"FunctionDefinition","parameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"_user","nameLocation":"10690:5:8","nodeType":"VariableDeclaration","scope":2460,"src":"10682:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"10682:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2444,"mutability":"mutable","name":"side","nameLocation":"10711:4:8","nodeType":"VariableDeclaration","scope":2460,"src":"10706:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":2443,"nodeType":"UserDefinedTypeName","pathNode":{"id":2442,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"10706:4:8"},"referencedDeclaration":1661,"src":"10706:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"10671:51:8"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2460,"src":"10744:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"10744:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10743:9:8"},"scope":2785,"src":"10642:180:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2484,"nodeType":"Block","src":"10971:69:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2473,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"10989:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":2475,"indexExpression":{"id":2474,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"11004:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10989:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":2480,"indexExpression":{"arguments":[{"id":2478,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"11019:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11011:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"11011:7:8","typeDescriptions":{}}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11011:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10989:36:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$1658_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":2482,"indexExpression":{"id":2481,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"11026:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10989:43:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_storage","typeString":"struct Exchange._filledOrder storage ref"}},"functionReturnParameters":2472,"id":2483,"nodeType":"Return","src":"10982:50:8"}]},"functionSelector":"8f101b0e","id":2485,"implemented":true,"kind":"function","modifiers":[],"name":"getFilledOrder","nameLocation":"10839:14:8","nodeType":"FunctionDefinition","parameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"_user","nameLocation":"10872:5:8","nodeType":"VariableDeclaration","scope":2485,"src":"10864:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2461,"name":"address","nodeType":"ElementaryTypeName","src":"10864:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"side","nameLocation":"10893:4:8","nodeType":"VariableDeclaration","scope":2485,"src":"10888:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":2464,"nodeType":"UserDefinedTypeName","pathNode":{"id":2463,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"10888:4:8"},"referencedDeclaration":1661,"src":"10888:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"index","nameLocation":"10916:5:8","nodeType":"VariableDeclaration","scope":2485,"src":"10908:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"10908:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10853:75:8"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2485,"src":"10950:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder"},"typeName":{"id":2470,"nodeType":"UserDefinedTypeName","pathNode":{"id":2469,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":1658,"src":"10950:12:8"},"referencedDeclaration":1658,"src":"10950:12:8","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_storage_ptr","typeString":"struct Exchange._filledOrder"}},"visibility":"internal"}],"src":"10949:21:8"},"scope":2785,"src":"10830:210:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2552,"nodeType":"Block","src":"11224:304:8","statements":[{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"i","nameLocation":"11243:1:8","nodeType":"VariableDeclaration","scope":2552,"src":"11235:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2504,"initialValue":{"hexValue":"30","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11235:13:8"},{"body":{"id":2546,"nodeType":"Block","src":"11320:165:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2520,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"11339:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2522,"indexExpression":{"id":2521,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"11351:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11339:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2524,"indexExpression":{"id":2523,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"11360:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11339:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2526,"indexExpression":{"id":2525,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"11369:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11339:35:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2528,"indexExpression":{"id":2527,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"11375:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11339:38:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},"id":2529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"11339:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2530,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"11384:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11339:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2545,"nodeType":"IfStatement","src":"11335:139:8","trueBody":{"id":2544,"nodeType":"Block","src":"11389:85:8","statements":[{"expression":{"components":[{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2532,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"11416:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2534,"indexExpression":{"id":2533,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"11428:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11416:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2536,"indexExpression":{"id":2535,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"11437:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11416:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2538,"indexExpression":{"id":2537,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"11446:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11416:35:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2540,"indexExpression":{"id":2539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"11452:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11416:38:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage","typeString":"struct Exchange._Order storage ref"}},{"id":2541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"11456:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11415:43:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$1629_storage_$_t_uint256_$","typeString":"tuple(struct Exchange._Order storage ref,uint256)"}},"functionReturnParameters":2500,"id":2543,"nodeType":"Return","src":"11408:50:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"11267:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2508,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"11271:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2510,"indexExpression":{"id":2509,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"11283:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11271:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2512,"indexExpression":{"id":2511,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"11292:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11271:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2514,"indexExpression":{"id":2513,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"11301:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11271:35:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11271:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11267:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2547,"initializationExpression":{"expression":{"id":2505,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"11264:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2506,"nodeType":"ExpressionStatement","src":"11264:1:8"},"loopExpression":{"expression":{"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11315:3:8","subExpression":{"id":2517,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"11315:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2519,"nodeType":"ExpressionStatement","src":"11315:3:8"},"nodeType":"ForStatement","src":"11259:226:8"},{"expression":{"arguments":[{"hexValue":"4f72646572206e6f7420466f756e64","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11502:17:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6","typeString":"literal_string \"Order not Found\""},"value":"Order not Found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6","typeString":"literal_string \"Order not Found\""}],"id":2548,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11495:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11495:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2551,"nodeType":"ExpressionStatement","src":"11495:25:8"}]},"functionSelector":"92e43d3a","id":2553,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderFromArray","nameLocation":"11057:17:8","nodeType":"FunctionDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"_tokenA","nameLocation":"11093:7:8","nodeType":"VariableDeclaration","scope":2553,"src":"11085:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2486,"name":"address","nodeType":"ElementaryTypeName","src":"11085:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"_tokenB","nameLocation":"11119:7:8","nodeType":"VariableDeclaration","scope":2553,"src":"11111:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"11111:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"side","nameLocation":"11145:4:8","nodeType":"VariableDeclaration","scope":2553,"src":"11137:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"11137:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"_id","nameLocation":"11168:3:8","nodeType":"VariableDeclaration","scope":2553,"src":"11160:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"11160:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11074:104:8"},"returnParameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2553,"src":"11200:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2496,"nodeType":"UserDefinedTypeName","pathNode":{"id":2495,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"11200:6:8"},"referencedDeclaration":1629,"src":"11200:6:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2553,"src":"11215:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"11215:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11199:24:8"},"scope":2785,"src":"11048:480:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2608,"nodeType":"Block","src":"11685:264:8","statements":[{"assignments":[2571],"declarations":[{"constant":false,"id":2571,"mutability":"mutable","name":"orders","nameLocation":"11712:6:8","nodeType":"VariableDeclaration","scope":2608,"src":"11696:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2569,"nodeType":"UserDefinedTypeName","pathNode":{"id":2568,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"11696:6:8"},"referencedDeclaration":1629,"src":"11696:6:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"id":2570,"nodeType":"ArrayTypeName","src":"11696:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2582,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2572,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"11721:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2574,"indexExpression":{"id":2573,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"11733:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11721:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2576,"indexExpression":{"id":2575,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"11742:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11721:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1629_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2581,"indexExpression":{"arguments":[{"id":2579,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"11759:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11751:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"11751:7:8","typeDescriptions":{}}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11751:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11721:44:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11696:69:8"},{"body":{"id":2604,"nodeType":"Block","src":"11822:97:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2594,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"11841:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2596,"indexExpression":{"id":2595,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"11848:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11841:9:8","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"11841:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2598,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"11857:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11841:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2603,"nodeType":"IfStatement","src":"11837:71:8","trueBody":{"id":2602,"nodeType":"Block","src":"11862:46:8","statements":[{"expression":{"hexValue":"74727565","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11888:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2566,"id":2601,"nodeType":"Return","src":"11881:11:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"11798:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2588,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"11802:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1629_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11802:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11798:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2605,"initializationExpression":{"assignments":[2584],"declarations":[{"constant":false,"id":2584,"mutability":"mutable","name":"i","nameLocation":"11791:1:8","nodeType":"VariableDeclaration","scope":2605,"src":"11783:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"11783:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2586,"initialValue":{"hexValue":"30","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11795:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11783:13:8"},"loopExpression":{"expression":{"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11817:3:8","subExpression":{"id":2591,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"11817:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2593,"nodeType":"ExpressionStatement","src":"11817:3:8"},"nodeType":"ForStatement","src":"11778:141:8"},{"expression":{"hexValue":"66616c7365","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11936:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2566,"id":2607,"nodeType":"Return","src":"11929:12:8"}]},"functionSelector":"429d24b2","id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"orderExists","nameLocation":"11545:11:8","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"_id","nameLocation":"11575:3:8","nodeType":"VariableDeclaration","scope":2609,"src":"11567:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"11567:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"side","nameLocation":"11594:4:8","nodeType":"VariableDeclaration","scope":2609,"src":"11589:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":2557,"nodeType":"UserDefinedTypeName","pathNode":{"id":2556,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"11589:4:8"},"referencedDeclaration":1661,"src":"11589:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"_tokenA","nameLocation":"11617:7:8","nodeType":"VariableDeclaration","scope":2609,"src":"11609:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"11609:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"_tokenB","nameLocation":"11643:7:8","nodeType":"VariableDeclaration","scope":2609,"src":"11635:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"11635:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11556:101:8"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"11679:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2564,"name":"bool","nodeType":"ElementaryTypeName","src":"11679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11678:6:8"},"scope":2785,"src":"11536:413:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2635,"nodeType":"Block","src":"12027:134:8","statements":[{"expression":{"arguments":[{"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12046:24:8","subExpression":{"arguments":[{"id":2620,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"12063:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2619,"name":"isVerifiedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"12047:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12047:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c7265616479207665726966696564","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12072:24:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","typeString":"literal_string \"Token already verified\""},"value":"Token already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","typeString":"literal_string \"Token already verified\""}],"id":2618,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12038:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12038:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2625,"nodeType":"ExpressionStatement","src":"12038:59:8"},{"expression":{"arguments":[{"arguments":[{"id":2630,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"12134:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2631,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"12142:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2629,"name":"_tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"12123:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__tokenInfo_$1600_storage_ptr_$","typeString":"type(struct Exchange._tokenInfo storage pointer)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12123:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$1600_memory_ptr","typeString":"struct Exchange._tokenInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__tokenInfo_$1600_memory_ptr","typeString":"struct Exchange._tokenInfo memory"}],"expression":{"id":2626,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"12108:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1600_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"12108:14:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__tokenInfo_$1600_storage_$dyn_storage_ptr_$_t_struct$__tokenInfo_$1600_storage_$returns$__$bound_to$_t_array$_t_struct$__tokenInfo_$1600_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._tokenInfo storage ref[] storage pointer,struct Exchange._tokenInfo storage ref)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12108:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2634,"nodeType":"ExpressionStatement","src":"12108:45:8"}]},"functionSelector":"af81c5b9","id":2636,"implemented":true,"kind":"function","modifiers":[{"id":2616,"kind":"modifierInvocation","modifierName":{"id":2615,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"12017:9:8"},"nodeType":"ModifierInvocation","src":"12017:9:8"}],"name":"addToken","nameLocation":"11966:8:8","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"_token","nameLocation":"11983:6:8","nodeType":"VariableDeclaration","scope":2636,"src":"11975:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"11975:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"_decimals","nameLocation":"11999:9:8","nodeType":"VariableDeclaration","scope":2636,"src":"11991:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"11991:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11974:35:8"},"returnParameters":{"id":2617,"nodeType":"ParameterList","parameters":[],"src":"12027:0:8"},"scope":2785,"src":"11957:204:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2667,"nodeType":"Block","src":"12237:204:8","statements":[{"body":{"id":2663,"nodeType":"Block","src":"12341:70:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2654,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"12360:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1600_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2656,"indexExpression":{"id":2655,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"12370:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12360:12:8","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$1600_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1597,"src":"12360:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2658,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"12380:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12360:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2662,"nodeType":"IfStatement","src":"12356:43:8","trueBody":{"expression":{"hexValue":"74727565","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12395:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2642,"id":2661,"nodeType":"Return","src":"12388:11:8"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"12314:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2648,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"12318:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1600_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12318:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12314:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2664,"initializationExpression":{"assignments":[2644],"declarations":[{"constant":false,"id":2644,"mutability":"mutable","name":"i","nameLocation":"12307:1:8","nodeType":"VariableDeclaration","scope":2664,"src":"12299:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"12299:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2646,"initialValue":{"hexValue":"30","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12311:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12299:13:8"},"loopExpression":{"expression":{"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12336:3:8","subExpression":{"id":2651,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"12336:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2653,"nodeType":"ExpressionStatement","src":"12336:3:8"},"nodeType":"ForStatement","src":"12294:117:8"},{"expression":{"hexValue":"66616c7365","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12428:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2642,"id":2666,"nodeType":"Return","src":"12421:12:8"}]},"functionSelector":"1027b219","id":2668,"implemented":true,"kind":"function","modifiers":[],"name":"isVerifiedToken","nameLocation":"12178:15:8","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"_token","nameLocation":"12202:6:8","nodeType":"VariableDeclaration","scope":2668,"src":"12194:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12193:16:8"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2668,"src":"12231:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2640,"name":"bool","nodeType":"ElementaryTypeName","src":"12231:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12230:6:8"},"scope":2785,"src":"12169:272:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2705,"nodeType":"Block","src":"12517:226:8","statements":[{"body":{"id":2699,"nodeType":"Block","src":"12575:121:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2686,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"12594:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1600_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2688,"indexExpression":{"id":2687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"12604:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12594:12:8","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$1600_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1597,"src":"12594:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2690,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"12614:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12594:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2698,"nodeType":"IfStatement","src":"12590:95:8","trueBody":{"id":2697,"nodeType":"Block","src":"12622:63:8","statements":[{"expression":{"expression":{"baseExpression":{"id":2692,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"12648:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1600_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2694,"indexExpression":{"id":2693,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"12658:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12648:12:8","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$1600_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":2695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1599,"src":"12648:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2674,"id":2696,"nodeType":"Return","src":"12641:28:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"12548:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2680,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"12552:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1600_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12552:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12548:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2700,"initializationExpression":{"assignments":[2676],"declarations":[{"constant":false,"id":2676,"mutability":"mutable","name":"i","nameLocation":"12541:1:8","nodeType":"VariableDeclaration","scope":2700,"src":"12533:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"12533:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2678,"initialValue":{"hexValue":"30","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12545:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12533:13:8"},"loopExpression":{"expression":{"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12570:3:8","subExpression":{"id":2683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"12570:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2685,"nodeType":"ExpressionStatement","src":"12570:3:8"},"nodeType":"ForStatement","src":"12528:168:8"},{"expression":{"arguments":[{"hexValue":"546f6b656e206e6f7420617661696c61626c65","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12713:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e","typeString":"literal_string \"Token not available\""},"value":"Token not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e","typeString":"literal_string \"Token not available\""}],"id":2701,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12706:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12706:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2704,"nodeType":"ExpressionStatement","src":"12706:29:8"}]},"functionSelector":"1f69565f","id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"12458:12:8","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"_token","nameLocation":"12479:6:8","nodeType":"VariableDeclaration","scope":2706,"src":"12471:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"12471:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12470:16:8"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"12508:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"12508:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12507:9:8"},"scope":2785,"src":"12449:294:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2719,"nodeType":"Block","src":"12818:50:8","statements":[{"expression":{"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2713,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"12829:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2715,"name":"_Walletaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"12845:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2714,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"12838:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3859_$","typeString":"type(contract Wallet)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12838:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"src":"12829:31:8","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":2718,"nodeType":"ExpressionStatement","src":"12829:31:8"}]},"functionSelector":"ac1a386a","id":2720,"implemented":true,"kind":"function","modifiers":[{"id":2711,"kind":"modifierInvocation","modifierName":{"id":2710,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"12808:9:8"},"nodeType":"ModifierInvocation","src":"12808:9:8"}],"name":"setWalletAddress","nameLocation":"12760:16:8","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"_Walletaddress","nameLocation":"12785:14:8","nodeType":"VariableDeclaration","scope":2720,"src":"12777:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2707,"name":"address","nodeType":"ElementaryTypeName","src":"12777:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12776:24:8"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[],"src":"12818:0:8"},"scope":2785,"src":"12751:117:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2733,"nodeType":"Block","src":"12971:68:8","statements":[{"expression":{"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2727,"name":"priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"12982:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2729,"name":"_PriceCheckeraddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"13010:20:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2728,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"12997:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2954_$","typeString":"type(contract PriceChecker)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12997:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"src":"12982:49:8","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"id":2732,"nodeType":"ExpressionStatement","src":"12982:49:8"}]},"functionSelector":"b136e39a","id":2734,"implemented":true,"kind":"function","modifiers":[{"id":2725,"kind":"modifierInvocation","modifierName":{"id":2724,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"12961:9:8"},"nodeType":"ModifierInvocation","src":"12961:9:8"}],"name":"setPriceCheckerAddress","nameLocation":"12885:22:8","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"_PriceCheckeraddress","nameLocation":"12926:20:8","nodeType":"VariableDeclaration","scope":2734,"src":"12918:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2721,"name":"address","nodeType":"ElementaryTypeName","src":"12918:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12907:46:8"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[],"src":"12971:0:8"},"scope":2785,"src":"12876:163:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2747,"nodeType":"Block","src":"13110:58:8","statements":[{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2741,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"13121:11:8","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2743,"name":"_tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"13147:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2742,"name":"TradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"13135:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TradingFees_$3184_$","typeString":"type(contract TradingFees)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13135:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"src":"13121:39:8","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":2746,"nodeType":"ExpressionStatement","src":"13121:39:8"}]},"functionSelector":"dafbfe6a","id":2748,"implemented":true,"kind":"function","modifiers":[{"id":2739,"kind":"modifierInvocation","modifierName":{"id":2738,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"13100:9:8"},"nodeType":"ModifierInvocation","src":"13100:9:8"}],"name":"setTradingFees","nameLocation":"13056:14:8","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"_tradingFees","nameLocation":"13079:12:8","nodeType":"VariableDeclaration","scope":2748,"src":"13071:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2735,"name":"address","nodeType":"ElementaryTypeName","src":"13071:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13070:22:8"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[],"src":"13110:0:8"},"scope":2785,"src":"13047:121:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2770,"nodeType":"Block","src":"13297:100:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2761,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"13328:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2762,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"13333:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"id":2763,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"13339:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2764,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"13348:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2760,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"13316:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$1661_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address,address) view returns (bool)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13316:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f72646572204944","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13358:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","typeString":"literal_string \"Invalid Order ID\""},"value":"Invalid Order ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","typeString":"literal_string \"Invalid Order ID\""}],"id":2759,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13308:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13308:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2768,"nodeType":"ExpressionStatement","src":"13308:69:8"},{"id":2769,"nodeType":"PlaceholderStatement","src":"13388:1:8"}]},"id":2771,"name":"validOrder","nameLocation":"13185:10:8","nodeType":"ModifierDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"_id","nameLocation":"13214:3:8","nodeType":"VariableDeclaration","scope":2771,"src":"13206:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"side","nameLocation":"13233:4:8","nodeType":"VariableDeclaration","scope":2771,"src":"13228:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},"typeName":{"id":2752,"nodeType":"UserDefinedTypeName","pathNode":{"id":2751,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1661,"src":"13228:4:8"},"referencedDeclaration":1661,"src":"13228:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"_tokenA","nameLocation":"13256:7:8","nodeType":"VariableDeclaration","scope":2771,"src":"13248:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2754,"name":"address","nodeType":"ElementaryTypeName","src":"13248:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"_tokenB","nameLocation":"13282:7:8","nodeType":"VariableDeclaration","scope":2771,"src":"13274:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2756,"name":"address","nodeType":"ElementaryTypeName","src":"13274:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13195:101:8"},"src":"13176:221:8","virtual":false,"visibility":"internal"},{"body":{"id":2783,"nodeType":"Block","src":"13441:91:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2777,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"13476:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2776,"name":"isVerifiedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"13460:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13460:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20756e617661696c61626c6520696e20444558","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13485:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","typeString":"literal_string \"Token unavailable in DEX\""},"value":"Token unavailable in DEX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","typeString":"literal_string \"Token unavailable in DEX\""}],"id":2775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13452:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13452:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2781,"nodeType":"ExpressionStatement","src":"13452:60:8"},{"id":2782,"nodeType":"PlaceholderStatement","src":"13523:1:8"}]},"id":2784,"name":"validToken","nameLocation":"13414:10:8","nodeType":"ModifierDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"_token","nameLocation":"13433:6:8","nodeType":"VariableDeclaration","scope":2784,"src":"13425:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"13425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13424:16:8"},"src":"13405:127:8","virtual":false,"visibility":"internal"}],"scope":2786,"src":"411:13124:8","usedErrors":[]}],"src":"35:13502:8"},"id":8},"contracts/PriceChecker.sol":{"ast":{"absolutePath":"contracts/PriceChecker.sol","exportedSymbols":{"AggregatorV3Interface":[397],"Context":[635],"Ownable":[510],"PriceChecker":[2954]},"id":2955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2787,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2955,"sourceUnit":398,"src":"60:76:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2955,"sourceUnit":511,"src":"138:52:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2790,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"219:7:9"},"id":2791,"nodeType":"InheritanceSpecifier","src":"219:7:9"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2954,"linearizedBaseContracts":[2954,510,635],"name":"PriceChecker","nameLocation":"203:12:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"10c7f0b9","id":2795,"mutability":"mutable","name":"priceFeeds","nameLocation":"254:10:9","nodeType":"VariableDeclaration","scope":2954,"src":"234:30:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2793,"nodeType":"UserDefinedTypeName","pathNode":{"id":2792,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"234:10:9"},"referencedDeclaration":2803,"src":"234:10:9","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2803_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2794,"nodeType":"ArrayTypeName","src":"234:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"public"},{"canonicalName":"PriceChecker._priceFeed","id":2803,"members":[{"constant":false,"id":2797,"mutability":"mutable","name":"name","nameLocation":"309:4:9","nodeType":"VariableDeclaration","scope":2803,"src":"302:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2796,"name":"string","nodeType":"ElementaryTypeName","src":"302:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2799,"mutability":"mutable","name":"token","nameLocation":"332:5:9","nodeType":"VariableDeclaration","scope":2803,"src":"324:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"324:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"priceFeed","nameLocation":"370:9:9","nodeType":"VariableDeclaration","scope":2803,"src":"348:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2801,"nodeType":"UserDefinedTypeName","pathNode":{"id":2800,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":397,"src":"348:21:9"},"referencedDeclaration":397,"src":"348:21:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"name":"_priceFeed","nameLocation":"280:10:9","nodeType":"StructDefinition","scope":2954,"src":"273:114:9","visibility":"public"},{"body":{"id":2884,"nodeType":"Block","src":"568:583:9","statements":[{"assignments":[2818],"declarations":[{"constant":false,"id":2818,"mutability":"mutable","name":"pricefeed","nameLocation":"599:9:9","nodeType":"VariableDeclaration","scope":2884,"src":"579:29:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2816,"nodeType":"UserDefinedTypeName","pathNode":{"id":2815,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"579:10:9"},"referencedDeclaration":2803,"src":"579:10:9","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2803_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2817,"nodeType":"ArrayTypeName","src":"579:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"internal"}],"id":2820,"initialValue":{"id":2819,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"611:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"579:42:9"},{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"isAdded","nameLocation":"637:7:9","nodeType":"VariableDeclaration","scope":2884,"src":"632:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2821,"name":"bool","nodeType":"ElementaryTypeName","src":"632:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2824,"initialValue":{"hexValue":"66616c7365","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"647:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"632:20:9"},{"body":{"id":2859,"nodeType":"Block","src":"710:238:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2839,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"774:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2837,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"757:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"757:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2836,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"747:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"747:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":2845,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"829:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2847,"indexExpression":{"id":2846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"839:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"829:12:9","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2803_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"name","nodeType":"MemberAccess","referencedDeclaration":2797,"src":"829:17:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2843,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"812:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"812:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"812:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2842,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"802:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"802:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"747:101:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2858,"nodeType":"IfStatement","src":"725:212:9","trueBody":{"id":2857,"nodeType":"Block","src":"864:73:9","statements":[{"expression":{"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2852,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"883:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"893:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"883:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2855,"nodeType":"ExpressionStatement","src":"883:14:9"},{"id":2856,"nodeType":"Break","src":"916:5:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"683:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2830,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"687:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"687:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2860,"initializationExpression":{"assignments":[2826],"declarations":[{"constant":false,"id":2826,"mutability":"mutable","name":"i","nameLocation":"676:1:9","nodeType":"VariableDeclaration","scope":2860,"src":"668:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2828,"initialValue":{"hexValue":"30","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"680:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"668:13:9"},"loopExpression":{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"705:3:9","subExpression":{"id":2833,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"705:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2835,"nodeType":"ExpressionStatement","src":"705:3:9"},"nodeType":"ForStatement","src":"663:285:9"},{"expression":{"arguments":[{"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"966:8:9","subExpression":{"id":2862,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"967:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365204665656420616c7265616479206164646564","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"976:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","typeString":"literal_string \"Price Feed already added\""},"value":"Price Feed already added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","typeString":"literal_string \"Price Feed already added\""}],"id":2861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"958:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"958:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2866,"nodeType":"ExpressionStatement","src":"958:45:9"},{"assignments":[2869],"declarations":[{"constant":false,"id":2869,"mutability":"mutable","name":"priceFeed","nameLocation":"1036:9:9","nodeType":"VariableDeclaration","scope":2884,"src":"1014:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2868,"nodeType":"UserDefinedTypeName","pathNode":{"id":2867,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":397,"src":"1014:21:9"},"referencedDeclaration":397,"src":"1014:21:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":2873,"initialValue":{"arguments":[{"id":2871,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"1070:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2870,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1048:21:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$397_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1048:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1014:65:9"},{"expression":{"arguments":[{"arguments":[{"id":2878,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"1117:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2879,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"1124:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2880,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"1132:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}],"id":2877,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"1106:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__priceFeed_$2803_storage_ptr_$","typeString":"type(struct PriceChecker._priceFeed storage pointer)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1106:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2803_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__priceFeed_$2803_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}],"expression":{"id":2874,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"1090:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1090:15:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__priceFeed_$2803_storage_$dyn_storage_ptr_$_t_struct$__priceFeed_$2803_storage_$returns$__$bound_to$_t_array$_t_struct$__priceFeed_$2803_storage_$dyn_storage_ptr_$","typeString":"function (struct PriceChecker._priceFeed storage ref[] storage pointer,struct PriceChecker._priceFeed storage ref)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1090:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2883,"nodeType":"ExpressionStatement","src":"1090:53:9"}]},"functionSelector":"8c35423e","id":2885,"implemented":true,"kind":"function","modifiers":[{"id":2812,"kind":"modifierInvocation","modifierName":{"id":2811,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"558:9:9"},"nodeType":"ModifierInvocation","src":"558:9:9"}],"name":"addPriceFeed","nameLocation":"447:12:9","nodeType":"FunctionDefinition","parameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"_name","nameLocation":"484:5:9","nodeType":"VariableDeclaration","scope":2885,"src":"470:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2804,"name":"string","nodeType":"ElementaryTypeName","src":"470:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"_token","nameLocation":"508:6:9","nodeType":"VariableDeclaration","scope":2885,"src":"500:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2806,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2809,"mutability":"mutable","name":"_address","nameLocation":"533:8:9","nodeType":"VariableDeclaration","scope":2885,"src":"525:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2808,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:89:9"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[],"src":"568:0:9"},"scope":2954,"src":"438:713:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2926,"nodeType":"Block","src":"1269:244:9","statements":[{"assignments":[2897],"declarations":[{"constant":false,"id":2897,"mutability":"mutable","name":"pricefeed","nameLocation":"1300:9:9","nodeType":"VariableDeclaration","scope":2926,"src":"1280:29:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":2895,"nodeType":"UserDefinedTypeName","pathNode":{"id":2894,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"1280:10:9"},"referencedDeclaration":2803,"src":"1280:10:9","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2803_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":2896,"nodeType":"ArrayTypeName","src":"1280:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"internal"}],"id":2899,"initialValue":{"id":2898,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"1312:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1280:42:9"},{"body":{"id":2924,"nodeType":"Block","src":"1382:124:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"1401:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":2912,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"1411:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2914,"indexExpression":{"id":2913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1421:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1411:12:9","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2803_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2799,"src":"1411:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1401:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2923,"nodeType":"IfStatement","src":"1397:98:9","trueBody":{"id":2922,"nodeType":"Block","src":"1431:64:9","statements":[{"expression":{"expression":{"baseExpression":{"id":2917,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"1457:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2919,"indexExpression":{"id":2918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1467:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1457:12:9","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$2803_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":2920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"priceFeed","nodeType":"MemberAccess","referencedDeclaration":2802,"src":"1457:22:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"functionReturnParameters":2892,"id":2921,"nodeType":"Return","src":"1450:29:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2904,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1355:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2905,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"1359:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$2803_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1359:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1355:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2925,"initializationExpression":{"assignments":[2901],"declarations":[{"constant":false,"id":2901,"mutability":"mutable","name":"i","nameLocation":"1348:1:9","nodeType":"VariableDeclaration","scope":2925,"src":"1340:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1340:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2903,"initialValue":{"hexValue":"30","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1352:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1340:13:9"},"loopExpression":{"expression":{"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1377:3:9","subExpression":{"id":2908,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1377:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2910,"nodeType":"ExpressionStatement","src":"1377:3:9"},"nodeType":"ForStatement","src":"1335:171:9"}]},"id":2927,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceFeed","nameLocation":"1168:12:9","nodeType":"FunctionDefinition","parameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"_token","nameLocation":"1199:6:9","nodeType":"VariableDeclaration","scope":2927,"src":"1191:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2886,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1180:32:9"},"returnParameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"priceFeed","nameLocation":"1258:9:9","nodeType":"VariableDeclaration","scope":2927,"src":"1236:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2890,"nodeType":"UserDefinedTypeName","pathNode":{"id":2889,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":397,"src":"1236:21:9"},"referencedDeclaration":397,"src":"1236:21:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"1235:33:9"},"scope":2954,"src":"1159:354:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2952,"nodeType":"Block","src":"1589:172:9","statements":[{"assignments":[2936],"declarations":[{"constant":false,"id":2936,"mutability":"mutable","name":"priceFeed","nameLocation":"1622:9:9","nodeType":"VariableDeclaration","scope":2952,"src":"1600:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2935,"nodeType":"UserDefinedTypeName","pathNode":{"id":2934,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":397,"src":"1600:21:9"},"referencedDeclaration":397,"src":"1600:21:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":2940,"initialValue":{"arguments":[{"id":2938,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"1647:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2937,"name":"getPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"1634:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_contract$_AggregatorV3Interface_$397_$","typeString":"function (address) view returns (contract AggregatorV3Interface)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1634:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1600:56:9"},{"assignments":[null,2942,null,null,null],"declarations":[null,{"constant":false,"id":2942,"mutability":"mutable","name":"answer","nameLocation":"1677:6:9","nodeType":"VariableDeclaration","scope":2952,"src":"1670:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2941,"name":"int256","nodeType":"ElementaryTypeName","src":"1670:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":2946,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2943,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"1693:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$397","typeString":"contract AggregatorV3Interface"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":396,"src":"1693:25:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1693:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1667:53:9"},{"expression":{"arguments":[{"id":2949,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"1746:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1738:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1738:7:9","typeDescriptions":{}}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1738:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2933,"id":2951,"nodeType":"Return","src":"1731:22:9"}]},"functionSelector":"41976e09","id":2953,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"1530:8:9","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"_address","nameLocation":"1547:8:9","nodeType":"VariableDeclaration","scope":2953,"src":"1539:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1538:18:9"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2953,"src":"1580:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1579:9:9"},"scope":2954,"src":"1521:240:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2955,"src":"194:1570:9","usedErrors":[]}],"src":"33:1733:9"},"id":9},"contracts/TradingFees.sol":{"ast":{"absolutePath":"contracts/TradingFees.sol","exportedSymbols":{"AggregatorV3Interface":[397],"Context":[635],"ERC20":[1534],"Exchange":[2785],"IERC20":[588],"IERC20Metadata":[613],"Ownable":[510],"PriceChecker":[2954],"SafeMath":[947],"TradingFees":[3184],"Wallet":[3859],"fillLogic":[4606]},"id":3185,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2956,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:10"},{"absolutePath":"contracts/PriceChecker.sol","file":"./PriceChecker.sol","id":2957,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3185,"sourceUnit":2955,"src":"62:28:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Wallet.sol","file":"./Wallet.sol","id":2958,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3185,"sourceUnit":3860,"src":"92:22:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2959,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3185,"sourceUnit":948,"src":"189:57:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":2960,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3185,"sourceUnit":398,"src":"248:76:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2961,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3185,"sourceUnit":511,"src":"326:52:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2962,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"406:7:10"},"id":2963,"nodeType":"InheritanceSpecifier","src":"406:7:10"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3184,"linearizedBaseContracts":[3184,510,635],"name":"TradingFees","nameLocation":"391:11:10","nodeType":"ContractDefinition","nodes":[{"id":2966,"libraryName":{"id":2964,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":947,"src":"924:8:10"},"nodeType":"UsingForDirective","src":"918:27:10","typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2971,"mutability":"mutable","name":"decimals","nameLocation":"998:8:10","nodeType":"VariableDeclaration","scope":3184,"src":"990:27:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1009:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1015:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1009:8:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":false,"functionSelector":"be22f546","id":2977,"mutability":"mutable","name":"daiToken","nameLocation":"1039:8:10","nodeType":"VariableDeclaration","scope":3184,"src":"1024:86:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2972,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307842613844436544333531323932356535324645363762316235333239313837353839303732413535","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1067:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xBa8DCeD3512925e52FE67b1b5329187589072A55"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1059:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2973,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:10","typeDescriptions":{}}},"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1059:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"1a38a4fb","id":2983,"mutability":"mutable","name":"aDAI","nameLocation":"1157:4:10","nodeType":"VariableDeclaration","scope":3184,"src":"1142:73:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2978,"name":"address","nodeType":"ElementaryTypeName","src":"1142:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307841444439384230333432653430393445633332663362363743636664333234324338373666663761","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1172:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1164:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2979,"name":"address","nodeType":"ElementaryTypeName","src":"1164:7:10","typeDescriptions":{}}},"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1164:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2986,"mutability":"mutable","name":"priceFeed","nameLocation":"1268:9:10","nodeType":"VariableDeclaration","scope":3184,"src":"1247:30:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"},"typeName":{"id":2985,"nodeType":"UserDefinedTypeName","pathNode":{"id":2984,"name":"PriceChecker","nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"1247:12:10"},"referencedDeclaration":2954,"src":"1247:12:10","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"visibility":"private"},{"constant":false,"id":2989,"mutability":"mutable","name":"wallet","nameLocation":"1291:6:10","nodeType":"VariableDeclaration","scope":3184,"src":"1284:13:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"},"typeName":{"id":2988,"nodeType":"UserDefinedTypeName","pathNode":{"id":2987,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"1284:6:10"},"referencedDeclaration":3859,"src":"1284:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"visibility":"internal"},{"body":{"id":3000,"nodeType":"Block","src":"1348:65:10","statements":[{"expression":{"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2994,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"1359:9:10","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2996,"name":"_priceCheckerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"1384:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2995,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"1371:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2954_$","typeString":"type(contract PriceChecker)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1371:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"src":"1359:46:10","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"id":2999,"nodeType":"ExpressionStatement","src":"1359:46:10"}]},"id":3001,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"_priceCheckerAddress","nameLocation":"1326:20:10","nodeType":"VariableDeclaration","scope":3001,"src":"1318:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"1318:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1317:30:10"},"returnParameters":{"id":2993,"nodeType":"ParameterList","parameters":[],"src":"1348:0:10"},"scope":3184,"src":"1306:107:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3054,"nodeType":"Block","src":"1559:542:10","statements":[{"assignments":[3013],"declarations":[{"constant":false,"id":3013,"mutability":"mutable","name":"priceOfToken","nameLocation":"1805:12:10","nodeType":"VariableDeclaration","scope":3054,"src":"1797:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3018,"initialValue":{"arguments":[{"id":3016,"name":"_refToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"1839:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3014,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"1820:9:10","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2953,"src":"1820:18:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1820:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1797:52:10"},{"assignments":[3020],"declarations":[{"constant":false,"id":3020,"mutability":"mutable","name":"value","nameLocation":"1888:5:10","nodeType":"VariableDeclaration","scope":3054,"src":"1880:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1880:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3042,"initialValue":{"arguments":[{"id":3040,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"1995:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1969:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1975:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1969:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":3031,"name":"priceOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"1952:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"1952:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1952:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":3027,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"1937:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":3023,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"1925:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3021,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"1913:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"1913:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1913:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1912:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"1912:24:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1912:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1911:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"1911:40:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1911:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1896:94:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"1896:98:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1896:108:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1880:124:10"},{"assignments":[3044],"declarations":[{"constant":false,"id":3044,"mutability":"mutable","name":"fees","nameLocation":"2023:4:10","nodeType":"VariableDeclaration","scope":3054,"src":"2015:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2015:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3051,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2040:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2046:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2040:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}],"expression":{"id":3045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"2030:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"2030:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2030:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2015:33:10"},{"expression":{"id":3052,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"2068:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3011,"id":3053,"nodeType":"Return","src":"2061:11:10"}]},"functionSelector":"513ffedd","id":3055,"implemented":true,"kind":"function","modifiers":[],"name":"calculateFees","nameLocation":"1430:13:10","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"_amount","nameLocation":"1462:7:10","nodeType":"VariableDeclaration","scope":3055,"src":"1454:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1454:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"_rate","nameLocation":"1488:5:10","nodeType":"VariableDeclaration","scope":3055,"src":"1480:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3004,"name":"uint256","nodeType":"ElementaryTypeName","src":"1480:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"_refToken","nameLocation":"1512:9:10","nodeType":"VariableDeclaration","scope":3055,"src":"1504:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3006,"name":"address","nodeType":"ElementaryTypeName","src":"1504:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1443:85:10"},"returnParameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3055,"src":"1550:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"1550:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:9:10"},"scope":3184,"src":"1421:680:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3089,"nodeType":"Block","src":"2223:199:10","statements":[{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"aDAI_Price","nameLocation":"2242:10:10","nodeType":"VariableDeclaration","scope":3089,"src":"2234:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3068,"initialValue":{"arguments":[{"id":3066,"name":"daiToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2274:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3064,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"2255:9:10","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2953,"src":"2255:18:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2255:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2234:49:10"},{"assignments":[3070],"declarations":[{"constant":false,"id":3070,"mutability":"mutable","name":"amt","nameLocation":"2329:3:10","nodeType":"VariableDeclaration","scope":3089,"src":"2321:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"2321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3083,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2374:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2380:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2374:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":3076,"name":"aDAI_Price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"2359:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"2359:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2359:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3073,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"2345:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3071,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"2335:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"2335:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"2335:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2321:63:10"},{"expression":{"arguments":[{"id":3086,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"2410:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2402:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"2402:7:10","typeDescriptions":{}}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2402:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3061,"id":3088,"nodeType":"Return","src":"2395:19:10"}]},"functionSelector":"a42963e9","id":3090,"implemented":true,"kind":"function","modifiers":[],"name":"amountaDAIToDeduct","nameLocation":"2159:18:10","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"_fees","nameLocation":"2186:5:10","nodeType":"VariableDeclaration","scope":3090,"src":"2178:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2177:15:10"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3090,"src":"2214:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2214:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2213:9:10"},"scope":3184,"src":"2150:272:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3126,"nodeType":"Block","src":"2593:192:10","statements":[{"assignments":[3100],"declarations":[{"constant":false,"id":3100,"mutability":"mutable","name":"priceOfToken","nameLocation":"2612:12:10","nodeType":"VariableDeclaration","scope":3126,"src":"2604:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2604:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3105,"initialValue":{"arguments":[{"id":3103,"name":"_refToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"2646:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3101,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"2627:9:10","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":2953,"src":"2627:18:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2627:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2604:52:10"},{"assignments":[3107],"declarations":[{"constant":false,"id":3107,"mutability":"mutable","name":"amt","nameLocation":"2690:3:10","nodeType":"VariableDeclaration","scope":3126,"src":"2682:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"2682:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3120,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2737:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2743:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2737:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":3113,"name":"priceOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"2720:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"2720:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2720:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3110,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"2706:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3108,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"2696:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"2696:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2696:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"2696:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2696:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2682:65:10"},{"expression":{"arguments":[{"id":3123,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"2773:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2765:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2765:7:10","typeDescriptions":{}}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2765:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3098,"id":3125,"nodeType":"Return","src":"2758:19:10"}]},"functionSelector":"b98ee419","id":3127,"implemented":true,"kind":"function","modifiers":[],"name":"amountTokensToDeduct","nameLocation":"2483:20:10","nodeType":"FunctionDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"_refToken","nameLocation":"2522:9:10","nodeType":"VariableDeclaration","scope":3127,"src":"2514:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3091,"name":"address","nodeType":"ElementaryTypeName","src":"2514:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"_fees","nameLocation":"2550:5:10","nodeType":"VariableDeclaration","scope":3127,"src":"2542:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2503:59:10"},"returnParameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"2584:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2583:9:10"},"scope":3184,"src":"2474:311:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3154,"nodeType":"Block","src":"2904:155:10","statements":[{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"amtDAI","nameLocation":"2923:6:10","nodeType":"VariableDeclaration","scope":3154,"src":"2915:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3141,"initialValue":{"arguments":[{"id":3139,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"2951:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3138,"name":"amountaDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"2932:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2932:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2915:42:10"},{"assignments":[3143],"declarations":[{"constant":false,"id":3143,"mutability":"mutable","name":"balance","nameLocation":"2976:7:10","nodeType":"VariableDeclaration","scope":3154,"src":"2968:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3149,"initialValue":{"arguments":[{"id":3146,"name":"aDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"3002:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3147,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"3008:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3144,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"2986:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"s_tokens","nodeType":"MemberAccess","referencedDeclaration":3218,"src":"2986:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2986:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:46:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3034:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3151,"name":"amtDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"3045:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3034:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3135,"id":3153,"nodeType":"Return","src":"3027:24:10"}]},"functionSelector":"ca8963f1","id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"checkSufficientaDAI","nameLocation":"2802:19:10","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"_fees","nameLocation":"2840:5:10","nodeType":"VariableDeclaration","scope":3155,"src":"2832:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2832:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"_user","nameLocation":"2864:5:10","nodeType":"VariableDeclaration","scope":3155,"src":"2856:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3130,"name":"address","nodeType":"ElementaryTypeName","src":"2856:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2821:55:10"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"2898:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3133,"name":"bool","nodeType":"ElementaryTypeName","src":"2898:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2897:6:10"},"scope":3184,"src":"2793:266:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3168,"nodeType":"Block","src":"3134:50:10","statements":[{"expression":{"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3162,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"3145:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3164,"name":"_Walletaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"3161:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3163,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"3154:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3859_$","typeString":"type(contract Wallet)"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3154:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"src":"3145:31:10","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":3167,"nodeType":"ExpressionStatement","src":"3145:31:10"}]},"functionSelector":"ac1a386a","id":3169,"implemented":true,"kind":"function","modifiers":[{"id":3160,"kind":"modifierInvocation","modifierName":{"id":3159,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"3124:9:10"},"nodeType":"ModifierInvocation","src":"3124:9:10"}],"name":"setWalletAddress","nameLocation":"3076:16:10","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"_Walletaddress","nameLocation":"3101:14:10","nodeType":"VariableDeclaration","scope":3169,"src":"3093:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3156,"name":"address","nodeType":"ElementaryTypeName","src":"3093:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3092:24:10"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[],"src":"3134:0:10"},"scope":3184,"src":"3067:117:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3182,"nodeType":"Block","src":"3287:65:10","statements":[{"expression":{"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3176,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"3298:9:10","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3178,"name":"_PriceCheckeraddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"3323:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3177,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"3310:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$2954_$","typeString":"type(contract PriceChecker)"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3310:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"src":"3298:46:10","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$2954","typeString":"contract PriceChecker"}},"id":3181,"nodeType":"ExpressionStatement","src":"3298:46:10"}]},"functionSelector":"b136e39a","id":3183,"implemented":true,"kind":"function","modifiers":[{"id":3174,"kind":"modifierInvocation","modifierName":{"id":3173,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"3277:9:10"},"nodeType":"ModifierInvocation","src":"3277:9:10"}],"name":"setPriceCheckerAddress","nameLocation":"3201:22:10","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"_PriceCheckeraddress","nameLocation":"3242:20:10","nodeType":"VariableDeclaration","scope":3183,"src":"3234:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"3234:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3223:46:10"},"returnParameters":{"id":3175,"nodeType":"ParameterList","parameters":[],"src":"3287:0:10"},"scope":3184,"src":"3192:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3185,"src":"382:2973:10","usedErrors":[]}],"src":"35:3322:10"},"id":10},"contracts/Wallet.sol":{"ast":{"absolutePath":"contracts/Wallet.sol","exportedSymbols":{"AggregatorV3Interface":[397],"Context":[635],"ERC20":[1534],"Exchange":[2785],"IERC20":[588],"IERC20Metadata":[613],"Ownable":[510],"SafeMath":[947],"TradingFees":[3184],"Wallet":[3859],"fillLogic":[4606]},"id":3860,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3186,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:11"},{"absolutePath":"contracts/ERC20.sol","file":"./ERC20.sol","id":3187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3860,"sourceUnit":1535,"src":"62:21:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Exchange.sol","file":"./Exchange.sol","id":3188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3860,"sourceUnit":2786,"src":"85:24:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/fillLogic.sol","file":"./fillLogic.sol","id":3189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3860,"sourceUnit":4607,"src":"111:25:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":3190,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3860,"sourceUnit":948,"src":"211:57:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":3191,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3860,"sourceUnit":398,"src":"270:76:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3192,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3860,"sourceUnit":511,"src":"348:52:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3193,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"423:7:11"},"id":3194,"nodeType":"InheritanceSpecifier","src":"423:7:11"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3859,"linearizedBaseContracts":[3859,510,635],"name":"Wallet","nameLocation":"413:6:11","nodeType":"ContractDefinition","nodes":[{"id":3197,"libraryName":{"id":3195,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":947,"src":"444:8:11"},"nodeType":"UsingForDirective","src":"438:27:11","typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"457:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"664a1ad6","id":3199,"mutability":"mutable","name":"fundWallet","nameLocation":"525:10:11","nodeType":"VariableDeclaration","scope":3859,"src":"510:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"510:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":3202,"mutability":"mutable","name":"decimals","nameLocation":"550:8:11","nodeType":"VariableDeclaration","scope":3859,"src":"542:21:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3138","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"561:2:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"internal"},{"constant":false,"functionSelector":"1a38a4fb","id":3204,"mutability":"mutable","name":"aDAI","nameLocation":"585:4:11","nodeType":"VariableDeclaration","scope":3859,"src":"570:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"570:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":3206,"mutability":"mutable","name":"locked","nameLocation":"647:6:11","nodeType":"VariableDeclaration","scope":3859,"src":"634:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3205,"name":"bool","nodeType":"ElementaryTypeName","src":"634:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"functionSelector":"7bf1a627","id":3212,"mutability":"mutable","name":"ethToken","nameLocation":"677:8:11","nodeType":"VariableDeclaration","scope":3859,"src":"662:36:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"662:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"696:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"688:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3208,"name":"address","nodeType":"ElementaryTypeName","src":"688:7:11","typeDescriptions":{}}},"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"688:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cd5d767c","id":3218,"mutability":"mutable","name":"s_tokens","nameLocation":"762:8:11","nodeType":"VariableDeclaration","scope":3859,"src":"707:63:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":3217,"keyType":{"id":3213,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"707:47:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":3216,"keyType":{"id":3214,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"726:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"4bdde1cf","id":3224,"mutability":"mutable","name":"lockedFunds","nameLocation":"872:11:11","nodeType":"VariableDeclaration","scope":3859,"src":"817:66:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":3223,"keyType":{"id":3219,"name":"address","nodeType":"ElementaryTypeName","src":"825:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"817:47:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":3222,"keyType":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"836:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":3227,"mutability":"mutable","name":"exchange","nameLocation":"901:8:11","nodeType":"VariableDeclaration","scope":3859,"src":"892:17:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"},"typeName":{"id":3226,"nodeType":"UserDefinedTypeName","pathNode":{"id":3225,"name":"Exchange","nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"892:8:11"},"referencedDeclaration":2785,"src":"892:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"fillContract","nameLocation":"926:12:11","nodeType":"VariableDeclaration","scope":3859,"src":"916:22:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_fillLogic_$4606","typeString":"contract fillLogic"},"typeName":{"id":3229,"nodeType":"UserDefinedTypeName","pathNode":{"id":3228,"name":"fillLogic","nodeType":"IdentifierPath","referencedDeclaration":4606,"src":"916:9:11"},"referencedDeclaration":4606,"src":"916:9:11","typeDescriptions":{"typeIdentifier":"t_contract$_fillLogic_$4606","typeString":"contract fillLogic"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"token","nameLocation":"952:5:11","nodeType":"VariableDeclaration","scope":3859,"src":"945:12:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"},"typeName":{"id":3232,"nodeType":"UserDefinedTypeName","pathNode":{"id":3231,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":588,"src":"945:6:11"},"referencedDeclaration":588,"src":"945:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"visibility":"internal"},{"anonymous":false,"id":3243,"name":"Deposit","nameLocation":"972:7:11","nodeType":"EventDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"988:5:11","nodeType":"VariableDeclaration","scope":3243,"src":"980:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3237,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1003:4:11","nodeType":"VariableDeclaration","scope":3243,"src":"995:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"995:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3239,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1017:6:11","nodeType":"VariableDeclaration","scope":3243,"src":"1009:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1009:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3241,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"1033:7:11","nodeType":"VariableDeclaration","scope":3243,"src":"1025:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"1025:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"979:62:11"},"src":"966:76:11"},{"anonymous":false,"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"1050:48:11","text":"@notice Event when amount withdrawn exchange"},"id":3254,"name":"Withdraw","nameLocation":"1110:8:11","nodeType":"EventDefinition","parameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1137:5:11","nodeType":"VariableDeclaration","scope":3254,"src":"1129:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3248,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1161:4:11","nodeType":"VariableDeclaration","scope":3254,"src":"1153:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3247,"name":"address","nodeType":"ElementaryTypeName","src":"1153:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3250,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1184:6:11","nodeType":"VariableDeclaration","scope":3254,"src":"1176:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1176:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3252,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"1209:7:11","nodeType":"VariableDeclaration","scope":3254,"src":"1201:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1201:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1118:105:11"},"src":"1104:120:11"},{"body":{"id":3279,"nodeType":"Block","src":"1271:225:11","statements":[{"expression":{"arguments":[{"id":3258,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"1296:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1306:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1306:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3261,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1318:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1318:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1329:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3257,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"1282:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1282:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3265,"nodeType":"ExpressionStatement","src":"1282:52:11"},{"eventCall":{"arguments":[{"id":3267,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"1374:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3268,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1397:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1397:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3270,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1422:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1422:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3273,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"1456:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1466:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1466:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3272,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"1446:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1446:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3266,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"1352:7:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1352:136:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3278,"nodeType":"EmitStatement","src":"1347:141:11"}]},"functionSelector":"f6326fb3","id":3280,"implemented":true,"kind":"function","modifiers":[],"name":"depositETH","nameLocation":"1241:10:11","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[],"src":"1251:2:11"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[],"src":"1271:0:11"},"scope":3859,"src":"1232:264:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3352,"nodeType":"Block","src":"1551:657:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":3293,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1653:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1653:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3295,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"1665:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3292,"name":"getlockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"1638:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1638:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3287,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"1594:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3288,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1604:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1604:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3286,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"1584:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1584:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"1584:35:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1584:105:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3298,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"1693:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1584:116:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e63652045544820746f207769746864726177","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1715:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","typeString":"literal_string \"Insufficient balance ETH to withdraw\""},"value":"Insufficient balance ETH to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","typeString":"literal_string \"Insufficient balance ETH to withdraw\""}],"id":3285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1562:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1562:202:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3302,"nodeType":"ExpressionStatement","src":"1562:202:11"},{"expression":{"arguments":[{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1783:7:11","subExpression":{"id":3304,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"1784:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1792:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":3303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1775:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1775:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3308,"nodeType":"ExpressionStatement","src":"1775:44:11"},{"expression":{"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3309,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"1830:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1839:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1830:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3312,"nodeType":"ExpressionStatement","src":"1830:13:11"},{"expression":{"arguments":[{"id":3314,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"1868:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3315,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1878:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1878:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3317,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"1890:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1899:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3313,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"1854:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1854:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3320,"nodeType":"ExpressionStatement","src":"1854:51:11"},{"assignments":[3322,null],"declarations":[{"constant":false,"id":3322,"mutability":"mutable","name":"success","nameLocation":"1922:7:11","nodeType":"VariableDeclaration","scope":3352,"src":"1917:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3321,"name":"bool","nodeType":"ElementaryTypeName","src":"1917:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3330,"initialValue":{"arguments":[{"hexValue":"","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1967:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":3323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1935:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1935:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1935:15:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3326,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"1958:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1935:31:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1935:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1916:54:11"},{"expression":{"arguments":[{"id":3332,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"1989:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f2073656e6420616d6f756e74","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1998:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","typeString":"literal_string \"failed to send amount\""},"value":"failed to send amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","typeString":"literal_string \"failed to send amount\""}],"id":3331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1981:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1981:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3335,"nodeType":"ExpressionStatement","src":"1981:41:11"},{"expression":{"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3336,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"2033:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2042:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2033:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3339,"nodeType":"ExpressionStatement","src":"2033:14:11"},{"eventCall":{"arguments":[{"id":3341,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"2088:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3342,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2111:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2111:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3344,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"2136:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3346,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"2168:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3347,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2178:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2178:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3345,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"2158:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2158:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3340,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"2065:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2065:135:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3351,"nodeType":"EmitStatement","src":"2060:140:11"}]},"functionSelector":"f14210a6","id":3353,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawETH","nameLocation":"1513:11:11","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"_amount","nameLocation":"1533:7:11","nodeType":"VariableDeclaration","scope":3353,"src":"1525:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1524:17:11"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[],"src":"1551:0:11"},"scope":3859,"src":"1504:704:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3429,"nodeType":"Block","src":"2424:782:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"2443:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3364,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"2453:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2443:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420546f6b656e2054797065","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2463:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca","typeString":"literal_string \"Invalid Token Type\""},"value":"Invalid Token Type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca","typeString":"literal_string \"Invalid Token Type\""}],"id":3362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2435:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2435:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3368,"nodeType":"ExpressionStatement","src":"2435:49:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3372,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"2542:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3370,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"2517:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isVerifiedToken","nodeType":"MemberAccess","referencedDeclaration":2668,"src":"2517:24:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"2553:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3375,"name":"aDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"2563:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2553:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2517:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2582:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""},"value":"Token not verified on Exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""}],"id":3369,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2495:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2495:130:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3380,"nodeType":"ExpressionStatement","src":"2495:130:11"},{"expression":{"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3381,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"2702:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3383,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"2717:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3382,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"2710:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$588_$","typeString":"type(contract IERC20)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2710:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"src":"2702:22:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"id":3386,"nodeType":"ExpressionStatement","src":"2702:22:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3390,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2813:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2813:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3394,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2833:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}],"id":3393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2825:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3392,"name":"address","nodeType":"ElementaryTypeName","src":"2825:7:11","typeDescriptions":{}}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2825:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3396,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3388,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"2794:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":587,"src":"2794:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2794:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20417070726f76616c20796574","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2863:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","typeString":"literal_string \"No Approval yet\""},"value":"No Approval yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","typeString":"literal_string \"No Approval yet\""}],"id":3387,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2772:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:119:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3400,"nodeType":"ExpressionStatement","src":"2772:119:11"},{"expression":{"arguments":[{"id":3402,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"2932:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2953:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2953:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2990:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3410,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"3009:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3408,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"2996:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"2996:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2996:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2990:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3405,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2978:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"2978:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2978:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3035:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3401,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"2904:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2904:146:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3416,"nodeType":"ExpressionStatement","src":"2904:146:11"},{"eventCall":{"arguments":[{"id":3418,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"3090:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3111:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3111:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3421,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"3136:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3423,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"3168:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3424,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3176:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3176:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3422,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"3158:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3158:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3417,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"3068:7:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3068:130:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3428,"nodeType":"EmitStatement","src":"3063:135:11"}]},"functionSelector":"99c6d2de","id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"2316:12:11","nodeType":"FunctionDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"_token","nameLocation":"2347:6:11","nodeType":"VariableDeclaration","scope":3430,"src":"2339:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3354,"name":"address","nodeType":"ElementaryTypeName","src":"2339:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"_amount","nameLocation":"2372:7:11","nodeType":"VariableDeclaration","scope":3430,"src":"2364:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2364:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3359,"mutability":"mutable","name":"_decimals","nameLocation":"2398:9:11","nodeType":"VariableDeclaration","scope":3430,"src":"2390:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2390:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2328:86:11"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[],"src":"2424:0:11"},"scope":3859,"src":"2307:899:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3536,"nodeType":"Block","src":"3332:984:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3440,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"3351:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3441,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3361:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3351:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3343:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3343:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3444,"nodeType":"ExpressionStatement","src":"3343:27:11"},{"expression":{"arguments":[{"arguments":[{"id":3448,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"3428:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3446,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3403:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isVerifiedToken","nodeType":"MemberAccess","referencedDeclaration":2668,"src":"3403:24:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3403:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3450:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""},"value":"Token not verified on Exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""}],"id":3445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3381:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3381:112:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3452,"nodeType":"ExpressionStatement","src":"3381:112:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":3461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3595:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3595:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3463,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"3607:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3460,"name":"getlockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"3580:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3580:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3455,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"3538:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3456,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3546:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3546:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3454,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"3528:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3528:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"3528:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3528:101:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3466,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"3633:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3528:112:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420546f6b656e7320746f207769746864726177","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3655:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","typeString":"literal_string \"Insufficient Tokens to withdraw\""},"value":"Insufficient Tokens to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","typeString":"literal_string \"Insufficient Tokens to withdraw\""}],"id":3453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3506:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3506:193:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3470,"nodeType":"ExpressionStatement","src":"3506:193:11"},{"expression":{"arguments":[{"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3718:7:11","subExpression":{"id":3472,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"3719:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3727:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":3471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3710:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3476,"nodeType":"ExpressionStatement","src":"3710:44:11"},{"expression":{"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3477,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"3765:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3774:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3765:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3480,"nodeType":"ExpressionStatement","src":"3765:13:11"},{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3481,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"3791:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3483,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"3806:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3482,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"3799:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$588_$","typeString":"type(contract IERC20)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3799:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"src":"3791:22:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"id":3486,"nodeType":"ExpressionStatement","src":"3791:22:11"},{"expression":{"arguments":[{"id":3488,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"3852:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3873:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3873:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3910:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3496,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"3929:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3494,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"3916:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"3916:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3916:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3910:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3491,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"3898:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"3898:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3898:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3955:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3487,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"3824:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3824:147:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3502,"nodeType":"ExpressionStatement","src":"3824:147:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4037:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4037:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4078:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3513,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"4097:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3511,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"4084:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"4084:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4084:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4078:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3508,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"4066:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"4066:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4066:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3504,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"4004:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":555,"src":"4004:14:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4004:119:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3982:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3982:152:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3519,"nodeType":"ExpressionStatement","src":"3982:152:11"},{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3520,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"4147:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4156:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4147:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3523,"nodeType":"ExpressionStatement","src":"4147:14:11"},{"eventCall":{"arguments":[{"id":3525,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"4200:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4221:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4221:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3528,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"4246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3530,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"4278:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4286:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4286:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3529,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"4268:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4268:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3524,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"4177:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4177:131:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3535,"nodeType":"EmitStatement","src":"4172:136:11"}]},"functionSelector":"96c0ec55","id":3537,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"3223:13:11","nodeType":"FunctionDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"_token","nameLocation":"3255:6:11","nodeType":"VariableDeclaration","scope":3537,"src":"3247:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3431,"name":"address","nodeType":"ElementaryTypeName","src":"3247:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3434,"mutability":"mutable","name":"_amount","nameLocation":"3280:7:11","nodeType":"VariableDeclaration","scope":3537,"src":"3272:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"_decimals","nameLocation":"3306:9:11","nodeType":"VariableDeclaration","scope":3537,"src":"3298:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3298:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3236:86:11"},"returnParameters":{"id":3438,"nodeType":"ParameterList","parameters":[],"src":"3332:0:11"},"scope":3859,"src":"3214:1102:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3552,"nodeType":"Block","src":"4434:52:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3546,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"4452:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3548,"indexExpression":{"id":3547,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"4464:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4452:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3550,"indexExpression":{"id":3549,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"4471:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4452:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3545,"id":3551,"nodeType":"Return","src":"4445:33:11"}]},"functionSelector":"4fc121db","id":3553,"implemented":true,"kind":"function","modifiers":[],"name":"getlockedFunds","nameLocation":"4333:14:11","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"_user","nameLocation":"4366:5:11","nodeType":"VariableDeclaration","scope":3553,"src":"4358:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3538,"name":"address","nodeType":"ElementaryTypeName","src":"4358:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"_token","nameLocation":"4390:6:11","nodeType":"VariableDeclaration","scope":3553,"src":"4382:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3540,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4347:56:11"},"returnParameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3553,"src":"4425:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"4425:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4424:9:11"},"scope":3859,"src":"4324:162:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3573,"nodeType":"Block","src":"4652:67:11","statements":[{"expression":{"arguments":[{"id":3567,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"4681:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3568,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"4688:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3569,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"4696:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3570,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"4705:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3566,"name":"updateLockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"4663:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4663:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3572,"nodeType":"ExpressionStatement","src":"4663:48:11"}]},"functionSelector":"fc11a3d6","id":3574,"implemented":true,"kind":"function","modifiers":[{"id":3564,"kind":"modifierInvocation","modifierName":{"id":3563,"name":"isExchange","nodeType":"IdentifierPath","referencedDeclaration":3858,"src":"4641:10:11"},"nodeType":"ModifierInvocation","src":"4641:10:11"}],"name":"exchangeUpdateLockedFunds","nameLocation":"4503:25:11","nodeType":"FunctionDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"_user","nameLocation":"4547:5:11","nodeType":"VariableDeclaration","scope":3574,"src":"4539:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3554,"name":"address","nodeType":"ElementaryTypeName","src":"4539:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"_token","nameLocation":"4571:6:11","nodeType":"VariableDeclaration","scope":3574,"src":"4563:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3556,"name":"address","nodeType":"ElementaryTypeName","src":"4563:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3559,"mutability":"mutable","name":"_amount","nameLocation":"4596:7:11","nodeType":"VariableDeclaration","scope":3574,"src":"4588:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"4588:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"isAdd","nameLocation":"4619:5:11","nodeType":"VariableDeclaration","scope":3574,"src":"4614:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3560,"name":"bool","nodeType":"ElementaryTypeName","src":"4614:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4528:103:11"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[],"src":"4652:0:11"},"scope":3859,"src":"4494:225:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3622,"nodeType":"Block","src":"4866:301:11","statements":[{"condition":{"id":3585,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"4881:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5025:6:11","subExpression":{"id":3602,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"5026:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3620,"nodeType":"IfStatement","src":"5021:139:11","trueBody":{"id":3619,"nodeType":"Block","src":"5033:127:11","statements":[{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3604,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"5048:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3607,"indexExpression":{"id":3605,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"5060:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5048:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3608,"indexExpression":{"id":3606,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"5067:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5048:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3615,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"5126:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3609,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"5077:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3611,"indexExpression":{"id":3610,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"5089:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5077:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3613,"indexExpression":{"id":3612,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"5096:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5077:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"5077:30:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5077:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5048:100:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ExpressionStatement","src":"5048:100:11"}]}},"id":3621,"nodeType":"IfStatement","src":"4877:283:11","trueBody":{"id":3601,"nodeType":"Block","src":"4888:127:11","statements":[{"expression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3586,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"4903:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3589,"indexExpression":{"id":3587,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"4915:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4903:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3590,"indexExpression":{"id":3588,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"4922:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4903:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3597,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"4981:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3591,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"4932:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3593,"indexExpression":{"id":3592,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"4944:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4932:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3595,"indexExpression":{"id":3594,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"4951:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4932:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":811,"src":"4932:30:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4932:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4903:100:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"nodeType":"ExpressionStatement","src":"4903:100:11"}]}}]},"id":3623,"implemented":true,"kind":"function","modifiers":[],"name":"updateLockedFunds","nameLocation":"4736:17:11","nodeType":"FunctionDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"_user","nameLocation":"4772:5:11","nodeType":"VariableDeclaration","scope":3623,"src":"4764:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3575,"name":"address","nodeType":"ElementaryTypeName","src":"4764:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"_token","nameLocation":"4796:6:11","nodeType":"VariableDeclaration","scope":3623,"src":"4788:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3577,"name":"address","nodeType":"ElementaryTypeName","src":"4788:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"_amount","nameLocation":"4821:7:11","nodeType":"VariableDeclaration","scope":3623,"src":"4813:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"4813:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"isAdd","nameLocation":"4844:5:11","nodeType":"VariableDeclaration","scope":3623,"src":"4839:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3581,"name":"bool","nodeType":"ElementaryTypeName","src":"4839:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4753:103:11"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[],"src":"4866:0:11"},"scope":3859,"src":"4727:440:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3638,"nodeType":"Block","src":"5348:49:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3632,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5366:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3634,"indexExpression":{"id":3633,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"5375:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5366:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3636,"indexExpression":{"id":3635,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"5383:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5366:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3631,"id":3637,"nodeType":"Return","src":"5359:30:11"}]},"functionSelector":"f7888aec","id":3639,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"5252:9:11","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"_token","nameLocation":"5280:6:11","nodeType":"VariableDeclaration","scope":3639,"src":"5272:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3624,"name":"address","nodeType":"ElementaryTypeName","src":"5272:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"_user","nameLocation":"5305:5:11","nodeType":"VariableDeclaration","scope":3639,"src":"5297:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3626,"name":"address","nodeType":"ElementaryTypeName","src":"5297:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5261:56:11"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3639,"src":"5339:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5338:9:11"},"scope":3859,"src":"5243:154:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3659,"nodeType":"Block","src":"5559:63:11","statements":[{"expression":{"arguments":[{"id":3653,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"5584:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3654,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"5592:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3655,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"5599:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3656,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"5608:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3652,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"5570:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5570:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3658,"nodeType":"ExpressionStatement","src":"5570:44:11"}]},"functionSelector":"126b9c5d","id":3660,"implemented":true,"kind":"function","modifiers":[{"id":3650,"kind":"modifierInvocation","modifierName":{"id":3649,"name":"isExchange","nodeType":"IdentifierPath","referencedDeclaration":3858,"src":"5548:10:11"},"nodeType":"ModifierInvocation","src":"5548:10:11"}],"name":"exchangeUpdateBalance","nameLocation":"5414:21:11","nodeType":"FunctionDefinition","parameters":{"id":3648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3641,"mutability":"mutable","name":"_token","nameLocation":"5454:6:11","nodeType":"VariableDeclaration","scope":3660,"src":"5446:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3640,"name":"address","nodeType":"ElementaryTypeName","src":"5446:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3643,"mutability":"mutable","name":"_user","nameLocation":"5479:5:11","nodeType":"VariableDeclaration","scope":3660,"src":"5471:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3642,"name":"address","nodeType":"ElementaryTypeName","src":"5471:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3645,"mutability":"mutable","name":"_amount","nameLocation":"5503:7:11","nodeType":"VariableDeclaration","scope":3660,"src":"5495:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"5495:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3647,"mutability":"mutable","name":"isAdd","nameLocation":"5526:5:11","nodeType":"VariableDeclaration","scope":3660,"src":"5521:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3646,"name":"bool","nodeType":"ElementaryTypeName","src":"5521:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5435:103:11"},"returnParameters":{"id":3651,"nodeType":"ParameterList","parameters":[],"src":"5559:0:11"},"scope":3859,"src":"5405:217:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3708,"nodeType":"Block","src":"5765:225:11","statements":[{"condition":{"id":3671,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"5780:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5886:6:11","subExpression":{"id":3688,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"5887:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3706,"nodeType":"IfStatement","src":"5882:101:11","trueBody":{"id":3705,"nodeType":"Block","src":"5894:89:11","statements":[{"expression":{"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3690,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5909:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3693,"indexExpression":{"id":3691,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"5918:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5909:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3694,"indexExpression":{"id":3692,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"5926:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5909:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3701,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"5963:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3695,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5935:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3697,"indexExpression":{"id":3696,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"5944:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5935:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3699,"indexExpression":{"id":3698,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"5952:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5935:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"5935:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5935:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5909:62:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3704,"nodeType":"ExpressionStatement","src":"5909:62:11"}]}},"id":3707,"nodeType":"IfStatement","src":"5776:207:11","trueBody":{"id":3687,"nodeType":"Block","src":"5787:89:11","statements":[{"expression":{"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3672,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5802:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3675,"indexExpression":{"id":3673,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"5811:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5802:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3676,"indexExpression":{"id":3674,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"5819:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5802:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3683,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"5856:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3677,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"5828:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3679,"indexExpression":{"id":3678,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"5837:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5828:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3681,"indexExpression":{"id":3680,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"5845:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5828:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":811,"src":"5828:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5828:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5802:62:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3686,"nodeType":"ExpressionStatement","src":"5802:62:11"}]}}]},"id":3709,"implemented":true,"kind":"function","modifiers":[],"name":"updateBalance","nameLocation":"5639:13:11","nodeType":"FunctionDefinition","parameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"_token","nameLocation":"5671:6:11","nodeType":"VariableDeclaration","scope":3709,"src":"5663:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3661,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3664,"mutability":"mutable","name":"_user","nameLocation":"5696:5:11","nodeType":"VariableDeclaration","scope":3709,"src":"5688:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3663,"name":"address","nodeType":"ElementaryTypeName","src":"5688:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"_amount","nameLocation":"5720:7:11","nodeType":"VariableDeclaration","scope":3709,"src":"5712:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"5712:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3668,"mutability":"mutable","name":"isAdd","nameLocation":"5743:5:11","nodeType":"VariableDeclaration","scope":3709,"src":"5738:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3667,"name":"bool","nodeType":"ElementaryTypeName","src":"5738:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5652:103:11"},"returnParameters":{"id":3670,"nodeType":"ParameterList","parameters":[],"src":"5765:0:11"},"scope":3859,"src":"5630:360:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3720,"nodeType":"Block","src":"6062:43:11","statements":[{"expression":{"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3716,"name":"fundWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"6073:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3717,"name":"_fundwallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"6086:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6073:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3719,"nodeType":"ExpressionStatement","src":"6073:24:11"}]},"functionSelector":"5ec38bec","id":3721,"implemented":true,"kind":"function","modifiers":[{"id":3714,"kind":"modifierInvocation","modifierName":{"id":3713,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"6052:9:11"},"nodeType":"ModifierInvocation","src":"6052:9:11"}],"name":"updateFundWallet","nameLocation":"6007:16:11","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"_fundwallet","nameLocation":"6032:11:11","nodeType":"VariableDeclaration","scope":3721,"src":"6024:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3710,"name":"address","nodeType":"ElementaryTypeName","src":"6024:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6023:21:11"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[],"src":"6062:0:11"},"scope":3859,"src":"5998:107:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3791,"nodeType":"Block","src":"6187:593:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3729,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6278:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6278:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3731,"name":"fundWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"6292:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6278:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642046756e6457616c6c6574206164647265737320746f207769746864726177","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6317:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57","typeString":"literal_string \"Invalid FundWallet address to withdraw\""},"value":"Invalid FundWallet address to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57","typeString":"literal_string \"Invalid FundWallet address to withdraw\""}],"id":3728,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6256:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6256:112:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3735,"nodeType":"ExpressionStatement","src":"6256:112:11"},{"assignments":[3737],"declarations":[{"constant":false,"id":3737,"mutability":"mutable","name":"totalAmount","nameLocation":"6387:11:11","nodeType":"VariableDeclaration","scope":3791,"src":"6379:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"6379:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3743,"initialValue":{"baseExpression":{"baseExpression":{"id":3738,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"6401:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3740,"indexExpression":{"id":3739,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"6410:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6401:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3742,"indexExpression":{"id":3741,"name":"fundWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"6418:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6401:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6379:50:11"},{"assignments":[3745],"declarations":[{"constant":false,"id":3745,"mutability":"mutable","name":"actualAmount","nameLocation":"6448:12:11","nodeType":"VariableDeclaration","scope":3791,"src":"6440:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"6440:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3755,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6479:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3751,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"6498:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3749,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"6485:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"6485:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6485:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6479:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3746,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"6463:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"6463:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6463:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6440:69:11"},{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3756,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"6520:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3758,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"6535:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3757,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"6528:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$588_$","typeString":"type(contract IERC20)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6528:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"src":"6520:22:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"id":3761,"nodeType":"ExpressionStatement","src":"6520:22:11"},{"expression":{"arguments":[{"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6563:7:11","subExpression":{"id":3763,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"6564:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6572:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":3762,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6555:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6555:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3767,"nodeType":"ExpressionStatement","src":"6555:44:11"},{"expression":{"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3768,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"6610:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6619:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6610:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3771,"nodeType":"ExpressionStatement","src":"6610:13:11"},{"expression":{"arguments":[{"id":3773,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"6648:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3774,"name":"fundWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"6656:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3775,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"6668:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6681:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3772,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"6634:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6634:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3778,"nodeType":"ExpressionStatement","src":"6634:53:11"},{"expression":{"arguments":[{"arguments":[{"id":3782,"name":"fundWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"6721:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3783,"name":"actualAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"6733:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3780,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"6706:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$588","typeString":"contract IERC20"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":555,"src":"6706:14:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6706:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3779,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6698:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6698:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3786,"nodeType":"ExpressionStatement","src":"6698:49:11"},{"expression":{"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3787,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"6758:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6767:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6758:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3790,"nodeType":"ExpressionStatement","src":"6758:14:11"}]},"functionSelector":"5dfbfffd","id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToFundWallet","nameLocation":"6122:20:11","nodeType":"FunctionDefinition","parameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"_token","nameLocation":"6151:6:11","nodeType":"VariableDeclaration","scope":3792,"src":"6143:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"6143:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"_decimals","nameLocation":"6167:9:11","nodeType":"VariableDeclaration","scope":3792,"src":"6159:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"6159:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6142:35:11"},"returnParameters":{"id":3727,"nodeType":"ParameterList","parameters":[],"src":"6187:0:11"},"scope":3859,"src":"6113:667:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3805,"nodeType":"Block","src":"6862:56:11","statements":[{"expression":{"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3799,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"6873:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3801,"name":"_exchangeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"6893:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3800,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"6884:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6884:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"src":"6873:37:11","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":3804,"nodeType":"ExpressionStatement","src":"6873:37:11"}]},"functionSelector":"31415a65","id":3806,"implemented":true,"kind":"function","modifiers":[{"id":3797,"kind":"modifierInvocation","modifierName":{"id":3796,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"6852:9:11"},"nodeType":"ModifierInvocation","src":"6852:9:11"}],"name":"updateExchangeAddress","nameLocation":"6797:21:11","nodeType":"FunctionDefinition","parameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"_exchangeAddress","nameLocation":"6827:16:11","nodeType":"VariableDeclaration","scope":3806,"src":"6819:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3793,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:26:11"},"returnParameters":{"id":3798,"nodeType":"ParameterList","parameters":[],"src":"6862:0:11"},"scope":3859,"src":"6788:130:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3819,"nodeType":"Block","src":"6994:54:11","statements":[{"expression":{"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3813,"name":"fillContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"7005:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_fillLogic_$4606","typeString":"contract fillLogic"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3815,"name":"_contract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"7030:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3814,"name":"fillLogic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"7020:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_fillLogic_$4606_$","typeString":"type(contract fillLogic)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7020:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_fillLogic_$4606","typeString":"contract fillLogic"}},"src":"7005:35:11","typeDescriptions":{"typeIdentifier":"t_contract$_fillLogic_$4606","typeString":"contract fillLogic"}},"id":3818,"nodeType":"ExpressionStatement","src":"7005:35:11"}]},"functionSelector":"54419929","id":3820,"implemented":true,"kind":"function","modifiers":[{"id":3811,"kind":"modifierInvocation","modifierName":{"id":3810,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"6984:9:11"},"nodeType":"ModifierInvocation","src":"6984:9:11"}],"name":"updateFillLogicAddress","nameLocation":"6935:22:11","nodeType":"FunctionDefinition","parameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"_contract","nameLocation":"6966:9:11","nodeType":"VariableDeclaration","scope":3820,"src":"6958:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3807,"name":"address","nodeType":"ElementaryTypeName","src":"6958:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6957:19:11"},"returnParameters":{"id":3812,"nodeType":"ParameterList","parameters":[],"src":"6994:0:11"},"scope":3859,"src":"6926:122:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3834,"nodeType":"Block","src":"7118:43:11","statements":[{"expression":{"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3827,"name":"aDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"7129:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3830,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"7144:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7136:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3828,"name":"address","nodeType":"ElementaryTypeName","src":"7136:7:11","typeDescriptions":{}}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7136:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7129:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3833,"nodeType":"ExpressionStatement","src":"7129:24:11"}]},"functionSelector":"545e0157","id":3835,"implemented":true,"kind":"function","modifiers":[{"id":3825,"kind":"modifierInvocation","modifierName":{"id":3824,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"7108:9:11"},"nodeType":"ModifierInvocation","src":"7108:9:11"}],"name":"updateaDaiAddress","nameLocation":"7065:17:11","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"_address","nameLocation":"7091:8:11","nodeType":"VariableDeclaration","scope":3835,"src":"7083:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3821,"name":"address","nodeType":"ElementaryTypeName","src":"7083:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7082:18:11"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[],"src":"7118:0:11"},"scope":3859,"src":"7056:105:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3857,"nodeType":"Block","src":"7191:202:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3838,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7224:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7224:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3842,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"7246:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}],"id":3841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7238:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3840,"name":"address","nodeType":"ElementaryTypeName","src":"7238:7:11","typeDescriptions":{}}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7238:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7224:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3845,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7276:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7276:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3849,"name":"fillContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"7298:12:11","typeDescriptions":{"typeIdentifier":"t_contract$_fillLogic_$4606","typeString":"contract fillLogic"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_fillLogic_$4606","typeString":"contract fillLogic"}],"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7290:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3847,"name":"address","nodeType":"ElementaryTypeName","src":"7290:7:11","typeDescriptions":{}}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7290:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7276:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7224:87:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742045786368616e6765206f722066696c6c4f7264657220636f6e7472616374","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7326:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32","typeString":"literal_string \"Not Exchange or fillOrder contract\""},"value":"Not Exchange or fillOrder contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32","typeString":"literal_string \"Not Exchange or fillOrder contract\""}],"id":3837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7202:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7202:171:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3855,"nodeType":"ExpressionStatement","src":"7202:171:11"},{"id":3856,"nodeType":"PlaceholderStatement","src":"7384:1:11"}]},"id":3858,"name":"isExchange","nameLocation":"7178:10:11","nodeType":"ModifierDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[],"src":"7188:2:11"},"src":"7169:224:11","virtual":false,"visibility":"internal"}],"scope":3860,"src":"404:6992:11","usedErrors":[]}],"src":"35:7363:11"},"id":11},"contracts/fillLogic.sol":{"ast":{"absolutePath":"contracts/fillLogic.sol","exportedSymbols":{"Context":[635],"Exchange":[2785],"Ownable":[510],"SafeMath":[947],"TradingFees":[3184],"Wallet":[3859],"fillLogic":[4606]},"id":4607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3861,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:12"},{"absolutePath":"contracts/Exchange.sol","file":"./Exchange.sol","id":3862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4607,"sourceUnit":2786,"src":"60:24:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/TradingFees.sol","file":"./TradingFees.sol","id":3863,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4607,"sourceUnit":3185,"src":"86:27:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Wallet.sol","file":"./Wallet.sol","id":3864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4607,"sourceUnit":3860,"src":"115:22:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3865,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4607,"sourceUnit":511,"src":"141:52:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":3866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4607,"sourceUnit":948,"src":"195:57:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3867,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"278:7:12"},"id":3868,"nodeType":"InheritanceSpecifier","src":"278:7:12"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4606,"linearizedBaseContracts":[4606,510,635],"name":"fillLogic","nameLocation":"265:9:12","nodeType":"ContractDefinition","nodes":[{"id":3871,"libraryName":{"id":3869,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":947,"src":"299:8:12"},"nodeType":"UsingForDirective","src":"293:27:12","typeName":{"id":3870,"name":"uint256","nodeType":"ElementaryTypeName","src":"312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":3874,"mutability":"mutable","name":"exchange","nameLocation":"372:8:12","nodeType":"VariableDeclaration","scope":4606,"src":"363:17:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"},"typeName":{"id":3873,"nodeType":"UserDefinedTypeName","pathNode":{"id":3872,"name":"Exchange","nodeType":"IdentifierPath","referencedDeclaration":2785,"src":"363:8:12"},"referencedDeclaration":2785,"src":"363:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"tradingFees","nameLocation":"399:11:12","nodeType":"VariableDeclaration","scope":4606,"src":"387:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"},"typeName":{"id":3876,"nodeType":"UserDefinedTypeName","pathNode":{"id":3875,"name":"TradingFees","nodeType":"IdentifierPath","referencedDeclaration":3184,"src":"387:11:12"},"referencedDeclaration":3184,"src":"387:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"wallet","nameLocation":"424:6:12","nodeType":"VariableDeclaration","scope":4606,"src":"417:13:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"},"typeName":{"id":3879,"nodeType":"UserDefinedTypeName","pathNode":{"id":3878,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":3859,"src":"417:6:12"},"referencedDeclaration":3859,"src":"417:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"decimals","nameLocation":"445:8:12","nodeType":"VariableDeclaration","scope":4606,"src":"437:27:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":3884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"456:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"462:2:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"456:8:12","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"anonymous":false,"id":3898,"name":"fillBuyOrder","nameLocation":"479:12:12","nodeType":"EventDefinition","parameters":{"id":3897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"indexed":false,"mutability":"mutable","name":"remainingOrder","nameLocation":"518:14:12","nodeType":"VariableDeclaration","scope":3898,"src":"502:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":3887,"nodeType":"UserDefinedTypeName","pathNode":{"id":3886,"name":"Exchange._Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"502:15:12"},"referencedDeclaration":1629,"src":"502:15:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":3890,"indexed":false,"mutability":"mutable","name":"amountBought","nameLocation":"551:12:12","nodeType":"VariableDeclaration","scope":3898,"src":"543:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"543:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3892,"indexed":false,"mutability":"mutable","name":"fillBuyRate","nameLocation":"582:11:12","nodeType":"VariableDeclaration","scope":3898,"src":"574:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3894,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"609:10:12","nodeType":"VariableDeclaration","scope":3898,"src":"604:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3893,"name":"bool","nodeType":"ElementaryTypeName","src":"604:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3896,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"638:8:12","nodeType":"VariableDeclaration","scope":3898,"src":"630:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"630:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"491:162:12"},"src":"473:181:12"},{"anonymous":false,"id":3911,"name":"fillSellOrder","nameLocation":"668:13:12","nodeType":"EventDefinition","parameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"indexed":false,"mutability":"mutable","name":"remainingOrder","nameLocation":"708:14:12","nodeType":"VariableDeclaration","scope":3911,"src":"692:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":3900,"nodeType":"UserDefinedTypeName","pathNode":{"id":3899,"name":"Exchange._Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"692:15:12"},"referencedDeclaration":1629,"src":"692:15:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":3903,"indexed":false,"mutability":"mutable","name":"amountSold","nameLocation":"741:10:12","nodeType":"VariableDeclaration","scope":3911,"src":"733:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"733:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3905,"indexed":false,"mutability":"mutable","name":"fillSellRate","nameLocation":"770:12:12","nodeType":"VariableDeclaration","scope":3911,"src":"762:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3907,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"798:10:12","nodeType":"VariableDeclaration","scope":3911,"src":"793:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3906,"name":"bool","nodeType":"ElementaryTypeName","src":"793:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3909,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"827:8:12","nodeType":"VariableDeclaration","scope":3911,"src":"819:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"681:161:12"},"src":"662:181:12"},{"body":{"id":3938,"nodeType":"Block","src":"914:171:12","statements":[{"expression":{"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3920,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"925:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3922,"name":"_Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"945:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3921,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"936:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"src":"925:30:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":3925,"nodeType":"ExpressionStatement","src":"925:30:12"},{"expression":{"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3926,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"1010:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3928,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"1036:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3927,"name":"TradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"1024:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TradingFees_$3184_$","typeString":"type(contract TradingFees)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1024:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"src":"1010:32:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":3931,"nodeType":"ExpressionStatement","src":"1010:32:12"},{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3932,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"1053:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3934,"name":"_Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"1069:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3933,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"1062:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3859_$","typeString":"type(contract Wallet)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1062:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"src":"1053:24:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":3937,"nodeType":"ExpressionStatement","src":"1053:24:12"}]},"id":3939,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3913,"mutability":"mutable","name":"_Exchange","nameLocation":"871:9:12","nodeType":"VariableDeclaration","scope":3939,"src":"863:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3912,"name":"address","nodeType":"ElementaryTypeName","src":"863:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"_fees","nameLocation":"890:5:12","nodeType":"VariableDeclaration","scope":3939,"src":"882:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3914,"name":"address","nodeType":"ElementaryTypeName","src":"882:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"_Wallet","nameLocation":"905:7:12","nodeType":"VariableDeclaration","scope":3939,"src":"897:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3916,"name":"address","nodeType":"ElementaryTypeName","src":"897:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"862:51:12"},"returnParameters":{"id":3919,"nodeType":"ParameterList","parameters":[],"src":"914:0:12"},"scope":4606,"src":"851:234:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4225,"nodeType":"Block","src":"1223:2824:12","statements":[{"assignments":[3954],"declarations":[{"constant":false,"id":3954,"mutability":"mutable","name":"order","nameLocation":"1257:5:12","nodeType":"VariableDeclaration","scope":4225,"src":"1234:28:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":3953,"nodeType":"UserDefinedTypeName","pathNode":{"id":3952,"name":"Exchange._Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"1234:15:12"},"referencedDeclaration":1629,"src":"1234:15:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":3955,"nodeType":"VariableDeclarationStatement","src":"1234:28:12"},{"assignments":[3957],"declarations":[{"constant":false,"id":3957,"mutability":"mutable","name":"index","nameLocation":"1281:5:12","nodeType":"VariableDeclaration","scope":4225,"src":"1273:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1273:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3958,"nodeType":"VariableDeclarationStatement","src":"1273:13:12"},{"body":{"id":4223,"nodeType":"Block","src":"1350:2690:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":3971,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"1391:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3973,"indexExpression":{"id":3972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1405:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1391:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3975,"indexExpression":{"hexValue":"32","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1408:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1391:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1414:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1391:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":3978,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"1419:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3980,"indexExpression":{"id":3979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1433:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1419:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3982,"indexExpression":{"hexValue":"33","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1436:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1419:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1442:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1419:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1391:52:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465722076616c756573206572726f72","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1462:20:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0","typeString":"literal_string \"Order values error\""},"value":"Order values error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0","typeString":"literal_string \"Order values error\""}],"id":3970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1365:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1365:132:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3988,"nodeType":"ExpressionStatement","src":"1365:132:12"},{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3989,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1515:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},{"id":3990,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"1522:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3991,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1514:14:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$1629_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3994,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"1576:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3995,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"1602:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"baseExpression":{"id":3996,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"1628:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3998,"indexExpression":{"id":3997,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1642:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1628:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4000,"indexExpression":{"hexValue":"31","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1628:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":4001,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"1666:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4003,"indexExpression":{"id":4002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1680:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1666:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4005,"indexExpression":{"hexValue":"30","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1683:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1666:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3992,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"1531:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getOrderFromArray","nodeType":"MemberAccess","referencedDeclaration":2553,"src":"1531:26:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$1629_memory_ptr_$_t_uint256_$","typeString":"function (address,address,uint256,uint256) view external returns (struct Exchange._Order memory,uint256)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1531:169:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$1629_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"src":"1514:186:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4008,"nodeType":"ExpressionStatement","src":"1514:186:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4010,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1743:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"1743:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1760:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1743:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4014,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1765:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"1765:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1782:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1765:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1743:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f7264657220416d6f756e74","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1802:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073","typeString":"literal_string \"Invalid Order Amount\""},"value":"Invalid Order Amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073","typeString":"literal_string \"Invalid Order Amount\""}],"id":4009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1717:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1717:122:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4021,"nodeType":"ExpressionStatement","src":"1717:122:12"},{"expression":{"arguments":[{"id":4025,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1893:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},{"arguments":[{"baseExpression":{"baseExpression":{"id":4029,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"1935:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4031,"indexExpression":{"id":4030,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1949:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1935:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4033,"indexExpression":{"hexValue":"32","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1935:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4026,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1917:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"1917:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"1917:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1917:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":4048,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"2054:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4041,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2029:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4043,"indexExpression":{"id":4042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2043:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2029:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4045,"indexExpression":{"hexValue":"32","id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2046:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2029:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4038,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2014:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1622,"src":"2014:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"2014:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2014:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"2014:39:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2014:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4035,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"1974:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"1974:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"1974:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1974:108:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4051,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"2101:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4022,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"1854:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateOrder","nodeType":"MemberAccess","referencedDeclaration":2362,"src":"1854:20:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$__Order_$1629_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,uint256) external"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1854:267:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4053,"nodeType":"ExpressionStatement","src":"1854:267:12"},{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4054,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2138:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"2138:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"baseExpression":{"id":4060,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2172:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4062,"indexExpression":{"id":4061,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2186:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2172:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4064,"indexExpression":{"hexValue":"32","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2172:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4057,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2154:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"2154:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"2154:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2138:54:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4067,"nodeType":"ExpressionStatement","src":"2138:54:12"},{"assignments":[4069],"declarations":[{"constant":false,"id":4069,"mutability":"mutable","name":"fees","nameLocation":"2217:4:12","nodeType":"VariableDeclaration","scope":4223,"src":"2209:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"2209:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4085,"initialValue":{"arguments":[{"baseExpression":{"baseExpression":{"id":4072,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2268:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4074,"indexExpression":{"id":4073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2282:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2268:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4076,"indexExpression":{"hexValue":"32","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2268:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":4077,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2306:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4079,"indexExpression":{"id":4078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2320:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2306:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4081,"indexExpression":{"hexValue":"33","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2323:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2306:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4082,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2344:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"2344:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4070,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"2224:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"calculateFees","nodeType":"MemberAccess","referencedDeclaration":3055,"src":"2224:25:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address) view external returns (uint256)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2224:147:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2209:162:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4087,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"2394:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2402:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2394:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565732063616e6e6f742062652030","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2405:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88","typeString":"literal_string \"Fees cannot be 0\""},"value":"Fees cannot be 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88","typeString":"literal_string \"Fees cannot be 0\""}],"id":4086,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2386:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2386:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4092,"nodeType":"ExpressionStatement","src":"2386:38:12"},{"assignments":[4094],"declarations":[{"constant":false,"id":4094,"mutability":"mutable","name":"feesWaived","nameLocation":"2446:10:12","nodeType":"VariableDeclaration","scope":4223,"src":"2441:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4093,"name":"bool","nodeType":"ElementaryTypeName","src":"2441:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4104,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4095,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2459:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"waiveFees","nodeType":"MemberAccess","referencedDeclaration":1628,"src":"2459:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":4099,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"2527:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4100,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2533:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"2533:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4097,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"2495:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"checkSufficientaDAI","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"2495:31:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view external returns (bool)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2495:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2459:85:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2441:103:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4105,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2565:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4107,"indexExpression":{"id":4106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2579:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2565:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4109,"indexExpression":{"hexValue":"31","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2582:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2565:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2588:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2565:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4177,"nodeType":"Block","src":"3063:468:12","statements":[{"expression":{"arguments":[{"id":4146,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"3119:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},{"baseExpression":{"baseExpression":{"id":4147,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"3147:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4149,"indexExpression":{"id":4148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"3161:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3147:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4151,"indexExpression":{"hexValue":"32","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3164:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3147:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":4152,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"3189:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4154,"indexExpression":{"id":4153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"3203:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3189:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4156,"indexExpression":{"hexValue":"33","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3206:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3189:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4157,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"3231:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4158,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"3264:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4145,"name":"fillSellOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"3082:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$__Order_$1629_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3082:205:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4160,"nodeType":"ExpressionStatement","src":"3082:205:12"},{"eventCall":{"arguments":[{"id":4162,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"3347:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},{"baseExpression":{"baseExpression":{"id":4163,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"3375:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4165,"indexExpression":{"id":4164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"3389:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3375:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4167,"indexExpression":{"hexValue":"32","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3392:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3375:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":4168,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"3417:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4170,"indexExpression":{"id":4169,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"3431:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3417:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4172,"indexExpression":{"hexValue":"33","id":4171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3434:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3417:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4173,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"3459:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4174,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"3492:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4161,"name":"fillSellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"3311:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$__Order_$1629_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3311:204:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4176,"nodeType":"EmitStatement","src":"3306:209:12"}]},"id":4178,"nodeType":"IfStatement","src":"2561:970:12","trueBody":{"id":4144,"nodeType":"Block","src":"2591:466:12","statements":[{"expression":{"arguments":[{"id":4113,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2646:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},{"baseExpression":{"baseExpression":{"id":4114,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2674:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4116,"indexExpression":{"id":4115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2688:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2674:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4118,"indexExpression":{"hexValue":"32","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2691:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2674:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":4119,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2716:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4121,"indexExpression":{"id":4120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2730:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2716:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4123,"indexExpression":{"hexValue":"33","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2733:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2716:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4124,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"2758:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4125,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"2791:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4112,"name":"fillBuyOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"2610:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$__Order_$1629_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2610:204:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4127,"nodeType":"ExpressionStatement","src":"2610:204:12"},{"eventCall":{"arguments":[{"id":4129,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"2873:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},{"baseExpression":{"baseExpression":{"id":4130,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2901:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4132,"indexExpression":{"id":4131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2915:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2901:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4134,"indexExpression":{"hexValue":"32","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2918:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2901:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":4135,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2943:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4137,"indexExpression":{"id":4136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"2957:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2943:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4139,"indexExpression":{"hexValue":"33","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2960:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2943:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4140,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"2985:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4141,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"3018:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4128,"name":"fillBuyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"2838:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$__Order_$1629_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2838:203:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4143,"nodeType":"EmitStatement","src":"2833:208:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4179,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"3551:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"3551:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3568:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3551:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4222,"nodeType":"IfStatement","src":"3547:482:12","trueBody":{"id":4221,"nodeType":"Block","src":"3571:458:12","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3609:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4183,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3590:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setManual","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"3590:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bool_$returns$__$","typeString":"function (bool) external"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3590:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4188,"nodeType":"ExpressionStatement","src":"3590:25:12"},{"expression":{"arguments":[{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4192,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"3704:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":4194,"indexExpression":{"id":4193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"3718:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3704:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4196,"indexExpression":{"hexValue":"31","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3721:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3704:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3727:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3704:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"expression":{"id":4202,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"3809:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Side","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"3809:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"3809:18:12","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3704:123:12","trueExpression":{"expression":{"expression":{"id":4199,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"3760:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Side","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"3760:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"3760:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},"typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"id":4206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3677:173:12","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"expression":{"id":4207,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"3873:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"3873:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4209,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"3904:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"3904:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4211,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"3939:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"3939:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4189,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3634:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cancelOrder","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"3634:20:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_enum$_Side_$1661_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address) external"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3634:336:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4214,"nodeType":"ExpressionStatement","src":"3634:336:12"},{"expression":{"arguments":[{"hexValue":"74727565","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4008:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4215,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3989:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setManual","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"3989:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bool_$returns$__$","typeString":"function (bool) external"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3989:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4220,"nodeType":"ExpressionStatement","src":"3989:24:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1319:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3964,"name":"_ordersToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"1323:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1323:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1319:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4224,"initializationExpression":{"assignments":[3960],"declarations":[{"constant":false,"id":3960,"mutability":"mutable","name":"i","nameLocation":"1312:1:12","nodeType":"VariableDeclaration","scope":4224,"src":"1304:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3962,"initialValue":{"hexValue":"30","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1316:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1304:13:12"},"loopExpression":{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1345:3:12","subExpression":{"id":3967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"1345:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3969,"nodeType":"ExpressionStatement","src":"1345:3:12"},"nodeType":"ForStatement","src":"1299:2741:12"}]},"functionSelector":"857ba650","id":4226,"implemented":true,"kind":"function","modifiers":[],"name":"fillOrder","nameLocation":"1102:9:12","nodeType":"FunctionDefinition","parameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"_tokenA","nameLocation":"1130:7:12","nodeType":"VariableDeclaration","scope":4226,"src":"1122:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3940,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"_tokenB","nameLocation":"1156:7:12","nodeType":"VariableDeclaration","scope":4226,"src":"1148:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3942,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"_ordersToFill","nameLocation":"1193:13:12","nodeType":"VariableDeclaration","scope":4226,"src":"1174:32:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3945,"nodeType":"ArrayTypeName","src":"1174:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":3946,"nodeType":"ArrayTypeName","src":"1174:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"1111:102:12"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[],"src":"1223:0:12"},"scope":4606,"src":"1093:2954:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4394,"nodeType":"Block","src":"4232:2299:12","statements":[{"condition":{"id":4240,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"4247:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4320,"nodeType":"Block","src":"4949:596:12","statements":[{"assignments":[4286],"declarations":[{"constant":false,"id":4286,"mutability":"mutable","name":"amountTokenToDeduct","nameLocation":"4972:19:12","nodeType":"VariableDeclaration","scope":4320,"src":"4964:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"4964:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4293,"initialValue":{"arguments":[{"expression":{"id":4289,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"5045:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"5045:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4291,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"5076:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4287,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"4994:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountTokensToDeduct","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"4994:32:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4994:101:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4964:131:12"},{"expression":{"arguments":[{"expression":{"id":4297,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"5213:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"5213:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4299,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"5244:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"5244:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4303,"name":"amountTokenToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"5285:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4301,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"5273:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"5273:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5273:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5324:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4294,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"5166:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"5166:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5166:177:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4307,"nodeType":"ExpressionStatement","src":"5166:177:12"},{"expression":{"arguments":[{"expression":{"id":4311,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"5407:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"5407:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4313,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"5438:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fundWallet","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"5438:17:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5438:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4316,"name":"amountTokenToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"5476:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5514:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4308,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"5360:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"5360:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5360:173:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4319,"nodeType":"ExpressionStatement","src":"5360:173:12"}]},"id":4321,"nodeType":"IfStatement","src":"4243:1302:12","trueBody":{"id":4284,"nodeType":"Block","src":"4259:684:12","statements":[{"assignments":[4242],"declarations":[{"constant":false,"id":4242,"mutability":"mutable","name":"aDAIToDeduct","nameLocation":"4309:12:12","nodeType":"VariableDeclaration","scope":4284,"src":"4301:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"4301:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4247,"initialValue":{"arguments":[{"id":4245,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"4355:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4243,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"4324:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountaDAIToDeduct","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"4324:30:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4324:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4301:59:12"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4251,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"4422:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"4422:16:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4422:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4254,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"4459:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"4459:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4256,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"4488:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4519:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4248,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"4375:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"4375:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4375:164:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4259,"nodeType":"ExpressionStatement","src":"4375:164:12"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4263,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"4601:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"4601:16:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4601:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4266,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"4638:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fundWallet","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"4638:17:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4638:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4269,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"4676:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4707:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4260,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"4554:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"4554:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4554:172:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4272,"nodeType":"ExpressionStatement","src":"4554:172:12"},{"expression":{"arguments":[{"expression":{"id":4276,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"4826:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"4826:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4278,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"4857:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"4857:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4280,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"4886:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4912:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4273,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"4779:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"4779:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4779:152:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4283,"nodeType":"ExpressionStatement","src":"4779:152:12"}]}},{"expression":{"arguments":[{"expression":{"id":4325,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"5646:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"5646:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4327,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"5671:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"5671:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4336,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"5728:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":4332,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"5714:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4329,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"5699:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1622,"src":"5699:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"5699:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5699:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5698:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"5698:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5698:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5752:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4322,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"5599:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"5599:32:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5599:169:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4340,"nodeType":"ExpressionStatement","src":"5599:169:12"},{"expression":{"arguments":[{"expression":{"id":4344,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"5900:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"5900:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4346,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"5927:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"5927:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4354,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"5977:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":4350,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"5963:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4348,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"5953:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"5953:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5953:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5952:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"5952:24:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5952:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6001:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4341,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"5857:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"5857:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5857:160:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4358,"nodeType":"ExpressionStatement","src":"5857:160:12"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4364,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"6110:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"6110:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":4366,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"6137:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Side","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"6137:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"6137:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"expression":{"id":4369,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"6173:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"6173:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4371,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"6202:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"6202:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4373,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"6233:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"6233:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4375,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"6264:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4376,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"6290:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4377,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"6314:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1622,"src":"6314:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4379,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"6343:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":1624,"src":"6343:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4381,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"6383:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":1626,"src":"6383:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4383,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"6423:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4384,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"6452:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4362,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"6070:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_filledOrder","nodeType":"MemberAccess","referencedDeclaration":1658,"src":"6070:21:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__filledOrder_$1658_storage_ptr_$","typeString":"type(struct Exchange._filledOrder storage pointer)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6070:401:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},{"arguments":[{"expression":{"expression":{"id":4388,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"6494:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Side","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"6494:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"6494:17:12","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":4387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6486:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"6486:7:12","typeDescriptions":{}}},"id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6486:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4359,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"6028:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateFilledOrders","nodeType":"MemberAccess","referencedDeclaration":2222,"src":"6028:27:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$__filledOrder_$1658_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._filledOrder memory,uint256) external"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6028:495:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4393,"nodeType":"ExpressionStatement","src":"6028:495:12"}]},"id":4395,"implemented":true,"kind":"function","modifiers":[],"name":"fillBuyOrders","nameLocation":"4064:13:12","nodeType":"FunctionDefinition","parameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4229,"mutability":"mutable","name":"order","nameLocation":"4111:5:12","nodeType":"VariableDeclaration","scope":4395,"src":"4088:28:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":4228,"nodeType":"UserDefinedTypeName","pathNode":{"id":4227,"name":"Exchange._Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"4088:15:12"},"referencedDeclaration":1629,"src":"4088:15:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"_amount","nameLocation":"4135:7:12","nodeType":"VariableDeclaration","scope":4395,"src":"4127:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"4127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4233,"mutability":"mutable","name":"_rate","nameLocation":"4161:5:12","nodeType":"VariableDeclaration","scope":4395,"src":"4153:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"4153:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4235,"mutability":"mutable","name":"feesWaived","nameLocation":"4182:10:12","nodeType":"VariableDeclaration","scope":4395,"src":"4177:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4234,"name":"bool","nodeType":"ElementaryTypeName","src":"4177:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"fees","nameLocation":"4211:4:12","nodeType":"VariableDeclaration","scope":4395,"src":"4203:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"4203:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4077:145:12"},"returnParameters":{"id":4239,"nodeType":"ParameterList","parameters":[],"src":"4232:0:12"},"scope":4606,"src":"4055:2476:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4562,"nodeType":"Block","src":"6717:2141:12","statements":[{"condition":{"id":4409,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"6732:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4503,"nodeType":"Block","src":"7461:624:12","statements":[{"assignments":[4462],"declarations":[{"constant":false,"id":4462,"mutability":"mutable","name":"amountTokensToDeduct","nameLocation":"7484:20:12","nodeType":"VariableDeclaration","scope":4503,"src":"7476:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"7476:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4469,"initialValue":{"arguments":[{"expression":{"id":4465,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"7558:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"7558:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4467,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"7589:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4463,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"7507:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountTokensToDeduct","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"7507:32:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7507:101:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7476:132:12"},{"expression":{"arguments":[{"expression":{"id":4473,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"7670:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"7670:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4475,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"7701:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fundWallet","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"7701:17:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7701:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4478,"name":"amountTokensToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"7739:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7778:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4470,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"7623:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"7623:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7623:174:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4481,"nodeType":"ExpressionStatement","src":"7623:174:12"},{"expression":{"arguments":[{"expression":{"id":4485,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"7915:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"7915:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4487,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"7946:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"7946:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4498,"name":"amountTokensToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"8014:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4495,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"8000:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":4491,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"7986:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4489,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"7976:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"7976:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7976:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7975:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"7975:24:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7975:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":826,"src":"7975:38:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7975:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8054:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4482,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"7868:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"7868:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7868:205:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4502,"nodeType":"ExpressionStatement","src":"7868:205:12"}]},"id":4504,"nodeType":"IfStatement","src":"6728:1357:12","trueBody":{"id":4460,"nodeType":"Block","src":"6744:711:12","statements":[{"assignments":[4411],"declarations":[{"constant":false,"id":4411,"mutability":"mutable","name":"aDAIToDeduct","nameLocation":"6794:12:12","nodeType":"VariableDeclaration","scope":4460,"src":"6786:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"6786:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4416,"initialValue":{"arguments":[{"id":4414,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"6840:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4412,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"6809:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountaDAIToDeduct","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"6809:30:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6809:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6786:59:12"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4420,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"6907:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"6907:16:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6907:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4423,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"6944:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"6944:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4425,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"6973:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7004:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4417,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"6860:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"6860:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6860:164:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4428,"nodeType":"ExpressionStatement","src":"6860:164:12"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4432,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"7086:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":2983,"src":"7086:16:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7086:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4435,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"7123:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fundWallet","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"7123:17:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7123:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4438,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"7161:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7192:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4429,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"7039:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"7039:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7039:172:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4441,"nodeType":"ExpressionStatement","src":"7039:172:12"},{"expression":{"arguments":[{"expression":{"id":4445,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"7311:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"7311:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4447,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"7342:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"7342:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4455,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"7396:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":4451,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"7382:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4449,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"7372:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":841,"src":"7372:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7372:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7371:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":856,"src":"7371:24:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7371:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7424:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4442,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"7264:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"7264:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7264:179:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4459,"nodeType":"ExpressionStatement","src":"7264:179:12"}]}},{"expression":{"arguments":[{"expression":{"id":4508,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8144:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"8144:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4510,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8169:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"8169:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4512,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"8196:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8218:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4505,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"8097:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"8097:32:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8097:137:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4515,"nodeType":"ExpressionStatement","src":"8097:137:12"},{"expression":{"arguments":[{"expression":{"id":4519,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8299:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"8299:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4521,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8313:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"8313:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4523,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"8325:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8334:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4516,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"8270:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"8270:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8270:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4526,"nodeType":"ExpressionStatement","src":"8270:70:12"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4532,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8435:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"8435:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":4534,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8462:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Side","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"8462:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"8462:18:12","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}},{"expression":{"id":4537,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8499:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"8499:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4539,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8528:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"8528:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4541,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8559:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"8559:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4543,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"8590:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4544,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"8616:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4545,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8640:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1622,"src":"8640:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4547,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8669:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":1624,"src":"8669:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4549,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"8709:5:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":4550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":1626,"src":"8709:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4551,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"8749:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4552,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"8778:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4530,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8395:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_filledOrder","nodeType":"MemberAccess","referencedDeclaration":1658,"src":"8395:21:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__filledOrder_$1658_storage_ptr_$","typeString":"type(struct Exchange._filledOrder storage pointer)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8395:402:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},{"arguments":[{"expression":{"expression":{"id":4556,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8820:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Side","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"8820:13:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1661_$","typeString":"type(enum Exchange.Side)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"8820:18:12","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1661","typeString":"enum Exchange.Side"}],"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8812:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"8812:7:12","typeDescriptions":{}}},"id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8812:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__filledOrder_$1658_memory_ptr","typeString":"struct Exchange._filledOrder memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4527,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"8353:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateFilledOrders","nodeType":"MemberAccess","referencedDeclaration":2222,"src":"8353:27:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$__filledOrder_$1658_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._filledOrder memory,uint256) external"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8353:497:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4561,"nodeType":"ExpressionStatement","src":"8353:497:12"}]},"id":4563,"implemented":true,"kind":"function","modifiers":[],"name":"fillSellOrders","nameLocation":"6548:14:12","nodeType":"FunctionDefinition","parameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"order","nameLocation":"6596:5:12","nodeType":"VariableDeclaration","scope":4563,"src":"6573:28:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":4397,"nodeType":"UserDefinedTypeName","pathNode":{"id":4396,"name":"Exchange._Order","nodeType":"IdentifierPath","referencedDeclaration":1629,"src":"6573:15:12"},"referencedDeclaration":1629,"src":"6573:15:12","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1629_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":4400,"mutability":"mutable","name":"_amount","nameLocation":"6620:7:12","nodeType":"VariableDeclaration","scope":4563,"src":"6612:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4399,"name":"uint256","nodeType":"ElementaryTypeName","src":"6612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4402,"mutability":"mutable","name":"_rate","nameLocation":"6646:5:12","nodeType":"VariableDeclaration","scope":4563,"src":"6638:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"6638:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"feesWaived","nameLocation":"6667:10:12","nodeType":"VariableDeclaration","scope":4563,"src":"6662:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4403,"name":"bool","nodeType":"ElementaryTypeName","src":"6662:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4406,"mutability":"mutable","name":"fees","nameLocation":"6696:4:12","nodeType":"VariableDeclaration","scope":4563,"src":"6688:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4405,"name":"uint256","nodeType":"ElementaryTypeName","src":"6688:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6562:145:12"},"returnParameters":{"id":4408,"nodeType":"ParameterList","parameters":[],"src":"6717:0:12"},"scope":4606,"src":"6539:2319:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4576,"nodeType":"Block","src":"8933:50:12","statements":[{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4570,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"8944:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4572,"name":"_Walletaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"8960:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4571,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"8953:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$3859_$","typeString":"type(contract Wallet)"}},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8953:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"src":"8944:31:12","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$3859","typeString":"contract Wallet"}},"id":4575,"nodeType":"ExpressionStatement","src":"8944:31:12"}]},"functionSelector":"ac1a386a","id":4577,"implemented":true,"kind":"function","modifiers":[{"id":4568,"kind":"modifierInvocation","modifierName":{"id":4567,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"8923:9:12"},"nodeType":"ModifierInvocation","src":"8923:9:12"}],"name":"setWalletAddress","nameLocation":"8875:16:12","nodeType":"FunctionDefinition","parameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4565,"mutability":"mutable","name":"_Walletaddress","nameLocation":"8900:14:12","nodeType":"VariableDeclaration","scope":4577,"src":"8892:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4564,"name":"address","nodeType":"ElementaryTypeName","src":"8892:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8891:24:12"},"returnParameters":{"id":4569,"nodeType":"ParameterList","parameters":[],"src":"8933:0:12"},"scope":4606,"src":"8866:117:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4590,"nodeType":"Block","src":"9055:49:12","statements":[{"expression":{"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4584,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"9066:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4586,"name":"_exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"9086:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4585,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"9077:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$2785_$","typeString":"type(contract Exchange)"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9077:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"src":"9066:30:12","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$2785","typeString":"contract Exchange"}},"id":4589,"nodeType":"ExpressionStatement","src":"9066:30:12"}]},"functionSelector":"d082ea8c","id":4591,"implemented":true,"kind":"function","modifiers":[{"id":4582,"kind":"modifierInvocation","modifierName":{"id":4581,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"9045:9:12"},"nodeType":"ModifierInvocation","src":"9045:9:12"}],"name":"setExchangeAddress","nameLocation":"9000:18:12","nodeType":"FunctionDefinition","parameters":{"id":4580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"_exchange","nameLocation":"9027:9:12","nodeType":"VariableDeclaration","scope":4591,"src":"9019:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4578,"name":"address","nodeType":"ElementaryTypeName","src":"9019:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9018:19:12"},"returnParameters":{"id":4583,"nodeType":"ParameterList","parameters":[],"src":"9055:0:12"},"scope":4606,"src":"8991:113:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4604,"nodeType":"Block","src":"9175:51:12","statements":[{"expression":{"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4598,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"9186:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4600,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"9212:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4599,"name":"TradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"9200:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TradingFees_$3184_$","typeString":"type(contract TradingFees)"}},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9200:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"src":"9186:32:12","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3184","typeString":"contract TradingFees"}},"id":4603,"nodeType":"ExpressionStatement","src":"9186:32:12"}]},"functionSelector":"9df4d186","id":4605,"implemented":true,"kind":"function","modifiers":[{"id":4596,"kind":"modifierInvocation","modifierName":{"id":4595,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":429,"src":"9165:9:12"},"nodeType":"ModifierInvocation","src":"9165:9:12"}],"name":"setTradingFeesAddress","nameLocation":"9121:21:12","nodeType":"FunctionDefinition","parameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"_fees","nameLocation":"9151:5:12","nodeType":"VariableDeclaration","scope":4605,"src":"9143:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4592,"name":"address","nodeType":"ElementaryTypeName","src":"9143:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9142:15:12"},"returnParameters":{"id":4597,"nodeType":"ParameterList","parameters":[],"src":"9175:0:12"},"scope":4606,"src":"9112:114:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4607,"src":"256:8973:12","usedErrors":[]}],"src":"33:9198:12"},"id":12},"contracts/interface/IERC20.sol":{"ast":{"absolutePath":"contracts/interface/IERC20.sol","exportedSymbols":{"IERC20":[4692]},"id":4693,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4608,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4692,"linearizedBaseContracts":[4692],"name":"IERC20","nameLocation":"70:6:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":4617,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"93:9:13","nodeType":"FunctionDefinition","parameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"owner","nameLocation":"121:5:13","nodeType":"VariableDeclaration","scope":4617,"src":"113:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4609,"name":"address","nodeType":"ElementaryTypeName","src":"113:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"spender","nameLocation":"145:7:13","nodeType":"VariableDeclaration","scope":4617,"src":"137:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4611,"name":"address","nodeType":"ElementaryTypeName","src":"137:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102:57:13"},"returnParameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"remaining","nameLocation":"191:9:13","nodeType":"VariableDeclaration","scope":4617,"src":"183:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"183:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"182:19:13"},"scope":4692,"src":"84:118:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":4626,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"219:7:13","nodeType":"FunctionDefinition","parameters":{"id":4622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"mutability":"mutable","name":"spender","nameLocation":"245:7:13","nodeType":"VariableDeclaration","scope":4626,"src":"237:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4618,"name":"address","nodeType":"ElementaryTypeName","src":"237:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4621,"mutability":"mutable","name":"value","nameLocation":"271:5:13","nodeType":"VariableDeclaration","scope":4626,"src":"263:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"226:57:13"},"returnParameters":{"id":4625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4624,"mutability":"mutable","name":"success","nameLocation":"307:7:13","nodeType":"VariableDeclaration","scope":4626,"src":"302:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4623,"name":"bool","nodeType":"ElementaryTypeName","src":"302:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"301:14:13"},"scope":4692,"src":"210:106:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":4633,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"333:9:13","nodeType":"FunctionDefinition","parameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"owner","nameLocation":"351:5:13","nodeType":"VariableDeclaration","scope":4633,"src":"343:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4627,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"342:15:13"},"returnParameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"balance","nameLocation":"389:7:13","nodeType":"VariableDeclaration","scope":4633,"src":"381:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"381:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"380:17:13"},"scope":4692,"src":"324:74:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":4638,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"415:8:13","nodeType":"FunctionDefinition","parameters":{"id":4634,"nodeType":"ParameterList","parameters":[],"src":"423:2:13"},"returnParameters":{"id":4637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"decimalPlaces","nameLocation":"455:13:13","nodeType":"VariableDeclaration","scope":4638,"src":"449:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4635,"name":"uint8","nodeType":"ElementaryTypeName","src":"449:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"448:21:13"},"scope":4692,"src":"406:64:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":4647,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"487:16:13","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"spender","nameLocation":"522:7:13","nodeType":"VariableDeclaration","scope":4647,"src":"514:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4639,"name":"address","nodeType":"ElementaryTypeName","src":"514:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4642,"mutability":"mutable","name":"subtractedValue","nameLocation":"548:15:13","nodeType":"VariableDeclaration","scope":4647,"src":"540:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"503:67:13"},"returnParameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"success","nameLocation":"594:7:13","nodeType":"VariableDeclaration","scope":4647,"src":"589:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4644,"name":"bool","nodeType":"ElementaryTypeName","src":"589:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"588:14:13"},"scope":4692,"src":"478:125:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":4656,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"620:16:13","nodeType":"FunctionDefinition","parameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"spender","nameLocation":"655:7:13","nodeType":"VariableDeclaration","scope":4656,"src":"647:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4648,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4651,"mutability":"mutable","name":"addedValue","nameLocation":"681:10:13","nodeType":"VariableDeclaration","scope":4656,"src":"673:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:62:13"},"returnParameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"success","nameLocation":"722:7:13","nodeType":"VariableDeclaration","scope":4656,"src":"717:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4653,"name":"bool","nodeType":"ElementaryTypeName","src":"717:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"716:14:13"},"scope":4692,"src":"611:120:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":4661,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"748:4:13","nodeType":"FunctionDefinition","parameters":{"id":4657,"nodeType":"ParameterList","parameters":[],"src":"752:2:13"},"returnParameters":{"id":4660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"tokenName","nameLocation":"792:9:13","nodeType":"VariableDeclaration","scope":4661,"src":"778:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4658,"name":"string","nodeType":"ElementaryTypeName","src":"778:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"777:25:13"},"scope":4692,"src":"739:64:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":4666,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"820:6:13","nodeType":"FunctionDefinition","parameters":{"id":4662,"nodeType":"ParameterList","parameters":[],"src":"826:2:13"},"returnParameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4664,"mutability":"mutable","name":"tokenSymbol","nameLocation":"866:11:13","nodeType":"VariableDeclaration","scope":4666,"src":"852:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4663,"name":"string","nodeType":"ElementaryTypeName","src":"852:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"851:27:13"},"scope":4692,"src":"811:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":4671,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"896:11:13","nodeType":"FunctionDefinition","parameters":{"id":4667,"nodeType":"ParameterList","parameters":[],"src":"907:2:13"},"returnParameters":{"id":4670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"941:17:13","nodeType":"VariableDeclaration","scope":4671,"src":"933:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"932:27:13"},"scope":4692,"src":"887:73:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":4680,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"977:8:13","nodeType":"FunctionDefinition","parameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"to","nameLocation":"1004:2:13","nodeType":"VariableDeclaration","scope":4680,"src":"996:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4672,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4675,"mutability":"mutable","name":"value","nameLocation":"1025:5:13","nodeType":"VariableDeclaration","scope":4680,"src":"1017:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"985:52:13"},"returnParameters":{"id":4679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4678,"mutability":"mutable","name":"success","nameLocation":"1061:7:13","nodeType":"VariableDeclaration","scope":4680,"src":"1056:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4677,"name":"bool","nodeType":"ElementaryTypeName","src":"1056:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1055:14:13"},"scope":4692,"src":"968:102:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":4691,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1087:12:13","nodeType":"FunctionDefinition","parameters":{"id":4687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"from","nameLocation":"1118:4:13","nodeType":"VariableDeclaration","scope":4691,"src":"1110:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4681,"name":"address","nodeType":"ElementaryTypeName","src":"1110:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4684,"mutability":"mutable","name":"to","nameLocation":"1141:2:13","nodeType":"VariableDeclaration","scope":4691,"src":"1133:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4683,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4686,"mutability":"mutable","name":"value","nameLocation":"1162:5:13","nodeType":"VariableDeclaration","scope":4691,"src":"1154:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4685,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1099:75:13"},"returnParameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"success","nameLocation":"1198:7:13","nodeType":"VariableDeclaration","scope":4691,"src":"1193:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4688,"name":"bool","nodeType":"ElementaryTypeName","src":"1193:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1192:14:13"},"scope":4692,"src":"1078:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4693,"src":"60:1150:13","usedErrors":[]}],"src":"33:1179:13"},"id":13},"contracts/interface/IPool.sol":{"ast":{"absolutePath":"contracts/interface/IPool.sol","exportedSymbols":{"DataTypes":[351],"IPool":[5331],"IPoolAddressesProvider":[5540]},"id":5332,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4694,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:14"},{"absolutePath":"contracts/interface/IPoolAddressesProvider.sol","file":"./IPoolAddressesProvider.sol","id":4696,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5332,"sourceUnit":5541,"src":"65:68:14","symbolAliases":[{"foreign":{"id":4695,"name":"IPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"73:22:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","file":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","id":4698,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5332,"sourceUnit":352,"src":"135:89:14","symbolAliases":[{"foreign":{"id":4697,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"143:9:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":4699,"nodeType":"StructuredDocumentation","src":"228:100:14","text":" @title IPool\n @author Aave\n @notice Defines the basic interface for an Aave Pool."},"fullyImplemented":false,"id":5331,"linearizedBaseContracts":[5331],"name":"IPool","nameLocation":"340:5:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":4700,"nodeType":"StructuredDocumentation","src":"353:370:14","text":" @dev Emitted on mintUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n @param amount The amount of supplied assets\n @param referralCode The referral code used"},"id":4712,"name":"MintUnbacked","nameLocation":"735:12:14","nodeType":"EventDefinition","parameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4702,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"774:7:14","nodeType":"VariableDeclaration","scope":4712,"src":"758:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4701,"name":"address","nodeType":"ElementaryTypeName","src":"758:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4704,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"800:4:14","nodeType":"VariableDeclaration","scope":4712,"src":"792:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4703,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4706,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"831:10:14","nodeType":"VariableDeclaration","scope":4712,"src":"815:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4705,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4708,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"860:6:14","nodeType":"VariableDeclaration","scope":4712,"src":"852:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4710,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"892:12:14","nodeType":"VariableDeclaration","scope":4712,"src":"877:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4709,"name":"uint16","nodeType":"ElementaryTypeName","src":"877:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"747:164:14"},"src":"729:183:14"},{"anonymous":false,"documentation":{"id":4713,"nodeType":"StructuredDocumentation","src":"920:275:14","text":" @dev Emitted on backUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param backer The address paying for the backing\n @param amount The amount added as backing\n @param fee The amount paid in fees"},"id":4723,"name":"BackUnbacked","nameLocation":"1207:12:14","nodeType":"EventDefinition","parameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1246:7:14","nodeType":"VariableDeclaration","scope":4723,"src":"1230:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4714,"name":"address","nodeType":"ElementaryTypeName","src":"1230:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4717,"indexed":true,"mutability":"mutable","name":"backer","nameLocation":"1280:6:14","nodeType":"VariableDeclaration","scope":4723,"src":"1264:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4716,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4719,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1305:6:14","nodeType":"VariableDeclaration","scope":4723,"src":"1297:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1297:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4721,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"1330:3:14","nodeType":"VariableDeclaration","scope":4723,"src":"1322:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:121:14"},"src":"1201:140:14"},{"anonymous":false,"documentation":{"id":4724,"nodeType":"StructuredDocumentation","src":"1349:345:14","text":" @dev Emitted on supply()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n @param amount The amount supplied\n @param referralCode The referral code used"},"id":4736,"name":"Supply","nameLocation":"1706:6:14","nodeType":"EventDefinition","parameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4726,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1739:7:14","nodeType":"VariableDeclaration","scope":4736,"src":"1723:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4725,"name":"address","nodeType":"ElementaryTypeName","src":"1723:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4728,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1765:4:14","nodeType":"VariableDeclaration","scope":4736,"src":"1757:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4727,"name":"address","nodeType":"ElementaryTypeName","src":"1757:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4730,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"1796:10:14","nodeType":"VariableDeclaration","scope":4736,"src":"1780:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4729,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4732,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1825:6:14","nodeType":"VariableDeclaration","scope":4736,"src":"1817:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4734,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"1857:12:14","nodeType":"VariableDeclaration","scope":4736,"src":"1842:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4733,"name":"uint16","nodeType":"ElementaryTypeName","src":"1842:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1712:164:14"},"src":"1700:177:14"},{"anonymous":false,"documentation":{"id":4737,"nodeType":"StructuredDocumentation","src":"1885:310:14","text":" @dev Emitted on withdraw()\n @param reserve The address of the underlying asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to The address that will receive the underlying\n @param amount The amount to be withdrawn"},"id":4747,"name":"Withdraw","nameLocation":"2207:8:14","nodeType":"EventDefinition","parameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"2242:7:14","nodeType":"VariableDeclaration","scope":4747,"src":"2226:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4738,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4741,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2276:4:14","nodeType":"VariableDeclaration","scope":4747,"src":"2260:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4740,"name":"address","nodeType":"ElementaryTypeName","src":"2260:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4743,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2307:2:14","nodeType":"VariableDeclaration","scope":4747,"src":"2291:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4742,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4745,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2328:6:14","nodeType":"VariableDeclaration","scope":4747,"src":"2320:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2320:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2215:126:14"},"src":"2201:141:14"},{"anonymous":false,"documentation":{"id":4748,"nodeType":"StructuredDocumentation","src":"2350:658:14","text":" @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n @param referralCode The referral code used"},"id":4765,"name":"Borrow","nameLocation":"3020:6:14","nodeType":"EventDefinition","parameters":{"id":4764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3053:7:14","nodeType":"VariableDeclaration","scope":4765,"src":"3037:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4749,"name":"address","nodeType":"ElementaryTypeName","src":"3037:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4752,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3079:4:14","nodeType":"VariableDeclaration","scope":4765,"src":"3071:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4751,"name":"address","nodeType":"ElementaryTypeName","src":"3071:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4754,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"3110:10:14","nodeType":"VariableDeclaration","scope":4765,"src":"3094:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4753,"name":"address","nodeType":"ElementaryTypeName","src":"3094:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4756,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3139:6:14","nodeType":"VariableDeclaration","scope":4765,"src":"3131:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"3131:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4759,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"3183:16:14","nodeType":"VariableDeclaration","scope":4765,"src":"3156:43:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":4758,"nodeType":"UserDefinedTypeName","pathNode":{"id":4757,"name":"DataTypes.InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"3156:26:14"},"referencedDeclaration":55,"src":"3156:26:14","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":4761,"indexed":false,"mutability":"mutable","name":"borrowRate","nameLocation":"3218:10:14","nodeType":"VariableDeclaration","scope":4765,"src":"3210:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4760,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4763,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"3254:12:14","nodeType":"VariableDeclaration","scope":4765,"src":"3239:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4762,"name":"uint16","nodeType":"ElementaryTypeName","src":"3239:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3026:247:14"},"src":"3014:260:14"},{"anonymous":false,"documentation":{"id":4766,"nodeType":"StructuredDocumentation","src":"3282:446:14","text":" @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid\n @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly"},"id":4778,"name":"Repay","nameLocation":"3740:5:14","nodeType":"EventDefinition","parameters":{"id":4777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4768,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3772:7:14","nodeType":"VariableDeclaration","scope":4778,"src":"3756:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4767,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4770,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3806:4:14","nodeType":"VariableDeclaration","scope":4778,"src":"3790:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4769,"name":"address","nodeType":"ElementaryTypeName","src":"3790:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4772,"indexed":true,"mutability":"mutable","name":"repayer","nameLocation":"3837:7:14","nodeType":"VariableDeclaration","scope":4778,"src":"3821:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4771,"name":"address","nodeType":"ElementaryTypeName","src":"3821:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4774,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3863:6:14","nodeType":"VariableDeclaration","scope":4778,"src":"3855:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3855:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4776,"indexed":false,"mutability":"mutable","name":"useATokens","nameLocation":"3885:10:14","nodeType":"VariableDeclaration","scope":4778,"src":"3880:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4775,"name":"bool","nodeType":"ElementaryTypeName","src":"3880:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3745:157:14"},"src":"3734:169:14"},{"anonymous":false,"documentation":{"id":4779,"nodeType":"StructuredDocumentation","src":"3911:321:14","text":" @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"},"id":4788,"name":"SwapBorrowRateMode","nameLocation":"4244:18:14","nodeType":"EventDefinition","parameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"4289:7:14","nodeType":"VariableDeclaration","scope":4788,"src":"4273:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4780,"name":"address","nodeType":"ElementaryTypeName","src":"4273:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4783,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4323:4:14","nodeType":"VariableDeclaration","scope":4788,"src":"4307:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4782,"name":"address","nodeType":"ElementaryTypeName","src":"4307:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4786,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"4365:16:14","nodeType":"VariableDeclaration","scope":4788,"src":"4338:43:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":4785,"nodeType":"UserDefinedTypeName","pathNode":{"id":4784,"name":"DataTypes.InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"4338:26:14"},"referencedDeclaration":55,"src":"4338:26:14","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"}],"src":"4262:126:14"},"src":"4238:151:14"},{"anonymous":false,"documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"4397:246:14","text":" @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n @param asset The address of the underlying asset of the reserve\n @param totalDebt The total isolation mode debt for the reserve"},"id":4795,"name":"IsolationModeTotalDebtUpdated","nameLocation":"4655:29:14","nodeType":"EventDefinition","parameters":{"id":4794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"4711:5:14","nodeType":"VariableDeclaration","scope":4795,"src":"4695:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4790,"name":"address","nodeType":"ElementaryTypeName","src":"4695:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4793,"indexed":false,"mutability":"mutable","name":"totalDebt","nameLocation":"4735:9:14","nodeType":"VariableDeclaration","scope":4795,"src":"4727:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4684:67:14"},"src":"4649:103:14"},{"anonymous":false,"documentation":{"id":4796,"nodeType":"StructuredDocumentation","src":"4760:176:14","text":" @dev Emitted when the user selects a certain asset category for eMode\n @param user The address of the user\n @param categoryId The category id"},"id":4802,"name":"UserEModeSet","nameLocation":"4948:12:14","nodeType":"EventDefinition","parameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4798,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4977:4:14","nodeType":"VariableDeclaration","scope":4802,"src":"4961:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4797,"name":"address","nodeType":"ElementaryTypeName","src":"4961:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4800,"indexed":false,"mutability":"mutable","name":"categoryId","nameLocation":"4989:10:14","nodeType":"VariableDeclaration","scope":4802,"src":"4983:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4799,"name":"uint8","nodeType":"ElementaryTypeName","src":"4983:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4960:40:14"},"src":"4942:59:14"},{"anonymous":false,"documentation":{"id":4803,"nodeType":"StructuredDocumentation","src":"5009:219:14","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"},"id":4809,"name":"ReserveUsedAsCollateralEnabled","nameLocation":"5240:30:14","nodeType":"EventDefinition","parameters":{"id":4808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5297:7:14","nodeType":"VariableDeclaration","scope":4809,"src":"5281:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4804,"name":"address","nodeType":"ElementaryTypeName","src":"5281:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4807,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5331:4:14","nodeType":"VariableDeclaration","scope":4809,"src":"5315:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4806,"name":"address","nodeType":"ElementaryTypeName","src":"5315:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5270:72:14"},"src":"5234:109:14"},{"anonymous":false,"documentation":{"id":4810,"nodeType":"StructuredDocumentation","src":"5351:219:14","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"},"id":4816,"name":"ReserveUsedAsCollateralDisabled","nameLocation":"5582:31:14","nodeType":"EventDefinition","parameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5640:7:14","nodeType":"VariableDeclaration","scope":4816,"src":"5624:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4811,"name":"address","nodeType":"ElementaryTypeName","src":"5624:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4814,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5674:4:14","nodeType":"VariableDeclaration","scope":4816,"src":"5658:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4813,"name":"address","nodeType":"ElementaryTypeName","src":"5658:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5613:72:14"},"src":"5576:110:14"},{"anonymous":false,"documentation":{"id":4817,"nodeType":"StructuredDocumentation","src":"5694:224:14","text":" @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed"},"id":4823,"name":"RebalanceStableBorrowRate","nameLocation":"5930:25:14","nodeType":"EventDefinition","parameters":{"id":4822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4819,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5982:7:14","nodeType":"VariableDeclaration","scope":4823,"src":"5966:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4818,"name":"address","nodeType":"ElementaryTypeName","src":"5966:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4821,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"6016:4:14","nodeType":"VariableDeclaration","scope":4823,"src":"6000:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4820,"name":"address","nodeType":"ElementaryTypeName","src":"6000:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5955:72:14"},"src":"5924:104:14"},{"anonymous":false,"documentation":{"id":4824,"nodeType":"StructuredDocumentation","src":"6036:509:14","text":" @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n @param premium The fee flash borrowed\n @param referralCode The referral code used"},"id":4841,"name":"FlashLoan","nameLocation":"6557:9:14","nodeType":"EventDefinition","parameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4826,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"6593:6:14","nodeType":"VariableDeclaration","scope":4841,"src":"6577:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4825,"name":"address","nodeType":"ElementaryTypeName","src":"6577:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4828,"indexed":false,"mutability":"mutable","name":"initiator","nameLocation":"6618:9:14","nodeType":"VariableDeclaration","scope":4841,"src":"6610:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4827,"name":"address","nodeType":"ElementaryTypeName","src":"6610:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4830,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"6654:5:14","nodeType":"VariableDeclaration","scope":4841,"src":"6638:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4829,"name":"address","nodeType":"ElementaryTypeName","src":"6638:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4832,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6678:6:14","nodeType":"VariableDeclaration","scope":4841,"src":"6670:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4831,"name":"uint256","nodeType":"ElementaryTypeName","src":"6670:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4835,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"6722:16:14","nodeType":"VariableDeclaration","scope":4841,"src":"6695:43:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":4834,"nodeType":"UserDefinedTypeName","pathNode":{"id":4833,"name":"DataTypes.InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"6695:26:14"},"referencedDeclaration":55,"src":"6695:26:14","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$55","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":4837,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"6757:7:14","nodeType":"VariableDeclaration","scope":4841,"src":"6749:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"6749:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4839,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"6790:12:14","nodeType":"VariableDeclaration","scope":4841,"src":"6775:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4838,"name":"uint16","nodeType":"ElementaryTypeName","src":"6775:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6566:243:14"},"src":"6551:259:14"},{"anonymous":false,"documentation":{"id":4842,"nodeType":"StructuredDocumentation","src":"6818:779:14","text":" @dev Emitted when a borrower is liquidated.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n @param liquidator The address of the liquidator\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"},"id":4858,"name":"LiquidationCall","nameLocation":"7609:15:14","nodeType":"EventDefinition","parameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"indexed":true,"mutability":"mutable","name":"collateralAsset","nameLocation":"7651:15:14","nodeType":"VariableDeclaration","scope":4858,"src":"7635:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4843,"name":"address","nodeType":"ElementaryTypeName","src":"7635:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4846,"indexed":true,"mutability":"mutable","name":"debtAsset","nameLocation":"7693:9:14","nodeType":"VariableDeclaration","scope":4858,"src":"7677:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4845,"name":"address","nodeType":"ElementaryTypeName","src":"7677:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4848,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"7729:4:14","nodeType":"VariableDeclaration","scope":4858,"src":"7713:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4847,"name":"address","nodeType":"ElementaryTypeName","src":"7713:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4850,"indexed":false,"mutability":"mutable","name":"debtToCover","nameLocation":"7752:11:14","nodeType":"VariableDeclaration","scope":4858,"src":"7744:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4849,"name":"uint256","nodeType":"ElementaryTypeName","src":"7744:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4852,"indexed":false,"mutability":"mutable","name":"liquidatedCollateralAmount","nameLocation":"7782:26:14","nodeType":"VariableDeclaration","scope":4858,"src":"7774:34:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4851,"name":"uint256","nodeType":"ElementaryTypeName","src":"7774:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4854,"indexed":false,"mutability":"mutable","name":"liquidator","nameLocation":"7827:10:14","nodeType":"VariableDeclaration","scope":4858,"src":"7819:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4853,"name":"address","nodeType":"ElementaryTypeName","src":"7819:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4856,"indexed":false,"mutability":"mutable","name":"receiveAToken","nameLocation":"7853:13:14","nodeType":"VariableDeclaration","scope":4858,"src":"7848:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4855,"name":"bool","nodeType":"ElementaryTypeName","src":"7848:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7624:249:14"},"src":"7603:271:14"},{"anonymous":false,"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"7882:445:14","text":" @dev Emitted when the state of a reserve is updated.\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The next liquidity rate\n @param stableBorrowRate The next stable borrow rate\n @param variableBorrowRate The next variable borrow rate\n @param liquidityIndex The next liquidity index\n @param variableBorrowIndex The next variable borrow index"},"id":4873,"name":"ReserveDataUpdated","nameLocation":"8339:18:14","nodeType":"EventDefinition","parameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"8384:7:14","nodeType":"VariableDeclaration","scope":4873,"src":"8368:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4860,"name":"address","nodeType":"ElementaryTypeName","src":"8368:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4863,"indexed":false,"mutability":"mutable","name":"liquidityRate","nameLocation":"8410:13:14","nodeType":"VariableDeclaration","scope":4873,"src":"8402:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"8402:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4865,"indexed":false,"mutability":"mutable","name":"stableBorrowRate","nameLocation":"8442:16:14","nodeType":"VariableDeclaration","scope":4873,"src":"8434:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4867,"indexed":false,"mutability":"mutable","name":"variableBorrowRate","nameLocation":"8477:18:14","nodeType":"VariableDeclaration","scope":4873,"src":"8469:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4866,"name":"uint256","nodeType":"ElementaryTypeName","src":"8469:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4869,"indexed":false,"mutability":"mutable","name":"liquidityIndex","nameLocation":"8514:14:14","nodeType":"VariableDeclaration","scope":4873,"src":"8506:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"8506:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4871,"indexed":false,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"8547:19:14","nodeType":"VariableDeclaration","scope":4873,"src":"8539:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4870,"name":"uint256","nodeType":"ElementaryTypeName","src":"8539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8357:216:14"},"src":"8333:241:14"},{"anonymous":false,"documentation":{"id":4874,"nodeType":"StructuredDocumentation","src":"8582:223:14","text":" @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n @param reserve The address of the reserve\n @param amountMinted The amount minted to the treasury"},"id":4880,"name":"MintedToTreasury","nameLocation":"8817:16:14","nodeType":"EventDefinition","parameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"8850:7:14","nodeType":"VariableDeclaration","scope":4880,"src":"8834:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4875,"name":"address","nodeType":"ElementaryTypeName","src":"8834:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4878,"indexed":false,"mutability":"mutable","name":"amountMinted","nameLocation":"8867:12:14","nodeType":"VariableDeclaration","scope":4880,"src":"8859:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"8859:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8833:47:14"},"src":"8811:70:14"},{"documentation":{"id":4881,"nodeType":"StructuredDocumentation","src":"8889:449:14","text":" @notice Mints an `amount` of aTokens to the `onBehalfOf`\n @param asset The address of the underlying asset to mint\n @param amount The amount to mint\n @param onBehalfOf The address that will receive the aTokens\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"69a933a5","id":4892,"implemented":false,"kind":"function","modifiers":[],"name":"mintUnbacked","nameLocation":"9353:12:14","nodeType":"FunctionDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"asset","nameLocation":"9384:5:14","nodeType":"VariableDeclaration","scope":4892,"src":"9376:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4882,"name":"address","nodeType":"ElementaryTypeName","src":"9376:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4885,"mutability":"mutable","name":"amount","nameLocation":"9408:6:14","nodeType":"VariableDeclaration","scope":4892,"src":"9400:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"9400:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4887,"mutability":"mutable","name":"onBehalfOf","nameLocation":"9433:10:14","nodeType":"VariableDeclaration","scope":4892,"src":"9425:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4886,"name":"address","nodeType":"ElementaryTypeName","src":"9425:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4889,"mutability":"mutable","name":"referralCode","nameLocation":"9461:12:14","nodeType":"VariableDeclaration","scope":4892,"src":"9454:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4888,"name":"uint16","nodeType":"ElementaryTypeName","src":"9454:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9365:115:14"},"returnParameters":{"id":4891,"nodeType":"ParameterList","parameters":[],"src":"9489:0:14"},"scope":5331,"src":"9344:146:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4893,"nodeType":"StructuredDocumentation","src":"9498:277:14","text":" @notice Back the current unbacked underlying with `amount` and pay `fee`.\n @param asset The address of the underlying asset to back\n @param amount The amount to back\n @param fee The amount paid in fees\n @return The backed amount"},"functionSelector":"d65dc7a1","id":4904,"implemented":false,"kind":"function","modifiers":[],"name":"backUnbacked","nameLocation":"9790:12:14","nodeType":"FunctionDefinition","parameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"asset","nameLocation":"9821:5:14","nodeType":"VariableDeclaration","scope":4904,"src":"9813:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4894,"name":"address","nodeType":"ElementaryTypeName","src":"9813:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4897,"mutability":"mutable","name":"amount","nameLocation":"9845:6:14","nodeType":"VariableDeclaration","scope":4904,"src":"9837:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"9837:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4899,"mutability":"mutable","name":"fee","nameLocation":"9870:3:14","nodeType":"VariableDeclaration","scope":4904,"src":"9862:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"9862:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9802:78:14"},"returnParameters":{"id":4903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4904,"src":"9899:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4901,"name":"uint256","nodeType":"ElementaryTypeName","src":"9899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9898:9:14"},"scope":5331,"src":"9781:127:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4905,"nodeType":"StructuredDocumentation","src":"9916:742:14","text":" @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"617ba037","id":4916,"implemented":false,"kind":"function","modifiers":[],"name":"supply","nameLocation":"10673:6:14","nodeType":"FunctionDefinition","parameters":{"id":4914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"asset","nameLocation":"10698:5:14","nodeType":"VariableDeclaration","scope":4916,"src":"10690:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4906,"name":"address","nodeType":"ElementaryTypeName","src":"10690:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4909,"mutability":"mutable","name":"amount","nameLocation":"10722:6:14","nodeType":"VariableDeclaration","scope":4916,"src":"10714:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10714:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4911,"mutability":"mutable","name":"onBehalfOf","nameLocation":"10747:10:14","nodeType":"VariableDeclaration","scope":4916,"src":"10739:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4910,"name":"address","nodeType":"ElementaryTypeName","src":"10739:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4913,"mutability":"mutable","name":"referralCode","nameLocation":"10775:12:14","nodeType":"VariableDeclaration","scope":4916,"src":"10768:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4912,"name":"uint16","nodeType":"ElementaryTypeName","src":"10768:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"10679:115:14"},"returnParameters":{"id":4915,"nodeType":"ParameterList","parameters":[],"src":"10803:0:14"},"scope":5331,"src":"10664:140:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4917,"nodeType":"StructuredDocumentation","src":"10812:1004:14","text":" @notice Supply with transfer approval of asset to be supplied done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param deadline The deadline timestamp that the permit is valid\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig"},"functionSelector":"02c205f0","id":4936,"implemented":false,"kind":"function","modifiers":[],"name":"supplyWithPermit","nameLocation":"11831:16:14","nodeType":"FunctionDefinition","parameters":{"id":4934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"mutability":"mutable","name":"asset","nameLocation":"11866:5:14","nodeType":"VariableDeclaration","scope":4936,"src":"11858:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4918,"name":"address","nodeType":"ElementaryTypeName","src":"11858:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4921,"mutability":"mutable","name":"amount","nameLocation":"11890:6:14","nodeType":"VariableDeclaration","scope":4936,"src":"11882:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4920,"name":"uint256","nodeType":"ElementaryTypeName","src":"11882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4923,"mutability":"mutable","name":"onBehalfOf","nameLocation":"11915:10:14","nodeType":"VariableDeclaration","scope":4936,"src":"11907:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4922,"name":"address","nodeType":"ElementaryTypeName","src":"11907:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4925,"mutability":"mutable","name":"referralCode","nameLocation":"11943:12:14","nodeType":"VariableDeclaration","scope":4936,"src":"11936:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4924,"name":"uint16","nodeType":"ElementaryTypeName","src":"11936:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"deadline","nameLocation":"11974:8:14","nodeType":"VariableDeclaration","scope":4936,"src":"11966:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"11966:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4929,"mutability":"mutable","name":"permitV","nameLocation":"11999:7:14","nodeType":"VariableDeclaration","scope":4936,"src":"11993:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4928,"name":"uint8","nodeType":"ElementaryTypeName","src":"11993:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4931,"mutability":"mutable","name":"permitR","nameLocation":"12025:7:14","nodeType":"VariableDeclaration","scope":4936,"src":"12017:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12017:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4933,"mutability":"mutable","name":"permitS","nameLocation":"12051:7:14","nodeType":"VariableDeclaration","scope":4936,"src":"12043:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12043:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11847:218:14"},"returnParameters":{"id":4935,"nodeType":"ParameterList","parameters":[],"src":"12074:0:14"},"scope":5331,"src":"11822:253:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4937,"nodeType":"StructuredDocumentation","src":"12083:701:14","text":" @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to The address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn"},"functionSelector":"69328dec","id":4948,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"12799:8:14","nodeType":"FunctionDefinition","parameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"mutability":"mutable","name":"asset","nameLocation":"12826:5:14","nodeType":"VariableDeclaration","scope":4948,"src":"12818:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4938,"name":"address","nodeType":"ElementaryTypeName","src":"12818:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4941,"mutability":"mutable","name":"amount","nameLocation":"12850:6:14","nodeType":"VariableDeclaration","scope":4948,"src":"12842:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4940,"name":"uint256","nodeType":"ElementaryTypeName","src":"12842:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4943,"mutability":"mutable","name":"to","nameLocation":"12875:2:14","nodeType":"VariableDeclaration","scope":4948,"src":"12867:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4942,"name":"address","nodeType":"ElementaryTypeName","src":"12867:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12807:77:14"},"returnParameters":{"id":4947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4948,"src":"12903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4945,"name":"uint256","nodeType":"ElementaryTypeName","src":"12903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12902:9:14"},"scope":5331,"src":"12790:122:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4949,"nodeType":"StructuredDocumentation","src":"12920:1240:14","text":" @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance"},"functionSelector":"a415bcad","id":4962,"implemented":false,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"14175:6:14","nodeType":"FunctionDefinition","parameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4951,"mutability":"mutable","name":"asset","nameLocation":"14200:5:14","nodeType":"VariableDeclaration","scope":4962,"src":"14192:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4950,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4953,"mutability":"mutable","name":"amount","nameLocation":"14224:6:14","nodeType":"VariableDeclaration","scope":4962,"src":"14216:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"14216:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4955,"mutability":"mutable","name":"interestRateMode","nameLocation":"14249:16:14","nodeType":"VariableDeclaration","scope":4962,"src":"14241:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"14241:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4957,"mutability":"mutable","name":"referralCode","nameLocation":"14283:12:14","nodeType":"VariableDeclaration","scope":4962,"src":"14276:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4956,"name":"uint16","nodeType":"ElementaryTypeName","src":"14276:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4959,"mutability":"mutable","name":"onBehalfOf","nameLocation":"14314:10:14","nodeType":"VariableDeclaration","scope":4962,"src":"14306:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4958,"name":"address","nodeType":"ElementaryTypeName","src":"14306:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14181:150:14"},"returnParameters":{"id":4961,"nodeType":"ParameterList","parameters":[],"src":"14340:0:14"},"scope":5331,"src":"14166:175:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4963,"nodeType":"StructuredDocumentation","src":"14349:906:14","text":" @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid"},"functionSelector":"573ade81","id":4976,"implemented":false,"kind":"function","modifiers":[],"name":"repay","nameLocation":"15270:5:14","nodeType":"FunctionDefinition","parameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"asset","nameLocation":"15294:5:14","nodeType":"VariableDeclaration","scope":4976,"src":"15286:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4964,"name":"address","nodeType":"ElementaryTypeName","src":"15286:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4967,"mutability":"mutable","name":"amount","nameLocation":"15318:6:14","nodeType":"VariableDeclaration","scope":4976,"src":"15310:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4966,"name":"uint256","nodeType":"ElementaryTypeName","src":"15310:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4969,"mutability":"mutable","name":"interestRateMode","nameLocation":"15343:16:14","nodeType":"VariableDeclaration","scope":4976,"src":"15335:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4971,"mutability":"mutable","name":"onBehalfOf","nameLocation":"15378:10:14","nodeType":"VariableDeclaration","scope":4976,"src":"15370:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4970,"name":"address","nodeType":"ElementaryTypeName","src":"15370:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15275:120:14"},"returnParameters":{"id":4975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4976,"src":"15414:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4973,"name":"uint256","nodeType":"ElementaryTypeName","src":"15414:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15413:9:14"},"scope":5331,"src":"15261:162:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"15431:1130:14","text":" @notice Repay with transfer approval of asset to be repaid done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @param deadline The deadline timestamp that the permit is valid\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig\n @return The final amount repaid"},"functionSelector":"ee3e210b","id":4998,"implemented":false,"kind":"function","modifiers":[],"name":"repayWithPermit","nameLocation":"16576:15:14","nodeType":"FunctionDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"asset","nameLocation":"16610:5:14","nodeType":"VariableDeclaration","scope":4998,"src":"16602:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4978,"name":"address","nodeType":"ElementaryTypeName","src":"16602:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4981,"mutability":"mutable","name":"amount","nameLocation":"16634:6:14","nodeType":"VariableDeclaration","scope":4998,"src":"16626:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"16626:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4983,"mutability":"mutable","name":"interestRateMode","nameLocation":"16659:16:14","nodeType":"VariableDeclaration","scope":4998,"src":"16651:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4982,"name":"uint256","nodeType":"ElementaryTypeName","src":"16651:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4985,"mutability":"mutable","name":"onBehalfOf","nameLocation":"16694:10:14","nodeType":"VariableDeclaration","scope":4998,"src":"16686:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4984,"name":"address","nodeType":"ElementaryTypeName","src":"16686:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4987,"mutability":"mutable","name":"deadline","nameLocation":"16723:8:14","nodeType":"VariableDeclaration","scope":4998,"src":"16715:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4986,"name":"uint256","nodeType":"ElementaryTypeName","src":"16715:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"permitV","nameLocation":"16748:7:14","nodeType":"VariableDeclaration","scope":4998,"src":"16742:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4988,"name":"uint8","nodeType":"ElementaryTypeName","src":"16742:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4991,"mutability":"mutable","name":"permitR","nameLocation":"16774:7:14","nodeType":"VariableDeclaration","scope":4998,"src":"16766:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16766:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4993,"mutability":"mutable","name":"permitS","nameLocation":"16800:7:14","nodeType":"VariableDeclaration","scope":4998,"src":"16792:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16792:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16591:223:14"},"returnParameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4998,"src":"16833:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"16833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16832:9:14"},"scope":5331,"src":"16567:275:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4999,"nodeType":"StructuredDocumentation","src":"16850:812:14","text":" @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n equivalent debt tokens\n - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n balance is not enough to cover the whole debt\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @return The final amount repaid"},"functionSelector":"2dad97d4","id":5010,"implemented":false,"kind":"function","modifiers":[],"name":"repayWithATokens","nameLocation":"17677:16:14","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"asset","nameLocation":"17712:5:14","nodeType":"VariableDeclaration","scope":5010,"src":"17704:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5000,"name":"address","nodeType":"ElementaryTypeName","src":"17704:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5003,"mutability":"mutable","name":"amount","nameLocation":"17736:6:14","nodeType":"VariableDeclaration","scope":5010,"src":"17728:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5002,"name":"uint256","nodeType":"ElementaryTypeName","src":"17728:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"interestRateMode","nameLocation":"17761:16:14","nodeType":"VariableDeclaration","scope":5010,"src":"17753:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"17753:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17693:91:14"},"returnParameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5010,"src":"17803:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"17803:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17802:9:14"},"scope":5331,"src":"17668:144:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5011,"nodeType":"StructuredDocumentation","src":"17820:300:14","text":" @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n @param asset The address of the underlying asset borrowed\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"},"functionSelector":"94ba89a2","id":5018,"implemented":false,"kind":"function","modifiers":[],"name":"swapBorrowRateMode","nameLocation":"18135:18:14","nodeType":"FunctionDefinition","parameters":{"id":5016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5013,"mutability":"mutable","name":"asset","nameLocation":"18172:5:14","nodeType":"VariableDeclaration","scope":5018,"src":"18164:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5012,"name":"address","nodeType":"ElementaryTypeName","src":"18164:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5015,"mutability":"mutable","name":"interestRateMode","nameLocation":"18196:16:14","nodeType":"VariableDeclaration","scope":5018,"src":"18188:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"18188:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18153:66:14"},"returnParameters":{"id":5017,"nodeType":"ParameterList","parameters":[],"src":"18228:0:14"},"scope":5331,"src":"18126:103:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5019,"nodeType":"StructuredDocumentation","src":"18237:577:14","text":" @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n        much has been borrowed at a stable rate and suppliers are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced"},"functionSelector":"cd112382","id":5026,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceStableBorrowRate","nameLocation":"18829:25:14","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5021,"mutability":"mutable","name":"asset","nameLocation":"18863:5:14","nodeType":"VariableDeclaration","scope":5026,"src":"18855:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5020,"name":"address","nodeType":"ElementaryTypeName","src":"18855:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5023,"mutability":"mutable","name":"user","nameLocation":"18878:4:14","nodeType":"VariableDeclaration","scope":5026,"src":"18870:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5022,"name":"address","nodeType":"ElementaryTypeName","src":"18870:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18854:29:14"},"returnParameters":{"id":5025,"nodeType":"ParameterList","parameters":[],"src":"18892:0:14"},"scope":5331,"src":"18820:73:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"18901:272:14","text":" @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n @param asset The address of the underlying asset supplied\n @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise"},"functionSelector":"5a3b74b9","id":5034,"implemented":false,"kind":"function","modifiers":[],"name":"setUserUseReserveAsCollateral","nameLocation":"19188:29:14","nodeType":"FunctionDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"asset","nameLocation":"19236:5:14","nodeType":"VariableDeclaration","scope":5034,"src":"19228:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5028,"name":"address","nodeType":"ElementaryTypeName","src":"19228:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5031,"mutability":"mutable","name":"useAsCollateral","nameLocation":"19257:15:14","nodeType":"VariableDeclaration","scope":5034,"src":"19252:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5030,"name":"bool","nodeType":"ElementaryTypeName","src":"19252:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19217:62:14"},"returnParameters":{"id":5033,"nodeType":"ParameterList","parameters":[],"src":"19288:0:14"},"scope":5331,"src":"19179:110:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5035,"nodeType":"StructuredDocumentation","src":"19297:890:14","text":" @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"},"functionSelector":"00a718a9","id":5048,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationCall","nameLocation":"20202:15:14","nodeType":"FunctionDefinition","parameters":{"id":5046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5037,"mutability":"mutable","name":"collateralAsset","nameLocation":"20236:15:14","nodeType":"VariableDeclaration","scope":5048,"src":"20228:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5036,"name":"address","nodeType":"ElementaryTypeName","src":"20228:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5039,"mutability":"mutable","name":"debtAsset","nameLocation":"20270:9:14","nodeType":"VariableDeclaration","scope":5048,"src":"20262:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5038,"name":"address","nodeType":"ElementaryTypeName","src":"20262:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5041,"mutability":"mutable","name":"user","nameLocation":"20298:4:14","nodeType":"VariableDeclaration","scope":5048,"src":"20290:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5040,"name":"address","nodeType":"ElementaryTypeName","src":"20290:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5043,"mutability":"mutable","name":"debtToCover","nameLocation":"20321:11:14","nodeType":"VariableDeclaration","scope":5048,"src":"20313:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5042,"name":"uint256","nodeType":"ElementaryTypeName","src":"20313:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5045,"mutability":"mutable","name":"receiveAToken","nameLocation":"20348:13:14","nodeType":"VariableDeclaration","scope":5048,"src":"20343:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5044,"name":"bool","nodeType":"ElementaryTypeName","src":"20343:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20217:151:14"},"returnParameters":{"id":5047,"nodeType":"ParameterList","parameters":[],"src":"20377:0:14"},"scope":5331,"src":"20193:185:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5049,"nodeType":"StructuredDocumentation","src":"20386:1455:14","text":" @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts of the assets being flash-borrowed\n @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"ab9c4b5d","id":5069,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"21856:9:14","nodeType":"FunctionDefinition","parameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"receiverAddress","nameLocation":"21884:15:14","nodeType":"VariableDeclaration","scope":5069,"src":"21876:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5050,"name":"address","nodeType":"ElementaryTypeName","src":"21876:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5054,"mutability":"mutable","name":"assets","nameLocation":"21929:6:14","nodeType":"VariableDeclaration","scope":5069,"src":"21910:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5052,"name":"address","nodeType":"ElementaryTypeName","src":"21910:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5053,"nodeType":"ArrayTypeName","src":"21910:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5057,"mutability":"mutable","name":"amounts","nameLocation":"21965:7:14","nodeType":"VariableDeclaration","scope":5069,"src":"21946:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5055,"name":"uint256","nodeType":"ElementaryTypeName","src":"21946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5056,"nodeType":"ArrayTypeName","src":"21946:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5060,"mutability":"mutable","name":"interestRateModes","nameLocation":"22002:17:14","nodeType":"VariableDeclaration","scope":5069,"src":"21983:36:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"21983:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5059,"nodeType":"ArrayTypeName","src":"21983:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5062,"mutability":"mutable","name":"onBehalfOf","nameLocation":"22038:10:14","nodeType":"VariableDeclaration","scope":5069,"src":"22030:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5061,"name":"address","nodeType":"ElementaryTypeName","src":"22030:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5064,"mutability":"mutable","name":"params","nameLocation":"22074:6:14","nodeType":"VariableDeclaration","scope":5069,"src":"22059:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5063,"name":"bytes","nodeType":"ElementaryTypeName","src":"22059:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5066,"mutability":"mutable","name":"referralCode","nameLocation":"22098:12:14","nodeType":"VariableDeclaration","scope":5069,"src":"22091:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5065,"name":"uint16","nodeType":"ElementaryTypeName","src":"22091:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"21865:252:14"},"returnParameters":{"id":5068,"nodeType":"ParameterList","parameters":[],"src":"22126:0:14"},"scope":5331,"src":"21847:280:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5070,"nodeType":"StructuredDocumentation","src":"22135:935:14","text":" @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n @param asset The address of the asset being flash-borrowed\n @param amount The amount of the asset being flash-borrowed\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"42b0b77c","id":5083,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoanSimple","nameLocation":"23085:15:14","nodeType":"FunctionDefinition","parameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"receiverAddress","nameLocation":"23119:15:14","nodeType":"VariableDeclaration","scope":5083,"src":"23111:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5071,"name":"address","nodeType":"ElementaryTypeName","src":"23111:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5074,"mutability":"mutable","name":"asset","nameLocation":"23153:5:14","nodeType":"VariableDeclaration","scope":5083,"src":"23145:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5073,"name":"address","nodeType":"ElementaryTypeName","src":"23145:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5076,"mutability":"mutable","name":"amount","nameLocation":"23177:6:14","nodeType":"VariableDeclaration","scope":5083,"src":"23169:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5075,"name":"uint256","nodeType":"ElementaryTypeName","src":"23169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5078,"mutability":"mutable","name":"params","nameLocation":"23209:6:14","nodeType":"VariableDeclaration","scope":5083,"src":"23194:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5077,"name":"bytes","nodeType":"ElementaryTypeName","src":"23194:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5080,"mutability":"mutable","name":"referralCode","nameLocation":"23233:12:14","nodeType":"VariableDeclaration","scope":5083,"src":"23226:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5079,"name":"uint16","nodeType":"ElementaryTypeName","src":"23226:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"23100:152:14"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[],"src":"23261:0:14"},"scope":5331,"src":"23076:186:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5084,"nodeType":"StructuredDocumentation","src":"23270:657:14","text":" @notice Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n @return totalDebtBase The total debt of the user in the base currency used by the price feed\n @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n @return currentLiquidationThreshold The liquidation threshold of the user\n @return ltv The loan to value of The user\n @return healthFactor The current health factor of the user"},"functionSelector":"bf92857c","id":5101,"implemented":false,"kind":"function","modifiers":[],"name":"getUserAccountData","nameLocation":"23942:18:14","nodeType":"FunctionDefinition","parameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"user","nameLocation":"23979:4:14","nodeType":"VariableDeclaration","scope":5101,"src":"23971:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5085,"name":"address","nodeType":"ElementaryTypeName","src":"23971:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23960:30:14"},"returnParameters":{"id":5100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"totalCollateralBase","nameLocation":"24063:19:14","nodeType":"VariableDeclaration","scope":5101,"src":"24055:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"24055:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5091,"mutability":"mutable","name":"totalDebtBase","nameLocation":"24105:13:14","nodeType":"VariableDeclaration","scope":5101,"src":"24097:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5090,"name":"uint256","nodeType":"ElementaryTypeName","src":"24097:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5093,"mutability":"mutable","name":"availableBorrowsBase","nameLocation":"24141:20:14","nodeType":"VariableDeclaration","scope":5101,"src":"24133:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5092,"name":"uint256","nodeType":"ElementaryTypeName","src":"24133:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5095,"mutability":"mutable","name":"currentLiquidationThreshold","nameLocation":"24184:27:14","nodeType":"VariableDeclaration","scope":5101,"src":"24176:35:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint256","nodeType":"ElementaryTypeName","src":"24176:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5097,"mutability":"mutable","name":"ltv","nameLocation":"24234:3:14","nodeType":"VariableDeclaration","scope":5101,"src":"24226:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5096,"name":"uint256","nodeType":"ElementaryTypeName","src":"24226:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5099,"mutability":"mutable","name":"healthFactor","nameLocation":"24260:12:14","nodeType":"VariableDeclaration","scope":5101,"src":"24252:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5098,"name":"uint256","nodeType":"ElementaryTypeName","src":"24252:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24040:243:14"},"scope":5331,"src":"23933:351:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5102,"nodeType":"StructuredDocumentation","src":"24292:672:14","text":" @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n interest rate strategy\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param aTokenAddress The address of the aToken that will be assigned to the reserve\n @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n @param interestRateStrategyAddress The address of the interest rate strategy contract"},"functionSelector":"7a708e92","id":5115,"implemented":false,"kind":"function","modifiers":[],"name":"initReserve","nameLocation":"24979:11:14","nodeType":"FunctionDefinition","parameters":{"id":5113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5104,"mutability":"mutable","name":"asset","nameLocation":"25009:5:14","nodeType":"VariableDeclaration","scope":5115,"src":"25001:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5103,"name":"address","nodeType":"ElementaryTypeName","src":"25001:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5106,"mutability":"mutable","name":"aTokenAddress","nameLocation":"25033:13:14","nodeType":"VariableDeclaration","scope":5115,"src":"25025:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5105,"name":"address","nodeType":"ElementaryTypeName","src":"25025:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5108,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"25065:17:14","nodeType":"VariableDeclaration","scope":5115,"src":"25057:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5107,"name":"address","nodeType":"ElementaryTypeName","src":"25057:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5110,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"25101:19:14","nodeType":"VariableDeclaration","scope":5115,"src":"25093:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5109,"name":"address","nodeType":"ElementaryTypeName","src":"25093:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5112,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"25139:27:14","nodeType":"VariableDeclaration","scope":5115,"src":"25131:35:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5111,"name":"address","nodeType":"ElementaryTypeName","src":"25131:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24990:183:14"},"returnParameters":{"id":5114,"nodeType":"ParameterList","parameters":[],"src":"25182:0:14"},"scope":5331,"src":"24970:213:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5116,"nodeType":"StructuredDocumentation","src":"25191:175:14","text":" @notice Drop a reserve\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve"},"functionSelector":"63c9b860","id":5121,"implemented":false,"kind":"function","modifiers":[],"name":"dropReserve","nameLocation":"25381:11:14","nodeType":"FunctionDefinition","parameters":{"id":5119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"asset","nameLocation":"25401:5:14","nodeType":"VariableDeclaration","scope":5121,"src":"25393:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5117,"name":"address","nodeType":"ElementaryTypeName","src":"25393:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25392:15:14"},"returnParameters":{"id":5120,"nodeType":"ParameterList","parameters":[],"src":"25416:0:14"},"scope":5331,"src":"25372:45:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5122,"nodeType":"StructuredDocumentation","src":"25425:305:14","text":" @notice Updates the address of the interest rate strategy contract\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param rateStrategyAddress The address of the interest rate strategy contract"},"functionSelector":"1d2118f9","id":5129,"implemented":false,"kind":"function","modifiers":[],"name":"setReserveInterestRateStrategyAddress","nameLocation":"25745:37:14","nodeType":"FunctionDefinition","parameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"asset","nameLocation":"25801:5:14","nodeType":"VariableDeclaration","scope":5129,"src":"25793:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5123,"name":"address","nodeType":"ElementaryTypeName","src":"25793:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5126,"mutability":"mutable","name":"rateStrategyAddress","nameLocation":"25825:19:14","nodeType":"VariableDeclaration","scope":5129,"src":"25817:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5125,"name":"address","nodeType":"ElementaryTypeName","src":"25817:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25782:69:14"},"returnParameters":{"id":5128,"nodeType":"ParameterList","parameters":[],"src":"25860:0:14"},"scope":5331,"src":"25736:125:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5130,"nodeType":"StructuredDocumentation","src":"25869:274:14","text":" @notice Sets the configuration bitmap of the reserve as a whole\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param configuration The new configuration bitmap"},"functionSelector":"f51e435b","id":5138,"implemented":false,"kind":"function","modifiers":[],"name":"setConfiguration","nameLocation":"26158:16:14","nodeType":"FunctionDefinition","parameters":{"id":5136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5132,"mutability":"mutable","name":"asset","nameLocation":"26193:5:14","nodeType":"VariableDeclaration","scope":5138,"src":"26185:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5131,"name":"address","nodeType":"ElementaryTypeName","src":"26185:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5135,"mutability":"mutable","name":"configuration","nameLocation":"26252:13:14","nodeType":"VariableDeclaration","scope":5138,"src":"26209:56:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_calldata_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":5134,"nodeType":"UserDefinedTypeName","pathNode":{"id":5133,"name":"DataTypes.ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":36,"src":"26209:33:14"},"referencedDeclaration":36,"src":"26209:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"26174:98:14"},"returnParameters":{"id":5137,"nodeType":"ParameterList","parameters":[],"src":"26281:0:14"},"scope":5331,"src":"26149:133:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5139,"nodeType":"StructuredDocumentation","src":"26290:190:14","text":" @notice Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve"},"functionSelector":"c44b11f7","id":5147,"implemented":false,"kind":"function","modifiers":[],"name":"getConfiguration","nameLocation":"26495:16:14","nodeType":"FunctionDefinition","parameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"asset","nameLocation":"26530:5:14","nodeType":"VariableDeclaration","scope":5147,"src":"26522:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5140,"name":"address","nodeType":"ElementaryTypeName","src":"26522:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26511:31:14"},"returnParameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5147,"src":"26566:40:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_memory_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":5144,"nodeType":"UserDefinedTypeName","pathNode":{"id":5143,"name":"DataTypes.ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":36,"src":"26566:33:14"},"referencedDeclaration":36,"src":"26566:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$36_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"26565:42:14"},"scope":5331,"src":"26486:122:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5148,"nodeType":"StructuredDocumentation","src":"26616:173:14","text":" @notice Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user"},"functionSelector":"4417a583","id":5156,"implemented":false,"kind":"function","modifiers":[],"name":"getUserConfiguration","nameLocation":"26804:20:14","nodeType":"FunctionDefinition","parameters":{"id":5151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5150,"mutability":"mutable","name":"user","nameLocation":"26843:4:14","nodeType":"VariableDeclaration","scope":5156,"src":"26835:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5149,"name":"address","nodeType":"ElementaryTypeName","src":"26835:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26824:30:14"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5156,"src":"26878:37:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_memory_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":5153,"nodeType":"UserDefinedTypeName","pathNode":{"id":5152,"name":"DataTypes.UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":40,"src":"26878:30:14"},"referencedDeclaration":40,"src":"26878:30:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$40_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"}],"src":"26877:39:14"},"scope":5331,"src":"26795:122:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5157,"nodeType":"StructuredDocumentation","src":"26925:193:14","text":" @notice Returns the normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"},"functionSelector":"d15e0053","id":5164,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedIncome","nameLocation":"27133:26:14","nodeType":"FunctionDefinition","parameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"asset","nameLocation":"27178:5:14","nodeType":"VariableDeclaration","scope":5164,"src":"27170:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5158,"name":"address","nodeType":"ElementaryTypeName","src":"27170:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27159:31:14"},"returnParameters":{"id":5163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5164,"src":"27214:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5161,"name":"uint256","nodeType":"ElementaryTypeName","src":"27214:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27213:9:14"},"scope":5331,"src":"27124:99:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5165,"nodeType":"StructuredDocumentation","src":"27231:838:14","text":" @notice Returns the normalized variable debt per unit of asset\n @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n moment (approx. a borrower would get if opening a position). This means that is always used in\n combination with variable debt supply/balances.\n If using this function externally, consider that is possible to have an increasing normalized\n variable debt that is not equivalent to how the variable debt index would be updated in storage\n (e.g. only updates with non-zero variable debt supply)\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"},"functionSelector":"386497fd","id":5172,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedVariableDebt","nameLocation":"28084:32:14","nodeType":"FunctionDefinition","parameters":{"id":5168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5167,"mutability":"mutable","name":"asset","nameLocation":"28135:5:14","nodeType":"VariableDeclaration","scope":5172,"src":"28127:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5166,"name":"address","nodeType":"ElementaryTypeName","src":"28127:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28116:31:14"},"returnParameters":{"id":5171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5172,"src":"28171:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5169,"name":"uint256","nodeType":"ElementaryTypeName","src":"28171:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28170:9:14"},"scope":5331,"src":"28075:105:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5173,"nodeType":"StructuredDocumentation","src":"28188:215:14","text":" @notice Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state and configuration data of the reserve"},"functionSelector":"35ea6a75","id":5181,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveData","nameLocation":"28418:14:14","nodeType":"FunctionDefinition","parameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"asset","nameLocation":"28451:5:14","nodeType":"VariableDeclaration","scope":5181,"src":"28443:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5174,"name":"address","nodeType":"ElementaryTypeName","src":"28443:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28432:31:14"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5181,"src":"28487:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$33_memory_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":5178,"nodeType":"UserDefinedTypeName","pathNode":{"id":5177,"name":"DataTypes.ReserveData","nodeType":"IdentifierPath","referencedDeclaration":33,"src":"28487:21:14"},"referencedDeclaration":33,"src":"28487:21:14","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$33_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"}],"src":"28486:30:14"},"scope":5331,"src":"28409:108:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"28525:564:14","text":" @notice Validates and finalizes an aToken transfer\n @dev Only callable by the overlying aToken of the `asset`\n @param asset The address of the underlying asset of the aToken\n @param from The user from which the aTokens are transferred\n @param to The user receiving the aTokens\n @param amount The amount being transferred/withdrawn\n @param balanceFromBefore The aToken balance of the `from` user before the transfer\n @param balanceToBefore The aToken balance of the `to` user before the transfer"},"functionSelector":"d5ed3933","id":5197,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeTransfer","nameLocation":"29104:16:14","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"asset","nameLocation":"29139:5:14","nodeType":"VariableDeclaration","scope":5197,"src":"29131:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5183,"name":"address","nodeType":"ElementaryTypeName","src":"29131:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5186,"mutability":"mutable","name":"from","nameLocation":"29163:4:14","nodeType":"VariableDeclaration","scope":5197,"src":"29155:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5185,"name":"address","nodeType":"ElementaryTypeName","src":"29155:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5188,"mutability":"mutable","name":"to","nameLocation":"29186:2:14","nodeType":"VariableDeclaration","scope":5197,"src":"29178:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5187,"name":"address","nodeType":"ElementaryTypeName","src":"29178:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5190,"mutability":"mutable","name":"amount","nameLocation":"29207:6:14","nodeType":"VariableDeclaration","scope":5197,"src":"29199:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"29199:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5192,"mutability":"mutable","name":"balanceFromBefore","nameLocation":"29232:17:14","nodeType":"VariableDeclaration","scope":5197,"src":"29224:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"29224:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5194,"mutability":"mutable","name":"balanceToBefore","nameLocation":"29268:15:14","nodeType":"VariableDeclaration","scope":5197,"src":"29260:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"29260:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29120:170:14"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[],"src":"29299:0:14"},"scope":5331,"src":"29095:205:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5198,"nodeType":"StructuredDocumentation","src":"29308:235:14","text":" @notice Returns the list of the underlying assets of all the initialized reserves\n @dev It does not include dropped reserves\n @return The addresses of the underlying assets of the initialized reserves"},"functionSelector":"d1946dbc","id":5204,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesList","nameLocation":"29558:15:14","nodeType":"FunctionDefinition","parameters":{"id":5199,"nodeType":"ParameterList","parameters":[],"src":"29573:2:14"},"returnParameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5204,"src":"29599:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5200,"name":"address","nodeType":"ElementaryTypeName","src":"29599:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5201,"nodeType":"ArrayTypeName","src":"29599:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"29598:18:14"},"scope":5331,"src":"29549:68:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5205,"nodeType":"StructuredDocumentation","src":"29625:297:14","text":" @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n @return The address of the reserve associated with id"},"functionSelector":"52751797","id":5212,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveAddressById","nameLocation":"29937:21:14","nodeType":"FunctionDefinition","parameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"id","nameLocation":"29966:2:14","nodeType":"VariableDeclaration","scope":5212,"src":"29959:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5206,"name":"uint16","nodeType":"ElementaryTypeName","src":"29959:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"29958:11:14"},"returnParameters":{"id":5211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5212,"src":"29993:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5209,"name":"address","nodeType":"ElementaryTypeName","src":"29993:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29992:9:14"},"scope":5331,"src":"29928:74:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5213,"nodeType":"StructuredDocumentation","src":"30010:146:14","text":" @notice Returns the PoolAddressesProvider connected to this contract\n @return The address of the PoolAddressesProvider"},"functionSelector":"0542975c","id":5219,"implemented":false,"kind":"function","modifiers":[],"name":"ADDRESSES_PROVIDER","nameLocation":"30171:18:14","nodeType":"FunctionDefinition","parameters":{"id":5214,"nodeType":"ParameterList","parameters":[],"src":"30189:2:14"},"returnParameters":{"id":5218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5219,"src":"30242:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$5540","typeString":"contract IPoolAddressesProvider"},"typeName":{"id":5216,"nodeType":"UserDefinedTypeName","pathNode":{"id":5215,"name":"IPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":5540,"src":"30242:22:14"},"referencedDeclaration":5540,"src":"30242:22:14","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$5540","typeString":"contract IPoolAddressesProvider"}},"visibility":"internal"}],"src":"30241:24:14"},"scope":5331,"src":"30162:104:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5220,"nodeType":"StructuredDocumentation","src":"30274:156:14","text":" @notice Updates the protocol fee on the bridging\n @param bridgeProtocolFee The part of the premium sent to the protocol treasury"},"functionSelector":"3036b439","id":5225,"implemented":false,"kind":"function","modifiers":[],"name":"updateBridgeProtocolFee","nameLocation":"30445:23:14","nodeType":"FunctionDefinition","parameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"bridgeProtocolFee","nameLocation":"30477:17:14","nodeType":"VariableDeclaration","scope":5225,"src":"30469:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"30469:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30468:27:14"},"returnParameters":{"id":5224,"nodeType":"ParameterList","parameters":[],"src":"30504:0:14"},"scope":5331,"src":"30436:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5226,"nodeType":"StructuredDocumentation","src":"30513:677:14","text":" @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n - A part is sent to aToken holders as extra, one time accumulated interest\n - A part is collected by the protocol treasury\n @dev The total premium is calculated on the total borrowed amount\n @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n @dev Only callable by the PoolConfigurator contract\n @param flashLoanPremiumTotal The total premium, expressed in bps\n @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps"},"functionSelector":"bcb6e522","id":5233,"implemented":false,"kind":"function","modifiers":[],"name":"updateFlashloanPremiums","nameLocation":"31205:23:14","nodeType":"FunctionDefinition","parameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5228,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"31247:21:14","nodeType":"VariableDeclaration","scope":5233,"src":"31239:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5227,"name":"uint128","nodeType":"ElementaryTypeName","src":"31239:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5230,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"31287:26:14","nodeType":"VariableDeclaration","scope":5233,"src":"31279:34:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5229,"name":"uint128","nodeType":"ElementaryTypeName","src":"31279:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"31228:92:14"},"returnParameters":{"id":5232,"nodeType":"ParameterList","parameters":[],"src":"31329:0:14"},"scope":5331,"src":"31196:134:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5234,"nodeType":"StructuredDocumentation","src":"31338:349:14","text":" @notice Configures a new category for the eMode.\n @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n The category 0 is reserved as it's the default for volatile assets\n @param id The id of the category\n @param config The configuration of the category"},"functionSelector":"d579ea7d","id":5242,"implemented":false,"kind":"function","modifiers":[],"name":"configureEModeCategory","nameLocation":"31702:22:14","nodeType":"FunctionDefinition","parameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"id","nameLocation":"31741:2:14","nodeType":"VariableDeclaration","scope":5242,"src":"31735:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5235,"name":"uint8","nodeType":"ElementaryTypeName","src":"31735:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5239,"mutability":"mutable","name":"config","nameLocation":"31785:6:14","nodeType":"VariableDeclaration","scope":5242,"src":"31754:37:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$51_memory_ptr","typeString":"struct DataTypes.EModeCategory"},"typeName":{"id":5238,"nodeType":"UserDefinedTypeName","pathNode":{"id":5237,"name":"DataTypes.EModeCategory","nodeType":"IdentifierPath","referencedDeclaration":51,"src":"31754:23:14"},"referencedDeclaration":51,"src":"31754:23:14","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$51_storage_ptr","typeString":"struct DataTypes.EModeCategory"}},"visibility":"internal"}],"src":"31724:74:14"},"returnParameters":{"id":5241,"nodeType":"ParameterList","parameters":[],"src":"31807:0:14"},"scope":5331,"src":"31693:115:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5243,"nodeType":"StructuredDocumentation","src":"31816:162:14","text":" @notice Returns the data of an eMode category\n @param id The id of the category\n @return The configuration data of the category"},"functionSelector":"6c6f6ae1","id":5251,"implemented":false,"kind":"function","modifiers":[],"name":"getEModeCategoryData","nameLocation":"31993:20:14","nodeType":"FunctionDefinition","parameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"id","nameLocation":"32030:2:14","nodeType":"VariableDeclaration","scope":5251,"src":"32024:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5244,"name":"uint8","nodeType":"ElementaryTypeName","src":"32024:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"32013:26:14"},"returnParameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5251,"src":"32063:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$51_memory_ptr","typeString":"struct DataTypes.EModeCategory"},"typeName":{"id":5248,"nodeType":"UserDefinedTypeName","pathNode":{"id":5247,"name":"DataTypes.EModeCategory","nodeType":"IdentifierPath","referencedDeclaration":51,"src":"32063:23:14"},"referencedDeclaration":51,"src":"32063:23:14","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$51_storage_ptr","typeString":"struct DataTypes.EModeCategory"}},"visibility":"internal"}],"src":"32062:32:14"},"scope":5331,"src":"31984:111:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5252,"nodeType":"StructuredDocumentation","src":"32103:120:14","text":" @notice Allows a user to use the protocol in eMode\n @param categoryId The id of the category"},"functionSelector":"28530a47","id":5257,"implemented":false,"kind":"function","modifiers":[],"name":"setUserEMode","nameLocation":"32238:12:14","nodeType":"FunctionDefinition","parameters":{"id":5255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5254,"mutability":"mutable","name":"categoryId","nameLocation":"32257:10:14","nodeType":"VariableDeclaration","scope":5257,"src":"32251:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5253,"name":"uint8","nodeType":"ElementaryTypeName","src":"32251:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"32250:18:14"},"returnParameters":{"id":5256,"nodeType":"ParameterList","parameters":[],"src":"32277:0:14"},"scope":5331,"src":"32229:49:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5258,"nodeType":"StructuredDocumentation","src":"32286:137:14","text":" @notice Returns the eMode the user is using\n @param user The address of the user\n @return The eMode id"},"functionSelector":"eddf1b79","id":5265,"implemented":false,"kind":"function","modifiers":[],"name":"getUserEMode","nameLocation":"32438:12:14","nodeType":"FunctionDefinition","parameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"user","nameLocation":"32459:4:14","nodeType":"VariableDeclaration","scope":5265,"src":"32451:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5259,"name":"address","nodeType":"ElementaryTypeName","src":"32451:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"32450:14:14"},"returnParameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5265,"src":"32488:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5262,"name":"uint256","nodeType":"ElementaryTypeName","src":"32488:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32487:9:14"},"scope":5331,"src":"32429:68:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5266,"nodeType":"StructuredDocumentation","src":"32505:248:14","text":" @notice Resets the isolation mode total debt of the given asset to zero\n @dev It requires the given asset has zero debt ceiling\n @param asset The address of the underlying asset to reset the isolationModeTotalDebt"},"functionSelector":"e43e88a1","id":5271,"implemented":false,"kind":"function","modifiers":[],"name":"resetIsolationModeTotalDebt","nameLocation":"32768:27:14","nodeType":"FunctionDefinition","parameters":{"id":5269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5268,"mutability":"mutable","name":"asset","nameLocation":"32804:5:14","nodeType":"VariableDeclaration","scope":5271,"src":"32796:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5267,"name":"address","nodeType":"ElementaryTypeName","src":"32796:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"32795:15:14"},"returnParameters":{"id":5270,"nodeType":"ParameterList","parameters":[],"src":"32819:0:14"},"scope":5331,"src":"32759:61:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5272,"nodeType":"StructuredDocumentation","src":"32828:200:14","text":" @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n @return The percentage of available liquidity to borrow, expressed in bps"},"functionSelector":"e82fec2f","id":5277,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_STABLE_RATE_BORROW_SIZE_PERCENT","nameLocation":"33043:35:14","nodeType":"FunctionDefinition","parameters":{"id":5273,"nodeType":"ParameterList","parameters":[],"src":"33078:2:14"},"returnParameters":{"id":5276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5277,"src":"33131:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5274,"name":"uint256","nodeType":"ElementaryTypeName","src":"33131:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33130:9:14"},"scope":5331,"src":"33034:106:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5278,"nodeType":"StructuredDocumentation","src":"33148:109:14","text":" @notice Returns the total fee on flash loans\n @return The total fee on flashloans"},"functionSelector":"074b2e43","id":5283,"implemented":false,"kind":"function","modifiers":[],"name":"FLASHLOAN_PREMIUM_TOTAL","nameLocation":"33272:23:14","nodeType":"FunctionDefinition","parameters":{"id":5279,"nodeType":"ParameterList","parameters":[],"src":"33295:2:14"},"returnParameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5283,"src":"33321:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5280,"name":"uint128","nodeType":"ElementaryTypeName","src":"33321:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"33320:9:14"},"scope":5331,"src":"33263:67:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5284,"nodeType":"StructuredDocumentation","src":"33338:142:14","text":" @notice Returns the part of the bridge fees sent to protocol\n @return The bridge fee sent to the protocol treasury"},"functionSelector":"272d9072","id":5289,"implemented":false,"kind":"function","modifiers":[],"name":"BRIDGE_PROTOCOL_FEE","nameLocation":"33495:19:14","nodeType":"FunctionDefinition","parameters":{"id":5285,"nodeType":"ParameterList","parameters":[],"src":"33514:2:14"},"returnParameters":{"id":5288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5289,"src":"33540:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"33540:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33539:9:14"},"scope":5331,"src":"33486:63:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5290,"nodeType":"StructuredDocumentation","src":"33557:148:14","text":" @notice Returns the part of the flashloan fees sent to protocol\n @return The flashloan fee sent to the protocol treasury"},"functionSelector":"6a99c036","id":5295,"implemented":false,"kind":"function","modifiers":[],"name":"FLASHLOAN_PREMIUM_TO_PROTOCOL","nameLocation":"33720:29:14","nodeType":"FunctionDefinition","parameters":{"id":5291,"nodeType":"ParameterList","parameters":[],"src":"33749:2:14"},"returnParameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5295,"src":"33775:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5292,"name":"uint128","nodeType":"ElementaryTypeName","src":"33775:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"33774:9:14"},"scope":5331,"src":"33711:73:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5296,"nodeType":"StructuredDocumentation","src":"33792:160:14","text":" @notice Returns the maximum number of reserves supported to be listed in this Pool\n @return The maximum number of reserves supported"},"functionSelector":"f8119d51","id":5301,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_NUMBER_RESERVES","nameLocation":"33967:19:14","nodeType":"FunctionDefinition","parameters":{"id":5297,"nodeType":"ParameterList","parameters":[],"src":"33986:2:14"},"returnParameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5301,"src":"34012:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5298,"name":"uint16","nodeType":"ElementaryTypeName","src":"34012:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"34011:8:14"},"scope":5331,"src":"33958:62:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5302,"nodeType":"StructuredDocumentation","src":"34028:205:14","text":" @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n @param assets The list of reserves for which the minting needs to be executed"},"functionSelector":"9cd19996","id":5308,"implemented":false,"kind":"function","modifiers":[],"name":"mintToTreasury","nameLocation":"34248:14:14","nodeType":"FunctionDefinition","parameters":{"id":5306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5305,"mutability":"mutable","name":"assets","nameLocation":"34282:6:14","nodeType":"VariableDeclaration","scope":5308,"src":"34263:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5303,"name":"address","nodeType":"ElementaryTypeName","src":"34263:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5304,"nodeType":"ArrayTypeName","src":"34263:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"34262:27:14"},"returnParameters":{"id":5307,"nodeType":"ParameterList","parameters":[],"src":"34298:0:14"},"scope":5331,"src":"34239:60:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5309,"nodeType":"StructuredDocumentation","src":"34307:226:14","text":" @notice Rescue and transfer tokens locked in this contract\n @param token The address of the token\n @param to The address of the recipient\n @param amount The amount of token to transfer"},"functionSelector":"cea9d26f","id":5318,"implemented":false,"kind":"function","modifiers":[],"name":"rescueTokens","nameLocation":"34548:12:14","nodeType":"FunctionDefinition","parameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5311,"mutability":"mutable","name":"token","nameLocation":"34569:5:14","nodeType":"VariableDeclaration","scope":5318,"src":"34561:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5310,"name":"address","nodeType":"ElementaryTypeName","src":"34561:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5313,"mutability":"mutable","name":"to","nameLocation":"34584:2:14","nodeType":"VariableDeclaration","scope":5318,"src":"34576:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5312,"name":"address","nodeType":"ElementaryTypeName","src":"34576:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5315,"mutability":"mutable","name":"amount","nameLocation":"34596:6:14","nodeType":"VariableDeclaration","scope":5318,"src":"34588:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5314,"name":"uint256","nodeType":"ElementaryTypeName","src":"34588:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34560:43:14"},"returnParameters":{"id":5317,"nodeType":"ParameterList","parameters":[],"src":"34612:0:14"},"scope":5331,"src":"34539:74:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5319,"nodeType":"StructuredDocumentation","src":"34621:801:14","text":" @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @dev Deprecated: Use the `supply` function instead\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"e8eda9df","id":5330,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"35437:7:14","nodeType":"FunctionDefinition","parameters":{"id":5328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"asset","nameLocation":"35463:5:14","nodeType":"VariableDeclaration","scope":5330,"src":"35455:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5320,"name":"address","nodeType":"ElementaryTypeName","src":"35455:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5323,"mutability":"mutable","name":"amount","nameLocation":"35487:6:14","nodeType":"VariableDeclaration","scope":5330,"src":"35479:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5322,"name":"uint256","nodeType":"ElementaryTypeName","src":"35479:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5325,"mutability":"mutable","name":"onBehalfOf","nameLocation":"35512:10:14","nodeType":"VariableDeclaration","scope":5330,"src":"35504:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5324,"name":"address","nodeType":"ElementaryTypeName","src":"35504:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"referralCode","nameLocation":"35540:12:14","nodeType":"VariableDeclaration","scope":5330,"src":"35533:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5326,"name":"uint16","nodeType":"ElementaryTypeName","src":"35533:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"35444:115:14"},"returnParameters":{"id":5329,"nodeType":"ParameterList","parameters":[],"src":"35568:0:14"},"scope":5331,"src":"35428:141:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5332,"src":"330:35242:14","usedErrors":[]}],"src":"38:35536:14"},"id":14},"contracts/interface/IPoolAddressesProvider.sol":{"ast":{"absolutePath":"contracts/interface/IPoolAddressesProvider.sol","exportedSymbols":{"IPoolAddressesProvider":[5540]},"id":5541,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":5333,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":5334,"nodeType":"StructuredDocumentation","src":"65:130:15","text":" @title IPoolAddressesProvider\n @author Aave\n @notice Defines the basic interface for a Pool Addresses Provider."},"fullyImplemented":false,"id":5540,"linearizedBaseContracts":[5540],"name":"IPoolAddressesProvider","nameLocation":"207:22:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":5335,"nodeType":"StructuredDocumentation","src":"237:176:15","text":" @dev Emitted when the market identifier is updated.\n @param oldMarketId The old id of the market\n @param newMarketId The new id of the market"},"id":5341,"name":"MarketIdSet","nameLocation":"425:11:15","nodeType":"EventDefinition","parameters":{"id":5340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"indexed":true,"mutability":"mutable","name":"oldMarketId","nameLocation":"452:11:15","nodeType":"VariableDeclaration","scope":5341,"src":"437:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5336,"name":"string","nodeType":"ElementaryTypeName","src":"437:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5339,"indexed":true,"mutability":"mutable","name":"newMarketId","nameLocation":"480:11:15","nodeType":"VariableDeclaration","scope":5341,"src":"465:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5338,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"436:56:15"},"src":"419:74:15"},{"anonymous":false,"documentation":{"id":5342,"nodeType":"StructuredDocumentation","src":"501:167:15","text":" @dev Emitted when the pool is updated.\n @param oldAddress The old address of the Pool\n @param newAddress The new address of the Pool"},"id":5348,"name":"PoolUpdated","nameLocation":"680:11:15","nodeType":"EventDefinition","parameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"708:10:15","nodeType":"VariableDeclaration","scope":5348,"src":"692:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5343,"name":"address","nodeType":"ElementaryTypeName","src":"692:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5346,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"736:10:15","nodeType":"VariableDeclaration","scope":5348,"src":"720:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5345,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"691:56:15"},"src":"674:74:15"},{"anonymous":false,"documentation":{"id":5349,"nodeType":"StructuredDocumentation","src":"756:204:15","text":" @dev Emitted when the pool configurator is updated.\n @param oldAddress The old address of the PoolConfigurator\n @param newAddress The new address of the PoolConfigurator"},"id":5355,"name":"PoolConfiguratorUpdated","nameLocation":"972:23:15","nodeType":"EventDefinition","parameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1022:10:15","nodeType":"VariableDeclaration","scope":5355,"src":"1006:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5350,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5353,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1059:10:15","nodeType":"VariableDeclaration","scope":5355,"src":"1043:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5352,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"995:81:15"},"src":"966:111:15"},{"anonymous":false,"documentation":{"id":5356,"nodeType":"StructuredDocumentation","src":"1085:189:15","text":" @dev Emitted when the price oracle is updated.\n @param oldAddress The old address of the PriceOracle\n @param newAddress The new address of the PriceOracle"},"id":5362,"name":"PriceOracleUpdated","nameLocation":"1286:18:15","nodeType":"EventDefinition","parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1331:10:15","nodeType":"VariableDeclaration","scope":5362,"src":"1315:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5357,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5360,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1368:10:15","nodeType":"VariableDeclaration","scope":5362,"src":"1352:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5359,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1304:81:15"},"src":"1280:106:15"},{"anonymous":false,"documentation":{"id":5363,"nodeType":"StructuredDocumentation","src":"1394:186:15","text":" @dev Emitted when the ACL manager is updated.\n @param oldAddress The old address of the ACLManager\n @param newAddress The new address of the ACLManager"},"id":5369,"name":"ACLManagerUpdated","nameLocation":"1592:17:15","nodeType":"EventDefinition","parameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1636:10:15","nodeType":"VariableDeclaration","scope":5369,"src":"1620:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5364,"name":"address","nodeType":"ElementaryTypeName","src":"1620:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5367,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1673:10:15","nodeType":"VariableDeclaration","scope":5369,"src":"1657:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5366,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1609:81:15"},"src":"1586:105:15"},{"anonymous":false,"documentation":{"id":5370,"nodeType":"StructuredDocumentation","src":"1699:180:15","text":" @dev Emitted when the ACL admin is updated.\n @param oldAddress The old address of the ACLAdmin\n @param newAddress The new address of the ACLAdmin"},"id":5376,"name":"ACLAdminUpdated","nameLocation":"1891:15:15","nodeType":"EventDefinition","parameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5372,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1933:10:15","nodeType":"VariableDeclaration","scope":5376,"src":"1917:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5371,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5374,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1970:10:15","nodeType":"VariableDeclaration","scope":5376,"src":"1954:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5373,"name":"address","nodeType":"ElementaryTypeName","src":"1954:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:81:15"},"src":"1885:103:15"},{"anonymous":false,"documentation":{"id":5377,"nodeType":"StructuredDocumentation","src":"1996:214:15","text":" @dev Emitted when the price oracle sentinel is updated.\n @param oldAddress The old address of the PriceOracleSentinel\n @param newAddress The new address of the PriceOracleSentinel"},"id":5383,"name":"PriceOracleSentinelUpdated","nameLocation":"2222:26:15","nodeType":"EventDefinition","parameters":{"id":5382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5379,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"2275:10:15","nodeType":"VariableDeclaration","scope":5383,"src":"2259:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5378,"name":"address","nodeType":"ElementaryTypeName","src":"2259:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5381,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"2312:10:15","nodeType":"VariableDeclaration","scope":5383,"src":"2296:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5380,"name":"address","nodeType":"ElementaryTypeName","src":"2296:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2248:81:15"},"src":"2216:114:15"},{"anonymous":false,"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"2338:205:15","text":" @dev Emitted when the pool data provider is updated.\n @param oldAddress The old address of the PoolDataProvider\n @param newAddress The new address of the PoolDataProvider"},"id":5390,"name":"PoolDataProviderUpdated","nameLocation":"2555:23:15","nodeType":"EventDefinition","parameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"2605:10:15","nodeType":"VariableDeclaration","scope":5390,"src":"2589:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5385,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5388,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"2642:10:15","nodeType":"VariableDeclaration","scope":5390,"src":"2626:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5387,"name":"address","nodeType":"ElementaryTypeName","src":"2626:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2578:81:15"},"src":"2549:111:15"},{"anonymous":false,"documentation":{"id":5391,"nodeType":"StructuredDocumentation","src":"2668:258:15","text":" @dev Emitted when a new proxy is created.\n @param id The identifier of the proxy\n @param proxyAddress The address of the created proxy contract\n @param implementationAddress The address of the implementation contract"},"id":5399,"name":"ProxyCreated","nameLocation":"2938:12:15","nodeType":"EventDefinition","parameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5393,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"2977:2:15","nodeType":"VariableDeclaration","scope":5399,"src":"2961:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5395,"indexed":true,"mutability":"mutable","name":"proxyAddress","nameLocation":"3006:12:15","nodeType":"VariableDeclaration","scope":5399,"src":"2990:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5394,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5397,"indexed":true,"mutability":"mutable","name":"implementationAddress","nameLocation":"3045:21:15","nodeType":"VariableDeclaration","scope":5399,"src":"3029:37:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5396,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2950:123:15"},"src":"2932:142:15"},{"anonymous":false,"documentation":{"id":5400,"nodeType":"StructuredDocumentation","src":"3082:253:15","text":" @dev Emitted when a new non-proxied contract address is registered.\n @param id The identifier of the contract\n @param oldAddress The address of the old contract\n @param newAddress The address of the new contract"},"id":5408,"name":"AddressSet","nameLocation":"3347:10:15","nodeType":"EventDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3384:2:15","nodeType":"VariableDeclaration","scope":5408,"src":"3368:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3368:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5404,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"3413:10:15","nodeType":"VariableDeclaration","scope":5408,"src":"3397:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5403,"name":"address","nodeType":"ElementaryTypeName","src":"3397:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5406,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"3450:10:15","nodeType":"VariableDeclaration","scope":5408,"src":"3434:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5405,"name":"address","nodeType":"ElementaryTypeName","src":"3434:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3357:110:15"},"src":"3341:127:15"},{"anonymous":false,"documentation":{"id":5409,"nodeType":"StructuredDocumentation","src":"3476:385:15","text":" @dev Emitted when the implementation of the proxy registered with id is updated\n @param id The identifier of the contract\n @param proxyAddress The address of the proxy contract\n @param oldImplementationAddress The address of the old implementation contract\n @param newImplementationAddress The address of the new implementation contract"},"id":5419,"name":"AddressSetAsProxy","nameLocation":"3873:17:15","nodeType":"EventDefinition","parameters":{"id":5418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3917:2:15","nodeType":"VariableDeclaration","scope":5419,"src":"3901:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3901:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5413,"indexed":true,"mutability":"mutable","name":"proxyAddress","nameLocation":"3946:12:15","nodeType":"VariableDeclaration","scope":5419,"src":"3930:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5412,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5415,"indexed":false,"mutability":"mutable","name":"oldImplementationAddress","nameLocation":"3977:24:15","nodeType":"VariableDeclaration","scope":5419,"src":"3969:32:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5414,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5417,"indexed":true,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"4028:24:15","nodeType":"VariableDeclaration","scope":5419,"src":"4012:40:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5416,"name":"address","nodeType":"ElementaryTypeName","src":"4012:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3890:169:15"},"src":"3867:193:15"},{"documentation":{"id":5420,"nodeType":"StructuredDocumentation","src":"4068:126:15","text":" @notice Returns the id of the Aave market to which this contract points to.\n @return The market id"},"functionSelector":"568ef470","id":5425,"implemented":false,"kind":"function","modifiers":[],"name":"getMarketId","nameLocation":"4209:11:15","nodeType":"FunctionDefinition","parameters":{"id":5421,"nodeType":"ParameterList","parameters":[],"src":"4220:2:15"},"returnParameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5425,"src":"4246:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5422,"name":"string","nodeType":"ElementaryTypeName","src":"4246:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4245:15:15"},"scope":5540,"src":"4200:61:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5426,"nodeType":"StructuredDocumentation","src":"4269:267:15","text":" @notice Associates an id with a specific PoolAddressesProvider.\n @dev This can be used to create an onchain registry of PoolAddressesProviders to\n identify and validate multiple Aave markets.\n @param newMarketId The market id"},"functionSelector":"f67b1847","id":5431,"implemented":false,"kind":"function","modifiers":[],"name":"setMarketId","nameLocation":"4551:11:15","nodeType":"FunctionDefinition","parameters":{"id":5429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5428,"mutability":"mutable","name":"newMarketId","nameLocation":"4579:11:15","nodeType":"VariableDeclaration","scope":5431,"src":"4563:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5427,"name":"string","nodeType":"ElementaryTypeName","src":"4563:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4562:29:15"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[],"src":"4600:0:15"},"scope":5540,"src":"4542:59:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5432,"nodeType":"StructuredDocumentation","src":"4609:324:15","text":" @notice Returns an address by its identifier.\n @dev The returned address might be an EOA or a contract, potentially proxied\n @dev It returns ZERO if there is no registered address with the given id\n @param id The id\n @return The address of the registered for the specified id"},"functionSelector":"21f8a721","id":5439,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"4948:10:15","nodeType":"FunctionDefinition","parameters":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5434,"mutability":"mutable","name":"id","nameLocation":"4967:2:15","nodeType":"VariableDeclaration","scope":5439,"src":"4959:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4959:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4958:12:15"},"returnParameters":{"id":5438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5439,"src":"4994:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5436,"name":"address","nodeType":"ElementaryTypeName","src":"4994:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4993:9:15"},"scope":5540,"src":"4939:64:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5440,"nodeType":"StructuredDocumentation","src":"5011:509:15","text":" @notice General function to update the implementation of a proxy registered with\n certain `id`. If there is no proxy registered, it will instantiate one and\n set as implementation the `newImplementationAddress`.\n @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n setter function, in order to avoid unexpected consequences\n @param id The id\n @param newImplementationAddress The address of the new implementation"},"functionSelector":"5dcc528c","id":5447,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressAsProxy","nameLocation":"5535:17:15","nodeType":"FunctionDefinition","parameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"id","nameLocation":"5571:2:15","nodeType":"VariableDeclaration","scope":5447,"src":"5563:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5563:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5444,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"5592:24:15","nodeType":"VariableDeclaration","scope":5447,"src":"5584:32:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5443,"name":"address","nodeType":"ElementaryTypeName","src":"5584:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5552:71:15"},"returnParameters":{"id":5446,"nodeType":"ParameterList","parameters":[],"src":"5632:0:15"},"scope":5540,"src":"5526:107:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5448,"nodeType":"StructuredDocumentation","src":"5641:259:15","text":" @notice Sets an address for an id replacing the address saved in the addresses map.\n @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n @param id The id\n @param newAddress The address to set"},"functionSelector":"ca446dd9","id":5455,"implemented":false,"kind":"function","modifiers":[],"name":"setAddress","nameLocation":"5915:10:15","nodeType":"FunctionDefinition","parameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"id","nameLocation":"5934:2:15","nodeType":"VariableDeclaration","scope":5455,"src":"5926:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5926:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5452,"mutability":"mutable","name":"newAddress","nameLocation":"5946:10:15","nodeType":"VariableDeclaration","scope":5455,"src":"5938:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5451,"name":"address","nodeType":"ElementaryTypeName","src":"5938:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5925:32:15"},"returnParameters":{"id":5454,"nodeType":"ParameterList","parameters":[],"src":"5966:0:15"},"scope":5540,"src":"5906:61:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5456,"nodeType":"StructuredDocumentation","src":"5975:106:15","text":" @notice Returns the address of the Pool proxy.\n @return The Pool proxy address"},"functionSelector":"026b1d5f","id":5461,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"6096:7:15","nodeType":"FunctionDefinition","parameters":{"id":5457,"nodeType":"ParameterList","parameters":[],"src":"6103:2:15"},"returnParameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5461,"src":"6129:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5458,"name":"address","nodeType":"ElementaryTypeName","src":"6129:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6128:9:15"},"scope":5540,"src":"6087:51:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"6146:236:15","text":" @notice Updates the implementation of the Pool, or creates a proxy\n setting the new `pool` implementation when the function is called for the first time.\n @param newPoolImpl The new Pool implementation"},"functionSelector":"a1564406","id":5467,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolImpl","nameLocation":"6397:11:15","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"newPoolImpl","nameLocation":"6417:11:15","nodeType":"VariableDeclaration","scope":5467,"src":"6409:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5463,"name":"address","nodeType":"ElementaryTypeName","src":"6409:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6408:21:15"},"returnParameters":{"id":5466,"nodeType":"ParameterList","parameters":[],"src":"6438:0:15"},"scope":5540,"src":"6388:51:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5468,"nodeType":"StructuredDocumentation","src":"6447:130:15","text":" @notice Returns the address of the PoolConfigurator proxy.\n @return The PoolConfigurator proxy address"},"functionSelector":"631adfca","id":5473,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolConfigurator","nameLocation":"6592:19:15","nodeType":"FunctionDefinition","parameters":{"id":5469,"nodeType":"ParameterList","parameters":[],"src":"6611:2:15"},"returnParameters":{"id":5472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5473,"src":"6637:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5470,"name":"address","nodeType":"ElementaryTypeName","src":"6637:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6636:9:15"},"scope":5540,"src":"6583:63:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5474,"nodeType":"StructuredDocumentation","src":"6654:284:15","text":" @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n setting the new `PoolConfigurator` implementation when the function is called for the first time.\n @param newPoolConfiguratorImpl The new PoolConfigurator implementation"},"functionSelector":"e4ca28b7","id":5479,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolConfiguratorImpl","nameLocation":"6953:23:15","nodeType":"FunctionDefinition","parameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"newPoolConfiguratorImpl","nameLocation":"6985:23:15","nodeType":"VariableDeclaration","scope":5479,"src":"6977:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5475,"name":"address","nodeType":"ElementaryTypeName","src":"6977:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6976:33:15"},"returnParameters":{"id":5478,"nodeType":"ParameterList","parameters":[],"src":"7018:0:15"},"scope":5540,"src":"6944:75:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5480,"nodeType":"StructuredDocumentation","src":"7027:116:15","text":" @notice Returns the address of the price oracle.\n @return The address of the PriceOracle"},"functionSelector":"fca513a8","id":5485,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracle","nameLocation":"7158:14:15","nodeType":"FunctionDefinition","parameters":{"id":5481,"nodeType":"ParameterList","parameters":[],"src":"7172:2:15"},"returnParameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5485,"src":"7198:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5482,"name":"address","nodeType":"ElementaryTypeName","src":"7198:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7197:9:15"},"scope":5540,"src":"7149:58:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5486,"nodeType":"StructuredDocumentation","src":"7215:134:15","text":" @notice Updates the address of the price oracle.\n @param newPriceOracle The address of the new PriceOracle"},"functionSelector":"530e784f","id":5491,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracle","nameLocation":"7364:14:15","nodeType":"FunctionDefinition","parameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"newPriceOracle","nameLocation":"7387:14:15","nodeType":"VariableDeclaration","scope":5491,"src":"7379:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5487,"name":"address","nodeType":"ElementaryTypeName","src":"7379:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7378:24:15"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[],"src":"7411:0:15"},"scope":5540,"src":"7355:57:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5492,"nodeType":"StructuredDocumentation","src":"7420:114:15","text":" @notice Returns the address of the ACL manager.\n @return The address of the ACLManager"},"functionSelector":"707cd716","id":5497,"implemented":false,"kind":"function","modifiers":[],"name":"getACLManager","nameLocation":"7549:13:15","nodeType":"FunctionDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[],"src":"7562:2:15"},"returnParameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5497,"src":"7588:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5494,"name":"address","nodeType":"ElementaryTypeName","src":"7588:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7587:9:15"},"scope":5540,"src":"7540:57:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5498,"nodeType":"StructuredDocumentation","src":"7605:131:15","text":" @notice Updates the address of the ACL manager.\n @param newAclManager The address of the new ACLManager"},"functionSelector":"ed301ca9","id":5503,"implemented":false,"kind":"function","modifiers":[],"name":"setACLManager","nameLocation":"7751:13:15","nodeType":"FunctionDefinition","parameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"newAclManager","nameLocation":"7773:13:15","nodeType":"VariableDeclaration","scope":5503,"src":"7765:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5499,"name":"address","nodeType":"ElementaryTypeName","src":"7765:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7764:23:15"},"returnParameters":{"id":5502,"nodeType":"ParameterList","parameters":[],"src":"7796:0:15"},"scope":5540,"src":"7742:55:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5504,"nodeType":"StructuredDocumentation","src":"7805:111:15","text":" @notice Returns the address of the ACL admin.\n @return The address of the ACL admin"},"functionSelector":"0e67178c","id":5509,"implemented":false,"kind":"function","modifiers":[],"name":"getACLAdmin","nameLocation":"7931:11:15","nodeType":"FunctionDefinition","parameters":{"id":5505,"nodeType":"ParameterList","parameters":[],"src":"7942:2:15"},"returnParameters":{"id":5508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5509,"src":"7968:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5506,"name":"address","nodeType":"ElementaryTypeName","src":"7968:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7967:9:15"},"scope":5540,"src":"7922:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5510,"nodeType":"StructuredDocumentation","src":"7985:126:15","text":" @notice Updates the address of the ACL admin.\n @param newAclAdmin The address of the new ACL admin"},"functionSelector":"76d84ffc","id":5515,"implemented":false,"kind":"function","modifiers":[],"name":"setACLAdmin","nameLocation":"8126:11:15","nodeType":"FunctionDefinition","parameters":{"id":5513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"newAclAdmin","nameLocation":"8146:11:15","nodeType":"VariableDeclaration","scope":5515,"src":"8138:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5511,"name":"address","nodeType":"ElementaryTypeName","src":"8138:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8137:21:15"},"returnParameters":{"id":5514,"nodeType":"ParameterList","parameters":[],"src":"8167:0:15"},"scope":5540,"src":"8117:51:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5516,"nodeType":"StructuredDocumentation","src":"8176:133:15","text":" @notice Returns the address of the price oracle sentinel.\n @return The address of the PriceOracleSentinel"},"functionSelector":"5eb88d3d","id":5521,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracleSentinel","nameLocation":"8324:22:15","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[],"src":"8346:2:15"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5521,"src":"8372:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5518,"name":"address","nodeType":"ElementaryTypeName","src":"8372:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8371:9:15"},"scope":5540,"src":"8315:66:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5522,"nodeType":"StructuredDocumentation","src":"8389:159:15","text":" @notice Updates the address of the price oracle sentinel.\n @param newPriceOracleSentinel The address of the new PriceOracleSentinel"},"functionSelector":"74944cec","id":5527,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracleSentinel","nameLocation":"8563:22:15","nodeType":"FunctionDefinition","parameters":{"id":5525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5524,"mutability":"mutable","name":"newPriceOracleSentinel","nameLocation":"8594:22:15","nodeType":"VariableDeclaration","scope":5527,"src":"8586:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5523,"name":"address","nodeType":"ElementaryTypeName","src":"8586:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8585:32:15"},"returnParameters":{"id":5526,"nodeType":"ParameterList","parameters":[],"src":"8626:0:15"},"scope":5540,"src":"8554:73:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5528,"nodeType":"StructuredDocumentation","src":"8635:118:15","text":" @notice Returns the address of the data provider.\n @return The address of the DataProvider"},"functionSelector":"e860accb","id":5533,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolDataProvider","nameLocation":"8768:19:15","nodeType":"FunctionDefinition","parameters":{"id":5529,"nodeType":"ParameterList","parameters":[],"src":"8787:2:15"},"returnParameters":{"id":5532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5533,"src":"8813:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5530,"name":"address","nodeType":"ElementaryTypeName","src":"8813:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8812:9:15"},"scope":5540,"src":"8759:63:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5534,"nodeType":"StructuredDocumentation","src":"8830:137:15","text":" @notice Updates the address of the data provider.\n @param newDataProvider The address of the new DataProvider"},"functionSelector":"e44e9ed1","id":5539,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolDataProvider","nameLocation":"8982:19:15","nodeType":"FunctionDefinition","parameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"newDataProvider","nameLocation":"9010:15:15","nodeType":"VariableDeclaration","scope":5539,"src":"9002:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5535,"name":"address","nodeType":"ElementaryTypeName","src":"9002:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9001:25:15"},"returnParameters":{"id":5538,"nodeType":"ParameterList","parameters":[],"src":"9035:0:15"},"scope":5540,"src":"8973:63:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5541,"src":"197:8842:15","usedErrors":[]}],"src":"38:9003:15"},"id":15},"contracts/interface/test.sol":{"ast":{"absolutePath":"contracts/interface/test.sol","exportedSymbols":{},"id":5542,"nodeType":"SourceUnit","nodes":[],"src":"0:0:16"},"id":16}},"contracts":{"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"DataTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220568a02bf074575bf03df1daead63a439b3c21802aa055e8a36cf1afcb1d92da764736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP DUP11 MUL 0xBF SMOD GASLIMIT PUSH22 0xBF03DF1DAEAD63A439B3C21802AA055E8A36CF1AFCB1 0xD9 0x2D 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"62:7274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220568a02bf074575bf03df1daead63a439b3c21802aa055e8a36cf1afcb1d92da764736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP DUP11 MUL 0xBF SMOD GASLIMIT PUSH22 0xBF03DF1DAEAD63A439B3C21802AA055E8A36CF1AFCB1 0xD9 0x2D 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"62:7274:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nlibrary DataTypes {\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    //timestamp of last update\\n    uint40 lastUpdateTimestamp;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint16 id;\\n    //aToken address\\n    address aTokenAddress;\\n    //stableDebtToken address\\n    address stableDebtTokenAddress;\\n    //variableDebtToken address\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the current treasury balance, scaled\\n    uint128 accruedToTreasury;\\n    //the outstanding unbacked aTokens minted through the bridging feature\\n    uint128 unbacked;\\n    //the outstanding debt borrowed against this asset in isolation mode\\n    uint128 isolationModeTotalDebt;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60: asset is paused\\n    //bit 61: borrowing in isolation mode is enabled\\n    //bit 62-63: reserved\\n    //bit 64-79: reserve factor\\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\\n    //bit 152-167 liquidation protocol fee\\n    //bit 168-175 eMode category\\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\\n    //bit 252-255 unused\\n\\n    uint256 data;\\n  }\\n\\n  struct UserConfigurationMap {\\n    /**\\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\\n     * asset is borrowed by the user.\\n     */\\n    uint256 data;\\n  }\\n\\n  struct EModeCategory {\\n    // each eMode category has a custom ltv and liquidation threshold\\n    uint16 ltv;\\n    uint16 liquidationThreshold;\\n    uint16 liquidationBonus;\\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\\n    address priceSource;\\n    string label;\\n  }\\n\\n  enum InterestRateMode {\\n    NONE,\\n    STABLE,\\n    VARIABLE\\n  }\\n\\n  struct ReserveCache {\\n    uint256 currScaledVariableDebt;\\n    uint256 nextScaledVariableDebt;\\n    uint256 currPrincipalStableDebt;\\n    uint256 currAvgStableBorrowRate;\\n    uint256 currTotalStableDebt;\\n    uint256 nextAvgStableBorrowRate;\\n    uint256 nextTotalStableDebt;\\n    uint256 currLiquidityIndex;\\n    uint256 nextLiquidityIndex;\\n    uint256 currVariableBorrowIndex;\\n    uint256 nextVariableBorrowIndex;\\n    uint256 currLiquidityRate;\\n    uint256 currVariableBorrowRate;\\n    uint256 reserveFactor;\\n    ReserveConfigurationMap reserveConfiguration;\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    uint40 reserveLastUpdateTimestamp;\\n    uint40 stableDebtLastUpdateTimestamp;\\n  }\\n\\n  struct ExecuteLiquidationCallParams {\\n    uint256 reservesCount;\\n    uint256 debtToCover;\\n    address collateralAsset;\\n    address debtAsset;\\n    address user;\\n    bool receiveAToken;\\n    address priceOracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteSupplyParams {\\n    address asset;\\n    uint256 amount;\\n    address onBehalfOf;\\n    uint16 referralCode;\\n  }\\n\\n  struct ExecuteBorrowParams {\\n    address asset;\\n    address user;\\n    address onBehalfOf;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint16 referralCode;\\n    bool releaseUnderlying;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteRepayParams {\\n    address asset;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    address onBehalfOf;\\n    bool useATokens;\\n  }\\n\\n  struct ExecuteWithdrawParams {\\n    address asset;\\n    uint256 amount;\\n    address to;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ExecuteSetUserEModeParams {\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 categoryId;\\n  }\\n\\n  struct FinalizeTransferParams {\\n    address asset;\\n    address from;\\n    address to;\\n    uint256 amount;\\n    uint256 balanceFromBefore;\\n    uint256 balanceToBefore;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 fromEModeCategory;\\n  }\\n\\n  struct FlashloanParams {\\n    address receiverAddress;\\n    address[] assets;\\n    uint256[] amounts;\\n    uint256[] interestRateModes;\\n    address onBehalfOf;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address addressesProvider;\\n    uint8 userEModeCategory;\\n    bool isAuthorizedFlashBorrower;\\n  }\\n\\n  struct FlashloanSimpleParams {\\n    address receiverAddress;\\n    address asset;\\n    uint256 amount;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n  }\\n\\n  struct FlashLoanRepaymentParams {\\n    uint256 amount;\\n    uint256 totalPremium;\\n    uint256 flashLoanPremiumToProtocol;\\n    address asset;\\n    address receiverAddress;\\n    uint16 referralCode;\\n  }\\n\\n  struct CalculateUserAccountDataParams {\\n    UserConfigurationMap userConfig;\\n    uint256 reservesCount;\\n    address user;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ValidateBorrowParams {\\n    ReserveCache reserveCache;\\n    UserConfigurationMap userConfig;\\n    address asset;\\n    address userAddress;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint256 maxStableLoanPercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n    bool isolationModeActive;\\n    address isolationModeCollateralAddress;\\n    uint256 isolationModeDebtCeiling;\\n  }\\n\\n  struct ValidateLiquidationCallParams {\\n    ReserveCache debtReserveCache;\\n    uint256 totalDebt;\\n    uint256 healthFactor;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct CalculateInterestRatesParams {\\n    uint256 unbacked;\\n    uint256 liquidityAdded;\\n    uint256 liquidityTaken;\\n    uint256 totalStableDebt;\\n    uint256 totalVariableDebt;\\n    uint256 averageStableBorrowRate;\\n    uint256 reserveFactor;\\n    address reserve;\\n    address aToken;\\n  }\\n\\n  struct InitReserveParams {\\n    address asset;\\n    address aTokenAddress;\\n    address stableDebtAddress;\\n    address variableDebtAddress;\\n    address interestRateStrategyAddress;\\n    uint16 reservesCount;\\n    uint16 maxNumberReserves;\\n  }\\n}\\n\",\"keccak256\":\"0xe5c6db4edc44768b334b6f9271e1ae21c81d6ab0692c2740cce0c56c4ac433dd\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220801a649639a4662f1423a07f295f253ac939f4e1d9e14aa3cc81e609359b6e5264736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 BYTE PUSH5 0x9639A4662F EQ 0x23 LOG0 PUSH32 0x295F253AC939F4E1D9E14AA3CC81E609359B6E5264736F6C6343000807003300 ","sourceMap":"482:6300:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220801a649639a4662f1423a07f295f253ac939f4e1d9e14aa3cc81e609359b6e5264736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 BYTE PUSH5 0x9639A4662F EQ 0x23 LOG0 PUSH32 0x295F253AC939F4E1D9E14AA3CC81E609359B6E5264736F6C6343000807003300 ","sourceMap":"482:6300:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_992":{"entryPoint":null,"id":992,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":289,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":415,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":579,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":589,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":643,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":697,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":805,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":852,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":899,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":904,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":909,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":919,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:17","statements":[{"body":{"nodeType":"YulBlock","src":"102:326:17","statements":[{"nodeType":"YulAssignment","src":"112:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:17"},"nodeType":"YulFunctionCall","src":"137:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:17"},"nodeType":"YulFunctionCall","src":"121:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:17"},"nodeType":"YulFunctionCall","src":"196:21:17"},"nodeType":"YulExpressionStatement","src":"196:21:17"},{"nodeType":"YulVariableDeclaration","src":"226:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:17"},"nodeType":"YulFunctionCall","src":"237:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"293:77:17"},"nodeType":"YulFunctionCall","src":"293:79:17"},"nodeType":"YulExpressionStatement","src":"293:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:17"},"nodeType":"YulFunctionCall","src":"268:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:17"},"nodeType":"YulFunctionCall","src":"265:25:17"},"nodeType":"YulIf","src":"262:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"405:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"410:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"415:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"383:21:17"},"nodeType":"YulFunctionCall","src":"383:39:17"},"nodeType":"YulExpressionStatement","src":"383:39:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:17","type":""}],"src":"7:421:17"},{"body":{"nodeType":"YulBlock","src":"521:282:17","statements":[{"body":{"nodeType":"YulBlock","src":"570:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"572:77:17"},"nodeType":"YulFunctionCall","src":"572:79:17"},"nodeType":"YulExpressionStatement","src":"572:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"549:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"557:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"545:3:17"},"nodeType":"YulFunctionCall","src":"545:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"564:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"541:3:17"},"nodeType":"YulFunctionCall","src":"541:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"534:6:17"},"nodeType":"YulFunctionCall","src":"534:35:17"},"nodeType":"YulIf","src":"531:122:17"},{"nodeType":"YulVariableDeclaration","src":"662:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"682:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"676:5:17"},"nodeType":"YulFunctionCall","src":"676:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"666:6:17","type":""}]},{"nodeType":"YulAssignment","src":"698:99:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"770:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"778:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"766:3:17"},"nodeType":"YulFunctionCall","src":"766:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"793:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"707:58:17"},"nodeType":"YulFunctionCall","src":"707:90:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"698:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"499:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"507:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"515:5:17","type":""}],"src":"448:355:17"},{"body":{"nodeType":"YulBlock","src":"923:739:17","statements":[{"body":{"nodeType":"YulBlock","src":"969:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"971:77:17"},"nodeType":"YulFunctionCall","src":"971:79:17"},"nodeType":"YulExpressionStatement","src":"971:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"944:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"953:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"940:3:17"},"nodeType":"YulFunctionCall","src":"940:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"965:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"936:3:17"},"nodeType":"YulFunctionCall","src":"936:32:17"},"nodeType":"YulIf","src":"933:119:17"},{"nodeType":"YulBlock","src":"1062:291:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1077:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1101:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1097:3:17"},"nodeType":"YulFunctionCall","src":"1097:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1091:5:17"},"nodeType":"YulFunctionCall","src":"1091:24:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1081:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1162:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1164:77:17"},"nodeType":"YulFunctionCall","src":"1164:79:17"},"nodeType":"YulExpressionStatement","src":"1164:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1134:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1142:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1131:2:17"},"nodeType":"YulFunctionCall","src":"1131:30:17"},"nodeType":"YulIf","src":"1128:117:17"},{"nodeType":"YulAssignment","src":"1259:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1326:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:17"},"nodeType":"YulFunctionCall","src":"1311:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1335:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1269:41:17"},"nodeType":"YulFunctionCall","src":"1269:74:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1259:6:17"}]}]},{"nodeType":"YulBlock","src":"1363:292:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1378:39:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1413:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:17"},"nodeType":"YulFunctionCall","src":"1398:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1392:5:17"},"nodeType":"YulFunctionCall","src":"1392:25:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1382:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1466:77:17"},"nodeType":"YulFunctionCall","src":"1466:79:17"},"nodeType":"YulExpressionStatement","src":"1466:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1436:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1444:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1433:2:17"},"nodeType":"YulFunctionCall","src":"1433:30:17"},"nodeType":"YulIf","src":"1430:117:17"},{"nodeType":"YulAssignment","src":"1561:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1628:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:17"},"nodeType":"YulFunctionCall","src":"1613:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1637:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1571:41:17"},"nodeType":"YulFunctionCall","src":"1571:74:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1561:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"885:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"896:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"908:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"916:6:17","type":""}],"src":"809:853:17"},{"body":{"nodeType":"YulBlock","src":"1709:88:17","statements":[{"nodeType":"YulAssignment","src":"1719:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1729:18:17"},"nodeType":"YulFunctionCall","src":"1729:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1719:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1778:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1786:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1758:19:17"},"nodeType":"YulFunctionCall","src":"1758:33:17"},"nodeType":"YulExpressionStatement","src":"1758:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1693:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1702:6:17","type":""}],"src":"1668:129:17"},{"body":{"nodeType":"YulBlock","src":"1843:35:17","statements":[{"nodeType":"YulAssignment","src":"1853:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1869:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1863:5:17"},"nodeType":"YulFunctionCall","src":"1863:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1853:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1836:6:17","type":""}],"src":"1803:75:17"},{"body":{"nodeType":"YulBlock","src":"1951:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"2056:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2058:16:17"},"nodeType":"YulFunctionCall","src":"2058:18:17"},"nodeType":"YulExpressionStatement","src":"2058:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2028:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2036:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2025:2:17"},"nodeType":"YulFunctionCall","src":"2025:30:17"},"nodeType":"YulIf","src":"2022:56:17"},{"nodeType":"YulAssignment","src":"2088:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2118:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2096:21:17"},"nodeType":"YulFunctionCall","src":"2096:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2088:4:17"}]},{"nodeType":"YulAssignment","src":"2162:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2174:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"2180:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:17"},"nodeType":"YulFunctionCall","src":"2170:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2162:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1935:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1946:4:17","type":""}],"src":"1884:308:17"},{"body":{"nodeType":"YulBlock","src":"2247:258:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2257:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2266:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2261:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2326:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2351:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"2356:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:17"},"nodeType":"YulFunctionCall","src":"2347:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2370:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"2375:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:17"},"nodeType":"YulFunctionCall","src":"2366:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2360:5:17"},"nodeType":"YulFunctionCall","src":"2360:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:17"},"nodeType":"YulFunctionCall","src":"2340:39:17"},"nodeType":"YulExpressionStatement","src":"2340:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2287:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"2290:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2284:2:17"},"nodeType":"YulFunctionCall","src":"2284:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2298:19:17","statements":[{"nodeType":"YulAssignment","src":"2300:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2309:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"2312:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:17"},"nodeType":"YulFunctionCall","src":"2305:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2300:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2280:3:17","statements":[]},"src":"2276:113:17"},{"body":{"nodeType":"YulBlock","src":"2423:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2473:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2478:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:17"},"nodeType":"YulFunctionCall","src":"2469:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"2487:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2462:6:17"},"nodeType":"YulFunctionCall","src":"2462:27:17"},"nodeType":"YulExpressionStatement","src":"2462:27:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2404:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"2407:6:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2401:2:17"},"nodeType":"YulFunctionCall","src":"2401:13:17"},"nodeType":"YulIf","src":"2398:101:17"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2229:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2234:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2239:6:17","type":""}],"src":"2198:307:17"},{"body":{"nodeType":"YulBlock","src":"2562:269:17","statements":[{"nodeType":"YulAssignment","src":"2572:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2586:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"2592:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2582:3:17"},"nodeType":"YulFunctionCall","src":"2582:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2572:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"2603:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2633:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2629:3:17"},"nodeType":"YulFunctionCall","src":"2629:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2607:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2680:51:17","statements":[{"nodeType":"YulAssignment","src":"2694:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2708:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2716:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2704:3:17"},"nodeType":"YulFunctionCall","src":"2704:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2694:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2660:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2653:6:17"},"nodeType":"YulFunctionCall","src":"2653:26:17"},"nodeType":"YulIf","src":"2650:81:17"},{"body":{"nodeType":"YulBlock","src":"2783:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2797:16:17"},"nodeType":"YulFunctionCall","src":"2797:18:17"},"nodeType":"YulExpressionStatement","src":"2797:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2747:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2770:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2778:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2767:2:17"},"nodeType":"YulFunctionCall","src":"2767:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2744:2:17"},"nodeType":"YulFunctionCall","src":"2744:38:17"},"nodeType":"YulIf","src":"2741:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2546:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2555:6:17","type":""}],"src":"2511:320:17"},{"body":{"nodeType":"YulBlock","src":"2880:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2890:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2912:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2942:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2920:21:17"},"nodeType":"YulFunctionCall","src":"2920:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2908:3:17"},"nodeType":"YulFunctionCall","src":"2908:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2894:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3059:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3061:16:17"},"nodeType":"YulFunctionCall","src":"3061:18:17"},"nodeType":"YulExpressionStatement","src":"3061:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3002:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3014:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:17"},"nodeType":"YulFunctionCall","src":"2999:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3038:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3050:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3035:2:17"},"nodeType":"YulFunctionCall","src":"3035:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2996:2:17"},"nodeType":"YulFunctionCall","src":"2996:62:17"},"nodeType":"YulIf","src":"2993:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3101:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3090:6:17"},"nodeType":"YulFunctionCall","src":"3090:22:17"},"nodeType":"YulExpressionStatement","src":"3090:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2866:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"2874:4:17","type":""}],"src":"2837:281:17"},{"body":{"nodeType":"YulBlock","src":"3152:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3169:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3172:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:17"},"nodeType":"YulFunctionCall","src":"3162:88:17"},"nodeType":"YulExpressionStatement","src":"3162:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3266:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3269:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3259:6:17"},"nodeType":"YulFunctionCall","src":"3259:15:17"},"nodeType":"YulExpressionStatement","src":"3259:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:17"},"nodeType":"YulFunctionCall","src":"3283:15:17"},"nodeType":"YulExpressionStatement","src":"3283:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3124:180:17"},{"body":{"nodeType":"YulBlock","src":"3338:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3355:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3358:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:17"},"nodeType":"YulFunctionCall","src":"3348:88:17"},"nodeType":"YulExpressionStatement","src":"3348:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3452:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3455:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:17"},"nodeType":"YulFunctionCall","src":"3445:15:17"},"nodeType":"YulExpressionStatement","src":"3445:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3476:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3479:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3469:6:17"},"nodeType":"YulFunctionCall","src":"3469:15:17"},"nodeType":"YulExpressionStatement","src":"3469:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3310:180:17"},{"body":{"nodeType":"YulBlock","src":"3585:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3605:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3595:6:17"},"nodeType":"YulFunctionCall","src":"3595:12:17"},"nodeType":"YulExpressionStatement","src":"3595:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3496:117:17"},{"body":{"nodeType":"YulBlock","src":"3708:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3725:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3728:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3718:6:17"},"nodeType":"YulFunctionCall","src":"3718:12:17"},"nodeType":"YulExpressionStatement","src":"3718:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3619:117:17"},{"body":{"nodeType":"YulBlock","src":"3831:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3848:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3841:6:17"},"nodeType":"YulFunctionCall","src":"3841:12:17"},"nodeType":"YulExpressionStatement","src":"3841:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3742:117:17"},{"body":{"nodeType":"YulBlock","src":"3954:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3974:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3964:6:17"},"nodeType":"YulFunctionCall","src":"3964:12:17"},"nodeType":"YulExpressionStatement","src":"3964:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3865:117:17"},{"body":{"nodeType":"YulBlock","src":"4036:54:17","statements":[{"nodeType":"YulAssignment","src":"4046:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4064:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:17"},"nodeType":"YulFunctionCall","src":"4060:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4076:3:17"},"nodeType":"YulFunctionCall","src":"4076:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4056:3:17"},"nodeType":"YulFunctionCall","src":"4056:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4046:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4019:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4029:6:17","type":""}],"src":"3988:102:17"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620016173803806200161783398181016040528101906200003791906200019f565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61125f80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d20565b60405180910390f35b6100e660048036038101906100e19190610b6a565b610308565b6040516100f39190610d05565b60405180910390f35b61010461032b565b6040516101119190610e22565b60405180910390f35b610134600480360381019061012f9190610b17565b610335565b6040516101419190610d05565b60405180910390f35b610152610364565b60405161015f9190610e3d565b60405180910390f35b610182600480360381019061017d9190610b6a565b61036d565b60405161018f9190610d05565b60405180910390f35b6101b260048036038101906101ad9190610aaa565b6103a4565b6040516101bf9190610e22565b60405180910390f35b6101d06103ec565b6040516101dd9190610d20565b60405180910390f35b61020060048036038101906101fb9190610b6a565b61047e565b60405161020d9190610d05565b60405180910390f35b610230600480360381019061022b9190610b6a565b6104f5565b60405161023d9190610d05565b60405180910390f35b610260600480360381019061025b9190610ad7565b610518565b60405161026d9190610e22565b60405180910390f35b60606003805461028590610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f52565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e74565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f52565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e02565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610de2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d62565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e22565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d82565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d42565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610da2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610e22565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081359050610a8f816111fb565b92915050565b600081359050610aa481611212565b92915050565b600060208284031215610ac057610abf610fe2565b5b6000610ace84828501610a80565b91505092915050565b60008060408385031215610aee57610aed610fe2565b5b6000610afc85828601610a80565b9250506020610b0d85828601610a80565b9150509250929050565b600080600060608486031215610b3057610b2f610fe2565b5b6000610b3e86828701610a80565b9350506020610b4f86828701610a80565b9250506040610b6086828701610a95565b9150509250925092565b60008060408385031215610b8157610b80610fe2565b5b6000610b8f85828601610a80565b9250506020610ba085828601610a95565b9150509250929050565b610bb381610edc565b82525050565b6000610bc482610e58565b610bce8185610e63565b9350610bde818560208601610f1f565b610be781610fe7565b840191505092915050565b6000610bff602383610e63565b9150610c0a82610ff8565b604082019050919050565b6000610c22602283610e63565b9150610c2d82611047565b604082019050919050565b6000610c45601d83610e63565b9150610c5082611096565b602082019050919050565b6000610c68602683610e63565b9150610c73826110bf565b604082019050919050565b6000610c8b602583610e63565b9150610c968261110e565b604082019050919050565b6000610cae602483610e63565b9150610cb98261115d565b604082019050919050565b6000610cd1602583610e63565b9150610cdc826111ac565b604082019050919050565b610cf081610f08565b82525050565b610cff81610f12565b82525050565b6000602082019050610d1a6000830184610baa565b92915050565b60006020820190508181036000830152610d3a8184610bb9565b905092915050565b60006020820190508181036000830152610d5b81610bf2565b9050919050565b60006020820190508181036000830152610d7b81610c15565b9050919050565b60006020820190508181036000830152610d9b81610c38565b9050919050565b60006020820190508181036000830152610dbb81610c5b565b9050919050565b60006020820190508181036000830152610ddb81610c7e565b9050919050565b60006020820190508181036000830152610dfb81610ca1565b9050919050565b60006020820190508181036000830152610e1b81610cc4565b9050919050565b6000602082019050610e376000830184610ce7565b92915050565b6000602082019050610e526000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7f82610f08565b9150610e8a83610f08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebf57610ebe610f84565b5b828201905092915050565b6000610ed582610ee8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f3d578082015181840152602081019050610f22565b83811115610f4c576000848401525b50505050565b60006002820490506001821680610f6a57607f821691505b60208210811415610f7e57610f7d610fb3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61120481610eca565b811461120f57600080fd5b50565b61121b81610f08565b811461122657600080fd5b5056fea2646970667358221220c1c4c5fe11f27cb8900e296d94ef595cc36b00b197c05e3bdd88cff6481f6f0d64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1617 CODESIZE SUB DUP1 PUSH3 0x1617 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA4 DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0D DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB3E DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4F DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB60 DUP7 DUP3 DUP8 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xEDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 DUP3 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0xBCE DUP2 DUP6 PUSH2 0xE63 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xFE7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF PUSH1 0x23 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0A DUP3 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH1 0x22 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH1 0x1D DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC50 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH1 0x26 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP3 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC96 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE PUSH1 0x24 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP3 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD5B DUP2 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7B DUP2 PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDDB DUP2 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFB DUP2 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0xF08 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF22 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xECA JUMP JUMPDEST DUP2 EQ PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xC4 0xC5 INVALID GT CALLCODE PUSH29 0xB8900E296D94EF595CC36B00B197C05E3BDD88CFF6481F6F0D64736F6C PUSH4 0x43000807 STOP CALLER ","sourceMap":"1521:12228:7:-:0;;;2115:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2190:5;2182;:13;;;;;;;;;;;;:::i;:::-;;2216:7;2206;:17;;;;;;;;;;;;:::i;:::-;;2115:116;;1521:12228;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:17:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;1521:12228:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1533":{"entryPoint":2683,"id":1533,"parameterSlots":3,"returnSlots":0},"@_approve_1468":{"entryPoint":1447,"id":1468,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1522":{"entryPoint":2678,"id":1522,"parameterSlots":3,"returnSlots":0},"@_msgSender_625":{"entryPoint":1439,"id":625,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1511":{"entryPoint":1906,"id":1511,"parameterSlots":3,"returnSlots":0},"@_transfer_1294":{"entryPoint":2046,"id":1294,"parameterSlots":3,"returnSlots":0},"@allowance_1089":{"entryPoint":1304,"id":1089,"parameterSlots":2,"returnSlots":1},"@approve_1114":{"entryPoint":776,"id":1114,"parameterSlots":2,"returnSlots":1},"@balanceOf_1046":{"entryPoint":932,"id":1046,"parameterSlots":1,"returnSlots":1},"@decimals_1022":{"entryPoint":868,"id":1022,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1217":{"entryPoint":1150,"id":1217,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1176":{"entryPoint":877,"id":1176,"parameterSlots":2,"returnSlots":1},"@name_1002":{"entryPoint":630,"id":1002,"parameterSlots":0,"returnSlots":1},"@symbol_1012":{"entryPoint":1004,"id":1012,"parameterSlots":0,"returnSlots":1},"@totalSupply_1032":{"entryPoint":811,"id":1032,"parameterSlots":0,"returnSlots":1},"@transferFrom_1147":{"entryPoint":821,"id":1147,"parameterSlots":3,"returnSlots":1},"@transfer_1071":{"entryPoint":1269,"id":1071,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2688,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2709,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2775,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2839,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2922,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2986,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3001,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":3058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3093,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":3128,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":3163,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":3198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3233,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3268,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3303,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3318,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3394,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3426,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3522,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3586,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3645,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3672,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3683,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3700,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3786,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3804,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3816,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3848,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3858,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":3871,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3922,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3972,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4019,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4066,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4071,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4088,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":4167,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4246,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4287,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4366,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":4445,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":4524,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4603,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4626,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13861:17","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:17","statements":[{"nodeType":"YulAssignment","src":"69:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:17"},"nodeType":"YulFunctionCall","src":"78:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:17"},"nodeType":"YulFunctionCall","src":"107:33:17"},"nodeType":"YulExpressionStatement","src":"107:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:17","type":""}],"src":"7:139:17"},{"body":{"nodeType":"YulBlock","src":"204:87:17","statements":[{"nodeType":"YulAssignment","src":"214:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:17"},"nodeType":"YulFunctionCall","src":"223:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:17"},"nodeType":"YulFunctionCall","src":"252:33:17"},"nodeType":"YulExpressionStatement","src":"252:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:17","type":""}],"src":"152:139:17"},{"body":{"nodeType":"YulBlock","src":"363:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"409:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"411:77:17"},"nodeType":"YulFunctionCall","src":"411:79:17"},"nodeType":"YulExpressionStatement","src":"411:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"384:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"393:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"380:3:17"},"nodeType":"YulFunctionCall","src":"380:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"405:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"376:3:17"},"nodeType":"YulFunctionCall","src":"376:32:17"},"nodeType":"YulIf","src":"373:119:17"},{"nodeType":"YulBlock","src":"502:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"517:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"531:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"521:6:17","type":""}]},{"nodeType":"YulAssignment","src":"546:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"581:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"592:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"577:3:17"},"nodeType":"YulFunctionCall","src":"577:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"601:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"556:20:17"},"nodeType":"YulFunctionCall","src":"556:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"546:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"333:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"344:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"356:6:17","type":""}],"src":"297:329:17"},{"body":{"nodeType":"YulBlock","src":"715:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"761:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"763:77:17"},"nodeType":"YulFunctionCall","src":"763:79:17"},"nodeType":"YulExpressionStatement","src":"763:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"736:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"745:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"732:3:17"},"nodeType":"YulFunctionCall","src":"732:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"757:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"728:3:17"},"nodeType":"YulFunctionCall","src":"728:32:17"},"nodeType":"YulIf","src":"725:119:17"},{"nodeType":"YulBlock","src":"854:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"869:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"883:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"873:6:17","type":""}]},{"nodeType":"YulAssignment","src":"898:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"933:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"944:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"929:3:17"},"nodeType":"YulFunctionCall","src":"929:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"953:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"908:20:17"},"nodeType":"YulFunctionCall","src":"908:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"898:6:17"}]}]},{"nodeType":"YulBlock","src":"981:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"996:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1010:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1000:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1026:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1061:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1072:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1057:3:17"},"nodeType":"YulFunctionCall","src":"1057:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1081:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1036:20:17"},"nodeType":"YulFunctionCall","src":"1036:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1026:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"677:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"688:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"700:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"708:6:17","type":""}],"src":"632:474:17"},{"body":{"nodeType":"YulBlock","src":"1212:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"1258:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1260:77:17"},"nodeType":"YulFunctionCall","src":"1260:79:17"},"nodeType":"YulExpressionStatement","src":"1260:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1233:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1242:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:17"},"nodeType":"YulFunctionCall","src":"1229:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1254:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1225:3:17"},"nodeType":"YulFunctionCall","src":"1225:32:17"},"nodeType":"YulIf","src":"1222:119:17"},{"nodeType":"YulBlock","src":"1351:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1366:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1380:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1370:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1395:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1430:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1441:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1426:3:17"},"nodeType":"YulFunctionCall","src":"1426:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1450:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1405:20:17"},"nodeType":"YulFunctionCall","src":"1405:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1395:6:17"}]}]},{"nodeType":"YulBlock","src":"1478:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1493:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1507:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1497:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1523:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1558:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1569:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1554:3:17"},"nodeType":"YulFunctionCall","src":"1554:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1578:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1533:20:17"},"nodeType":"YulFunctionCall","src":"1533:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1523:6:17"}]}]},{"nodeType":"YulBlock","src":"1606:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1621:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1635:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1625:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1651:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1697:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1682:3:17"},"nodeType":"YulFunctionCall","src":"1682:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1706:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1661:20:17"},"nodeType":"YulFunctionCall","src":"1661:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1651:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1166:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1177:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1189:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1197:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1205:6:17","type":""}],"src":"1112:619:17"},{"body":{"nodeType":"YulBlock","src":"1820:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"1866:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1868:77:17"},"nodeType":"YulFunctionCall","src":"1868:79:17"},"nodeType":"YulExpressionStatement","src":"1868:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1841:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1850:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1837:3:17"},"nodeType":"YulFunctionCall","src":"1837:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1862:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1833:3:17"},"nodeType":"YulFunctionCall","src":"1833:32:17"},"nodeType":"YulIf","src":"1830:119:17"},{"nodeType":"YulBlock","src":"1959:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1974:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1988:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1978:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2003:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2038:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2049:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2034:3:17"},"nodeType":"YulFunctionCall","src":"2034:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2058:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2013:20:17"},"nodeType":"YulFunctionCall","src":"2013:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2003:6:17"}]}]},{"nodeType":"YulBlock","src":"2086:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2101:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2115:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2105:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2131:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2166:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2177:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2162:3:17"},"nodeType":"YulFunctionCall","src":"2162:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2186:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2141:20:17"},"nodeType":"YulFunctionCall","src":"2141:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2131:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1782:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1793:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1805:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1813:6:17","type":""}],"src":"1737:474:17"},{"body":{"nodeType":"YulBlock","src":"2276:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2293:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2313:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2298:14:17"},"nodeType":"YulFunctionCall","src":"2298:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2286:6:17"},"nodeType":"YulFunctionCall","src":"2286:34:17"},"nodeType":"YulExpressionStatement","src":"2286:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2264:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2271:3:17","type":""}],"src":"2217:109:17"},{"body":{"nodeType":"YulBlock","src":"2424:272:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2434:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2481:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2448:32:17"},"nodeType":"YulFunctionCall","src":"2448:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2438:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2496:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2562:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2567:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2503:58:17"},"nodeType":"YulFunctionCall","src":"2503:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2496:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2609:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2616:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2605:3:17"},"nodeType":"YulFunctionCall","src":"2605:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2623:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2628:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2583:21:17"},"nodeType":"YulFunctionCall","src":"2583:52:17"},"nodeType":"YulExpressionStatement","src":"2583:52:17"},{"nodeType":"YulAssignment","src":"2644:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2655:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2682:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2660:21:17"},"nodeType":"YulFunctionCall","src":"2660:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2651:3:17"},"nodeType":"YulFunctionCall","src":"2651:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2644:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2405:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2412:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2420:3:17","type":""}],"src":"2332:364:17"},{"body":{"nodeType":"YulBlock","src":"2848:220:17","statements":[{"nodeType":"YulAssignment","src":"2858:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2924:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2929:2:17","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2865:58:17"},"nodeType":"YulFunctionCall","src":"2865:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2858:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3030:3:17"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"2941:88:17"},"nodeType":"YulFunctionCall","src":"2941:93:17"},"nodeType":"YulExpressionStatement","src":"2941:93:17"},{"nodeType":"YulAssignment","src":"3043:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3054:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3059:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:17"},"nodeType":"YulFunctionCall","src":"3050:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3043:3:17"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2836:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2844:3:17","type":""}],"src":"2702:366:17"},{"body":{"nodeType":"YulBlock","src":"3220:220:17","statements":[{"nodeType":"YulAssignment","src":"3230:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3296:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3301:2:17","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3237:58:17"},"nodeType":"YulFunctionCall","src":"3237:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3230:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3402:3:17"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"3313:88:17"},"nodeType":"YulFunctionCall","src":"3313:93:17"},"nodeType":"YulExpressionStatement","src":"3313:93:17"},{"nodeType":"YulAssignment","src":"3415:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3426:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3431:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3422:3:17"},"nodeType":"YulFunctionCall","src":"3422:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3415:3:17"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3208:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3216:3:17","type":""}],"src":"3074:366:17"},{"body":{"nodeType":"YulBlock","src":"3592:220:17","statements":[{"nodeType":"YulAssignment","src":"3602:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3668:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3673:2:17","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3609:58:17"},"nodeType":"YulFunctionCall","src":"3609:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3602:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3774:3:17"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"3685:88:17"},"nodeType":"YulFunctionCall","src":"3685:93:17"},"nodeType":"YulExpressionStatement","src":"3685:93:17"},{"nodeType":"YulAssignment","src":"3787:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3798:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3803:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3794:3:17"},"nodeType":"YulFunctionCall","src":"3794:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3787:3:17"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3580:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3588:3:17","type":""}],"src":"3446:366:17"},{"body":{"nodeType":"YulBlock","src":"3964:220:17","statements":[{"nodeType":"YulAssignment","src":"3974:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4040:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4045:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3981:58:17"},"nodeType":"YulFunctionCall","src":"3981:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3974:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4146:3:17"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"4057:88:17"},"nodeType":"YulFunctionCall","src":"4057:93:17"},"nodeType":"YulExpressionStatement","src":"4057:93:17"},{"nodeType":"YulAssignment","src":"4159:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4170:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4175:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4166:3:17"},"nodeType":"YulFunctionCall","src":"4166:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4159:3:17"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3952:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3960:3:17","type":""}],"src":"3818:366:17"},{"body":{"nodeType":"YulBlock","src":"4336:220:17","statements":[{"nodeType":"YulAssignment","src":"4346:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4412:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4417:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4353:58:17"},"nodeType":"YulFunctionCall","src":"4353:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4346:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4518:3:17"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"4429:88:17"},"nodeType":"YulFunctionCall","src":"4429:93:17"},"nodeType":"YulExpressionStatement","src":"4429:93:17"},{"nodeType":"YulAssignment","src":"4531:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4542:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4547:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4538:3:17"},"nodeType":"YulFunctionCall","src":"4538:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4531:3:17"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4324:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4332:3:17","type":""}],"src":"4190:366:17"},{"body":{"nodeType":"YulBlock","src":"4708:220:17","statements":[{"nodeType":"YulAssignment","src":"4718:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4784:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4789:2:17","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4725:58:17"},"nodeType":"YulFunctionCall","src":"4725:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4718:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4890:3:17"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"4801:88:17"},"nodeType":"YulFunctionCall","src":"4801:93:17"},"nodeType":"YulExpressionStatement","src":"4801:93:17"},{"nodeType":"YulAssignment","src":"4903:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4914:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4919:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4910:3:17"},"nodeType":"YulFunctionCall","src":"4910:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4903:3:17"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4696:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4704:3:17","type":""}],"src":"4562:366:17"},{"body":{"nodeType":"YulBlock","src":"5080:220:17","statements":[{"nodeType":"YulAssignment","src":"5090:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5156:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5161:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5097:58:17"},"nodeType":"YulFunctionCall","src":"5097:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5090:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5262:3:17"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"5173:88:17"},"nodeType":"YulFunctionCall","src":"5173:93:17"},"nodeType":"YulExpressionStatement","src":"5173:93:17"},{"nodeType":"YulAssignment","src":"5275:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5286:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5291:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5282:3:17"},"nodeType":"YulFunctionCall","src":"5282:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5275:3:17"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5068:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5076:3:17","type":""}],"src":"4934:366:17"},{"body":{"nodeType":"YulBlock","src":"5371:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5388:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5411:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5393:17:17"},"nodeType":"YulFunctionCall","src":"5393:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5381:6:17"},"nodeType":"YulFunctionCall","src":"5381:37:17"},"nodeType":"YulExpressionStatement","src":"5381:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5359:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5366:3:17","type":""}],"src":"5306:118:17"},{"body":{"nodeType":"YulBlock","src":"5491:51:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5508:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5529:5:17"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5513:15:17"},"nodeType":"YulFunctionCall","src":"5513:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5501:6:17"},"nodeType":"YulFunctionCall","src":"5501:35:17"},"nodeType":"YulExpressionStatement","src":"5501:35:17"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5479:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5486:3:17","type":""}],"src":"5430:112:17"},{"body":{"nodeType":"YulBlock","src":"5640:118:17","statements":[{"nodeType":"YulAssignment","src":"5650:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5662:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5673:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5658:3:17"},"nodeType":"YulFunctionCall","src":"5658:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5650:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5724:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5737:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5748:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5733:3:17"},"nodeType":"YulFunctionCall","src":"5733:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5686:37:17"},"nodeType":"YulFunctionCall","src":"5686:65:17"},"nodeType":"YulExpressionStatement","src":"5686:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5612:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5624:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5635:4:17","type":""}],"src":"5548:210:17"},{"body":{"nodeType":"YulBlock","src":"5882:195:17","statements":[{"nodeType":"YulAssignment","src":"5892:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5904:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5915:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5900:3:17"},"nodeType":"YulFunctionCall","src":"5900:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5892:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5939:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5950:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5935:3:17"},"nodeType":"YulFunctionCall","src":"5935:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5958:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5964:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5954:3:17"},"nodeType":"YulFunctionCall","src":"5954:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5928:6:17"},"nodeType":"YulFunctionCall","src":"5928:47:17"},"nodeType":"YulExpressionStatement","src":"5928:47:17"},{"nodeType":"YulAssignment","src":"5984:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6056:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"6065:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5992:63:17"},"nodeType":"YulFunctionCall","src":"5992:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5984:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5854:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5866:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5877:4:17","type":""}],"src":"5764:313:17"},{"body":{"nodeType":"YulBlock","src":"6254:248:17","statements":[{"nodeType":"YulAssignment","src":"6264:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6276:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6287:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:17"},"nodeType":"YulFunctionCall","src":"6272:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6264:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6311:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6322:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6307:3:17"},"nodeType":"YulFunctionCall","src":"6307:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6330:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6336:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6326:3:17"},"nodeType":"YulFunctionCall","src":"6326:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6300:6:17"},"nodeType":"YulFunctionCall","src":"6300:47:17"},"nodeType":"YulExpressionStatement","src":"6300:47:17"},{"nodeType":"YulAssignment","src":"6356:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6490:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6364:124:17"},"nodeType":"YulFunctionCall","src":"6364:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6356:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6234:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6249:4:17","type":""}],"src":"6083:419:17"},{"body":{"nodeType":"YulBlock","src":"6679:248:17","statements":[{"nodeType":"YulAssignment","src":"6689:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6701:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6712:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6697:3:17"},"nodeType":"YulFunctionCall","src":"6697:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6689:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6736:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6747:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6732:3:17"},"nodeType":"YulFunctionCall","src":"6732:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6755:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6751:3:17"},"nodeType":"YulFunctionCall","src":"6751:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6725:6:17"},"nodeType":"YulFunctionCall","src":"6725:47:17"},"nodeType":"YulExpressionStatement","src":"6725:47:17"},{"nodeType":"YulAssignment","src":"6781:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6915:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6789:124:17"},"nodeType":"YulFunctionCall","src":"6789:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6781:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6659:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6674:4:17","type":""}],"src":"6508:419:17"},{"body":{"nodeType":"YulBlock","src":"7104:248:17","statements":[{"nodeType":"YulAssignment","src":"7114:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7126:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7137:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7122:3:17"},"nodeType":"YulFunctionCall","src":"7122:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7114:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7161:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7172:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7157:3:17"},"nodeType":"YulFunctionCall","src":"7157:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7180:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7186:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7176:3:17"},"nodeType":"YulFunctionCall","src":"7176:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7150:6:17"},"nodeType":"YulFunctionCall","src":"7150:47:17"},"nodeType":"YulExpressionStatement","src":"7150:47:17"},{"nodeType":"YulAssignment","src":"7206:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7340:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7214:124:17"},"nodeType":"YulFunctionCall","src":"7214:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7206:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7084:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7099:4:17","type":""}],"src":"6933:419:17"},{"body":{"nodeType":"YulBlock","src":"7529:248:17","statements":[{"nodeType":"YulAssignment","src":"7539:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7551:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7562:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7547:3:17"},"nodeType":"YulFunctionCall","src":"7547:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7539:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7586:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7597:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7582:3:17"},"nodeType":"YulFunctionCall","src":"7582:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7605:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7611:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7601:3:17"},"nodeType":"YulFunctionCall","src":"7601:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7575:6:17"},"nodeType":"YulFunctionCall","src":"7575:47:17"},"nodeType":"YulExpressionStatement","src":"7575:47:17"},{"nodeType":"YulAssignment","src":"7631:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7765:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7639:124:17"},"nodeType":"YulFunctionCall","src":"7639:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7631:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7509:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7524:4:17","type":""}],"src":"7358:419:17"},{"body":{"nodeType":"YulBlock","src":"7954:248:17","statements":[{"nodeType":"YulAssignment","src":"7964:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7976:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7987:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7972:3:17"},"nodeType":"YulFunctionCall","src":"7972:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7964:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8011:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8022:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8007:3:17"},"nodeType":"YulFunctionCall","src":"8007:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8030:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8036:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8026:3:17"},"nodeType":"YulFunctionCall","src":"8026:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8000:6:17"},"nodeType":"YulFunctionCall","src":"8000:47:17"},"nodeType":"YulExpressionStatement","src":"8000:47:17"},{"nodeType":"YulAssignment","src":"8056:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8190:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8064:124:17"},"nodeType":"YulFunctionCall","src":"8064:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8056:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7934:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7949:4:17","type":""}],"src":"7783:419:17"},{"body":{"nodeType":"YulBlock","src":"8379:248:17","statements":[{"nodeType":"YulAssignment","src":"8389:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8401:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8412:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8397:3:17"},"nodeType":"YulFunctionCall","src":"8397:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8389:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8436:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8447:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8432:3:17"},"nodeType":"YulFunctionCall","src":"8432:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8455:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8461:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8451:3:17"},"nodeType":"YulFunctionCall","src":"8451:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8425:6:17"},"nodeType":"YulFunctionCall","src":"8425:47:17"},"nodeType":"YulExpressionStatement","src":"8425:47:17"},{"nodeType":"YulAssignment","src":"8481:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8615:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8489:124:17"},"nodeType":"YulFunctionCall","src":"8489:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8481:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8359:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8374:4:17","type":""}],"src":"8208:419:17"},{"body":{"nodeType":"YulBlock","src":"8804:248:17","statements":[{"nodeType":"YulAssignment","src":"8814:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8826:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8837:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8822:3:17"},"nodeType":"YulFunctionCall","src":"8822:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8814:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8861:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8872:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8857:3:17"},"nodeType":"YulFunctionCall","src":"8857:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8880:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8886:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8876:3:17"},"nodeType":"YulFunctionCall","src":"8876:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8850:6:17"},"nodeType":"YulFunctionCall","src":"8850:47:17"},"nodeType":"YulExpressionStatement","src":"8850:47:17"},{"nodeType":"YulAssignment","src":"8906:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9040:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8914:124:17"},"nodeType":"YulFunctionCall","src":"8914:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8906:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8784:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8799:4:17","type":""}],"src":"8633:419:17"},{"body":{"nodeType":"YulBlock","src":"9156:124:17","statements":[{"nodeType":"YulAssignment","src":"9166:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9178:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9189:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9174:3:17"},"nodeType":"YulFunctionCall","src":"9174:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9166:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9246:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9259:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9270:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9255:3:17"},"nodeType":"YulFunctionCall","src":"9255:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9202:43:17"},"nodeType":"YulFunctionCall","src":"9202:71:17"},"nodeType":"YulExpressionStatement","src":"9202:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9128:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9140:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9151:4:17","type":""}],"src":"9058:222:17"},{"body":{"nodeType":"YulBlock","src":"9380:120:17","statements":[{"nodeType":"YulAssignment","src":"9390:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9402:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9413:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9398:3:17"},"nodeType":"YulFunctionCall","src":"9398:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9390:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9466:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9479:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9490:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9475:3:17"},"nodeType":"YulFunctionCall","src":"9475:17:17"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9426:39:17"},"nodeType":"YulFunctionCall","src":"9426:67:17"},"nodeType":"YulExpressionStatement","src":"9426:67:17"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9352:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9364:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9375:4:17","type":""}],"src":"9286:214:17"},{"body":{"nodeType":"YulBlock","src":"9546:35:17","statements":[{"nodeType":"YulAssignment","src":"9556:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9572:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9566:5:17"},"nodeType":"YulFunctionCall","src":"9566:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9556:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9539:6:17","type":""}],"src":"9506:75:17"},{"body":{"nodeType":"YulBlock","src":"9646:40:17","statements":[{"nodeType":"YulAssignment","src":"9657:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9673:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9667:5:17"},"nodeType":"YulFunctionCall","src":"9667:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9657:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9629:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9639:6:17","type":""}],"src":"9587:99:17"},{"body":{"nodeType":"YulBlock","src":"9788:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9805:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9810:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9798:6:17"},"nodeType":"YulFunctionCall","src":"9798:19:17"},"nodeType":"YulExpressionStatement","src":"9798:19:17"},{"nodeType":"YulAssignment","src":"9826:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9845:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9850:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9841:3:17"},"nodeType":"YulFunctionCall","src":"9841:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9826:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9760:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"9765:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9776:11:17","type":""}],"src":"9692:169:17"},{"body":{"nodeType":"YulBlock","src":"9911:261:17","statements":[{"nodeType":"YulAssignment","src":"9921:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9944:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9926:17:17"},"nodeType":"YulFunctionCall","src":"9926:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9921:1:17"}]},{"nodeType":"YulAssignment","src":"9955:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9978:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9960:17:17"},"nodeType":"YulFunctionCall","src":"9960:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9955:1:17"}]},{"body":{"nodeType":"YulBlock","src":"10118:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10120:16:17"},"nodeType":"YulFunctionCall","src":"10120:18:17"},"nodeType":"YulExpressionStatement","src":"10120:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10039:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10046:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"10114:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10042:3:17"},"nodeType":"YulFunctionCall","src":"10042:74:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10036:2:17"},"nodeType":"YulFunctionCall","src":"10036:81:17"},"nodeType":"YulIf","src":"10033:107:17"},{"nodeType":"YulAssignment","src":"10150:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10161:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"10164:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10157:3:17"},"nodeType":"YulFunctionCall","src":"10157:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10150:3:17"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9898:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"9901:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9907:3:17","type":""}],"src":"9867:305:17"},{"body":{"nodeType":"YulBlock","src":"10223:51:17","statements":[{"nodeType":"YulAssignment","src":"10233:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10262:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10244:17:17"},"nodeType":"YulFunctionCall","src":"10244:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10233:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10205:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10215:7:17","type":""}],"src":"10178:96:17"},{"body":{"nodeType":"YulBlock","src":"10322:48:17","statements":[{"nodeType":"YulAssignment","src":"10332:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10357:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10350:6:17"},"nodeType":"YulFunctionCall","src":"10350:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10343:6:17"},"nodeType":"YulFunctionCall","src":"10343:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10332:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10304:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10314:7:17","type":""}],"src":"10280:90:17"},{"body":{"nodeType":"YulBlock","src":"10421:81:17","statements":[{"nodeType":"YulAssignment","src":"10431:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10446:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"10453:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10442:3:17"},"nodeType":"YulFunctionCall","src":"10442:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10431:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10403:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10413:7:17","type":""}],"src":"10376:126:17"},{"body":{"nodeType":"YulBlock","src":"10553:32:17","statements":[{"nodeType":"YulAssignment","src":"10563:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"10574:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10563:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10535:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10545:7:17","type":""}],"src":"10508:77:17"},{"body":{"nodeType":"YulBlock","src":"10634:43:17","statements":[{"nodeType":"YulAssignment","src":"10644:27:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10659:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"10666:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10655:3:17"},"nodeType":"YulFunctionCall","src":"10655:16:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10644:7:17"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10616:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10626:7:17","type":""}],"src":"10591:86:17"},{"body":{"nodeType":"YulBlock","src":"10732:258:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10742:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10751:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10746:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10811:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10836:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"10841:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10832:3:17"},"nodeType":"YulFunctionCall","src":"10832:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10855:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"10860:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10851:3:17"},"nodeType":"YulFunctionCall","src":"10851:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10845:5:17"},"nodeType":"YulFunctionCall","src":"10845:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10825:6:17"},"nodeType":"YulFunctionCall","src":"10825:39:17"},"nodeType":"YulExpressionStatement","src":"10825:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10772:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"10775:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10769:2:17"},"nodeType":"YulFunctionCall","src":"10769:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10783:19:17","statements":[{"nodeType":"YulAssignment","src":"10785:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10794:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"10797:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10790:3:17"},"nodeType":"YulFunctionCall","src":"10790:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10785:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"10765:3:17","statements":[]},"src":"10761:113:17"},{"body":{"nodeType":"YulBlock","src":"10908:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10958:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10963:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10954:3:17"},"nodeType":"YulFunctionCall","src":"10954:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"10972:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10947:6:17"},"nodeType":"YulFunctionCall","src":"10947:27:17"},"nodeType":"YulExpressionStatement","src":"10947:27:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10889:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"10892:6:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10886:2:17"},"nodeType":"YulFunctionCall","src":"10886:13:17"},"nodeType":"YulIf","src":"10883:101:17"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10714:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10719:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"10724:6:17","type":""}],"src":"10683:307:17"},{"body":{"nodeType":"YulBlock","src":"11047:269:17","statements":[{"nodeType":"YulAssignment","src":"11057:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11071:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"11077:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11067:3:17"},"nodeType":"YulFunctionCall","src":"11067:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11057:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"11088:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11118:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"11124:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11114:3:17"},"nodeType":"YulFunctionCall","src":"11114:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11092:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11165:51:17","statements":[{"nodeType":"YulAssignment","src":"11179:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11193:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11201:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11189:3:17"},"nodeType":"YulFunctionCall","src":"11189:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11179:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11145:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11138:6:17"},"nodeType":"YulFunctionCall","src":"11138:26:17"},"nodeType":"YulIf","src":"11135:81:17"},{"body":{"nodeType":"YulBlock","src":"11268:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11282:16:17"},"nodeType":"YulFunctionCall","src":"11282:18:17"},"nodeType":"YulExpressionStatement","src":"11282:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11232:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11255:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11263:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11252:2:17"},"nodeType":"YulFunctionCall","src":"11252:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11229:2:17"},"nodeType":"YulFunctionCall","src":"11229:38:17"},"nodeType":"YulIf","src":"11226:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11031:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11040:6:17","type":""}],"src":"10996:320:17"},{"body":{"nodeType":"YulBlock","src":"11350:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11367:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11370:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11360:6:17"},"nodeType":"YulFunctionCall","src":"11360:88:17"},"nodeType":"YulExpressionStatement","src":"11360:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11464:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11467:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11457:6:17"},"nodeType":"YulFunctionCall","src":"11457:15:17"},"nodeType":"YulExpressionStatement","src":"11457:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11488:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11491:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11481:6:17"},"nodeType":"YulFunctionCall","src":"11481:15:17"},"nodeType":"YulExpressionStatement","src":"11481:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11322:180:17"},{"body":{"nodeType":"YulBlock","src":"11536:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11553:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11556:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11546:6:17"},"nodeType":"YulFunctionCall","src":"11546:88:17"},"nodeType":"YulExpressionStatement","src":"11546:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11650:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11653:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11643:6:17"},"nodeType":"YulFunctionCall","src":"11643:15:17"},"nodeType":"YulExpressionStatement","src":"11643:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11674:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11677:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11667:6:17"},"nodeType":"YulFunctionCall","src":"11667:15:17"},"nodeType":"YulExpressionStatement","src":"11667:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11508:180:17"},{"body":{"nodeType":"YulBlock","src":"11783:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11800:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11803:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11793:6:17"},"nodeType":"YulFunctionCall","src":"11793:12:17"},"nodeType":"YulExpressionStatement","src":"11793:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"11694:117:17"},{"body":{"nodeType":"YulBlock","src":"11906:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11923:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11926:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11916:6:17"},"nodeType":"YulFunctionCall","src":"11916:12:17"},"nodeType":"YulExpressionStatement","src":"11916:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"11817:117:17"},{"body":{"nodeType":"YulBlock","src":"11988:54:17","statements":[{"nodeType":"YulAssignment","src":"11998:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12016:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12023:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12012:3:17"},"nodeType":"YulFunctionCall","src":"12012:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12032:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12028:3:17"},"nodeType":"YulFunctionCall","src":"12028:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12008:3:17"},"nodeType":"YulFunctionCall","src":"12008:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11998:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11971:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11981:6:17","type":""}],"src":"11940:102:17"},{"body":{"nodeType":"YulBlock","src":"12154:116:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12176:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12184:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12172:3:17"},"nodeType":"YulFunctionCall","src":"12172:14:17"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"12188:34:17","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12165:6:17"},"nodeType":"YulFunctionCall","src":"12165:58:17"},"nodeType":"YulExpressionStatement","src":"12165:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12244:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12252:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12240:3:17"},"nodeType":"YulFunctionCall","src":"12240:15:17"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12257:5:17","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12233:6:17"},"nodeType":"YulFunctionCall","src":"12233:30:17"},"nodeType":"YulExpressionStatement","src":"12233:30:17"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12146:6:17","type":""}],"src":"12048:222:17"},{"body":{"nodeType":"YulBlock","src":"12382:115:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12404:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12412:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12400:3:17"},"nodeType":"YulFunctionCall","src":"12400:14:17"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"12416:34:17","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12393:6:17"},"nodeType":"YulFunctionCall","src":"12393:58:17"},"nodeType":"YulExpressionStatement","src":"12393:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12472:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12480:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12468:3:17"},"nodeType":"YulFunctionCall","src":"12468:15:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"12485:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12461:6:17"},"nodeType":"YulFunctionCall","src":"12461:29:17"},"nodeType":"YulExpressionStatement","src":"12461:29:17"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12374:6:17","type":""}],"src":"12276:221:17"},{"body":{"nodeType":"YulBlock","src":"12609:73:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12631:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12639:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12627:3:17"},"nodeType":"YulFunctionCall","src":"12627:14:17"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"12643:31:17","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12620:6:17"},"nodeType":"YulFunctionCall","src":"12620:55:17"},"nodeType":"YulExpressionStatement","src":"12620:55:17"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12601:6:17","type":""}],"src":"12503:179:17"},{"body":{"nodeType":"YulBlock","src":"12794:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12816:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12824:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12812:3:17"},"nodeType":"YulFunctionCall","src":"12812:14:17"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12828:34:17","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12805:6:17"},"nodeType":"YulFunctionCall","src":"12805:58:17"},"nodeType":"YulExpressionStatement","src":"12805:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12884:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12892:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12880:3:17"},"nodeType":"YulFunctionCall","src":"12880:15:17"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12897:8:17","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12873:6:17"},"nodeType":"YulFunctionCall","src":"12873:33:17"},"nodeType":"YulExpressionStatement","src":"12873:33:17"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12786:6:17","type":""}],"src":"12688:225:17"},{"body":{"nodeType":"YulBlock","src":"13025:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13047:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13055:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13043:3:17"},"nodeType":"YulFunctionCall","src":"13043:14:17"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"13059:34:17","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13036:6:17"},"nodeType":"YulFunctionCall","src":"13036:58:17"},"nodeType":"YulExpressionStatement","src":"13036:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13115:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13123:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13111:3:17"},"nodeType":"YulFunctionCall","src":"13111:15:17"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"13128:7:17","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13104:6:17"},"nodeType":"YulFunctionCall","src":"13104:32:17"},"nodeType":"YulExpressionStatement","src":"13104:32:17"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13017:6:17","type":""}],"src":"12919:224:17"},{"body":{"nodeType":"YulBlock","src":"13255:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13277:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13285:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13273:3:17"},"nodeType":"YulFunctionCall","src":"13273:14:17"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"13289:34:17","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13266:6:17"},"nodeType":"YulFunctionCall","src":"13266:58:17"},"nodeType":"YulExpressionStatement","src":"13266:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13345:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13353:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13341:3:17"},"nodeType":"YulFunctionCall","src":"13341:15:17"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"13358:6:17","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13334:6:17"},"nodeType":"YulFunctionCall","src":"13334:31:17"},"nodeType":"YulExpressionStatement","src":"13334:31:17"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13247:6:17","type":""}],"src":"13149:223:17"},{"body":{"nodeType":"YulBlock","src":"13484:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13506:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13514:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13502:3:17"},"nodeType":"YulFunctionCall","src":"13502:14:17"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"13518:34:17","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13495:6:17"},"nodeType":"YulFunctionCall","src":"13495:58:17"},"nodeType":"YulExpressionStatement","src":"13495:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13574:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13582:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13570:3:17"},"nodeType":"YulFunctionCall","src":"13570:15:17"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"13587:7:17","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13563:6:17"},"nodeType":"YulFunctionCall","src":"13563:32:17"},"nodeType":"YulExpressionStatement","src":"13563:32:17"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13476:6:17","type":""}],"src":"13378:224:17"},{"body":{"nodeType":"YulBlock","src":"13651:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"13708:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13717:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13720:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13710:6:17"},"nodeType":"YulFunctionCall","src":"13710:12:17"},"nodeType":"YulExpressionStatement","src":"13710:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13674:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13699:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13681:17:17"},"nodeType":"YulFunctionCall","src":"13681:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13671:2:17"},"nodeType":"YulFunctionCall","src":"13671:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13664:6:17"},"nodeType":"YulFunctionCall","src":"13664:43:17"},"nodeType":"YulIf","src":"13661:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13644:5:17","type":""}],"src":"13608:122:17"},{"body":{"nodeType":"YulBlock","src":"13779:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"13836:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13845:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13848:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13838:6:17"},"nodeType":"YulFunctionCall","src":"13838:12:17"},"nodeType":"YulExpressionStatement","src":"13838:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13802:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13827:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13809:17:17"},"nodeType":"YulFunctionCall","src":"13809:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13799:2:17"},"nodeType":"YulFunctionCall","src":"13799:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13792:6:17"},"nodeType":"YulFunctionCall","src":"13792:43:17"},"nodeType":"YulIf","src":"13789:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13772:5:17","type":""}],"src":"13736:122:17"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d20565b60405180910390f35b6100e660048036038101906100e19190610b6a565b610308565b6040516100f39190610d05565b60405180910390f35b61010461032b565b6040516101119190610e22565b60405180910390f35b610134600480360381019061012f9190610b17565b610335565b6040516101419190610d05565b60405180910390f35b610152610364565b60405161015f9190610e3d565b60405180910390f35b610182600480360381019061017d9190610b6a565b61036d565b60405161018f9190610d05565b60405180910390f35b6101b260048036038101906101ad9190610aaa565b6103a4565b6040516101bf9190610e22565b60405180910390f35b6101d06103ec565b6040516101dd9190610d20565b60405180910390f35b61020060048036038101906101fb9190610b6a565b61047e565b60405161020d9190610d05565b60405180910390f35b610230600480360381019061022b9190610b6a565b6104f5565b60405161023d9190610d05565b60405180910390f35b610260600480360381019061025b9190610ad7565b610518565b60405161026d9190610e22565b60405180910390f35b60606003805461028590610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f52565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e74565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f52565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e02565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610de2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d62565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e22565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d82565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d42565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610da2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610e22565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081359050610a8f816111fb565b92915050565b600081359050610aa481611212565b92915050565b600060208284031215610ac057610abf610fe2565b5b6000610ace84828501610a80565b91505092915050565b60008060408385031215610aee57610aed610fe2565b5b6000610afc85828601610a80565b9250506020610b0d85828601610a80565b9150509250929050565b600080600060608486031215610b3057610b2f610fe2565b5b6000610b3e86828701610a80565b9350506020610b4f86828701610a80565b9250506040610b6086828701610a95565b9150509250925092565b60008060408385031215610b8157610b80610fe2565b5b6000610b8f85828601610a80565b9250506020610ba085828601610a95565b9150509250929050565b610bb381610edc565b82525050565b6000610bc482610e58565b610bce8185610e63565b9350610bde818560208601610f1f565b610be781610fe7565b840191505092915050565b6000610bff602383610e63565b9150610c0a82610ff8565b604082019050919050565b6000610c22602283610e63565b9150610c2d82611047565b604082019050919050565b6000610c45601d83610e63565b9150610c5082611096565b602082019050919050565b6000610c68602683610e63565b9150610c73826110bf565b604082019050919050565b6000610c8b602583610e63565b9150610c968261110e565b604082019050919050565b6000610cae602483610e63565b9150610cb98261115d565b604082019050919050565b6000610cd1602583610e63565b9150610cdc826111ac565b604082019050919050565b610cf081610f08565b82525050565b610cff81610f12565b82525050565b6000602082019050610d1a6000830184610baa565b92915050565b60006020820190508181036000830152610d3a8184610bb9565b905092915050565b60006020820190508181036000830152610d5b81610bf2565b9050919050565b60006020820190508181036000830152610d7b81610c15565b9050919050565b60006020820190508181036000830152610d9b81610c38565b9050919050565b60006020820190508181036000830152610dbb81610c5b565b9050919050565b60006020820190508181036000830152610ddb81610c7e565b9050919050565b60006020820190508181036000830152610dfb81610ca1565b9050919050565b60006020820190508181036000830152610e1b81610cc4565b9050919050565b6000602082019050610e376000830184610ce7565b92915050565b6000602082019050610e526000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7f82610f08565b9150610e8a83610f08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebf57610ebe610f84565b5b828201905092915050565b6000610ed582610ee8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f3d578082015181840152602081019050610f22565b83811115610f4c576000848401525b50505050565b60006002820490506001821680610f6a57607f821691505b60208210811415610f7e57610f7d610fb3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61120481610eca565b811461120f57600080fd5b50565b61121b81610f08565b811461122657600080fd5b5056fea2646970667358221220c1c4c5fe11f27cb8900e296d94ef595cc36b00b197c05e3bdd88cff6481f6f0d64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA4 DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0D DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB3E DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4F DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB60 DUP7 DUP3 DUP8 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xEDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 DUP3 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0xBCE DUP2 DUP6 PUSH2 0xE63 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xFE7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF PUSH1 0x23 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0A DUP3 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH1 0x22 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH1 0x1D DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC50 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH1 0x26 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP3 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC96 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE PUSH1 0x24 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP3 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD5B DUP2 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7B DUP2 PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDDB DUP2 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFB DUP2 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0xF08 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF22 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xECA JUMP JUMPDEST DUP2 EQ PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xC4 0xC5 INVALID GT CALLCODE PUSH29 0xB8900E296D94EF595CC36B00B197C05E3BDD88CFF6481F6F0D64736F6C PUSH4 0x43000807 STOP CALLER ","sourceMap":"1521:12228:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4718:226;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3421:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5524:295;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3263:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6228:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3592:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2520:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6994:498;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3941:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4222:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2301:100;2355:13;2388:5;2381:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:100;:::o;4718:226::-;4826:4;4843:13;4859:12;:10;:12::i;:::-;4843:28;;4882:32;4891:5;4898:7;4907:6;4882:8;:32::i;:::-;4932:4;4925:11;;;4718:226;;;;:::o;3421:108::-;3482:7;3509:12;;3502:19;;3421:108;:::o;5524:295::-;5655:4;5672:15;5690:12;:10;:12::i;:::-;5672:30;;5713:38;5729:4;5735:7;5744:6;5713:15;:38::i;:::-;5762:27;5772:4;5778:2;5782:6;5762:9;:27::i;:::-;5807:4;5800:11;;;5524:295;;;;;:::o;3263:93::-;3321:5;3346:2;3339:9;;3263:93;:::o;6228:263::-;6341:4;6358:13;6374:12;:10;:12::i;:::-;6358:28;;6397:64;6406:5;6413:7;6450:10;6422:25;6432:5;6439:7;6422:9;:25::i;:::-;:38;;;;:::i;:::-;6397:8;:64::i;:::-;6479:4;6472:11;;;6228:263;;;;:::o;3592:143::-;3682:7;3709:9;:18;3719:7;3709:18;;;;;;;;;;;;;;;;3702:25;;3592:143;;;:::o;2520:104::-;2576:13;2609:7;2602:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2520:104;:::o;6994:498::-;7112:4;7129:13;7145:12;:10;:12::i;:::-;7129:28;;7168:24;7195:25;7205:5;7212:7;7195:9;:25::i;:::-;7168:52;;7273:15;7253:16;:35;;7231:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;7389:60;7398:5;7405:7;7433:15;7414:16;:34;7389:8;:60::i;:::-;7480:4;7473:11;;;;6994:498;;;;:::o;3941:218::-;4045:4;4062:13;4078:12;:10;:12::i;:::-;4062:28;;4101;4111:5;4118:2;4122:6;4101:9;:28::i;:::-;4147:4;4140:11;;;3941:218;;;;:::o;4222:176::-;4336:7;4363:11;:18;4375:5;4363:18;;;;;;;;;;;;;;;:27;4382:7;4363:27;;;;;;;;;;;;;;;;4356:34;;4222:176;;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;11120:380:7:-;11273:1;11256:19;;:5;:19;;;;11248:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11354:1;11335:21;;:7;:21;;;;11327:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11438:6;11408:11;:18;11420:5;11408:18;;;;;;;;;;;;;;;:27;11427:7;11408:27;;;;;;;;;;;;;;;:36;;;;11476:7;11460:32;;11469:5;11460:32;;;11485:6;11460:32;;;;;;:::i;:::-;;;;;;;;11120:380;;;:::o;11791:502::-;11926:24;11953:25;11963:5;11970:7;11953:9;:25::i;:::-;11926:52;;12013:17;11993:16;:37;11989:297;;12093:6;12073:16;:26;;12047:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;12208:51;12217:5;12224:7;12252:6;12233:16;:25;12208:8;:51::i;:::-;11989:297;11915:378;11791:502;;;:::o;7962:877::-;8109:1;8093:18;;:4;:18;;;;8085:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8186:1;8172:16;;:2;:16;;;;8164:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8241:38;8262:4;8268:2;8272:6;8241:20;:38::i;:::-;8292:19;8314:9;:15;8324:4;8314:15;;;;;;;;;;;;;;;;8292:37;;8377:6;8362:11;:21;;8340:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;8517:6;8503:11;:20;8485:9;:15;8495:4;8485:15;;;;;;;;;;;;;;;:38;;;;8720:6;8703:9;:13;8713:2;8703:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8770:2;8755:26;;8764:4;8755:26;;;8774:6;8755:26;;;;;;:::i;:::-;;;;;;;;8794:37;8814:4;8820:2;8824:6;8794:19;:37::i;:::-;8074:765;7962:877;;;:::o;12893:125::-;;;;:::o;13622:124::-;;;;:::o;7:139:17:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3074:366;;;:::o;3446:::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3446:366;;;:::o;3818:::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3818:366;;;:::o;4190:::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4190:366;;;:::o;4562:::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4562:366;;;:::o;4934:::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;4934:366;;;:::o;5306:118::-;5393:24;5411:5;5393:24;:::i;:::-;5388:3;5381:37;5306:118;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5430:112;;:::o;5548:210::-;5635:4;5673:2;5662:9;5658:18;5650:26;;5686:65;5748:1;5737:9;5733:17;5724:6;5686:65;:::i;:::-;5548:210;;;;:::o;5764:313::-;5877:4;5915:2;5904:9;5900:18;5892:26;;5964:9;5958:4;5954:20;5950:1;5939:9;5935:17;5928:47;5992:78;6065:4;6056:6;5992:78;:::i;:::-;5984:86;;5764:313;;;;:::o;6083:419::-;6249:4;6287:2;6276:9;6272:18;6264:26;;6336:9;6330:4;6326:20;6322:1;6311:9;6307:17;6300:47;6364:131;6490:4;6364:131;:::i;:::-;6356:139;;6083:419;;;:::o;6508:::-;6674:4;6712:2;6701:9;6697:18;6689:26;;6761:9;6755:4;6751:20;6747:1;6736:9;6732:17;6725:47;6789:131;6915:4;6789:131;:::i;:::-;6781:139;;6508:419;;;:::o;6933:::-;7099:4;7137:2;7126:9;7122:18;7114:26;;7186:9;7180:4;7176:20;7172:1;7161:9;7157:17;7150:47;7214:131;7340:4;7214:131;:::i;:::-;7206:139;;6933:419;;;:::o;7358:::-;7524:4;7562:2;7551:9;7547:18;7539:26;;7611:9;7605:4;7601:20;7597:1;7586:9;7582:17;7575:47;7639:131;7765:4;7639:131;:::i;:::-;7631:139;;7358:419;;;:::o;7783:::-;7949:4;7987:2;7976:9;7972:18;7964:26;;8036:9;8030:4;8026:20;8022:1;8011:9;8007:17;8000:47;8064:131;8190:4;8064:131;:::i;:::-;8056:139;;7783:419;;;:::o;8208:::-;8374:4;8412:2;8401:9;8397:18;8389:26;;8461:9;8455:4;8451:20;8447:1;8436:9;8432:17;8425:47;8489:131;8615:4;8489:131;:::i;:::-;8481:139;;8208:419;;;:::o;8633:::-;8799:4;8837:2;8826:9;8822:18;8814:26;;8886:9;8880:4;8876:20;8872:1;8861:9;8857:17;8850:47;8914:131;9040:4;8914:131;:::i;:::-;8906:139;;8633:419;;;:::o;9058:222::-;9151:4;9189:2;9178:9;9174:18;9166:26;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9058:222;;;;:::o;9286:214::-;9375:4;9413:2;9402:9;9398:18;9390:26;;9426:67;9490:1;9479:9;9475:17;9466:6;9426:67;:::i;:::-;9286:214;;;;:::o;9587:99::-;9639:6;9673:5;9667:12;9657:22;;9587:99;;;:::o;9692:169::-;9776:11;9810:6;9805:3;9798:19;9850:4;9845:3;9841:14;9826:29;;9692:169;;;;:::o;9867:305::-;9907:3;9926:20;9944:1;9926:20;:::i;:::-;9921:25;;9960:20;9978:1;9960:20;:::i;:::-;9955:25;;10114:1;10046:66;10042:74;10039:1;10036:81;10033:107;;;10120:18;;:::i;:::-;10033:107;10164:1;10161;10157:9;10150:16;;9867:305;;;;:::o;10178:96::-;10215:7;10244:24;10262:5;10244:24;:::i;:::-;10233:35;;10178:96;;;:::o;10280:90::-;10314:7;10357:5;10350:13;10343:21;10332:32;;10280:90;;;:::o;10376:126::-;10413:7;10453:42;10446:5;10442:54;10431:65;;10376:126;;;:::o;10508:77::-;10545:7;10574:5;10563:16;;10508:77;;;:::o;10591:86::-;10626:7;10666:4;10659:5;10655:16;10644:27;;10591:86;;;:::o;10683:307::-;10751:1;10761:113;10775:6;10772:1;10769:13;10761:113;;;10860:1;10855:3;10851:11;10845:18;10841:1;10836:3;10832:11;10825:39;10797:2;10794:1;10790:10;10785:15;;10761:113;;;10892:6;10889:1;10886:13;10883:101;;;10972:1;10963:6;10958:3;10954:16;10947:27;10883:101;10732:258;10683:307;;;:::o;10996:320::-;11040:6;11077:1;11071:4;11067:12;11057:22;;11124:1;11118:4;11114:12;11145:18;11135:81;;11201:4;11193:6;11189:17;11179:27;;11135:81;11263:2;11255:6;11252:14;11232:18;11229:38;11226:84;;;11282:18;;:::i;:::-;11226:84;11047:269;10996:320;;;:::o;11322:180::-;11370:77;11367:1;11360:88;11467:4;11464:1;11457:15;11491:4;11488:1;11481:15;11508:180;11556:77;11553:1;11546:88;11653:4;11650:1;11643:15;11677:4;11674:1;11667:15;11817:117;11926:1;11923;11916:12;11940:102;11981:6;12032:2;12028:7;12023:2;12016:5;12012:14;12008:28;11998:38;;11940:102;;;:::o;12048:222::-;12188:34;12184:1;12176:6;12172:14;12165:58;12257:5;12252:2;12244:6;12240:15;12233:30;12048:222;:::o;12276:221::-;12416:34;12412:1;12404:6;12400:14;12393:58;12485:4;12480:2;12472:6;12468:15;12461:29;12276:221;:::o;12503:179::-;12643:31;12639:1;12631:6;12627:14;12620:55;12503:179;:::o;12688:225::-;12828:34;12824:1;12816:6;12812:14;12805:58;12897:8;12892:2;12884:6;12880:15;12873:33;12688:225;:::o;12919:224::-;13059:34;13055:1;13047:6;13043:14;13036:58;13128:7;13123:2;13115:6;13111:15;13104:32;12919:224;:::o;13149:223::-;13289:34;13285:1;13277:6;13273:14;13266:58;13358:6;13353:2;13345:6;13341:15;13334:31;13149:223;:::o;13378:224::-;13518:34;13514:1;13506:6;13502:14;13495:58;13587:7;13582:2;13574:6;13570:15;13563:32;13378:224;:::o;13608:122::-;13681:24;13699:5;13681:24;:::i;:::-;13674:5;13671:35;13661:63;;13720:1;13717;13710:12;13661:63;13608:122;:::o;13736:::-;13809:24;13827:5;13809:24;:::i;:::-;13802:5;13799:35;13789:63;;13848:1;13845;13838:12;13789:63;13736:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"940600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(\\r\\n        address account\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(\\r\\n            currentAllowance >= subtractedValue,\\r\\n            \\\"ERC20: decreased allowance below zero\\\"\\r\\n        );\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(\\r\\n            fromBalance >= amount,\\r\\n            \\\"ERC20: transfer amount exceeds balance\\\"\\r\\n        );\\r\\n        unchecked {\\r\\n            _balances[from] = fromBalance - amount;\\r\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\r\\n            // decrementing then incrementing.\\r\\n            _balances[to] += amount;\\r\\n        }\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply += amount;\\r\\n        unchecked {\\r\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\r\\n            _balances[account] += amount;\\r\\n        }\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = accountBalance - amount;\\r\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\r\\n            _totalSupply -= amount;\\r\\n        }\\r\\n\\r\\n        emit Transfer(account, address(0), amount);\\r\\n\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(\\r\\n                currentAllowance >= amount,\\r\\n                \\\"ERC20: insufficient allowance\\\"\\r\\n            );\\r\\n            unchecked {\\r\\n                _approve(owner, spender, currentAllowance - amount);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0x98cae7e35c3cb1f12ab2eeee2506facde33e4ee4292ca6d6ebdc93a62523c256\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":963,"contract":"contracts/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":969,"contract":"contracts/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":971,"contract":"contracts/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":973,"contract":"contracts/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":975,"contract":"contracts/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Exchange.sol":{"Exchange":{"abi":[{"inputs":[{"internalType":"address","name":"_wallet","type":"address"},{"internalType":"address","name":"_fees","type":"address"},{"internalType":"address","name":"_priceChecker","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"waiveFees","type":"bool"}],"name":"Cancel","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"waiveFees","type":"bool"}],"name":"Order","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountFilled","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"filledOrder","type":"event"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"addToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"bool","name":"_waiveFees","type":"bool"}],"name":"createLimitBuyOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"bool","name":"_waiveFees","type":"bool"}],"name":"createLimitSellOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getFilledOrder","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountFilled","type":"uint256"},{"internalType":"uint256","name":"fillRate","type":"uint256"},{"internalType":"uint256","name":"originalRate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"feesWaived","type":"bool"},{"internalType":"uint256","name":"feesPaid","type":"uint256"}],"internalType":"struct Exchange._filledOrder","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"}],"name":"getFilledOrderLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"}],"name":"getOrder","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"internalType":"struct Exchange._Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"side","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"getOrderFromArray","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"internalType":"struct Exchange._Order","name":"","type":"tuple"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"name":"getOrderLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getTokenInfo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isVerifiedToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"name":"orderExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"orderStruct","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_filledOrders","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountFilled","type":"uint256"},{"internalType":"uint256","name":"fillRate","type":"uint256"},{"internalType":"uint256","name":"originalRate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"feesWaived","type":"bool"},{"internalType":"uint256","name":"feesPaid","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_orderBook","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_orderId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_isManual","type":"bool"}],"name":"setManual","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_PriceCheckeraddress","type":"address"}],"name":"setPriceCheckerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tradingFees","type":"address"}],"name":"setTradingFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_Walletaddress","type":"address"}],"name":"setWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenList","outputs":[{"internalType":"address","name":"add","type":"address"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountFilled","type":"uint256"},{"internalType":"uint256","name":"fillRate","type":"uint256"},{"internalType":"uint256","name":"originalRate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"feesWaived","type":"bool"},{"internalType":"uint256","name":"feesPaid","type":"uint256"}],"internalType":"struct Exchange._filledOrder","name":"order","type":"tuple"},{"internalType":"uint256","name":"_side","type":"uint256"}],"name":"updateFilledOrders","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"internalType":"struct Exchange._Order","name":"order","type":"tuple"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"updateOrder","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1768":{"entryPoint":null,"id":1768,"parameterSlots":3,"returnSlots":0},"@_421":{"entryPoint":null,"id":421,"parameterSlots":0,"returnSlots":0},"@_msgSender_625":{"entryPoint":401,"id":625,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":409,"id":509,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":628,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":720,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":740,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":772,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":777,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1511:17","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:17","statements":[{"nodeType":"YulAssignment","src":"80:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:17"},"nodeType":"YulFunctionCall","src":"89:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:17"},"nodeType":"YulFunctionCall","src":"111:33:17"},"nodeType":"YulExpressionStatement","src":"111:33:17"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:17","type":""}],"src":"7:143:17"},{"body":{"nodeType":"YulBlock","src":"267:552:17","statements":[{"body":{"nodeType":"YulBlock","src":"313:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"315:77:17"},"nodeType":"YulFunctionCall","src":"315:79:17"},"nodeType":"YulExpressionStatement","src":"315:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"288:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"297:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"284:3:17"},"nodeType":"YulFunctionCall","src":"284:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"309:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"280:3:17"},"nodeType":"YulFunctionCall","src":"280:32:17"},"nodeType":"YulIf","src":"277:119:17"},{"nodeType":"YulBlock","src":"406:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"421:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"435:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"425:6:17","type":""}]},{"nodeType":"YulAssignment","src":"450:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"496:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"507:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"492:3:17"},"nodeType":"YulFunctionCall","src":"492:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"516:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"460:31:17"},"nodeType":"YulFunctionCall","src":"460:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"450:6:17"}]}]},{"nodeType":"YulBlock","src":"544:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"559:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"573:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"563:6:17","type":""}]},{"nodeType":"YulAssignment","src":"589:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"635:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"646:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"631:3:17"},"nodeType":"YulFunctionCall","src":"631:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"655:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"599:31:17"},"nodeType":"YulFunctionCall","src":"599:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:17"}]}]},{"nodeType":"YulBlock","src":"683:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"698:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"712:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"702:6:17","type":""}]},{"nodeType":"YulAssignment","src":"728:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"774:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"785:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"770:3:17"},"nodeType":"YulFunctionCall","src":"770:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"794:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"738:31:17"},"nodeType":"YulFunctionCall","src":"738:64:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"728:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"221:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"232:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"244:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"252:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"260:6:17","type":""}],"src":"156:663:17"},{"body":{"nodeType":"YulBlock","src":"865:35:17","statements":[{"nodeType":"YulAssignment","src":"875:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"891:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"885:5:17"},"nodeType":"YulFunctionCall","src":"885:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"875:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"858:6:17","type":""}],"src":"825:75:17"},{"body":{"nodeType":"YulBlock","src":"951:51:17","statements":[{"nodeType":"YulAssignment","src":"961:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"972:17:17"},"nodeType":"YulFunctionCall","src":"972:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"961:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"933:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"943:7:17","type":""}],"src":"906:96:17"},{"body":{"nodeType":"YulBlock","src":"1053:81:17","statements":[{"nodeType":"YulAssignment","src":"1063:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1078:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1085:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1074:3:17"},"nodeType":"YulFunctionCall","src":"1074:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1063:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1035:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1045:7:17","type":""}],"src":"1008:126:17"},{"body":{"nodeType":"YulBlock","src":"1229:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1246:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1249:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1239:6:17"},"nodeType":"YulFunctionCall","src":"1239:12:17"},"nodeType":"YulExpressionStatement","src":"1239:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1140:117:17"},{"body":{"nodeType":"YulBlock","src":"1352:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1369:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1372:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1362:6:17"},"nodeType":"YulFunctionCall","src":"1362:12:17"},"nodeType":"YulExpressionStatement","src":"1362:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1263:117:17"},{"body":{"nodeType":"YulBlock","src":"1429:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1486:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1495:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1488:6:17"},"nodeType":"YulFunctionCall","src":"1488:12:17"},"nodeType":"YulExpressionStatement","src":"1488:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1459:17:17"},"nodeType":"YulFunctionCall","src":"1459:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1449:2:17"},"nodeType":"YulFunctionCall","src":"1449:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1442:6:17"},"nodeType":"YulFunctionCall","src":"1442:43:17"},"nodeType":"YulIf","src":"1439:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1422:5:17","type":""}],"src":"1386:122:17"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052670de0b6b3a76400006004556000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006009556001600a60006101000a81548160ff0219169083151502179055503480156200007f57600080fd5b5060405162005713380380620057138339818101604052810190620000a5919062000274565b620000c5620000b96200019160201b60201c565b6200019960201b60201c565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000323565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200026e8162000309565b92915050565b60008060006060848603121562000290576200028f62000304565b5b6000620002a0868287016200025d565b9350506020620002b3868287016200025d565b9250506040620002c6868287016200025d565b9150509250925092565b6000620002dd82620002e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200031481620002d0565b81146200032057600080fd5b50565b6153e080620003336000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80639c07ce26116100f9578063dafbfe6a11610097578063f2fde38b11610071578063f2fde38b14610525578063f90ef4f214610541578063fb310c9b1461055d578063ff09cdfa14610579576101a9565b8063dafbfe6a1461049f578063e4c3c7cd146104bb578063ea42f349146104f5576101a9565b8063af81c5b9116100d3578063af81c5b9146103fc578063b136e39a14610418578063bd8098ec14610434578063c3364be41461046f576101a9565b80639c07ce26146103915780639ead7222146103af578063ac1a386a146103e0576101a9565b806362c09cfa116101665780637bf1a627116101405780637bf1a627146102f45780638da5cb5b146103125780638f101b0e1461033057806392e43d3a14610360576101a9565b806362c09cfa146102b25780636f4e410b146102ce578063715018a6146102ea576101a9565b80630af4e4f0146101ae5780631027b219146101ca57806314eca9dc146101fa5780631cb67fb31461022a5780631f69565f14610252578063429d24b214610282575b600080fd5b6101c860048036038101906101c391906145c8565b610595565b005b6101e460048036038101906101df91906141c8565b610809565b6040516101f19190614b4d565b60405180910390f35b610214600480360381019061020f91906144a3565b6108bf565b6040516102219190614d2b565b60405180910390f35b61023261096d565b6040516102499b9a99989796959493929190614e00565b60405180910390f35b61026c600480360381019061026791906141c8565b610a2f565b6040516102799190614d2b565b60405180910390f35b61029c60048036038101906102979190614664565b610b3f565b6040516102a99190614b4d565b60405180910390f35b6102cc60048036038101906102c79190614396565b610e2d565b005b6102e860048036038101906102e39190614396565b611447565b005b6102f2611a60565b005b6102fc611a74565b6040516103099190614a9b565b60405180910390f35b61031a611a9a565b6040516103279190614a9b565b60405180910390f35b61034a60048036038101906103459190614303565b611ac3565b6040516103579190614d0f565b60405180910390f35b61037a6004803603810190610375919061425c565b611d00565b604051610388929190614ce4565b60405180910390f35b610399612112565b6040516103a69190614d2b565b60405180910390f35b6103c960048036038101906103c4919061460a565b612118565b6040516103d7929190614b24565b60405180910390f35b6103fa60048036038101906103f591906141c8565b61216c565b005b61041660048036038101906104119190614356565b6121b8565b005b610432600480360381019061042d91906141c8565b6122b6565b005b61044e60048036038101906104499190614423565b612302565b6040516104669c9b9a99989796959493929190614d46565b60405180910390f35b610489600480360381019061048491906142c3565b612406565b6040516104969190614d2b565b60405180910390f35b6104b960048036038101906104b491906141c8565b612476565b005b6104d560048036038101906104d0919061425c565b6124c2565b6040516104ec9b9a99989796959493929190614e00565b60405180910390f35b61050f600480360381019061050a91906141f5565b6125cd565b60405161051c9190614cc8565b60405180910390f35b61053f600480360381019061053a91906141c8565b612844565b005b61055b600480360381019061055691906144f6565b6128c8565b005b6105776004803603810190610572919061455d565b613319565b005b610593600480360381019061058e9190614476565b6138cb565b005b60086000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008281526020019081526020016000208290806001815401808255809150506001900390600052602060002090600b02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff0219169083600181111561064857610647615081565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816004015560c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555061016082015181600a015550507f78f8097f697fc6b58d127f987a03e83de8076bdc75199661d49326415098d60a826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c61014001518d61016001516040516107fd9c9b9a99989796959493929190614d46565b60405180910390a15050565b600080600090505b6006805490508110156108b4578273ffffffffffffffffffffffffffffffffffffffff1660068281548110610849576108486150df565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108a15760019150506108ba565b80806108ac90615009565b915050610811565b50600090505b919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085600181111561095257610951615081565b5b81526020019081526020016000208054905090509392505050565b600b8060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b600080600090505b600680549050811015610afe578273ffffffffffffffffffffffffffffffffffffffff1660068281548110610a6f57610a6e6150df565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610aeb5760068181548110610ad157610ad06150df565b5b906000526020600020906002020160010154915050610b3a565b8080610af690615009565b915050610a37565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3190614c68565b60405180910390fd5b919050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000866001811115610bd357610bd2615081565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610dc857838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff166001811115610c5457610c53615081565b5b6001811115610c6657610c65615081565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152505081526020019060010190610c01565b50505050905060005b8151811015610e1e5786828281518110610dee57610ded6150df565b5b6020026020010151600001511415610e0b57600192505050610e25565b8080610e1690615009565b915050610dd1565b5060009150505b949350505050565b85610e3781610809565b610e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6d90614bc8565b60405180910390fd5b84610e8081610809565b610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690614bc8565b60405180910390fd5b8461102b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338a6040518363ffffffff1660e01b8152600401610f20929190614ab6565b60206040518083038186803b158015610f3857600080fd5b505afa158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f709190614637565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8a336040518363ffffffff1660e01b8152600401610fcd929190614ab6565b60206040518083038186803b158015610fe557600080fd5b505afa158015610ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101d9190614637565b61393d90919063ffffffff16565b101561106c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106390614be8565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d633888860016040518563ffffffff1660e01b81526004016110ce9493929190614adf565b600060405180830381600087803b1580156110e857600080fd5b505af11580156110fc573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080600181111561119157611190615081565b5b81526020019081526020016000206040518061016001604052806009548152602001600060018111156111c7576111c6615081565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff021916908360018111156112a2576112a1615081565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546000338b8b8b8b8b8f8e8d6040516114199b9a99989796959493929190614e00565b60405180910390a1611437600160095461395390919063ffffffff16565b6009819055505050505050505050565b8561145181610809565b611490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148790614bc8565b60405180910390fd5b8461149a81610809565b6114d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d090614bc8565b60405180910390fd5b86611645600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338c6040518363ffffffff1660e01b815260040161153a929190614ab6565b60206040518083038186803b15801561155257600080fd5b505afa158015611566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158a9190614637565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8c336040518363ffffffff1660e01b81526004016115e7929190614ab6565b60206040518083038186803b1580156115ff57600080fd5b505afa158015611613573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116379190614637565b61393d90919063ffffffff16565b1015611686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167d90614be8565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338a8a60016040518563ffffffff1660e01b81526004016116e89493929190614adf565b600060405180830381600087803b15801561170257600080fd5b505af1158015611716573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001808111156117ab576117aa615081565b5b815260200190815260200160002060405180610160016040528060095481526020016001808111156117e0576117df615081565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff021916908360018111156118bb576118ba615081565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546001338b8b8b8b8b8f8e8d604051611a329b9a99989796959493929190614e00565b60405180910390a1611a50600160095461395390919063ffffffff16565b6009819055505050505050505050565b611a68613969565b611a7260006139e7565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611acb613ab3565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846001811115611b1f57611b1e615081565b5b81526020019081526020016000208281548110611b3f57611b3e6150df565b5b90600052602060002090600b020160405180610180016040529081600082015481526020016001820160009054906101000a900460ff166001811115611b8857611b87615081565b5b6001811115611b9a57611b99615081565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152602001600a8201548152505090509392505050565b611d08613b6a565b600080600090505b600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020805490508110156120ce5783600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000208281548110611e4857611e476150df565b5b90600052602060002090600a02016000015414156120bb57600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000208181548110611eff57611efe6150df565b5b90600052602060002090600a0201818160405180610160016040529081600082015481526020016001820160009054906101000a900460ff166001811115611f4a57611f49615081565b5b6001811115611f5c57611f5b615081565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152505091509250925050612109565b80806120c690615009565b915050611d10565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210090614ca8565b60405180910390fd5b94509492505050565b60095481565b6006818154811061212857600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b612174613969565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6121c0613969565b6121c982610809565b15612209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161220090614c28565b60405180910390fd5b600660405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b6122be613969565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6008602052826000526040600020602052816000526040600020818154811061232a57600080fd5b90600052602060002090600b020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff169080600a015490508c565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600181111561245c5761245b615081565b5b815260200190815260200160002080549050905092915050565b61247e613969565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760205283600052604060002060205282600052604060002060205281600052604060002081815481106124f657600080fd5b90600052602060002090600a02016000935093505050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b6125d5613b6a565b6000600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600181111561266857612667615081565b5b81526020019081526020016000208481548110612688576126876150df565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156126d1576126d0615081565b5b60018111156126e3576126e2615081565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581525050905080915050949350505050565b61284c613969565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156128bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128b390614ba8565b60405180910390fd5b6128c5816139e7565b50565b828483836128d884848484610b3f565b612917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161290e90614b68565b60405180910390fd5b8561292181610809565b612960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161295790614bc8565b60405180910390fd5b8561296a81610809565b6129a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129a090614bc8565b60405180910390fd5b60008a60018111156129be576129bd615081565b5b90506000600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000209050600081805490509050612a62613b6a565b600080600090505b83811015612c7c578e858281548110612a8657612a856150df565b5b90600052602060002090600a0201600001541415612c6957809150848181548110612ab457612ab36150df565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff166001811115612afd57612afc615081565b5b6001811115612b0f57612b0e615081565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250509250612c7c565b8080612c7490615009565b915050612a6a565b50600a60009054906101000a900460ff1615612e9d57816040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cfb90614c08565b60405180910390fd5b60006001811115612d1857612d17615081565b5b8f6001811115612d2b57612d2a615081565b5b1415612dd257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338460a001518560c0015160006040518563ffffffff1660e01b8152600401612d9b9493929190614adf565b600060405180830381600087803b158015612db557600080fd5b505af1158015612dc9573d6000803e3d6000fd5b50505050612e9c565b600180811115612de557612de4615081565b5b8f6001811115612df857612df7615081565b5b1415612e9b57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338460600151856080015160006040518563ffffffff1660e01b8152600401612e689493929190614adf565b600060405180830381600087803b158015612e8257600080fd5b505af1158015612e96573d6000803e3d6000fd5b505050505b5b5b60008190505b600184612eb09190614f37565b8110156130fd5784612ecc60018361395390919063ffffffff16565b81548110612edd57612edc6150df565b5b90600052602060002090600a0201858281548110612efe57612efd6150df565b5b90600052602060002090600a0201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115612f4e57612f4d615081565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff02191690831515021790555090505080806130f590615009565b915050612ea3565b508380548061310f5761310e6150b0565b5b60019003818190600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff02191690555050905583600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020908054613291929190613c1a565b507fa1cc643491754200d3eca5769e524a0fd00f9b0862b18d0da7d6e7277a83dfda8e83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c61014001516040516133009b9a99989796959493929190614e00565b60405180910390a1505050505050505050505050505050565b8360000151846020015185606001518660a0015161333984848484610b3f565b613378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161336f90614b68565b60405180910390fd5b6000600760008a6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a60200151600181111561341757613416615081565b5b60ff168152602001908152602001600020868154811061343a576134396150df565b5b90600052602060002090600a02016003015490506000600760008b6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015160018111156134ed576134ec615081565b5b60ff16815260200190815260200160002087815481106135105761350f6150df565b5b90600052602060002090600a020160050154905088600760008c6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c6020015160018111156135c2576135c1615081565b5b60ff16815260200190815260200160002088815481106135e5576135e46150df565b5b90600052602060002090600a02016003018190555087600760008c6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60200151600181111561369857613697615081565b5b60ff16815260200190815260200160002088815481106136bb576136ba6150df565b5b90600052602060002090600a02016005018190555081600760008c6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60200151600181111561376e5761376d615081565b5b60ff1681526020019081526020016000208881548110613791576137906150df565b5b90600052602060002090600a020160030154108015613880575080600760008c6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60200151600181111561384957613848615081565b5b60ff168152602001908152602001600020888154811061386c5761386b6150df565b5b90600052602060002090600a020160050154105b6138bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016138b690614c88565b60405180910390fd5b50505050505050505050565b80600a60006101000a81548160ff021916908315150217905550801515600a60009054906101000a900460ff1615151461393a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161393190614b88565b60405180910390fd5b50565b6000818361394b9190614f37565b905092915050565b600081836139619190614ee1565b905092915050565b613971613aab565b73ffffffffffffffffffffffffffffffffffffffff1661398f611a9a565b73ffffffffffffffffffffffffffffffffffffffff16146139e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016139dc90614c48565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518061018001604052806000815260200160006001811115613ada57613ad9615081565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081525090565b6040518061016001604052806000815260200160006001811115613b9157613b90615081565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090600a028101928215613e3c57600052602060002091600a0282015b82811115613e3b578282600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115613c9157613c90615081565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908315150217905550505091600a019190600a0190613c45565b5b509050613e499190613e4d565b5090565b5b80821115613f2d576000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff021916905550600a01613e4e565b5090565b600081359050613f4081615355565b92915050565b600081359050613f558161536c565b92915050565b600081359050613f6a81615383565b92915050565b60006101608284031215613f8757613f8661513d565b5b613f92610160614eab565b90506000613fa28482850161419e565b6000830152506020613fb684828501613f5b565b6020830152506040613fca84828501613f31565b6040830152506060613fde84828501613f31565b6060830152506080613ff28482850161419e565b60808301525060a061400684828501613f31565b60a08301525060c061401a8482850161419e565b60c08301525060e061402e8482850161419e565b60e0830152506101006140438482850161419e565b610100830152506101206140598482850161419e565b6101208301525061014061406f84828501613f46565b6101408301525092915050565b600061018082840312156140935761409261513d565b5b61409e610180614eab565b905060006140ae8482850161419e565b60008301525060206140c284828501613f5b565b60208301525060406140d684828501613f31565b60408301525060606140ea84828501613f31565b60608301525060806140fe84828501613f31565b60808301525060a06141128482850161419e565b60a08301525060c06141268482850161419e565b60c08301525060e061413a8482850161419e565b60e08301525061010061414f8482850161419e565b610100830152506101206141658482850161419e565b6101208301525061014061417b84828501613f46565b610140830152506101606141918482850161419e565b6101608301525092915050565b6000813590506141ad81615393565b92915050565b6000815190506141c281615393565b92915050565b6000602082840312156141de576141dd615142565b5b60006141ec84828501613f31565b91505092915050565b6000806000806080858703121561420f5761420e615142565b5b600061421d87828801613f31565b945050602061422e87828801613f31565b935050604061423f8782880161419e565b925050606061425087828801613f5b565b91505092959194509250565b6000806000806080858703121561427657614275615142565b5b600061428487828801613f31565b945050602061429587828801613f31565b93505060406142a68782880161419e565b92505060606142b78782880161419e565b91505092959194509250565b600080604083850312156142da576142d9615142565b5b60006142e885828601613f31565b92505060206142f985828601613f5b565b9150509250929050565b60008060006060848603121561431c5761431b615142565b5b600061432a86828701613f31565b935050602061433b86828701613f5b565b925050604061434c8682870161419e565b9150509250925092565b6000806040838503121561436d5761436c615142565b5b600061437b85828601613f31565b925050602061438c8582860161419e565b9150509250929050565b60008060008060008060c087890312156143b3576143b2615142565b5b60006143c189828a01613f31565b96505060206143d289828a0161419e565b95505060406143e389828a01613f31565b94505060606143f489828a0161419e565b935050608061440589828a0161419e565b92505060a061441689828a01613f46565b9150509295509295509295565b60008060006060848603121561443c5761443b615142565b5b600061444a86828701613f31565b935050602061445b8682870161419e565b925050604061446c8682870161419e565b9150509250925092565b60006020828403121561448c5761448b615142565b5b600061449a84828501613f46565b91505092915050565b6000806000606084860312156144bc576144bb615142565b5b60006144ca86828701613f5b565b93505060206144db86828701613f31565b92505060406144ec86828701613f31565b9150509250925092565b600080600080608085870312156145105761450f615142565b5b600061451e87828801613f5b565b945050602061452f8782880161419e565b935050604061454087828801613f31565b925050606061455187828801613f31565b91505092959194509250565b6000806000806101c0858703121561457857614577615142565b5b600061458687828801613f70565b9450506101606145988782880161419e565b9350506101806145aa8782880161419e565b9250506101a06145bc8782880161419e565b91505092959194509250565b6000806101a083850312156145e0576145df615142565b5b60006145ee8582860161407c565b9250506101806146008582860161419e565b9150509250929050565b6000602082840312156146205761461f615142565b5b600061462e8482850161419e565b91505092915050565b60006020828403121561464d5761464c615142565b5b600061465b848285016141b3565b91505092915050565b6000806000806080858703121561467e5761467d615142565b5b600061468c8782880161419e565b945050602061469d87828801613f5b565b93505060406146ae87828801613f31565b92505060606146bf87828801613f31565b91505092959194509250565b6146d481614f6b565b82525050565b6146e381614f6b565b82525050565b6146f281614f7d565b82525050565b61470181614f7d565b82525050565b61471081614fc6565b82525050565b61471f81614fc6565b82525050565b6000614732601083614ed0565b915061473d82615158565b602082019050919050565b6000614755601783614ed0565b915061476082615181565b602082019050919050565b6000614778602683614ed0565b9150614783826151aa565b604082019050919050565b600061479b601883614ed0565b91506147a6826151f9565b602082019050919050565b60006147be601283614ed0565b91506147c982615222565b602082019050919050565b60006147e1600983614ed0565b91506147ec8261524b565b602082019050919050565b6000614804601683614ed0565b915061480f82615274565b602082019050919050565b6000614827602083614ed0565b91506148328261529d565b602082019050919050565b600061484a601383614ed0565b9150614855826152c6565b602082019050919050565b600061486d601a83614ed0565b9150614878826152ef565b602082019050919050565b6000614890600f83614ed0565b915061489b82615318565b602082019050919050565b610160820160008201516148bd6000850182614a7d565b5060208201516148d06020850182614707565b5060408201516148e360408501826146cb565b5060608201516148f660608501826146cb565b5060808201516149096080850182614a7d565b5060a082015161491c60a08501826146cb565b5060c082015161492f60c0850182614a7d565b5060e082015161494260e0850182614a7d565b50610100820151614957610100850182614a7d565b5061012082015161496c610120850182614a7d565b506101408201516149816101408501826146e9565b50505050565b6101808201600082015161499e6000850182614a7d565b5060208201516149b16020850182614707565b5060408201516149c460408501826146cb565b5060608201516149d760608501826146cb565b5060808201516149ea60808501826146cb565b5060a08201516149fd60a0850182614a7d565b5060c0820151614a1060c0850182614a7d565b5060e0820151614a2360e0850182614a7d565b50610100820151614a38610100850182614a7d565b50610120820151614a4d610120850182614a7d565b50610140820151614a626101408501826146e9565b50610160820151614a77610160850182614a7d565b50505050565b614a8681614fbc565b82525050565b614a9581614fbc565b82525050565b6000602082019050614ab060008301846146da565b92915050565b6000604082019050614acb60008301856146da565b614ad860208301846146da565b9392505050565b6000608082019050614af460008301876146da565b614b0160208301866146da565b614b0e6040830185614a8c565b614b1b60608301846146f8565b95945050505050565b6000604082019050614b3960008301856146da565b614b466020830184614a8c565b9392505050565b6000602082019050614b6260008301846146f8565b92915050565b60006020820190508181036000830152614b8181614725565b9050919050565b60006020820190508181036000830152614ba181614748565b9050919050565b60006020820190508181036000830152614bc18161476b565b9050919050565b60006020820190508181036000830152614be18161478e565b9050919050565b60006020820190508181036000830152614c01816147b1565b9050919050565b60006020820190508181036000830152614c21816147d4565b9050919050565b60006020820190508181036000830152614c41816147f7565b9050919050565b60006020820190508181036000830152614c618161481a565b9050919050565b60006020820190508181036000830152614c818161483d565b9050919050565b60006020820190508181036000830152614ca181614860565b9050919050565b60006020820190508181036000830152614cc181614883565b9050919050565b600061016082019050614cde60008301846148a6565b92915050565b600061018082019050614cfa60008301856148a6565b614d08610160830184614a8c565b9392505050565b600061018082019050614d256000830184614987565b92915050565b6000602082019050614d406000830184614a8c565b92915050565b600061018082019050614d5c600083018f614a8c565b614d69602083018e614716565b614d76604083018d6146da565b614d83606083018c6146da565b614d90608083018b6146da565b614d9d60a083018a614a8c565b614daa60c0830189614a8c565b614db760e0830188614a8c565b614dc5610100830187614a8c565b614dd3610120830186614a8c565b614de16101408301856146f8565b614def610160830184614a8c565b9d9c50505050505050505050505050565b600061016082019050614e16600083018e614a8c565b614e23602083018d614716565b614e30604083018c6146da565b614e3d606083018b6146da565b614e4a608083018a614a8c565b614e5760a08301896146da565b614e6460c0830188614a8c565b614e7160e0830187614a8c565b614e7f610100830186614a8c565b614e8d610120830185614a8c565b614e9b6101408301846146f8565b9c9b505050505050505050505050565b6000614eb5614ec6565b9050614ec18282614fd8565b919050565b6000604051905090565b600082825260208201905092915050565b6000614eec82614fbc565b9150614ef783614fbc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115614f2c57614f2b615052565b5b828201905092915050565b6000614f4282614fbc565b9150614f4d83614fbc565b925082821015614f6057614f5f615052565b5b828203905092915050565b6000614f7682614f9c565b9050919050565b60008115159050919050565b6000819050614f9782615341565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000614fd182614f89565b9050919050565b614fe182615147565b810181811067ffffffffffffffff8211171561500057614fff61510e565b5b80604052505050565b600061501482614fbc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561504757615046615052565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f496e76616c6964204f7264657220494400000000000000000000000000000000600082015250565b7f496e76616c696420735f69734d616e75616c20626f6f6c000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20756e617661696c61626c6520696e204445580000000000000000600082015250565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b7f546f6b656e20616c726561647920766572696669656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f546f6b656e206e6f7420617661696c61626c6500000000000000000000000000600082015250565b7f4f72646572206e6f7420757064617465642070726f7065726c79000000000000600082015250565b7f4f72646572206e6f7420466f756e640000000000000000000000000000000000600082015250565b6002811061535257615351615081565b5b50565b61535e81614f6b565b811461536957600080fd5b50565b61537581614f7d565b811461538057600080fd5b50565b6002811061539057600080fd5b50565b61539c81614fbc565b81146153a757600080fd5b5056fea26469706673582212205bf47278ba89e11389180ae80848a9d75760152effec502e5d221ed9dd2177d764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5713 CODESIZE SUB DUP1 PUSH3 0x5713 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x274 JUMP JUMPDEST PUSH3 0xC5 PUSH3 0xB9 PUSH3 0x191 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x199 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x323 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x26E DUP2 PUSH3 0x309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x290 JUMPI PUSH3 0x28F PUSH3 0x304 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2A0 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2B3 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2C6 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2DD DUP3 PUSH3 0x2E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x314 DUP2 PUSH3 0x2D0 JUMP JUMPDEST DUP2 EQ PUSH3 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x53E0 DUP1 PUSH3 0x333 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C07CE26 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xDAFBFE6A GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xF90EF4F2 EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xFB310C9B EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xFF09CDFA EQ PUSH2 0x579 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xDAFBFE6A EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xE4C3C7CD EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xEA42F349 EQ PUSH2 0x4F5 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xAF81C5B9 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xBD8098EC EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xC3364BE4 EQ PUSH2 0x46F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x9C07CE26 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x9EAD7222 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x3E0 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x62C09CFA GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x7BF1A627 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x8F101B0E EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x92E43D3A EQ PUSH2 0x360 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x62C09CFA EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x6F4E410B EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EA JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xAF4E4F0 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1027B219 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x14ECA9DC EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x1CB67FB3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x1F69565F EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x429D24B2 EQ PUSH2 0x282 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x45C8 JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x4B4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x44A3 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x4D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x4D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x4664 JUMP JUMPDEST PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x4B4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x4396 JUMP JUMPDEST PUSH2 0xE2D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x4396 JUMP JUMPDEST PUSH2 0x1447 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F2 PUSH2 0x1A60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FC PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x4A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x4A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x4303 JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x4D0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x425C JUMP JUMPDEST PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP3 SWAP2 SWAP1 PUSH2 0x4CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH2 0x2112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x4D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x460A JUMP JUMPDEST PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP3 SWAP2 SWAP1 PUSH2 0x4B24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0x216C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x4356 JUMP JUMPDEST PUSH2 0x21B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0x22B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x4423 JUMP JUMPDEST PUSH2 0x2302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x466 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x42C3 JUMP JUMPDEST PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x4D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0x2476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x425C JUMP JUMPDEST PUSH2 0x24C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x41F5 JUMP JUMPDEST PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x4CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0x2844 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x44F6 JUMP JUMPDEST PUSH2 0x28C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x577 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x455D JUMP JUMPDEST PUSH2 0x3319 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x593 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x4476 JUMP JUMPDEST PUSH2 0x38CB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x648 JUMPI PUSH2 0x647 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE POP POP PUSH32 0x78F8097F697FC6B58D127F987A03E83DE8076BDC75199661D49326415098D60A DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD DUP14 PUSH2 0x160 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7FD SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x8B4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x849 JUMPI PUSH2 0x848 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x8BA JUMP JUMPDEST DUP1 DUP1 PUSH2 0x8AC SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x811 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x952 JUMPI PUSH2 0x951 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xAFE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA6F JUMPI PUSH2 0xA6E PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAEB JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAD1 JUMPI PUSH2 0xAD0 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0xB3A JUMP JUMPDEST DUP1 DUP1 PUSH2 0xAF6 SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA37 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP1 PUSH2 0x4C68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD2 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xDC8 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC54 JUMPI PUSH2 0xC53 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC66 JUMPI PUSH2 0xC65 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC01 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xE1E JUMPI DUP7 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDEE JUMPI PUSH2 0xDED PUSH2 0x50DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0xE0B JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xE25 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xE16 SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDD1 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0xE37 DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0xE76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6D SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0xE80 DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB6 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x102B PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP3 SWAP2 SWAP1 PUSH2 0x4AB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF70 SWAP2 SWAP1 PUSH2 0x4637 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP11 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCD SWAP3 SWAP2 SWAP1 PUSH2 0x4AB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x4637 JUMP JUMPDEST PUSH2 0x393D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1063 SWAP1 PUSH2 0x4BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1191 JUMPI PUSH2 0x1190 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11C7 JUMPI PUSH2 0x11C6 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12A2 JUMPI PUSH2 0x12A1 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x0 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1419 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1437 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x3953 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x1451 DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1487 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x149A DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D0 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH2 0x1645 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153A SWAP3 SWAP2 SWAP1 PUSH2 0x4AB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1566 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x158A SWAP2 SWAP1 PUSH2 0x4637 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP13 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E7 SWAP3 SWAP2 SWAP1 PUSH2 0x4AB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1613 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1637 SWAP2 SWAP1 PUSH2 0x4637 JUMP JUMPDEST PUSH2 0x393D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167D SWAP1 PUSH2 0x4BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP11 DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1716 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x17AB JUMPI PUSH2 0x17AA PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x17E0 JUMPI PUSH2 0x17DF PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18BB JUMPI PUSH2 0x18BA PUSH2 0x5081 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x1 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1A32 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1A50 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x3953 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A68 PUSH2 0x3969 JUMP JUMPDEST PUSH2 0x1A72 PUSH1 0x0 PUSH2 0x39E7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1ACB PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B1F JUMPI PUSH2 0x1B1E PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B3F JUMPI PUSH2 0x1B3E PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B88 JUMPI PUSH2 0x1B87 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B9A JUMPI PUSH2 0x1B99 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1D08 PUSH2 0x3B6A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x20CE JUMPI DUP4 PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E48 JUMPI PUSH2 0x1E47 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x20BB JUMPI PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1EFF JUMPI PUSH2 0x1EFE PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP2 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F4A JUMPI PUSH2 0x1F49 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F5C JUMPI PUSH2 0x1F5B PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP2 POP SWAP3 POP SWAP3 POP POP PUSH2 0x2109 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x20C6 SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2100 SWAP1 PUSH2 0x4CA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x2174 PUSH2 0x3969 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x21C0 PUSH2 0x3969 JUMP JUMPDEST PUSH2 0x21C9 DUP3 PUSH2 0x809 JUMP JUMPDEST ISZERO PUSH2 0x2209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2200 SWAP1 PUSH2 0x4C28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x22BE PUSH2 0x3969 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x232A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x245C JUMPI PUSH2 0x245B PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x247E PUSH2 0x3969 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x24F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH2 0x25D5 PUSH2 0x3B6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2668 JUMPI PUSH2 0x2667 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2688 JUMPI PUSH2 0x2687 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x26D1 JUMPI PUSH2 0x26D0 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x26E3 JUMPI PUSH2 0x26E2 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x284C PUSH2 0x3969 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x28BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28B3 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28C5 DUP2 PUSH2 0x39E7 JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP5 DUP4 DUP4 PUSH2 0x28D8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x2917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x290E SWAP1 PUSH2 0x4B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x2921 DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x2960 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2957 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x296A DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x29A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A0 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29BE JUMPI PUSH2 0x29BD PUSH2 0x5081 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x2A62 PUSH2 0x3B6A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C7C JUMPI DUP15 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A86 JUMPI PUSH2 0x2A85 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x2C69 JUMPI DUP1 SWAP2 POP DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AB4 JUMPI PUSH2 0x2AB3 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2AFD JUMPI PUSH2 0x2AFC PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B0F JUMPI PUSH2 0x2B0E PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH2 0x2C7C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2C74 SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A6A JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E9D JUMPI DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CFB SWAP1 PUSH2 0x4C08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D18 JUMPI PUSH2 0x2D17 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D2B JUMPI PUSH2 0x2D2A PUSH2 0x5081 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2DD2 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2E9C JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x2DE5 JUMPI PUSH2 0x2DE4 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2DF8 JUMPI PUSH2 0x2DF7 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2E9B JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E68 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0x2EB0 SWAP2 SWAP1 PUSH2 0x4F37 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x30FD JUMPI DUP5 PUSH2 0x2ECC PUSH1 0x1 DUP4 PUSH2 0x3953 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2EDD JUMPI PUSH2 0x2EDC PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2EFE JUMPI PUSH2 0x2EFD PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2F4E JUMPI PUSH2 0x2F4D PUSH2 0x5081 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP1 PUSH2 0x30F5 SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2EA3 JUMP JUMPDEST POP DUP4 DUP1 SLOAD DUP1 PUSH2 0x310F JUMPI PUSH2 0x310E PUSH2 0x50B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x7 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0x3291 SWAP3 SWAP2 SWAP1 PUSH2 0x3C1A JUMP JUMPDEST POP PUSH32 0xA1CC643491754200D3ECA5769E524A0FD00F9B0862B18D0DA7D6E7277A83DFDA DUP15 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x3300 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0xA0 ADD MLOAD PUSH2 0x3339 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x3378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x336F SWAP1 PUSH2 0x4B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP11 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3417 JUMPI PUSH2 0x3416 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x343A JUMPI PUSH2 0x3439 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP12 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x34ED JUMPI PUSH2 0x34EC PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x3510 JUMPI PUSH2 0x350F PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x5 ADD SLOAD SWAP1 POP DUP9 PUSH1 0x7 PUSH1 0x0 DUP13 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x35C2 JUMPI PUSH2 0x35C1 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x35E5 JUMPI PUSH2 0x35E4 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x7 PUSH1 0x0 DUP13 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3698 JUMPI PUSH2 0x3697 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x36BB JUMPI PUSH2 0x36BA PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP13 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x376E JUMPI PUSH2 0x376D PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x3791 JUMPI PUSH2 0x3790 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x3 ADD SLOAD LT DUP1 ISZERO PUSH2 0x3880 JUMPI POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP13 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3849 JUMPI PUSH2 0x3848 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x386C JUMPI PUSH2 0x386B PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x5 ADD SLOAD LT JUMPDEST PUSH2 0x38BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38B6 SWAP1 PUSH2 0x4C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x393A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3931 SWAP1 PUSH2 0x4B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x394B SWAP2 SWAP1 PUSH2 0x4F37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3961 SWAP2 SWAP1 PUSH2 0x4EE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3971 PUSH2 0x3AAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x398F PUSH2 0x1A9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39DC SWAP1 PUSH2 0x4C48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3ADA JUMPI PUSH2 0x3AD9 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3B91 JUMPI PUSH2 0x3B90 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3E3C JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xA MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3E3B JUMPI DUP3 DUP3 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3C91 JUMPI PUSH2 0x3C90 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP SWAP2 PUSH1 0xA ADD SWAP2 SWAP1 PUSH1 0xA ADD SWAP1 PUSH2 0x3C45 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3E49 SWAP2 SWAP1 PUSH2 0x3E4D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3F2D JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0xA ADD PUSH2 0x3E4E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F40 DUP2 PUSH2 0x5355 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F55 DUP2 PUSH2 0x536C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F6A DUP2 PUSH2 0x5383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F87 JUMPI PUSH2 0x3F86 PUSH2 0x513D JUMP JUMPDEST JUMPDEST PUSH2 0x3F92 PUSH2 0x160 PUSH2 0x4EAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3FA2 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x3FB6 DUP5 DUP3 DUP6 ADD PUSH2 0x3F5B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x3FCA DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x3FDE DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x3FF2 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x4006 DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x401A DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x402E DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x4043 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x4059 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x406F DUP5 DUP3 DUP6 ADD PUSH2 0x3F46 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4093 JUMPI PUSH2 0x4092 PUSH2 0x513D JUMP JUMPDEST JUMPDEST PUSH2 0x409E PUSH2 0x180 PUSH2 0x4EAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40AE DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x40C2 DUP5 DUP3 DUP6 ADD PUSH2 0x3F5B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x40D6 DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x40EA DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x40FE DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x4112 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x4126 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x413A DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x414F DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x4165 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x417B DUP5 DUP3 DUP6 ADD PUSH2 0x3F46 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0x4191 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41AD DUP2 PUSH2 0x5393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x41C2 DUP2 PUSH2 0x5393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41DE JUMPI PUSH2 0x41DD PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41EC DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x420F JUMPI PUSH2 0x420E PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x421D DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x422E DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x423F DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4250 DUP8 DUP3 DUP9 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4276 JUMPI PUSH2 0x4275 PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4284 DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4295 DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42A6 DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x42B7 DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42DA JUMPI PUSH2 0x42D9 PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42E8 DUP6 DUP3 DUP7 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x42F9 DUP6 DUP3 DUP7 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x431C JUMPI PUSH2 0x431B PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x432A DUP7 DUP3 DUP8 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x433B DUP7 DUP3 DUP8 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x434C DUP7 DUP3 DUP8 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x436D JUMPI PUSH2 0x436C PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x437B DUP6 DUP3 DUP7 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x438C DUP6 DUP3 DUP7 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x43B3 JUMPI PUSH2 0x43B2 PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43C1 DUP10 DUP3 DUP11 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x43D2 DUP10 DUP3 DUP11 ADD PUSH2 0x419E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x43E3 DUP10 DUP3 DUP11 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x43F4 DUP10 DUP3 DUP11 ADD PUSH2 0x419E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x4405 DUP10 DUP3 DUP11 ADD PUSH2 0x419E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x4416 DUP10 DUP3 DUP11 ADD PUSH2 0x3F46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x443C JUMPI PUSH2 0x443B PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x444A DUP7 DUP3 DUP8 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x445B DUP7 DUP3 DUP8 ADD PUSH2 0x419E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x446C DUP7 DUP3 DUP8 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x448C JUMPI PUSH2 0x448B PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x449A DUP5 DUP3 DUP6 ADD PUSH2 0x3F46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x44BC JUMPI PUSH2 0x44BB PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44CA DUP7 DUP3 DUP8 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x44DB DUP7 DUP3 DUP8 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x44EC DUP7 DUP3 DUP8 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4510 JUMPI PUSH2 0x450F PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x451E DUP8 DUP3 DUP9 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x452F DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4540 DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4551 DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4578 JUMPI PUSH2 0x4577 PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4586 DUP8 DUP3 DUP9 ADD PUSH2 0x3F70 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x160 PUSH2 0x4598 DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP4 POP POP PUSH2 0x180 PUSH2 0x45AA DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1A0 PUSH2 0x45BC DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45E0 JUMPI PUSH2 0x45DF PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45EE DUP6 DUP3 DUP7 ADD PUSH2 0x407C JUMP JUMPDEST SWAP3 POP POP PUSH2 0x180 PUSH2 0x4600 DUP6 DUP3 DUP7 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4620 JUMPI PUSH2 0x461F PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x462E DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x464D JUMPI PUSH2 0x464C PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x465B DUP5 DUP3 DUP6 ADD PUSH2 0x41B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x467E JUMPI PUSH2 0x467D PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x468C DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x469D DUP8 DUP3 DUP9 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x46AE DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x46BF DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x46D4 DUP2 PUSH2 0x4F6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x46E3 DUP2 PUSH2 0x4F6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x46F2 DUP2 PUSH2 0x4F7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4701 DUP2 PUSH2 0x4F7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4710 DUP2 PUSH2 0x4FC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x471F DUP2 PUSH2 0x4FC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4732 PUSH1 0x10 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x473D DUP3 PUSH2 0x5158 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4755 PUSH1 0x17 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4760 DUP3 PUSH2 0x5181 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4778 PUSH1 0x26 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4783 DUP3 PUSH2 0x51AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479B PUSH1 0x18 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x47A6 DUP3 PUSH2 0x51F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47BE PUSH1 0x12 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x47C9 DUP3 PUSH2 0x5222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47E1 PUSH1 0x9 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x47EC DUP3 PUSH2 0x524B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4804 PUSH1 0x16 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x480F DUP3 PUSH2 0x5274 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4827 PUSH1 0x20 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4832 DUP3 PUSH2 0x529D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484A PUSH1 0x13 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4855 DUP3 PUSH2 0x52C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x486D PUSH1 0x1A DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4878 DUP3 PUSH2 0x52EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4890 PUSH1 0xF DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x489B DUP3 PUSH2 0x5318 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x48BD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x48D0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4707 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x48E3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x48F6 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4909 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x491C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x492F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4942 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x4957 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x496C PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x4981 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x46E9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x180 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x499E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x49B1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4707 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x49C4 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x49D7 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x49EA PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x49FD PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x4A10 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4A23 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x4A38 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x4A4D PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x4A62 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x46E9 JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x4A77 PUSH2 0x160 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4A86 DUP2 PUSH2 0x4FBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4A95 DUP2 PUSH2 0x4FBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x46DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4ACB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4AD8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x46DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4AF4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4B01 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4B0E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4B1B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x46F8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4B39 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4B46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B62 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x46F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B81 DUP2 PUSH2 0x4725 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BA1 DUP2 PUSH2 0x4748 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BC1 DUP2 PUSH2 0x476B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BE1 DUP2 PUSH2 0x478E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C01 DUP2 PUSH2 0x47B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C21 DUP2 PUSH2 0x47D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C41 DUP2 PUSH2 0x47F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C61 DUP2 PUSH2 0x481A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C81 DUP2 PUSH2 0x483D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CA1 DUP2 PUSH2 0x4860 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CC1 DUP2 PUSH2 0x4883 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x4CDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x48A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x4CFA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x48A6 JUMP JUMPDEST PUSH2 0x4D08 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x4A8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x4D25 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x4D5C PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4D69 PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x4716 JUMP JUMPDEST PUSH2 0x4D76 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4D83 PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4D90 PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4D9D PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4DAA PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4DB7 PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4DC5 PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4DD3 PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4DE1 PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x46F8 JUMP JUMPDEST PUSH2 0x4DEF PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x4A8C JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x4E16 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E23 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x4716 JUMP JUMPDEST PUSH2 0x4E30 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4E3D PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4E4A PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E57 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4E64 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E71 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E7F PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E8D PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E9B PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x46F8 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB5 PUSH2 0x4EC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x4EC1 DUP3 DUP3 PUSH2 0x4FD8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EEC DUP3 PUSH2 0x4FBC JUMP JUMPDEST SWAP2 POP PUSH2 0x4EF7 DUP4 PUSH2 0x4FBC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4F2C JUMPI PUSH2 0x4F2B PUSH2 0x5052 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F42 DUP3 PUSH2 0x4FBC JUMP JUMPDEST SWAP2 POP PUSH2 0x4F4D DUP4 PUSH2 0x4FBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4F60 JUMPI PUSH2 0x4F5F PUSH2 0x5052 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F76 DUP3 PUSH2 0x4F9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4F97 DUP3 PUSH2 0x5341 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FD1 DUP3 PUSH2 0x4F89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FE1 DUP3 PUSH2 0x5147 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5000 JUMPI PUSH2 0x4FFF PUSH2 0x510E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5014 DUP3 PUSH2 0x4FBC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x5047 JUMPI PUSH2 0x5046 PUSH2 0x5052 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204F7264657220494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420735F69734D616E75616C20626F6F6C000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20756E617661696C61626C6520696E204445580000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742046756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920766572696669656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420617661696C61626C6500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F72646572206E6F7420757064617465642070726F7065726C79000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F72646572206E6F7420466F756E640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x5352 JUMPI PUSH2 0x5351 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x535E DUP2 PUSH2 0x4F6B JUMP JUMPDEST DUP2 EQ PUSH2 0x5369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5375 DUP2 PUSH2 0x4F7D JUMP JUMPDEST DUP2 EQ PUSH2 0x5380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x5390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x539C DUP2 PUSH2 0x4FBC JUMP JUMPDEST DUP2 EQ PUSH2 0x53A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST DELEGATECALL PUSH19 0x78BA89E11389180AE80848A9D75760152EFFEC POP 0x2E 0x5D 0x22 0x1E 0xD9 0xDD 0x21 PUSH24 0xD764736F6C63430008070033000000000000000000000000 ","sourceMap":"411:13124:8:-:0;;;620:8;601:27;;669:1;635:36;;;;;;;;;;;;;;;;;;;;1072:1;1045:28;;1106:4;1080:30;;;;;;;;;;;;;;;;;;;;3422:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;3516:7:8;3500:6;;:24;;;;;;;;;;;;;;;;;;3561:5;3535:11;;:32;;;;;;;;;;;;;;;;;;3606:13;3578:12;;:42;;;;;;;;;;;;;;;;;;3422:206;;;411:13124;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:17:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:119;;;315:79;;:::i;:::-;277:119;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;156:663;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1008:126;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;411:13124:8:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_452":{"entryPoint":14697,"id":452,"parameterSlots":0,"returnSlots":0},"@_msgSender_625":{"entryPoint":15019,"id":625,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":14823,"id":509,"parameterSlots":1,"returnSlots":0},"@addToken_2636":{"entryPoint":8632,"id":2636,"parameterSlots":2,"returnSlots":0},"@add_811":{"entryPoint":14675,"id":811,"parameterSlots":2,"returnSlots":1},"@cancelOrder_2176":{"entryPoint":10440,"id":2176,"parameterSlots":4,"returnSlots":0},"@createLimitBuyOrder_1872":{"entryPoint":3629,"id":1872,"parameterSlots":6,"returnSlots":0},"@createLimitSellOrder_1976":{"entryPoint":5191,"id":1976,"parameterSlots":6,"returnSlots":0},"@ethToken_1567":{"entryPoint":6772,"id":1567,"parameterSlots":0,"returnSlots":0},"@getFilledOrderLength_2460":{"entryPoint":9222,"id":2460,"parameterSlots":2,"returnSlots":1},"@getFilledOrder_2485":{"entryPoint":6851,"id":2485,"parameterSlots":3,"returnSlots":1},"@getOrderFromArray_2553":{"entryPoint":7424,"id":2553,"parameterSlots":4,"returnSlots":2},"@getOrderLength_2404":{"entryPoint":2239,"id":2404,"parameterSlots":3,"returnSlots":1},"@getOrder_2439":{"entryPoint":9677,"id":2439,"parameterSlots":4,"returnSlots":1},"@getTokenInfo_2706":{"entryPoint":2607,"id":2706,"parameterSlots":1,"returnSlots":1},"@isVerifiedToken_2668":{"entryPoint":2057,"id":2668,"parameterSlots":1,"returnSlots":1},"@orderExists_2609":{"entryPoint":2879,"id":2609,"parameterSlots":4,"returnSlots":1},"@orderStruct_1632":{"entryPoint":2413,"id":1632,"parameterSlots":0,"returnSlots":0},"@owner_438":{"entryPoint":6810,"id":438,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_466":{"entryPoint":6752,"id":466,"parameterSlots":0,"returnSlots":0},"@s_filledOrders_1589":{"entryPoint":8962,"id":1589,"parameterSlots":0,"returnSlots":0},"@s_orderBook_1581":{"entryPoint":9410,"id":1581,"parameterSlots":0,"returnSlots":0},"@s_orderId_1592":{"entryPoint":8466,"id":1592,"parameterSlots":0,"returnSlots":0},"@setManual_2379":{"entryPoint":14539,"id":2379,"parameterSlots":1,"returnSlots":0},"@setPriceCheckerAddress_2734":{"entryPoint":8886,"id":2734,"parameterSlots":1,"returnSlots":0},"@setTradingFees_2748":{"entryPoint":9334,"id":2748,"parameterSlots":1,"returnSlots":0},"@setWalletAddress_2720":{"entryPoint":8556,"id":2720,"parameterSlots":1,"returnSlots":0},"@sub_826":{"entryPoint":14653,"id":826,"parameterSlots":2,"returnSlots":1},"@tokenList_1571":{"entryPoint":8472,"id":1571,"parameterSlots":0,"returnSlots":0},"@transferOwnership_489":{"entryPoint":10308,"id":489,"parameterSlots":1,"returnSlots":0},"@updateFilledOrders_2222":{"entryPoint":1429,"id":2222,"parameterSlots":2,"returnSlots":0},"@updateOrder_2362":{"entryPoint":13081,"id":2362,"parameterSlots":4,"returnSlots":0},"abi_decode_t_address":{"entryPoint":16177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":16198,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_Side_$1661":{"entryPoint":16219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$__Order_$1629_memory_ptr":{"entryPoint":16240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$__filledOrder_$1658_memory_ptr":{"entryPoint":16508,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":16798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":16819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":16840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_enum$_Side_$1661":{"entryPoint":16885,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256":{"entryPoint":16988,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_enum$_Side_$1661":{"entryPoint":17091,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_enum$_Side_$1661t_uint256":{"entryPoint":17155,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":17238,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool":{"entryPoint":17302,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":17443,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool":{"entryPoint":17526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_Side_$1661t_addresst_address":{"entryPoint":17571,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_enum$_Side_$1661t_uint256t_addresst_address":{"entryPoint":17654,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_struct$__Order_$1629_memory_ptrt_uint256t_uint256t_uint256":{"entryPoint":17757,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_struct$__filledOrder_$1658_memory_ptrt_uint256":{"entryPoint":17864,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":17930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":17975,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_enum$_Side_$1661t_addresst_address":{"entryPoint":18020,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address":{"entryPoint":18123,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":18138,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":18153,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":18168,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$1661_to_t_uint8":{"entryPoint":18183,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack":{"entryPoint":18198,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack":{"entryPoint":18213,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f_to_t_string_memory_ptr_fromStack":{"entryPoint":18248,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":18283,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack":{"entryPoint":18318,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack":{"entryPoint":18353,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack":{"entryPoint":18388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack":{"entryPoint":18423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":18458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e_to_t_string_memory_ptr_fromStack":{"entryPoint":18493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e_to_t_string_memory_ptr_fromStack":{"entryPoint":18528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6_to_t_string_memory_ptr_fromStack":{"entryPoint":18563,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack":{"entryPoint":18598,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$__filledOrder_$1658_memory_ptr_to_t_struct$__filledOrder_$1658_memory_ptr_fromStack":{"entryPoint":18823,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":19069,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":19084,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":19099,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":19126,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed":{"entryPoint":19167,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":19236,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":19277,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19304,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19336,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19368,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19432,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19464,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19496,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19560,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19592,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19624,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$__Order_$1629_memory_ptr__to_t_struct$__Order_$1629_memory_ptr__fromStack_reversed":{"entryPoint":19656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$__Order_$1629_memory_ptr_t_uint256__to_t_struct$__Order_$1629_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":19684,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_struct$__filledOrder_$1658_memory_ptr__to_t_struct$__filledOrder_$1658_memory_ptr__fromStack_reversed":{"entryPoint":19727,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":19755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_enum$_Side_$1661_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":19782,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_tuple_t_uint256_t_enum$_Side_$1661_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":19968,"id":null,"parameterSlots":12,"returnSlots":1},"allocate_memory":{"entryPoint":20139,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":20166,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":20176,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":20193,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":20279,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":20331,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":20349,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Side_$1661":{"entryPoint":20361,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":20380,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":20412,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Side_$1661_to_t_uint8":{"entryPoint":20422,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":20440,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":20489,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":20562,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":20609,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":20656,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":20703,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":20750,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":20797,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":20802,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":20807,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2":{"entryPoint":20824,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f":{"entryPoint":20865,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":20906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3":{"entryPoint":20985,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092":{"entryPoint":21026,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4":{"entryPoint":21067,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430":{"entryPoint":21108,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":21149,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e":{"entryPoint":21190,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e":{"entryPoint":21231,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6":{"entryPoint":21272,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Side_$1661":{"entryPoint":21313,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":21333,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":21356,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_Side_$1661":{"entryPoint":21379,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":21395,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:41360:17","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:17","statements":[{"nodeType":"YulAssignment","src":"69:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:17"},"nodeType":"YulFunctionCall","src":"78:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:17"},"nodeType":"YulFunctionCall","src":"107:33:17"},"nodeType":"YulExpressionStatement","src":"107:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:17","type":""}],"src":"7:139:17"},{"body":{"nodeType":"YulBlock","src":"201:84:17","statements":[{"nodeType":"YulAssignment","src":"211:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"233:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:17"},"nodeType":"YulFunctionCall","src":"220:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"211:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"249:23:17"},"nodeType":"YulFunctionCall","src":"249:30:17"},"nodeType":"YulExpressionStatement","src":"249:30:17"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"187:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"195:5:17","type":""}],"src":"152:133:17"},{"body":{"nodeType":"YulBlock","src":"352:96:17","statements":[{"nodeType":"YulAssignment","src":"362:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"384:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"371:12:17"},"nodeType":"YulFunctionCall","src":"371:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"362:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"436:5:17"}],"functionName":{"name":"validator_revert_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"400:35:17"},"nodeType":"YulFunctionCall","src":"400:42:17"},"nodeType":"YulExpressionStatement","src":"400:42:17"}]},"name":"abi_decode_t_enum$_Side_$1661","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"330:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"338:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"346:5:17","type":""}],"src":"291:157:17"},{"body":{"nodeType":"YulBlock","src":"563:2001:17","statements":[{"body":{"nodeType":"YulBlock","src":"609:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"611:77:17"},"nodeType":"YulFunctionCall","src":"611:79:17"},"nodeType":"YulExpressionStatement","src":"611:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"584:3:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"589:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"580:3:17"},"nodeType":"YulFunctionCall","src":"580:19:17"},{"kind":"number","nodeType":"YulLiteral","src":"601:6:17","type":"","value":"0x0160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"576:3:17"},"nodeType":"YulFunctionCall","src":"576:32:17"},"nodeType":"YulIf","src":"573:119:17"},{"nodeType":"YulAssignment","src":"701:32:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"726:6:17","type":"","value":"0x0160"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"710:15:17"},"nodeType":"YulFunctionCall","src":"710:23:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"701:5:17"}]},{"nodeType":"YulBlock","src":"743:148:17","statements":[{"nodeType":"YulVariableDeclaration","src":"776:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"790:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"780:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"816:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"823:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"812:3:17"},"nodeType":"YulFunctionCall","src":"812:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"855:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"866:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"851:3:17"},"nodeType":"YulFunctionCall","src":"851:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"875:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"830:20:17"},"nodeType":"YulFunctionCall","src":"830:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"805:6:17"},"nodeType":"YulFunctionCall","src":"805:75:17"},"nodeType":"YulExpressionStatement","src":"805:75:17"}]},{"nodeType":"YulBlock","src":"901:160:17","statements":[{"nodeType":"YulVariableDeclaration","src":"936:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"950:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"940:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"977:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"984:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"973:3:17"},"nodeType":"YulFunctionCall","src":"973:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1025:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1036:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1021:3:17"},"nodeType":"YulFunctionCall","src":"1021:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"1045:3:17"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"991:29:17"},"nodeType":"YulFunctionCall","src":"991:58:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"966:6:17"},"nodeType":"YulFunctionCall","src":"966:84:17"},"nodeType":"YulExpressionStatement","src":"966:84:17"}]},{"nodeType":"YulBlock","src":"1071:151:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1106:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1120:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1110:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1147:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1154:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1143:3:17"},"nodeType":"YulFunctionCall","src":"1143:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1186:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1197:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1182:3:17"},"nodeType":"YulFunctionCall","src":"1182:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"1206:3:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1161:20:17"},"nodeType":"YulFunctionCall","src":"1161:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1136:6:17"},"nodeType":"YulFunctionCall","src":"1136:75:17"},"nodeType":"YulExpressionStatement","src":"1136:75:17"}]},{"nodeType":"YulBlock","src":"1232:153:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1269:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1283:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1273:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1310:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1317:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1306:3:17"},"nodeType":"YulFunctionCall","src":"1306:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1360:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1345:3:17"},"nodeType":"YulFunctionCall","src":"1345:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"1369:3:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1324:20:17"},"nodeType":"YulFunctionCall","src":"1324:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1299:6:17"},"nodeType":"YulFunctionCall","src":"1299:75:17"},"nodeType":"YulExpressionStatement","src":"1299:75:17"}]},{"nodeType":"YulBlock","src":"1395:155:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1433:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1447:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1437:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1475:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1482:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1471:3:17"},"nodeType":"YulFunctionCall","src":"1471:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1514:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1525:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1510:3:17"},"nodeType":"YulFunctionCall","src":"1510:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"1534:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1489:20:17"},"nodeType":"YulFunctionCall","src":"1489:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1464:6:17"},"nodeType":"YulFunctionCall","src":"1464:75:17"},"nodeType":"YulExpressionStatement","src":"1464:75:17"}]},{"nodeType":"YulBlock","src":"1560:154:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1597:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1611:3:17","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1601:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1639:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1646:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1635:3:17"},"nodeType":"YulFunctionCall","src":"1635:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1678:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1689:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1674:3:17"},"nodeType":"YulFunctionCall","src":"1674:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"1698:3:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1653:20:17"},"nodeType":"YulFunctionCall","src":"1653:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1628:6:17"},"nodeType":"YulFunctionCall","src":"1628:75:17"},"nodeType":"YulExpressionStatement","src":"1628:75:17"}]},{"nodeType":"YulBlock","src":"1724:155:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1762:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1776:3:17","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1766:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1804:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1811:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:17"},"nodeType":"YulFunctionCall","src":"1800:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1843:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1854:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1839:3:17"},"nodeType":"YulFunctionCall","src":"1839:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"1863:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1818:20:17"},"nodeType":"YulFunctionCall","src":"1818:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1793:6:17"},"nodeType":"YulFunctionCall","src":"1793:75:17"},"nodeType":"YulExpressionStatement","src":"1793:75:17"}]},{"nodeType":"YulBlock","src":"1889:152:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1924:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1938:3:17","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1928:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1966:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1973:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1962:3:17"},"nodeType":"YulFunctionCall","src":"1962:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2005:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2016:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2001:3:17"},"nodeType":"YulFunctionCall","src":"2001:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"2025:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1980:20:17"},"nodeType":"YulFunctionCall","src":"1980:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1955:6:17"},"nodeType":"YulFunctionCall","src":"1955:75:17"},"nodeType":"YulExpressionStatement","src":"1955:75:17"}]},{"nodeType":"YulBlock","src":"2051:165:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2097:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2111:3:17","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2101:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2139:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2146:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2135:3:17"},"nodeType":"YulFunctionCall","src":"2135:18:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2180:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2191:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2176:3:17"},"nodeType":"YulFunctionCall","src":"2176:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"2200:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2155:20:17"},"nodeType":"YulFunctionCall","src":"2155:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2128:6:17"},"nodeType":"YulFunctionCall","src":"2128:77:17"},"nodeType":"YulExpressionStatement","src":"2128:77:17"}]},{"nodeType":"YulBlock","src":"2226:165:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2272:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2286:3:17","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2276:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2314:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2321:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2310:3:17"},"nodeType":"YulFunctionCall","src":"2310:18:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2355:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2366:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2351:3:17"},"nodeType":"YulFunctionCall","src":"2351:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"2375:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2330:20:17"},"nodeType":"YulFunctionCall","src":"2330:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2303:6:17"},"nodeType":"YulFunctionCall","src":"2303:77:17"},"nodeType":"YulExpressionStatement","src":"2303:77:17"}]},{"nodeType":"YulBlock","src":"2401:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2441:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2455:3:17","type":"","value":"320"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2445:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2483:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2490:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2479:3:17"},"nodeType":"YulFunctionCall","src":"2479:18:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2521:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2532:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2517:3:17"},"nodeType":"YulFunctionCall","src":"2517:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"2541:3:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"2499:17:17"},"nodeType":"YulFunctionCall","src":"2499:46:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2472:6:17"},"nodeType":"YulFunctionCall","src":"2472:74:17"},"nodeType":"YulExpressionStatement","src":"2472:74:17"}]}]},"name":"abi_decode_t_struct$__Order_$1629_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"538:9:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"549:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"557:5:17","type":""}],"src":"484:2080:17"},{"body":{"nodeType":"YulBlock","src":"2691:2184:17","statements":[{"body":{"nodeType":"YulBlock","src":"2737:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"2739:77:17"},"nodeType":"YulFunctionCall","src":"2739:79:17"},"nodeType":"YulExpressionStatement","src":"2739:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"2712:3:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2717:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2708:3:17"},"nodeType":"YulFunctionCall","src":"2708:19:17"},{"kind":"number","nodeType":"YulLiteral","src":"2729:6:17","type":"","value":"0x0180"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2704:3:17"},"nodeType":"YulFunctionCall","src":"2704:32:17"},"nodeType":"YulIf","src":"2701:119:17"},{"nodeType":"YulAssignment","src":"2829:32:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2854:6:17","type":"","value":"0x0180"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2838:15:17"},"nodeType":"YulFunctionCall","src":"2838:23:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2829:5:17"}]},{"nodeType":"YulBlock","src":"2871:148:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2904:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2918:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2908:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2944:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2951:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2940:3:17"},"nodeType":"YulFunctionCall","src":"2940:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2983:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2994:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2979:3:17"},"nodeType":"YulFunctionCall","src":"2979:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"3003:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2958:20:17"},"nodeType":"YulFunctionCall","src":"2958:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2933:6:17"},"nodeType":"YulFunctionCall","src":"2933:75:17"},"nodeType":"YulExpressionStatement","src":"2933:75:17"}]},{"nodeType":"YulBlock","src":"3029:160:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3064:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3078:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3068:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3105:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3112:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:17"},"nodeType":"YulFunctionCall","src":"3101:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3153:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3164:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3149:3:17"},"nodeType":"YulFunctionCall","src":"3149:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"3173:3:17"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"3119:29:17"},"nodeType":"YulFunctionCall","src":"3119:58:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3094:6:17"},"nodeType":"YulFunctionCall","src":"3094:84:17"},"nodeType":"YulExpressionStatement","src":"3094:84:17"}]},{"nodeType":"YulBlock","src":"3199:151:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3234:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3248:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3238:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3275:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3282:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3271:3:17"},"nodeType":"YulFunctionCall","src":"3271:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3314:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3325:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3310:3:17"},"nodeType":"YulFunctionCall","src":"3310:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"3334:3:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3289:20:17"},"nodeType":"YulFunctionCall","src":"3289:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3264:6:17"},"nodeType":"YulFunctionCall","src":"3264:75:17"},"nodeType":"YulExpressionStatement","src":"3264:75:17"}]},{"nodeType":"YulBlock","src":"3360:153:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3397:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3411:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3401:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3438:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3445:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3434:3:17"},"nodeType":"YulFunctionCall","src":"3434:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3477:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3488:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3473:3:17"},"nodeType":"YulFunctionCall","src":"3473:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"3497:3:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3452:20:17"},"nodeType":"YulFunctionCall","src":"3452:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3427:6:17"},"nodeType":"YulFunctionCall","src":"3427:75:17"},"nodeType":"YulExpressionStatement","src":"3427:75:17"}]},{"nodeType":"YulBlock","src":"3523:154:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3560:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3574:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3564:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3602:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3609:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3598:3:17"},"nodeType":"YulFunctionCall","src":"3598:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3641:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3652:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:17"},"nodeType":"YulFunctionCall","src":"3637:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"3661:3:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3616:20:17"},"nodeType":"YulFunctionCall","src":"3616:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3591:6:17"},"nodeType":"YulFunctionCall","src":"3591:75:17"},"nodeType":"YulExpressionStatement","src":"3591:75:17"}]},{"nodeType":"YulBlock","src":"3687:160:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3730:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3744:3:17","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3734:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3772:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3779:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3768:3:17"},"nodeType":"YulFunctionCall","src":"3768:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3811:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3822:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3807:3:17"},"nodeType":"YulFunctionCall","src":"3807:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"3831:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3786:20:17"},"nodeType":"YulFunctionCall","src":"3786:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3761:6:17"},"nodeType":"YulFunctionCall","src":"3761:75:17"},"nodeType":"YulExpressionStatement","src":"3761:75:17"}]},{"nodeType":"YulBlock","src":"3857:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3896:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3910:3:17","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3900:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3945:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3934:3:17"},"nodeType":"YulFunctionCall","src":"3934:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3977:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3988:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3973:3:17"},"nodeType":"YulFunctionCall","src":"3973:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"3997:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3952:20:17"},"nodeType":"YulFunctionCall","src":"3952:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3927:6:17"},"nodeType":"YulFunctionCall","src":"3927:75:17"},"nodeType":"YulExpressionStatement","src":"3927:75:17"}]},{"nodeType":"YulBlock","src":"4023:160:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4066:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4080:3:17","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4070:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4108:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4115:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4104:3:17"},"nodeType":"YulFunctionCall","src":"4104:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4147:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4158:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4143:3:17"},"nodeType":"YulFunctionCall","src":"4143:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4167:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4122:20:17"},"nodeType":"YulFunctionCall","src":"4122:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4097:6:17"},"nodeType":"YulFunctionCall","src":"4097:75:17"},"nodeType":"YulExpressionStatement","src":"4097:75:17"}]},{"nodeType":"YulBlock","src":"4193:165:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4239:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4253:3:17","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4243:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4281:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4288:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4277:3:17"},"nodeType":"YulFunctionCall","src":"4277:18:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4322:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4333:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4318:3:17"},"nodeType":"YulFunctionCall","src":"4318:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4342:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4297:20:17"},"nodeType":"YulFunctionCall","src":"4297:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4270:6:17"},"nodeType":"YulFunctionCall","src":"4270:77:17"},"nodeType":"YulExpressionStatement","src":"4270:77:17"}]},{"nodeType":"YulBlock","src":"4368:165:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4414:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4428:3:17","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4418:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4456:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4463:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4452:3:17"},"nodeType":"YulFunctionCall","src":"4452:18:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4497:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4508:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4493:3:17"},"nodeType":"YulFunctionCall","src":"4493:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4517:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4472:20:17"},"nodeType":"YulFunctionCall","src":"4472:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4445:6:17"},"nodeType":"YulFunctionCall","src":"4445:77:17"},"nodeType":"YulExpressionStatement","src":"4445:77:17"}]},{"nodeType":"YulBlock","src":"4543:157:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4584:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4598:3:17","type":"","value":"320"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4588:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4626:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4633:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:17"},"nodeType":"YulFunctionCall","src":"4622:18:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4664:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4675:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4660:3:17"},"nodeType":"YulFunctionCall","src":"4660:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4684:3:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4642:17:17"},"nodeType":"YulFunctionCall","src":"4642:46:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4615:6:17"},"nodeType":"YulFunctionCall","src":"4615:74:17"},"nodeType":"YulExpressionStatement","src":"4615:74:17"}]},{"nodeType":"YulBlock","src":"4710:158:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4749:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4763:3:17","type":"","value":"352"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4753:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4791:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4798:6:17","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:17"},"nodeType":"YulFunctionCall","src":"4787:18:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4832:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4843:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4828:3:17"},"nodeType":"YulFunctionCall","src":"4828:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4852:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4807:20:17"},"nodeType":"YulFunctionCall","src":"4807:49:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4780:6:17"},"nodeType":"YulFunctionCall","src":"4780:77:17"},"nodeType":"YulExpressionStatement","src":"4780:77:17"}]}]},"name":"abi_decode_t_struct$__filledOrder_$1658_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2666:9:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2677:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2685:5:17","type":""}],"src":"2606:2269:17"},{"body":{"nodeType":"YulBlock","src":"4933:87:17","statements":[{"nodeType":"YulAssignment","src":"4943:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4965:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4952:12:17"},"nodeType":"YulFunctionCall","src":"4952:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4943:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5008:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4981:26:17"},"nodeType":"YulFunctionCall","src":"4981:33:17"},"nodeType":"YulExpressionStatement","src":"4981:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4911:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4919:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4927:5:17","type":""}],"src":"4881:139:17"},{"body":{"nodeType":"YulBlock","src":"5089:80:17","statements":[{"nodeType":"YulAssignment","src":"5099:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5114:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5108:5:17"},"nodeType":"YulFunctionCall","src":"5108:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5099:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5157:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"5130:26:17"},"nodeType":"YulFunctionCall","src":"5130:33:17"},"nodeType":"YulExpressionStatement","src":"5130:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5067:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5075:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5083:5:17","type":""}],"src":"5026:143:17"},{"body":{"nodeType":"YulBlock","src":"5241:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"5287:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5289:77:17"},"nodeType":"YulFunctionCall","src":"5289:79:17"},"nodeType":"YulExpressionStatement","src":"5289:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5262:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5271:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5258:3:17"},"nodeType":"YulFunctionCall","src":"5258:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5283:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5254:3:17"},"nodeType":"YulFunctionCall","src":"5254:32:17"},"nodeType":"YulIf","src":"5251:119:17"},{"nodeType":"YulBlock","src":"5380:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5395:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5409:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5399:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5424:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5459:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5470:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5455:3:17"},"nodeType":"YulFunctionCall","src":"5455:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5479:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5434:20:17"},"nodeType":"YulFunctionCall","src":"5434:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5424:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5211:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5222:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5234:6:17","type":""}],"src":"5175:329:17"},{"body":{"nodeType":"YulBlock","src":"5636:657:17","statements":[{"body":{"nodeType":"YulBlock","src":"5683:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5685:77:17"},"nodeType":"YulFunctionCall","src":"5685:79:17"},"nodeType":"YulExpressionStatement","src":"5685:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5657:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5666:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5653:3:17"},"nodeType":"YulFunctionCall","src":"5653:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5678:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5649:3:17"},"nodeType":"YulFunctionCall","src":"5649:33:17"},"nodeType":"YulIf","src":"5646:120:17"},{"nodeType":"YulBlock","src":"5776:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5791:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5805:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5795:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5820:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5855:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5866:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5851:3:17"},"nodeType":"YulFunctionCall","src":"5851:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5875:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5830:20:17"},"nodeType":"YulFunctionCall","src":"5830:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5820:6:17"}]}]},{"nodeType":"YulBlock","src":"5903:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5918:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5932:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5922:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5948:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5983:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5994:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5979:3:17"},"nodeType":"YulFunctionCall","src":"5979:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6003:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5958:20:17"},"nodeType":"YulFunctionCall","src":"5958:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5948:6:17"}]}]},{"nodeType":"YulBlock","src":"6031:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6046:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6060:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6050:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6076:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6111:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6122:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6107:3:17"},"nodeType":"YulFunctionCall","src":"6107:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6131:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6086:20:17"},"nodeType":"YulFunctionCall","src":"6086:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6076:6:17"}]}]},{"nodeType":"YulBlock","src":"6159:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6174:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6188:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6178:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6204:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6248:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6259:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6244:3:17"},"nodeType":"YulFunctionCall","src":"6244:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6268:7:17"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"6214:29:17"},"nodeType":"YulFunctionCall","src":"6214:62:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6204:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_enum$_Side_$1661","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5582:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5593:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5605:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5613:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5621:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5629:6:17","type":""}],"src":"5510:783:17"},{"body":{"nodeType":"YulBlock","src":"6416:648:17","statements":[{"body":{"nodeType":"YulBlock","src":"6463:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6465:77:17"},"nodeType":"YulFunctionCall","src":"6465:79:17"},"nodeType":"YulExpressionStatement","src":"6465:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6437:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6446:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6433:3:17"},"nodeType":"YulFunctionCall","src":"6433:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6458:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6429:3:17"},"nodeType":"YulFunctionCall","src":"6429:33:17"},"nodeType":"YulIf","src":"6426:120:17"},{"nodeType":"YulBlock","src":"6556:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6571:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6585:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6575:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6600:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6635:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6646:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6631:3:17"},"nodeType":"YulFunctionCall","src":"6631:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6655:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6610:20:17"},"nodeType":"YulFunctionCall","src":"6610:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6600:6:17"}]}]},{"nodeType":"YulBlock","src":"6683:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6698:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6712:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6702:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6728:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6763:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6774:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6759:3:17"},"nodeType":"YulFunctionCall","src":"6759:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6783:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6738:20:17"},"nodeType":"YulFunctionCall","src":"6738:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6728:6:17"}]}]},{"nodeType":"YulBlock","src":"6811:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6826:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6840:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6830:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6856:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6891:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6902:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6887:3:17"},"nodeType":"YulFunctionCall","src":"6887:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6911:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6866:20:17"},"nodeType":"YulFunctionCall","src":"6866:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6856:6:17"}]}]},{"nodeType":"YulBlock","src":"6939:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6954:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6968:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6958:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6984:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7019:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7030:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7015:3:17"},"nodeType":"YulFunctionCall","src":"7015:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7039:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6994:20:17"},"nodeType":"YulFunctionCall","src":"6994:53:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6984:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6362:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6373:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6385:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6393:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6401:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6409:6:17","type":""}],"src":"6299:765:17"},{"body":{"nodeType":"YulBlock","src":"7162:400:17","statements":[{"body":{"nodeType":"YulBlock","src":"7208:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7210:77:17"},"nodeType":"YulFunctionCall","src":"7210:79:17"},"nodeType":"YulExpressionStatement","src":"7210:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7183:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7192:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7179:3:17"},"nodeType":"YulFunctionCall","src":"7179:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7204:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7175:3:17"},"nodeType":"YulFunctionCall","src":"7175:32:17"},"nodeType":"YulIf","src":"7172:119:17"},{"nodeType":"YulBlock","src":"7301:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7316:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7330:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7320:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7345:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7380:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7391:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7376:3:17"},"nodeType":"YulFunctionCall","src":"7376:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7400:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7355:20:17"},"nodeType":"YulFunctionCall","src":"7355:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7345:6:17"}]}]},{"nodeType":"YulBlock","src":"7428:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7443:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7457:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7447:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7473:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7517:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7528:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7513:3:17"},"nodeType":"YulFunctionCall","src":"7513:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7537:7:17"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"7483:29:17"},"nodeType":"YulFunctionCall","src":"7483:62:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7473:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_Side_$1661","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7124:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7135:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7147:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7155:6:17","type":""}],"src":"7070:492:17"},{"body":{"nodeType":"YulBlock","src":"7677:528:17","statements":[{"body":{"nodeType":"YulBlock","src":"7723:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7725:77:17"},"nodeType":"YulFunctionCall","src":"7725:79:17"},"nodeType":"YulExpressionStatement","src":"7725:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7698:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7707:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7694:3:17"},"nodeType":"YulFunctionCall","src":"7694:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7719:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7690:3:17"},"nodeType":"YulFunctionCall","src":"7690:32:17"},"nodeType":"YulIf","src":"7687:119:17"},{"nodeType":"YulBlock","src":"7816:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7831:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7845:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7835:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7860:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7895:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7906:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7891:3:17"},"nodeType":"YulFunctionCall","src":"7891:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7915:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7870:20:17"},"nodeType":"YulFunctionCall","src":"7870:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7860:6:17"}]}]},{"nodeType":"YulBlock","src":"7943:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7958:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7972:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7962:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7988:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8032:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8043:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8028:3:17"},"nodeType":"YulFunctionCall","src":"8028:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8052:7:17"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"7998:29:17"},"nodeType":"YulFunctionCall","src":"7998:62:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7988:6:17"}]}]},{"nodeType":"YulBlock","src":"8080:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8095:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8109:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8099:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8125:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8160:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8171:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8156:3:17"},"nodeType":"YulFunctionCall","src":"8156:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8180:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8135:20:17"},"nodeType":"YulFunctionCall","src":"8135:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8125:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_Side_$1661t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7631:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7642:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7654:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7662:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7670:6:17","type":""}],"src":"7568:637:17"},{"body":{"nodeType":"YulBlock","src":"8294:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"8340:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8342:77:17"},"nodeType":"YulFunctionCall","src":"8342:79:17"},"nodeType":"YulExpressionStatement","src":"8342:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8315:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8324:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8311:3:17"},"nodeType":"YulFunctionCall","src":"8311:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8336:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8307:3:17"},"nodeType":"YulFunctionCall","src":"8307:32:17"},"nodeType":"YulIf","src":"8304:119:17"},{"nodeType":"YulBlock","src":"8433:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8448:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8462:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8452:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8477:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8512:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8523:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8508:3:17"},"nodeType":"YulFunctionCall","src":"8508:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8532:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8487:20:17"},"nodeType":"YulFunctionCall","src":"8487:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8477:6:17"}]}]},{"nodeType":"YulBlock","src":"8560:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8575:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8589:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8579:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8605:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8640:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8651:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8636:3:17"},"nodeType":"YulFunctionCall","src":"8636:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8660:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8615:20:17"},"nodeType":"YulFunctionCall","src":"8615:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8605:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8256:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8267:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8279:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8287:6:17","type":""}],"src":"8211:474:17"},{"body":{"nodeType":"YulBlock","src":"8839:903:17","statements":[{"body":{"nodeType":"YulBlock","src":"8886:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8888:77:17"},"nodeType":"YulFunctionCall","src":"8888:79:17"},"nodeType":"YulExpressionStatement","src":"8888:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8860:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8869:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8856:3:17"},"nodeType":"YulFunctionCall","src":"8856:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8881:3:17","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8852:3:17"},"nodeType":"YulFunctionCall","src":"8852:33:17"},"nodeType":"YulIf","src":"8849:120:17"},{"nodeType":"YulBlock","src":"8979:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8994:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9008:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8998:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9023:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9058:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9069:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9054:3:17"},"nodeType":"YulFunctionCall","src":"9054:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9078:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9033:20:17"},"nodeType":"YulFunctionCall","src":"9033:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9023:6:17"}]}]},{"nodeType":"YulBlock","src":"9106:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9121:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9135:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9125:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9151:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9186:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9197:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9182:3:17"},"nodeType":"YulFunctionCall","src":"9182:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9206:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9161:20:17"},"nodeType":"YulFunctionCall","src":"9161:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9151:6:17"}]}]},{"nodeType":"YulBlock","src":"9234:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9249:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9263:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9253:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9279:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9314:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9325:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9310:3:17"},"nodeType":"YulFunctionCall","src":"9310:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9334:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9289:20:17"},"nodeType":"YulFunctionCall","src":"9289:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9279:6:17"}]}]},{"nodeType":"YulBlock","src":"9362:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9377:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9391:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9381:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9407:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9442:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9453:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9438:3:17"},"nodeType":"YulFunctionCall","src":"9438:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9462:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9417:20:17"},"nodeType":"YulFunctionCall","src":"9417:53:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9407:6:17"}]}]},{"nodeType":"YulBlock","src":"9490:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9505:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9519:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9509:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9536:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9571:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9582:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9567:3:17"},"nodeType":"YulFunctionCall","src":"9567:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9591:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9546:20:17"},"nodeType":"YulFunctionCall","src":"9546:53:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9536:6:17"}]}]},{"nodeType":"YulBlock","src":"9619:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9634:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9648:3:17","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9638:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9665:60:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9697:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9708:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9693:3:17"},"nodeType":"YulFunctionCall","src":"9693:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9717:7:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"9675:17:17"},"nodeType":"YulFunctionCall","src":"9675:50:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9665:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8769:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8780:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8792:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8800:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8808:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8816:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8824:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8832:6:17","type":""}],"src":"8691:1051:17"},{"body":{"nodeType":"YulBlock","src":"9848:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"9894:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9896:77:17"},"nodeType":"YulFunctionCall","src":"9896:79:17"},"nodeType":"YulExpressionStatement","src":"9896:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9869:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9878:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9865:3:17"},"nodeType":"YulFunctionCall","src":"9865:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9890:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9861:3:17"},"nodeType":"YulFunctionCall","src":"9861:32:17"},"nodeType":"YulIf","src":"9858:119:17"},{"nodeType":"YulBlock","src":"9987:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10002:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10016:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10006:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10031:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10066:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10077:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10062:3:17"},"nodeType":"YulFunctionCall","src":"10062:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10086:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10041:20:17"},"nodeType":"YulFunctionCall","src":"10041:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10031:6:17"}]}]},{"nodeType":"YulBlock","src":"10114:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10129:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10143:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10133:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10159:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10194:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10205:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10190:3:17"},"nodeType":"YulFunctionCall","src":"10190:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10214:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10169:20:17"},"nodeType":"YulFunctionCall","src":"10169:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10159:6:17"}]}]},{"nodeType":"YulBlock","src":"10242:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10257:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10271:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10261:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10287:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10322:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10333:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10318:3:17"},"nodeType":"YulFunctionCall","src":"10318:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10342:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10297:20:17"},"nodeType":"YulFunctionCall","src":"10297:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10287:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9802:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9813:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9825:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9833:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9841:6:17","type":""}],"src":"9748:619:17"},{"body":{"nodeType":"YulBlock","src":"10436:260:17","statements":[{"body":{"nodeType":"YulBlock","src":"10482:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10484:77:17"},"nodeType":"YulFunctionCall","src":"10484:79:17"},"nodeType":"YulExpressionStatement","src":"10484:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10457:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10466:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10453:3:17"},"nodeType":"YulFunctionCall","src":"10453:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"10478:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10449:3:17"},"nodeType":"YulFunctionCall","src":"10449:32:17"},"nodeType":"YulIf","src":"10446:119:17"},{"nodeType":"YulBlock","src":"10575:114:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10590:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10604:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10594:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10619:60:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10651:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10662:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10647:3:17"},"nodeType":"YulFunctionCall","src":"10647:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10671:7:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"10629:17:17"},"nodeType":"YulFunctionCall","src":"10629:50:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10619:6:17"}]}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10406:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10417:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10429:6:17","type":""}],"src":"10373:323:17"},{"body":{"nodeType":"YulBlock","src":"10811:528:17","statements":[{"body":{"nodeType":"YulBlock","src":"10857:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10859:77:17"},"nodeType":"YulFunctionCall","src":"10859:79:17"},"nodeType":"YulExpressionStatement","src":"10859:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10832:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10841:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10828:3:17"},"nodeType":"YulFunctionCall","src":"10828:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"10853:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10824:3:17"},"nodeType":"YulFunctionCall","src":"10824:32:17"},"nodeType":"YulIf","src":"10821:119:17"},{"nodeType":"YulBlock","src":"10950:126:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10965:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10979:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10969:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10994:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11038:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11049:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11034:3:17"},"nodeType":"YulFunctionCall","src":"11034:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11058:7:17"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"11004:29:17"},"nodeType":"YulFunctionCall","src":"11004:62:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10994:6:17"}]}]},{"nodeType":"YulBlock","src":"11086:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11101:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11115:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11105:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11131:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11166:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11177:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11162:3:17"},"nodeType":"YulFunctionCall","src":"11162:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11186:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11141:20:17"},"nodeType":"YulFunctionCall","src":"11141:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11131:6:17"}]}]},{"nodeType":"YulBlock","src":"11214:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11229:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11243:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11233:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11259:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11294:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11305:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11290:3:17"},"nodeType":"YulFunctionCall","src":"11290:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11314:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11269:20:17"},"nodeType":"YulFunctionCall","src":"11269:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11259:6:17"}]}]}]},"name":"abi_decode_tuple_t_enum$_Side_$1661t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10765:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10776:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10788:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10796:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10804:6:17","type":""}],"src":"10702:637:17"},{"body":{"nodeType":"YulBlock","src":"11471:657:17","statements":[{"body":{"nodeType":"YulBlock","src":"11518:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11520:77:17"},"nodeType":"YulFunctionCall","src":"11520:79:17"},"nodeType":"YulExpressionStatement","src":"11520:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11492:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11501:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11488:3:17"},"nodeType":"YulFunctionCall","src":"11488:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"11513:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11484:3:17"},"nodeType":"YulFunctionCall","src":"11484:33:17"},"nodeType":"YulIf","src":"11481:120:17"},{"nodeType":"YulBlock","src":"11611:126:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11626:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11640:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11630:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11655:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11699:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11710:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11695:3:17"},"nodeType":"YulFunctionCall","src":"11695:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11719:7:17"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"11665:29:17"},"nodeType":"YulFunctionCall","src":"11665:62:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11655:6:17"}]}]},{"nodeType":"YulBlock","src":"11747:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11762:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11776:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11766:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11792:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11827:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11838:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11823:3:17"},"nodeType":"YulFunctionCall","src":"11823:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11847:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11802:20:17"},"nodeType":"YulFunctionCall","src":"11802:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11792:6:17"}]}]},{"nodeType":"YulBlock","src":"11875:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11890:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11904:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11894:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11920:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11955:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11966:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11951:3:17"},"nodeType":"YulFunctionCall","src":"11951:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11975:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11930:20:17"},"nodeType":"YulFunctionCall","src":"11930:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11920:6:17"}]}]},{"nodeType":"YulBlock","src":"12003:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12018:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12032:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12022:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12048:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12094:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:17"},"nodeType":"YulFunctionCall","src":"12079:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12103:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12058:20:17"},"nodeType":"YulFunctionCall","src":"12058:53:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12048:6:17"}]}]}]},"name":"abi_decode_tuple_t_enum$_Side_$1661t_uint256t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11417:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11428:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11440:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11448:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11456:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11464:6:17","type":""}],"src":"11345:783:17"},{"body":{"nodeType":"YulBlock","src":"12275:675:17","statements":[{"body":{"nodeType":"YulBlock","src":"12322:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12324:77:17"},"nodeType":"YulFunctionCall","src":"12324:79:17"},"nodeType":"YulExpressionStatement","src":"12324:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12296:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"12305:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12292:3:17"},"nodeType":"YulFunctionCall","src":"12292:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"12317:3:17","type":"","value":"448"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12288:3:17"},"nodeType":"YulFunctionCall","src":"12288:33:17"},"nodeType":"YulIf","src":"12285:120:17"},{"nodeType":"YulBlock","src":"12415:141:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12430:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12444:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12434:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12459:87:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12518:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12529:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12514:3:17"},"nodeType":"YulFunctionCall","src":"12514:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12538:7:17"}],"functionName":{"name":"abi_decode_t_struct$__Order_$1629_memory_ptr","nodeType":"YulIdentifier","src":"12469:44:17"},"nodeType":"YulFunctionCall","src":"12469:77:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12459:6:17"}]}]},{"nodeType":"YulBlock","src":"12566:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12581:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12595:3:17","type":"","value":"352"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12585:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12612:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12647:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12658:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12643:3:17"},"nodeType":"YulFunctionCall","src":"12643:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12667:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12622:20:17"},"nodeType":"YulFunctionCall","src":"12622:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12612:6:17"}]}]},{"nodeType":"YulBlock","src":"12695:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12710:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12724:3:17","type":"","value":"384"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12714:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12741:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12776:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12787:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12772:3:17"},"nodeType":"YulFunctionCall","src":"12772:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12796:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12751:20:17"},"nodeType":"YulFunctionCall","src":"12751:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12741:6:17"}]}]},{"nodeType":"YulBlock","src":"12824:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12839:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12853:3:17","type":"","value":"416"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12843:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12870:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12905:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12916:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12901:3:17"},"nodeType":"YulFunctionCall","src":"12901:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12925:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12880:20:17"},"nodeType":"YulFunctionCall","src":"12880:53:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12870:6:17"}]}]}]},"name":"abi_decode_tuple_t_struct$__Order_$1629_memory_ptrt_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12221:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12232:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12244:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12252:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12260:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12268:6:17","type":""}],"src":"12134:816:17"},{"body":{"nodeType":"YulBlock","src":"13069:423:17","statements":[{"body":{"nodeType":"YulBlock","src":"13116:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13118:77:17"},"nodeType":"YulFunctionCall","src":"13118:79:17"},"nodeType":"YulExpressionStatement","src":"13118:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13090:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13099:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13086:3:17"},"nodeType":"YulFunctionCall","src":"13086:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"13111:3:17","type":"","value":"416"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13082:3:17"},"nodeType":"YulFunctionCall","src":"13082:33:17"},"nodeType":"YulIf","src":"13079:120:17"},{"nodeType":"YulBlock","src":"13209:147:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13224:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13238:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13228:6:17","type":""}]},{"nodeType":"YulAssignment","src":"13253:93:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13318:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"13329:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13314:3:17"},"nodeType":"YulFunctionCall","src":"13314:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13338:7:17"}],"functionName":{"name":"abi_decode_t_struct$__filledOrder_$1658_memory_ptr","nodeType":"YulIdentifier","src":"13263:50:17"},"nodeType":"YulFunctionCall","src":"13263:83:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13253:6:17"}]}]},{"nodeType":"YulBlock","src":"13366:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13381:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13395:3:17","type":"","value":"384"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13385:6:17","type":""}]},{"nodeType":"YulAssignment","src":"13412:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13447:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"13458:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13443:3:17"},"nodeType":"YulFunctionCall","src":"13443:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13467:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13422:20:17"},"nodeType":"YulFunctionCall","src":"13422:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13412:6:17"}]}]}]},"name":"abi_decode_tuple_t_struct$__filledOrder_$1658_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13031:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13042:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13054:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13062:6:17","type":""}],"src":"12956:536:17"},{"body":{"nodeType":"YulBlock","src":"13564:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"13610:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13612:77:17"},"nodeType":"YulFunctionCall","src":"13612:79:17"},"nodeType":"YulExpressionStatement","src":"13612:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13585:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13594:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13581:3:17"},"nodeType":"YulFunctionCall","src":"13581:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"13606:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13577:3:17"},"nodeType":"YulFunctionCall","src":"13577:32:17"},"nodeType":"YulIf","src":"13574:119:17"},{"nodeType":"YulBlock","src":"13703:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13718:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13732:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13722:6:17","type":""}]},{"nodeType":"YulAssignment","src":"13747:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13782:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"13793:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13778:3:17"},"nodeType":"YulFunctionCall","src":"13778:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13802:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13757:20:17"},"nodeType":"YulFunctionCall","src":"13757:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13747:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13534:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13545:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13557:6:17","type":""}],"src":"13498:329:17"},{"body":{"nodeType":"YulBlock","src":"13910:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"13956:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13958:77:17"},"nodeType":"YulFunctionCall","src":"13958:79:17"},"nodeType":"YulExpressionStatement","src":"13958:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13931:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13940:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13927:3:17"},"nodeType":"YulFunctionCall","src":"13927:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"13952:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13923:3:17"},"nodeType":"YulFunctionCall","src":"13923:32:17"},"nodeType":"YulIf","src":"13920:119:17"},{"nodeType":"YulBlock","src":"14049:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14064:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14078:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14068:6:17","type":""}]},{"nodeType":"YulAssignment","src":"14093:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14139:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"14150:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14135:3:17"},"nodeType":"YulFunctionCall","src":"14135:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14159:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"14103:31:17"},"nodeType":"YulFunctionCall","src":"14103:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14093:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13880:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13891:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13903:6:17","type":""}],"src":"13833:351:17"},{"body":{"nodeType":"YulBlock","src":"14316:657:17","statements":[{"body":{"nodeType":"YulBlock","src":"14363:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14365:77:17"},"nodeType":"YulFunctionCall","src":"14365:79:17"},"nodeType":"YulExpressionStatement","src":"14365:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14337:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14346:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14333:3:17"},"nodeType":"YulFunctionCall","src":"14333:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"14358:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14329:3:17"},"nodeType":"YulFunctionCall","src":"14329:33:17"},"nodeType":"YulIf","src":"14326:120:17"},{"nodeType":"YulBlock","src":"14456:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14471:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14485:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14475:6:17","type":""}]},{"nodeType":"YulAssignment","src":"14500:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14535:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"14546:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14531:3:17"},"nodeType":"YulFunctionCall","src":"14531:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14555:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14510:20:17"},"nodeType":"YulFunctionCall","src":"14510:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14500:6:17"}]}]},{"nodeType":"YulBlock","src":"14583:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14598:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14612:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14602:6:17","type":""}]},{"nodeType":"YulAssignment","src":"14628:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14672:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"14683:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14668:3:17"},"nodeType":"YulFunctionCall","src":"14668:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14692:7:17"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"14638:29:17"},"nodeType":"YulFunctionCall","src":"14638:62:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14628:6:17"}]}]},{"nodeType":"YulBlock","src":"14720:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14735:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14749:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14739:6:17","type":""}]},{"nodeType":"YulAssignment","src":"14765:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14800:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"14811:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14796:3:17"},"nodeType":"YulFunctionCall","src":"14796:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14820:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14775:20:17"},"nodeType":"YulFunctionCall","src":"14775:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14765:6:17"}]}]},{"nodeType":"YulBlock","src":"14848:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14863:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"14877:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14867:6:17","type":""}]},{"nodeType":"YulAssignment","src":"14893:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14928:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"14939:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14924:3:17"},"nodeType":"YulFunctionCall","src":"14924:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14948:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14903:20:17"},"nodeType":"YulFunctionCall","src":"14903:53:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14893:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_enum$_Side_$1661t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14262:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14273:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14285:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14293:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14301:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14309:6:17","type":""}],"src":"14190:783:17"},{"body":{"nodeType":"YulBlock","src":"15034:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15051:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15074:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15056:17:17"},"nodeType":"YulFunctionCall","src":"15056:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15044:6:17"},"nodeType":"YulFunctionCall","src":"15044:37:17"},"nodeType":"YulExpressionStatement","src":"15044:37:17"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15022:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15029:3:17","type":""}],"src":"14979:108:17"},{"body":{"nodeType":"YulBlock","src":"15158:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15175:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15198:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15180:17:17"},"nodeType":"YulFunctionCall","src":"15180:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15168:6:17"},"nodeType":"YulFunctionCall","src":"15168:37:17"},"nodeType":"YulExpressionStatement","src":"15168:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15146:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15153:3:17","type":""}],"src":"15093:118:17"},{"body":{"nodeType":"YulBlock","src":"15266:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15283:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15303:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15288:14:17"},"nodeType":"YulFunctionCall","src":"15288:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15276:6:17"},"nodeType":"YulFunctionCall","src":"15276:34:17"},"nodeType":"YulExpressionStatement","src":"15276:34:17"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15254:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15261:3:17","type":""}],"src":"15217:99:17"},{"body":{"nodeType":"YulBlock","src":"15381:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15398:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15418:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15403:14:17"},"nodeType":"YulFunctionCall","src":"15403:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15391:6:17"},"nodeType":"YulFunctionCall","src":"15391:34:17"},"nodeType":"YulExpressionStatement","src":"15391:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15369:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15376:3:17","type":""}],"src":"15322:109:17"},{"body":{"nodeType":"YulBlock","src":"15499:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15516:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15559:5:17"}],"functionName":{"name":"convert_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulIdentifier","src":"15521:37:17"},"nodeType":"YulFunctionCall","src":"15521:44:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15509:6:17"},"nodeType":"YulFunctionCall","src":"15509:57:17"},"nodeType":"YulExpressionStatement","src":"15509:57:17"}]},"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15487:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15494:3:17","type":""}],"src":"15437:135:17"},{"body":{"nodeType":"YulBlock","src":"15650:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15667:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15710:5:17"}],"functionName":{"name":"convert_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulIdentifier","src":"15672:37:17"},"nodeType":"YulFunctionCall","src":"15672:44:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15660:6:17"},"nodeType":"YulFunctionCall","src":"15660:57:17"},"nodeType":"YulExpressionStatement","src":"15660:57:17"}]},"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15638:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15645:3:17","type":""}],"src":"15578:145:17"},{"body":{"nodeType":"YulBlock","src":"15875:220:17","statements":[{"nodeType":"YulAssignment","src":"15885:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15951:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15956:2:17","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15892:58:17"},"nodeType":"YulFunctionCall","src":"15892:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15885:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16057:3:17"}],"functionName":{"name":"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","nodeType":"YulIdentifier","src":"15968:88:17"},"nodeType":"YulFunctionCall","src":"15968:93:17"},"nodeType":"YulExpressionStatement","src":"15968:93:17"},{"nodeType":"YulAssignment","src":"16070:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16081:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16086:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16077:3:17"},"nodeType":"YulFunctionCall","src":"16077:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16070:3:17"}]}]},"name":"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15863:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15871:3:17","type":""}],"src":"15729:366:17"},{"body":{"nodeType":"YulBlock","src":"16247:220:17","statements":[{"nodeType":"YulAssignment","src":"16257:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16323:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16328:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16264:58:17"},"nodeType":"YulFunctionCall","src":"16264:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16257:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16429:3:17"}],"functionName":{"name":"store_literal_in_memory_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f","nodeType":"YulIdentifier","src":"16340:88:17"},"nodeType":"YulFunctionCall","src":"16340:93:17"},"nodeType":"YulExpressionStatement","src":"16340:93:17"},{"nodeType":"YulAssignment","src":"16442:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16453:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16458:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16449:3:17"},"nodeType":"YulFunctionCall","src":"16449:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16442:3:17"}]}]},"name":"abi_encode_t_stringliteral_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16235:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16243:3:17","type":""}],"src":"16101:366:17"},{"body":{"nodeType":"YulBlock","src":"16619:220:17","statements":[{"nodeType":"YulAssignment","src":"16629:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16695:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16700:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16636:58:17"},"nodeType":"YulFunctionCall","src":"16636:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16629:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16801:3:17"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"16712:88:17"},"nodeType":"YulFunctionCall","src":"16712:93:17"},"nodeType":"YulExpressionStatement","src":"16712:93:17"},{"nodeType":"YulAssignment","src":"16814:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16825:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16830:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16821:3:17"},"nodeType":"YulFunctionCall","src":"16821:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16814:3:17"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16607:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16615:3:17","type":""}],"src":"16473:366:17"},{"body":{"nodeType":"YulBlock","src":"16991:220:17","statements":[{"nodeType":"YulAssignment","src":"17001:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17067:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17072:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17008:58:17"},"nodeType":"YulFunctionCall","src":"17008:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17001:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17173:3:17"}],"functionName":{"name":"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","nodeType":"YulIdentifier","src":"17084:88:17"},"nodeType":"YulFunctionCall","src":"17084:93:17"},"nodeType":"YulExpressionStatement","src":"17084:93:17"},{"nodeType":"YulAssignment","src":"17186:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17197:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17202:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17193:3:17"},"nodeType":"YulFunctionCall","src":"17193:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17186:3:17"}]}]},"name":"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16979:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16987:3:17","type":""}],"src":"16845:366:17"},{"body":{"nodeType":"YulBlock","src":"17363:220:17","statements":[{"nodeType":"YulAssignment","src":"17373:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17439:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17444:2:17","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17380:58:17"},"nodeType":"YulFunctionCall","src":"17380:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17373:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17545:3:17"}],"functionName":{"name":"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","nodeType":"YulIdentifier","src":"17456:88:17"},"nodeType":"YulFunctionCall","src":"17456:93:17"},"nodeType":"YulExpressionStatement","src":"17456:93:17"},{"nodeType":"YulAssignment","src":"17558:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17569:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17574:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17565:3:17"},"nodeType":"YulFunctionCall","src":"17565:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17558:3:17"}]}]},"name":"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17351:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17359:3:17","type":""}],"src":"17217:366:17"},{"body":{"nodeType":"YulBlock","src":"17735:219:17","statements":[{"nodeType":"YulAssignment","src":"17745:73:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17811:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17816:1:17","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17752:58:17"},"nodeType":"YulFunctionCall","src":"17752:66:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17745:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17916:3:17"}],"functionName":{"name":"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","nodeType":"YulIdentifier","src":"17827:88:17"},"nodeType":"YulFunctionCall","src":"17827:93:17"},"nodeType":"YulExpressionStatement","src":"17827:93:17"},{"nodeType":"YulAssignment","src":"17929:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17940:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17945:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17936:3:17"},"nodeType":"YulFunctionCall","src":"17936:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17929:3:17"}]}]},"name":"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17723:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17731:3:17","type":""}],"src":"17589:365:17"},{"body":{"nodeType":"YulBlock","src":"18106:220:17","statements":[{"nodeType":"YulAssignment","src":"18116:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18182:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18187:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18123:58:17"},"nodeType":"YulFunctionCall","src":"18123:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18116:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18288:3:17"}],"functionName":{"name":"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","nodeType":"YulIdentifier","src":"18199:88:17"},"nodeType":"YulFunctionCall","src":"18199:93:17"},"nodeType":"YulExpressionStatement","src":"18199:93:17"},{"nodeType":"YulAssignment","src":"18301:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18312:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18317:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18308:3:17"},"nodeType":"YulFunctionCall","src":"18308:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18301:3:17"}]}]},"name":"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18094:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18102:3:17","type":""}],"src":"17960:366:17"},{"body":{"nodeType":"YulBlock","src":"18478:220:17","statements":[{"nodeType":"YulAssignment","src":"18488:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18554:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18559:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18495:58:17"},"nodeType":"YulFunctionCall","src":"18495:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18488:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18660:3:17"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"18571:88:17"},"nodeType":"YulFunctionCall","src":"18571:93:17"},"nodeType":"YulExpressionStatement","src":"18571:93:17"},{"nodeType":"YulAssignment","src":"18673:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18684:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18689:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18680:3:17"},"nodeType":"YulFunctionCall","src":"18680:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18673:3:17"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18466:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18474:3:17","type":""}],"src":"18332:366:17"},{"body":{"nodeType":"YulBlock","src":"18850:220:17","statements":[{"nodeType":"YulAssignment","src":"18860:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18926:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18931:2:17","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18867:58:17"},"nodeType":"YulFunctionCall","src":"18867:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18860:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19032:3:17"}],"functionName":{"name":"store_literal_in_memory_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e","nodeType":"YulIdentifier","src":"18943:88:17"},"nodeType":"YulFunctionCall","src":"18943:93:17"},"nodeType":"YulExpressionStatement","src":"18943:93:17"},{"nodeType":"YulAssignment","src":"19045:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19056:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19061:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19052:3:17"},"nodeType":"YulFunctionCall","src":"19052:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19045:3:17"}]}]},"name":"abi_encode_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18838:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18846:3:17","type":""}],"src":"18704:366:17"},{"body":{"nodeType":"YulBlock","src":"19222:220:17","statements":[{"nodeType":"YulAssignment","src":"19232:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19298:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19303:2:17","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19239:58:17"},"nodeType":"YulFunctionCall","src":"19239:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19232:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19404:3:17"}],"functionName":{"name":"store_literal_in_memory_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e","nodeType":"YulIdentifier","src":"19315:88:17"},"nodeType":"YulFunctionCall","src":"19315:93:17"},"nodeType":"YulExpressionStatement","src":"19315:93:17"},{"nodeType":"YulAssignment","src":"19417:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19428:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19433:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19424:3:17"},"nodeType":"YulFunctionCall","src":"19424:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19417:3:17"}]}]},"name":"abi_encode_t_stringliteral_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19210:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19218:3:17","type":""}],"src":"19076:366:17"},{"body":{"nodeType":"YulBlock","src":"19594:220:17","statements":[{"nodeType":"YulAssignment","src":"19604:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19670:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19675:2:17","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19611:58:17"},"nodeType":"YulFunctionCall","src":"19611:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19604:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19776:3:17"}],"functionName":{"name":"store_literal_in_memory_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6","nodeType":"YulIdentifier","src":"19687:88:17"},"nodeType":"YulFunctionCall","src":"19687:93:17"},"nodeType":"YulExpressionStatement","src":"19687:93:17"},{"nodeType":"YulAssignment","src":"19789:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19800:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"19805:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19796:3:17"},"nodeType":"YulFunctionCall","src":"19796:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19789:3:17"}]}]},"name":"abi_encode_t_stringliteral_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19582:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19590:3:17","type":""}],"src":"19448:366:17"},{"body":{"nodeType":"YulBlock","src":"19990:2007:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20000:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20016:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20021:6:17","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20012:3:17"},"nodeType":"YulFunctionCall","src":"20012:16:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"20004:4:17","type":""}]},{"nodeType":"YulBlock","src":"20038:162:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20071:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20101:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20108:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20097:3:17"},"nodeType":"YulFunctionCall","src":"20097:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20091:5:17"},"nodeType":"YulFunctionCall","src":"20091:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20075:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20161:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20179:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20184:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20175:3:17"},"nodeType":"YulFunctionCall","src":"20175:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"20127:33:17"},"nodeType":"YulFunctionCall","src":"20127:63:17"},"nodeType":"YulExpressionStatement","src":"20127:63:17"}]},{"nodeType":"YulBlock","src":"20210:171:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20245:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20275:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20282:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20271:3:17"},"nodeType":"YulFunctionCall","src":"20271:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20265:5:17"},"nodeType":"YulFunctionCall","src":"20265:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20249:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20342:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20360:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20365:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20356:3:17"},"nodeType":"YulFunctionCall","src":"20356:14:17"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulIdentifier","src":"20301:40:17"},"nodeType":"YulFunctionCall","src":"20301:70:17"},"nodeType":"YulExpressionStatement","src":"20301:70:17"}]},{"nodeType":"YulBlock","src":"20391:164:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20426:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20456:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20463:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20452:3:17"},"nodeType":"YulFunctionCall","src":"20452:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20446:5:17"},"nodeType":"YulFunctionCall","src":"20446:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20430:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20516:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20534:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20539:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20530:3:17"},"nodeType":"YulFunctionCall","src":"20530:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"20482:33:17"},"nodeType":"YulFunctionCall","src":"20482:63:17"},"nodeType":"YulExpressionStatement","src":"20482:63:17"}]},{"nodeType":"YulBlock","src":"20565:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20602:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20632:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20639:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20628:3:17"},"nodeType":"YulFunctionCall","src":"20628:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20622:5:17"},"nodeType":"YulFunctionCall","src":"20622:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20606:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20692:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20710:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20715:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20706:3:17"},"nodeType":"YulFunctionCall","src":"20706:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"20658:33:17"},"nodeType":"YulFunctionCall","src":"20658:63:17"},"nodeType":"YulExpressionStatement","src":"20658:63:17"}]},{"nodeType":"YulBlock","src":"20741:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20779:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20809:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20816:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20805:3:17"},"nodeType":"YulFunctionCall","src":"20805:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20799:5:17"},"nodeType":"YulFunctionCall","src":"20799:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20783:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20869:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20887:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"20892:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20883:3:17"},"nodeType":"YulFunctionCall","src":"20883:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"20835:33:17"},"nodeType":"YulFunctionCall","src":"20835:63:17"},"nodeType":"YulExpressionStatement","src":"20835:63:17"}]},{"nodeType":"YulBlock","src":"20918:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20955:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20985:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20992:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20981:3:17"},"nodeType":"YulFunctionCall","src":"20981:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20975:5:17"},"nodeType":"YulFunctionCall","src":"20975:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20959:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21045:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21063:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21068:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21059:3:17"},"nodeType":"YulFunctionCall","src":"21059:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"21011:33:17"},"nodeType":"YulFunctionCall","src":"21011:63:17"},"nodeType":"YulExpressionStatement","src":"21011:63:17"}]},{"nodeType":"YulBlock","src":"21094:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21132:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21162:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"21169:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21158:3:17"},"nodeType":"YulFunctionCall","src":"21158:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21152:5:17"},"nodeType":"YulFunctionCall","src":"21152:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21136:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21222:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21240:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21245:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21236:3:17"},"nodeType":"YulFunctionCall","src":"21236:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21188:33:17"},"nodeType":"YulFunctionCall","src":"21188:63:17"},"nodeType":"YulExpressionStatement","src":"21188:63:17"}]},{"nodeType":"YulBlock","src":"21271:164:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21306:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21336:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"21343:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21332:3:17"},"nodeType":"YulFunctionCall","src":"21332:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21326:5:17"},"nodeType":"YulFunctionCall","src":"21326:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21310:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21396:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21414:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21419:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21410:3:17"},"nodeType":"YulFunctionCall","src":"21410:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21362:33:17"},"nodeType":"YulFunctionCall","src":"21362:63:17"},"nodeType":"YulExpressionStatement","src":"21362:63:17"}]},{"nodeType":"YulBlock","src":"21445:179:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21491:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21521:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"21528:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21517:3:17"},"nodeType":"YulFunctionCall","src":"21517:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21511:5:17"},"nodeType":"YulFunctionCall","src":"21511:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21495:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21583:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21601:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21606:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21597:3:17"},"nodeType":"YulFunctionCall","src":"21597:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21549:33:17"},"nodeType":"YulFunctionCall","src":"21549:65:17"},"nodeType":"YulExpressionStatement","src":"21549:65:17"}]},{"nodeType":"YulBlock","src":"21634:179:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21680:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21710:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"21717:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21706:3:17"},"nodeType":"YulFunctionCall","src":"21706:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21700:5:17"},"nodeType":"YulFunctionCall","src":"21700:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21684:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21772:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21790:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21795:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21786:3:17"},"nodeType":"YulFunctionCall","src":"21786:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21738:33:17"},"nodeType":"YulFunctionCall","src":"21738:65:17"},"nodeType":"YulExpressionStatement","src":"21738:65:17"}]},{"nodeType":"YulBlock","src":"21823:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21863:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21893:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"21900:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21889:3:17"},"nodeType":"YulFunctionCall","src":"21889:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21883:5:17"},"nodeType":"YulFunctionCall","src":"21883:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21867:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21949:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21967:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"21972:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21963:3:17"},"nodeType":"YulFunctionCall","src":"21963:16:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"21921:27:17"},"nodeType":"YulFunctionCall","src":"21921:59:17"},"nodeType":"YulExpressionStatement","src":"21921:59:17"}]}]},"name":"abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19977:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19984:3:17","type":""}],"src":"19876:2121:17"},{"body":{"nodeType":"YulBlock","src":"22197:2204:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22207:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22223:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22228:6:17","type":"","value":"0x0180"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22219:3:17"},"nodeType":"YulFunctionCall","src":"22219:16:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"22211:4:17","type":""}]},{"nodeType":"YulBlock","src":"22245:162:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22278:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22308:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"22315:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22304:3:17"},"nodeType":"YulFunctionCall","src":"22304:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22298:5:17"},"nodeType":"YulFunctionCall","src":"22298:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22282:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22368:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22386:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22391:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22382:3:17"},"nodeType":"YulFunctionCall","src":"22382:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22334:33:17"},"nodeType":"YulFunctionCall","src":"22334:63:17"},"nodeType":"YulExpressionStatement","src":"22334:63:17"}]},{"nodeType":"YulBlock","src":"22417:171:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22452:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22482:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"22489:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22478:3:17"},"nodeType":"YulFunctionCall","src":"22478:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22472:5:17"},"nodeType":"YulFunctionCall","src":"22472:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22456:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22549:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22567:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22572:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22563:3:17"},"nodeType":"YulFunctionCall","src":"22563:14:17"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulIdentifier","src":"22508:40:17"},"nodeType":"YulFunctionCall","src":"22508:70:17"},"nodeType":"YulExpressionStatement","src":"22508:70:17"}]},{"nodeType":"YulBlock","src":"22598:164:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22633:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22663:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"22670:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22659:3:17"},"nodeType":"YulFunctionCall","src":"22659:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22653:5:17"},"nodeType":"YulFunctionCall","src":"22653:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22637:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22723:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22741:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22746:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22737:3:17"},"nodeType":"YulFunctionCall","src":"22737:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"22689:33:17"},"nodeType":"YulFunctionCall","src":"22689:63:17"},"nodeType":"YulExpressionStatement","src":"22689:63:17"}]},{"nodeType":"YulBlock","src":"22772:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22809:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22839:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"22846:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22835:3:17"},"nodeType":"YulFunctionCall","src":"22835:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22829:5:17"},"nodeType":"YulFunctionCall","src":"22829:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22813:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22899:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22917:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22922:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22913:3:17"},"nodeType":"YulFunctionCall","src":"22913:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"22865:33:17"},"nodeType":"YulFunctionCall","src":"22865:63:17"},"nodeType":"YulExpressionStatement","src":"22865:63:17"}]},{"nodeType":"YulBlock","src":"22948:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22985:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23015:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"23022:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23011:3:17"},"nodeType":"YulFunctionCall","src":"23011:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23005:5:17"},"nodeType":"YulFunctionCall","src":"23005:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22989:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"23075:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23093:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23098:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23089:3:17"},"nodeType":"YulFunctionCall","src":"23089:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"23041:33:17"},"nodeType":"YulFunctionCall","src":"23041:63:17"},"nodeType":"YulExpressionStatement","src":"23041:63:17"}]},{"nodeType":"YulBlock","src":"23124:172:17","statements":[{"nodeType":"YulVariableDeclaration","src":"23167:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23197:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"23204:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23193:3:17"},"nodeType":"YulFunctionCall","src":"23193:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23187:5:17"},"nodeType":"YulFunctionCall","src":"23187:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"23171:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"23257:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23275:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23280:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23271:3:17"},"nodeType":"YulFunctionCall","src":"23271:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"23223:33:17"},"nodeType":"YulFunctionCall","src":"23223:63:17"},"nodeType":"YulExpressionStatement","src":"23223:63:17"}]},{"nodeType":"YulBlock","src":"23306:168:17","statements":[{"nodeType":"YulVariableDeclaration","src":"23345:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23375:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"23382:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23371:3:17"},"nodeType":"YulFunctionCall","src":"23371:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23365:5:17"},"nodeType":"YulFunctionCall","src":"23365:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"23349:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"23435:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23453:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23458:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23449:3:17"},"nodeType":"YulFunctionCall","src":"23449:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"23401:33:17"},"nodeType":"YulFunctionCall","src":"23401:63:17"},"nodeType":"YulExpressionStatement","src":"23401:63:17"}]},{"nodeType":"YulBlock","src":"23484:172:17","statements":[{"nodeType":"YulVariableDeclaration","src":"23527:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23557:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"23564:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23553:3:17"},"nodeType":"YulFunctionCall","src":"23553:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23547:5:17"},"nodeType":"YulFunctionCall","src":"23547:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"23531:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"23617:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23635:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23640:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23631:3:17"},"nodeType":"YulFunctionCall","src":"23631:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"23583:33:17"},"nodeType":"YulFunctionCall","src":"23583:63:17"},"nodeType":"YulExpressionStatement","src":"23583:63:17"}]},{"nodeType":"YulBlock","src":"23666:179:17","statements":[{"nodeType":"YulVariableDeclaration","src":"23712:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23742:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"23749:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23738:3:17"},"nodeType":"YulFunctionCall","src":"23738:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23732:5:17"},"nodeType":"YulFunctionCall","src":"23732:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"23716:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"23804:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23822:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"23827:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23818:3:17"},"nodeType":"YulFunctionCall","src":"23818:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"23770:33:17"},"nodeType":"YulFunctionCall","src":"23770:65:17"},"nodeType":"YulExpressionStatement","src":"23770:65:17"}]},{"nodeType":"YulBlock","src":"23855:179:17","statements":[{"nodeType":"YulVariableDeclaration","src":"23901:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23931:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"23938:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23927:3:17"},"nodeType":"YulFunctionCall","src":"23927:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23921:5:17"},"nodeType":"YulFunctionCall","src":"23921:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"23905:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"23993:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24011:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24016:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24007:3:17"},"nodeType":"YulFunctionCall","src":"24007:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"23959:33:17"},"nodeType":"YulFunctionCall","src":"23959:65:17"},"nodeType":"YulExpressionStatement","src":"23959:65:17"}]},{"nodeType":"YulBlock","src":"24044:168:17","statements":[{"nodeType":"YulVariableDeclaration","src":"24085:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24115:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"24122:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24111:3:17"},"nodeType":"YulFunctionCall","src":"24111:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24105:5:17"},"nodeType":"YulFunctionCall","src":"24105:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"24089:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"24171:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24189:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24194:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24185:3:17"},"nodeType":"YulFunctionCall","src":"24185:16:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"24143:27:17"},"nodeType":"YulFunctionCall","src":"24143:59:17"},"nodeType":"YulExpressionStatement","src":"24143:59:17"}]},{"nodeType":"YulBlock","src":"24222:172:17","statements":[{"nodeType":"YulVariableDeclaration","src":"24261:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24291:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"24298:6:17","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24287:3:17"},"nodeType":"YulFunctionCall","src":"24287:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24281:5:17"},"nodeType":"YulFunctionCall","src":"24281:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"24265:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"24353:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24371:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24376:6:17","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24367:3:17"},"nodeType":"YulFunctionCall","src":"24367:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"24319:33:17"},"nodeType":"YulFunctionCall","src":"24319:65:17"},"nodeType":"YulExpressionStatement","src":"24319:65:17"}]}]},"name":"abi_encode_t_struct$__filledOrder_$1658_memory_ptr_to_t_struct$__filledOrder_$1658_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22184:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22191:3:17","type":""}],"src":"22071:2330:17"},{"body":{"nodeType":"YulBlock","src":"24462:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24479:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24502:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24484:17:17"},"nodeType":"YulFunctionCall","src":"24484:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24472:6:17"},"nodeType":"YulFunctionCall","src":"24472:37:17"},"nodeType":"YulExpressionStatement","src":"24472:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24450:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24457:3:17","type":""}],"src":"24407:108:17"},{"body":{"nodeType":"YulBlock","src":"24586:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24603:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24626:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24608:17:17"},"nodeType":"YulFunctionCall","src":"24608:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24596:6:17"},"nodeType":"YulFunctionCall","src":"24596:37:17"},"nodeType":"YulExpressionStatement","src":"24596:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24574:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24581:3:17","type":""}],"src":"24521:118:17"},{"body":{"nodeType":"YulBlock","src":"24743:124:17","statements":[{"nodeType":"YulAssignment","src":"24753:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24765:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24776:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24761:3:17"},"nodeType":"YulFunctionCall","src":"24761:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24753:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24833:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24846:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24857:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24842:3:17"},"nodeType":"YulFunctionCall","src":"24842:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24789:43:17"},"nodeType":"YulFunctionCall","src":"24789:71:17"},"nodeType":"YulExpressionStatement","src":"24789:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24715:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24727:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24738:4:17","type":""}],"src":"24645:222:17"},{"body":{"nodeType":"YulBlock","src":"24999:206:17","statements":[{"nodeType":"YulAssignment","src":"25009:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25021:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25032:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25017:3:17"},"nodeType":"YulFunctionCall","src":"25017:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25009:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25089:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25102:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25113:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25098:3:17"},"nodeType":"YulFunctionCall","src":"25098:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25045:43:17"},"nodeType":"YulFunctionCall","src":"25045:71:17"},"nodeType":"YulExpressionStatement","src":"25045:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25170:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25183:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25194:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25179:3:17"},"nodeType":"YulFunctionCall","src":"25179:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25126:43:17"},"nodeType":"YulFunctionCall","src":"25126:72:17"},"nodeType":"YulExpressionStatement","src":"25126:72:17"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24963:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24975:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24983:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24994:4:17","type":""}],"src":"24873:332:17"},{"body":{"nodeType":"YulBlock","src":"25387:365:17","statements":[{"nodeType":"YulAssignment","src":"25397:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25409:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25420:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25405:3:17"},"nodeType":"YulFunctionCall","src":"25405:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25397:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25478:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25491:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25502:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25487:3:17"},"nodeType":"YulFunctionCall","src":"25487:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25434:43:17"},"nodeType":"YulFunctionCall","src":"25434:71:17"},"nodeType":"YulExpressionStatement","src":"25434:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25559:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25572:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25583:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25568:3:17"},"nodeType":"YulFunctionCall","src":"25568:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25515:43:17"},"nodeType":"YulFunctionCall","src":"25515:72:17"},"nodeType":"YulExpressionStatement","src":"25515:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25641:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25654:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25665:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25650:3:17"},"nodeType":"YulFunctionCall","src":"25650:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25597:43:17"},"nodeType":"YulFunctionCall","src":"25597:72:17"},"nodeType":"YulExpressionStatement","src":"25597:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25717:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25730:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25741:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25726:3:17"},"nodeType":"YulFunctionCall","src":"25726:18:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25679:37:17"},"nodeType":"YulFunctionCall","src":"25679:66:17"},"nodeType":"YulExpressionStatement","src":"25679:66:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25335:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25347:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25355:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25363:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25371:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25382:4:17","type":""}],"src":"25211:541:17"},{"body":{"nodeType":"YulBlock","src":"25884:206:17","statements":[{"nodeType":"YulAssignment","src":"25894:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25906:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25917:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25902:3:17"},"nodeType":"YulFunctionCall","src":"25902:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25894:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25974:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25987:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25998:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25983:3:17"},"nodeType":"YulFunctionCall","src":"25983:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25930:43:17"},"nodeType":"YulFunctionCall","src":"25930:71:17"},"nodeType":"YulExpressionStatement","src":"25930:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26055:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26068:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26079:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26064:3:17"},"nodeType":"YulFunctionCall","src":"26064:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26011:43:17"},"nodeType":"YulFunctionCall","src":"26011:72:17"},"nodeType":"YulExpressionStatement","src":"26011:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25848:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25860:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25868:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25879:4:17","type":""}],"src":"25758:332:17"},{"body":{"nodeType":"YulBlock","src":"26188:118:17","statements":[{"nodeType":"YulAssignment","src":"26198:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26210:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26221:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26206:3:17"},"nodeType":"YulFunctionCall","src":"26206:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26198:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26272:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26285:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26296:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26281:3:17"},"nodeType":"YulFunctionCall","src":"26281:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"26234:37:17"},"nodeType":"YulFunctionCall","src":"26234:65:17"},"nodeType":"YulExpressionStatement","src":"26234:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26160:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26172:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26183:4:17","type":""}],"src":"26096:210:17"},{"body":{"nodeType":"YulBlock","src":"26483:248:17","statements":[{"nodeType":"YulAssignment","src":"26493:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26505:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26516:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26501:3:17"},"nodeType":"YulFunctionCall","src":"26501:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26493:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26540:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26551:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26536:3:17"},"nodeType":"YulFunctionCall","src":"26536:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26559:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"26565:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26555:3:17"},"nodeType":"YulFunctionCall","src":"26555:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26529:6:17"},"nodeType":"YulFunctionCall","src":"26529:47:17"},"nodeType":"YulExpressionStatement","src":"26529:47:17"},{"nodeType":"YulAssignment","src":"26585:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26719:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26593:124:17"},"nodeType":"YulFunctionCall","src":"26593:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26585:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26463:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26478:4:17","type":""}],"src":"26312:419:17"},{"body":{"nodeType":"YulBlock","src":"26908:248:17","statements":[{"nodeType":"YulAssignment","src":"26918:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26930:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26941:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26926:3:17"},"nodeType":"YulFunctionCall","src":"26926:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26918:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26965:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26976:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26961:3:17"},"nodeType":"YulFunctionCall","src":"26961:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26984:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"26990:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26980:3:17"},"nodeType":"YulFunctionCall","src":"26980:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26954:6:17"},"nodeType":"YulFunctionCall","src":"26954:47:17"},"nodeType":"YulExpressionStatement","src":"26954:47:17"},{"nodeType":"YulAssignment","src":"27010:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27144:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27018:124:17"},"nodeType":"YulFunctionCall","src":"27018:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27010:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26888:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26903:4:17","type":""}],"src":"26737:419:17"},{"body":{"nodeType":"YulBlock","src":"27333:248:17","statements":[{"nodeType":"YulAssignment","src":"27343:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27355:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27366:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27351:3:17"},"nodeType":"YulFunctionCall","src":"27351:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27343:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27390:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27401:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27386:3:17"},"nodeType":"YulFunctionCall","src":"27386:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27409:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"27415:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27405:3:17"},"nodeType":"YulFunctionCall","src":"27405:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27379:6:17"},"nodeType":"YulFunctionCall","src":"27379:47:17"},"nodeType":"YulExpressionStatement","src":"27379:47:17"},{"nodeType":"YulAssignment","src":"27435:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27569:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27443:124:17"},"nodeType":"YulFunctionCall","src":"27443:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27435:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27313:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27328:4:17","type":""}],"src":"27162:419:17"},{"body":{"nodeType":"YulBlock","src":"27758:248:17","statements":[{"nodeType":"YulAssignment","src":"27768:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27780:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27791:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27776:3:17"},"nodeType":"YulFunctionCall","src":"27776:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27768:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27815:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27826:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27811:3:17"},"nodeType":"YulFunctionCall","src":"27811:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27834:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"27840:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27830:3:17"},"nodeType":"YulFunctionCall","src":"27830:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27804:6:17"},"nodeType":"YulFunctionCall","src":"27804:47:17"},"nodeType":"YulExpressionStatement","src":"27804:47:17"},{"nodeType":"YulAssignment","src":"27860:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27994:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27868:124:17"},"nodeType":"YulFunctionCall","src":"27868:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27860:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27738:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27753:4:17","type":""}],"src":"27587:419:17"},{"body":{"nodeType":"YulBlock","src":"28183:248:17","statements":[{"nodeType":"YulAssignment","src":"28193:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28205:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28216:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28201:3:17"},"nodeType":"YulFunctionCall","src":"28201:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28193:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28240:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28251:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28236:3:17"},"nodeType":"YulFunctionCall","src":"28236:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28259:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"28265:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28255:3:17"},"nodeType":"YulFunctionCall","src":"28255:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28229:6:17"},"nodeType":"YulFunctionCall","src":"28229:47:17"},"nodeType":"YulExpressionStatement","src":"28229:47:17"},{"nodeType":"YulAssignment","src":"28285:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28419:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28293:124:17"},"nodeType":"YulFunctionCall","src":"28293:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28285:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28163:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28178:4:17","type":""}],"src":"28012:419:17"},{"body":{"nodeType":"YulBlock","src":"28608:248:17","statements":[{"nodeType":"YulAssignment","src":"28618:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28630:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28641:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28626:3:17"},"nodeType":"YulFunctionCall","src":"28626:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28618:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28665:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28676:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28661:3:17"},"nodeType":"YulFunctionCall","src":"28661:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28684:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"28690:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28680:3:17"},"nodeType":"YulFunctionCall","src":"28680:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28654:6:17"},"nodeType":"YulFunctionCall","src":"28654:47:17"},"nodeType":"YulExpressionStatement","src":"28654:47:17"},{"nodeType":"YulAssignment","src":"28710:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28844:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28718:124:17"},"nodeType":"YulFunctionCall","src":"28718:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28710:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28588:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28603:4:17","type":""}],"src":"28437:419:17"},{"body":{"nodeType":"YulBlock","src":"29033:248:17","statements":[{"nodeType":"YulAssignment","src":"29043:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29055:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29066:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29051:3:17"},"nodeType":"YulFunctionCall","src":"29051:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29043:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29090:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29101:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29086:3:17"},"nodeType":"YulFunctionCall","src":"29086:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29109:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"29115:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29105:3:17"},"nodeType":"YulFunctionCall","src":"29105:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29079:6:17"},"nodeType":"YulFunctionCall","src":"29079:47:17"},"nodeType":"YulExpressionStatement","src":"29079:47:17"},{"nodeType":"YulAssignment","src":"29135:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29269:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29143:124:17"},"nodeType":"YulFunctionCall","src":"29143:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29135:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29013:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29028:4:17","type":""}],"src":"28862:419:17"},{"body":{"nodeType":"YulBlock","src":"29458:248:17","statements":[{"nodeType":"YulAssignment","src":"29468:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29480:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29491:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29476:3:17"},"nodeType":"YulFunctionCall","src":"29476:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29468:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29515:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29526:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29511:3:17"},"nodeType":"YulFunctionCall","src":"29511:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29534:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"29540:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29530:3:17"},"nodeType":"YulFunctionCall","src":"29530:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29504:6:17"},"nodeType":"YulFunctionCall","src":"29504:47:17"},"nodeType":"YulExpressionStatement","src":"29504:47:17"},{"nodeType":"YulAssignment","src":"29560:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29694:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29568:124:17"},"nodeType":"YulFunctionCall","src":"29568:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29560:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29438:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29453:4:17","type":""}],"src":"29287:419:17"},{"body":{"nodeType":"YulBlock","src":"29883:248:17","statements":[{"nodeType":"YulAssignment","src":"29893:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29905:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29916:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29901:3:17"},"nodeType":"YulFunctionCall","src":"29901:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29893:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29940:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29951:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29936:3:17"},"nodeType":"YulFunctionCall","src":"29936:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29959:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"29965:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29955:3:17"},"nodeType":"YulFunctionCall","src":"29955:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29929:6:17"},"nodeType":"YulFunctionCall","src":"29929:47:17"},"nodeType":"YulExpressionStatement","src":"29929:47:17"},{"nodeType":"YulAssignment","src":"29985:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30119:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29993:124:17"},"nodeType":"YulFunctionCall","src":"29993:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29985:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29863:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29878:4:17","type":""}],"src":"29712:419:17"},{"body":{"nodeType":"YulBlock","src":"30308:248:17","statements":[{"nodeType":"YulAssignment","src":"30318:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30330:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30341:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30326:3:17"},"nodeType":"YulFunctionCall","src":"30326:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30318:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30365:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30376:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30361:3:17"},"nodeType":"YulFunctionCall","src":"30361:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30384:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"30390:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30380:3:17"},"nodeType":"YulFunctionCall","src":"30380:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30354:6:17"},"nodeType":"YulFunctionCall","src":"30354:47:17"},"nodeType":"YulExpressionStatement","src":"30354:47:17"},{"nodeType":"YulAssignment","src":"30410:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30544:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30418:124:17"},"nodeType":"YulFunctionCall","src":"30418:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30410:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30288:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30303:4:17","type":""}],"src":"30137:419:17"},{"body":{"nodeType":"YulBlock","src":"30733:248:17","statements":[{"nodeType":"YulAssignment","src":"30743:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30755:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30766:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30751:3:17"},"nodeType":"YulFunctionCall","src":"30751:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30743:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30790:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30801:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30786:3:17"},"nodeType":"YulFunctionCall","src":"30786:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30809:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"30815:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30805:3:17"},"nodeType":"YulFunctionCall","src":"30805:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30779:6:17"},"nodeType":"YulFunctionCall","src":"30779:47:17"},"nodeType":"YulExpressionStatement","src":"30779:47:17"},{"nodeType":"YulAssignment","src":"30835:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30969:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30843:124:17"},"nodeType":"YulFunctionCall","src":"30843:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30835:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30713:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30728:4:17","type":""}],"src":"30562:419:17"},{"body":{"nodeType":"YulBlock","src":"31133:173:17","statements":[{"nodeType":"YulAssignment","src":"31143:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31155:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31166:3:17","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31151:3:17"},"nodeType":"YulFunctionCall","src":"31151:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31143:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31272:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31285:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31296:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31281:3:17"},"nodeType":"YulFunctionCall","src":"31281:17:17"}],"functionName":{"name":"abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31180:91:17"},"nodeType":"YulFunctionCall","src":"31180:119:17"},"nodeType":"YulExpressionStatement","src":"31180:119:17"}]},"name":"abi_encode_tuple_t_struct$__Order_$1629_memory_ptr__to_t_struct$__Order_$1629_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31105:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31117:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31128:4:17","type":""}],"src":"30987:319:17"},{"body":{"nodeType":"YulBlock","src":"31486:256:17","statements":[{"nodeType":"YulAssignment","src":"31496:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31508:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31519:3:17","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31504:3:17"},"nodeType":"YulFunctionCall","src":"31504:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31496:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31625:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31638:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31649:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31634:3:17"},"nodeType":"YulFunctionCall","src":"31634:17:17"}],"functionName":{"name":"abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31533:91:17"},"nodeType":"YulFunctionCall","src":"31533:119:17"},"nodeType":"YulExpressionStatement","src":"31533:119:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31706:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31719:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31730:3:17","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31715:3:17"},"nodeType":"YulFunctionCall","src":"31715:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31662:43:17"},"nodeType":"YulFunctionCall","src":"31662:73:17"},"nodeType":"YulExpressionStatement","src":"31662:73:17"}]},"name":"abi_encode_tuple_t_struct$__Order_$1629_memory_ptr_t_uint256__to_t_struct$__Order_$1629_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31450:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31462:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31470:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31481:4:17","type":""}],"src":"31312:430:17"},{"body":{"nodeType":"YulBlock","src":"31906:185:17","statements":[{"nodeType":"YulAssignment","src":"31916:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31928:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31939:3:17","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31924:3:17"},"nodeType":"YulFunctionCall","src":"31924:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31916:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32057:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32070:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32081:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32066:3:17"},"nodeType":"YulFunctionCall","src":"32066:17:17"}],"functionName":{"name":"abi_encode_t_struct$__filledOrder_$1658_memory_ptr_to_t_struct$__filledOrder_$1658_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31953:103:17"},"nodeType":"YulFunctionCall","src":"31953:131:17"},"nodeType":"YulExpressionStatement","src":"31953:131:17"}]},"name":"abi_encode_tuple_t_struct$__filledOrder_$1658_memory_ptr__to_t_struct$__filledOrder_$1658_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31878:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31890:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31901:4:17","type":""}],"src":"31748:343:17"},{"body":{"nodeType":"YulBlock","src":"32195:124:17","statements":[{"nodeType":"YulAssignment","src":"32205:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32217:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32228:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32213:3:17"},"nodeType":"YulFunctionCall","src":"32213:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32205:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32285:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32298:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32309:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32294:3:17"},"nodeType":"YulFunctionCall","src":"32294:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32241:43:17"},"nodeType":"YulFunctionCall","src":"32241:71:17"},"nodeType":"YulExpressionStatement","src":"32241:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32167:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32179:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32190:4:17","type":""}],"src":"32097:222:17"},{"body":{"nodeType":"YulBlock","src":"32734:1038:17","statements":[{"nodeType":"YulAssignment","src":"32744:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32756:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32767:3:17","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32752:3:17"},"nodeType":"YulFunctionCall","src":"32752:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32744:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32825:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32838:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32849:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32834:3:17"},"nodeType":"YulFunctionCall","src":"32834:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32781:43:17"},"nodeType":"YulFunctionCall","src":"32781:71:17"},"nodeType":"YulExpressionStatement","src":"32781:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32913:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32926:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32937:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32922:3:17"},"nodeType":"YulFunctionCall","src":"32922:18:17"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"32862:50:17"},"nodeType":"YulFunctionCall","src":"32862:79:17"},"nodeType":"YulExpressionStatement","src":"32862:79:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32995:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33008:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33019:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33004:3:17"},"nodeType":"YulFunctionCall","src":"33004:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"32951:43:17"},"nodeType":"YulFunctionCall","src":"32951:72:17"},"nodeType":"YulExpressionStatement","src":"32951:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33077:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33090:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33101:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33086:3:17"},"nodeType":"YulFunctionCall","src":"33086:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33033:43:17"},"nodeType":"YulFunctionCall","src":"33033:72:17"},"nodeType":"YulExpressionStatement","src":"33033:72:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"33159:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33172:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33183:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33168:3:17"},"nodeType":"YulFunctionCall","src":"33168:19:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33115:43:17"},"nodeType":"YulFunctionCall","src":"33115:73:17"},"nodeType":"YulExpressionStatement","src":"33115:73:17"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"33242:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33255:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33266:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33251:3:17"},"nodeType":"YulFunctionCall","src":"33251:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33198:43:17"},"nodeType":"YulFunctionCall","src":"33198:73:17"},"nodeType":"YulExpressionStatement","src":"33198:73:17"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"33325:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33338:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33349:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33334:3:17"},"nodeType":"YulFunctionCall","src":"33334:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33281:43:17"},"nodeType":"YulFunctionCall","src":"33281:73:17"},"nodeType":"YulExpressionStatement","src":"33281:73:17"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"33408:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33421:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33432:3:17","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33417:3:17"},"nodeType":"YulFunctionCall","src":"33417:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33364:43:17"},"nodeType":"YulFunctionCall","src":"33364:73:17"},"nodeType":"YulExpressionStatement","src":"33364:73:17"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"33491:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33504:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33515:3:17","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33500:3:17"},"nodeType":"YulFunctionCall","src":"33500:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33447:43:17"},"nodeType":"YulFunctionCall","src":"33447:73:17"},"nodeType":"YulExpressionStatement","src":"33447:73:17"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"33574:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33587:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33598:3:17","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33583:3:17"},"nodeType":"YulFunctionCall","src":"33583:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33530:43:17"},"nodeType":"YulFunctionCall","src":"33530:73:17"},"nodeType":"YulExpressionStatement","src":"33530:73:17"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"33651:7:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33665:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33676:3:17","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33661:3:17"},"nodeType":"YulFunctionCall","src":"33661:19:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"33613:37:17"},"nodeType":"YulFunctionCall","src":"33613:68:17"},"nodeType":"YulExpressionStatement","src":"33613:68:17"},{"expression":{"arguments":[{"name":"value11","nodeType":"YulIdentifier","src":"33735:7:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33749:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33760:3:17","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33745:3:17"},"nodeType":"YulFunctionCall","src":"33745:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33691:43:17"},"nodeType":"YulFunctionCall","src":"33691:74:17"},"nodeType":"YulExpressionStatement","src":"33691:74:17"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_Side_$1661_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32616:9:17","type":""},{"name":"value11","nodeType":"YulTypedName","src":"32628:7:17","type":""},{"name":"value10","nodeType":"YulTypedName","src":"32637:7:17","type":""},{"name":"value9","nodeType":"YulTypedName","src":"32646:6:17","type":""},{"name":"value8","nodeType":"YulTypedName","src":"32654:6:17","type":""},{"name":"value7","nodeType":"YulTypedName","src":"32662:6:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"32670:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"32678:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"32686:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32694:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32702:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32710:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32718:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32729:4:17","type":""}],"src":"32325:1447:17"},{"body":{"nodeType":"YulBlock","src":"34158:954:17","statements":[{"nodeType":"YulAssignment","src":"34168:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34180:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34191:3:17","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34176:3:17"},"nodeType":"YulFunctionCall","src":"34176:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34168:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34249:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34262:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34273:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34258:3:17"},"nodeType":"YulFunctionCall","src":"34258:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34205:43:17"},"nodeType":"YulFunctionCall","src":"34205:71:17"},"nodeType":"YulExpressionStatement","src":"34205:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34337:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34350:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34361:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34346:3:17"},"nodeType":"YulFunctionCall","src":"34346:18:17"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"34286:50:17"},"nodeType":"YulFunctionCall","src":"34286:79:17"},"nodeType":"YulExpressionStatement","src":"34286:79:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34419:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34432:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34443:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34428:3:17"},"nodeType":"YulFunctionCall","src":"34428:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34375:43:17"},"nodeType":"YulFunctionCall","src":"34375:72:17"},"nodeType":"YulExpressionStatement","src":"34375:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34501:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34514:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34525:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34510:3:17"},"nodeType":"YulFunctionCall","src":"34510:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34457:43:17"},"nodeType":"YulFunctionCall","src":"34457:72:17"},"nodeType":"YulExpressionStatement","src":"34457:72:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"34583:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34596:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34607:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34592:3:17"},"nodeType":"YulFunctionCall","src":"34592:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34539:43:17"},"nodeType":"YulFunctionCall","src":"34539:73:17"},"nodeType":"YulExpressionStatement","src":"34539:73:17"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"34666:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34679:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34690:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34675:3:17"},"nodeType":"YulFunctionCall","src":"34675:19:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34622:43:17"},"nodeType":"YulFunctionCall","src":"34622:73:17"},"nodeType":"YulExpressionStatement","src":"34622:73:17"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"34749:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34762:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34773:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34758:3:17"},"nodeType":"YulFunctionCall","src":"34758:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34705:43:17"},"nodeType":"YulFunctionCall","src":"34705:73:17"},"nodeType":"YulExpressionStatement","src":"34705:73:17"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"34832:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34845:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34856:3:17","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34841:3:17"},"nodeType":"YulFunctionCall","src":"34841:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34788:43:17"},"nodeType":"YulFunctionCall","src":"34788:73:17"},"nodeType":"YulExpressionStatement","src":"34788:73:17"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"34915:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34928:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34939:3:17","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34924:3:17"},"nodeType":"YulFunctionCall","src":"34924:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34871:43:17"},"nodeType":"YulFunctionCall","src":"34871:73:17"},"nodeType":"YulExpressionStatement","src":"34871:73:17"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"34998:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35011:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35022:3:17","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35007:3:17"},"nodeType":"YulFunctionCall","src":"35007:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34954:43:17"},"nodeType":"YulFunctionCall","src":"34954:73:17"},"nodeType":"YulExpressionStatement","src":"34954:73:17"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"35075:7:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35089:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35100:3:17","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35085:3:17"},"nodeType":"YulFunctionCall","src":"35085:19:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"35037:37:17"},"nodeType":"YulFunctionCall","src":"35037:68:17"},"nodeType":"YulExpressionStatement","src":"35037:68:17"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_Side_$1661_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34049:9:17","type":""},{"name":"value10","nodeType":"YulTypedName","src":"34061:7:17","type":""},{"name":"value9","nodeType":"YulTypedName","src":"34070:6:17","type":""},{"name":"value8","nodeType":"YulTypedName","src":"34078:6:17","type":""},{"name":"value7","nodeType":"YulTypedName","src":"34086:6:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"34094:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"34102:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"34110:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"34118:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34126:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34134:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34142:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34153:4:17","type":""}],"src":"33778:1334:17"},{"body":{"nodeType":"YulBlock","src":"35159:88:17","statements":[{"nodeType":"YulAssignment","src":"35169:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"35179:18:17"},"nodeType":"YulFunctionCall","src":"35179:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35169:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35228:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"35236:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"35208:19:17"},"nodeType":"YulFunctionCall","src":"35208:33:17"},"nodeType":"YulExpressionStatement","src":"35208:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"35143:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"35152:6:17","type":""}],"src":"35118:129:17"},{"body":{"nodeType":"YulBlock","src":"35293:35:17","statements":[{"nodeType":"YulAssignment","src":"35303:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35319:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35313:5:17"},"nodeType":"YulFunctionCall","src":"35313:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35303:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"35286:6:17","type":""}],"src":"35253:75:17"},{"body":{"nodeType":"YulBlock","src":"35430:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35447:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"35452:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35440:6:17"},"nodeType":"YulFunctionCall","src":"35440:19:17"},"nodeType":"YulExpressionStatement","src":"35440:19:17"},{"nodeType":"YulAssignment","src":"35468:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35487:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"35492:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35483:3:17"},"nodeType":"YulFunctionCall","src":"35483:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"35468:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35402:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"35407:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"35418:11:17","type":""}],"src":"35334:169:17"},{"body":{"nodeType":"YulBlock","src":"35553:261:17","statements":[{"nodeType":"YulAssignment","src":"35563:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35586:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35568:17:17"},"nodeType":"YulFunctionCall","src":"35568:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"35563:1:17"}]},{"nodeType":"YulAssignment","src":"35597:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35620:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35602:17:17"},"nodeType":"YulFunctionCall","src":"35602:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"35597:1:17"}]},{"body":{"nodeType":"YulBlock","src":"35760:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35762:16:17"},"nodeType":"YulFunctionCall","src":"35762:18:17"},"nodeType":"YulExpressionStatement","src":"35762:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35681:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35688:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"35756:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35684:3:17"},"nodeType":"YulFunctionCall","src":"35684:74:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35678:2:17"},"nodeType":"YulFunctionCall","src":"35678:81:17"},"nodeType":"YulIf","src":"35675:107:17"},{"nodeType":"YulAssignment","src":"35792:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35803:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"35806:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35799:3:17"},"nodeType":"YulFunctionCall","src":"35799:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"35792:3:17"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"35540:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"35543:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"35549:3:17","type":""}],"src":"35509:305:17"},{"body":{"nodeType":"YulBlock","src":"35865:146:17","statements":[{"nodeType":"YulAssignment","src":"35875:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35898:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35880:17:17"},"nodeType":"YulFunctionCall","src":"35880:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"35875:1:17"}]},{"nodeType":"YulAssignment","src":"35909:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35932:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35914:17:17"},"nodeType":"YulFunctionCall","src":"35914:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"35909:1:17"}]},{"body":{"nodeType":"YulBlock","src":"35956:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35958:16:17"},"nodeType":"YulFunctionCall","src":"35958:18:17"},"nodeType":"YulExpressionStatement","src":"35958:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35950:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"35953:1:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35947:2:17"},"nodeType":"YulFunctionCall","src":"35947:8:17"},"nodeType":"YulIf","src":"35944:34:17"},{"nodeType":"YulAssignment","src":"35988:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36000:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"36003:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35996:3:17"},"nodeType":"YulFunctionCall","src":"35996:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"35988:4:17"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"35851:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"35854:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"35860:4:17","type":""}],"src":"35820:191:17"},{"body":{"nodeType":"YulBlock","src":"36062:51:17","statements":[{"nodeType":"YulAssignment","src":"36072:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36101:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"36083:17:17"},"nodeType":"YulFunctionCall","src":"36083:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"36072:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36044:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"36054:7:17","type":""}],"src":"36017:96:17"},{"body":{"nodeType":"YulBlock","src":"36161:48:17","statements":[{"nodeType":"YulAssignment","src":"36171:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36196:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36189:6:17"},"nodeType":"YulFunctionCall","src":"36189:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36182:6:17"},"nodeType":"YulFunctionCall","src":"36182:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"36171:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36143:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"36153:7:17","type":""}],"src":"36119:90:17"},{"body":{"nodeType":"YulBlock","src":"36269:75:17","statements":[{"nodeType":"YulAssignment","src":"36279:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"36290:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"36279:7:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36332:5:17"}],"functionName":{"name":"validator_assert_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"36296:35:17"},"nodeType":"YulFunctionCall","src":"36296:42:17"},"nodeType":"YulExpressionStatement","src":"36296:42:17"}]},"name":"cleanup_t_enum$_Side_$1661","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36251:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"36261:7:17","type":""}],"src":"36215:129:17"},{"body":{"nodeType":"YulBlock","src":"36395:81:17","statements":[{"nodeType":"YulAssignment","src":"36405:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36420:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"36427:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36416:3:17"},"nodeType":"YulFunctionCall","src":"36416:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"36405:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36377:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"36387:7:17","type":""}],"src":"36350:126:17"},{"body":{"nodeType":"YulBlock","src":"36527:32:17","statements":[{"nodeType":"YulAssignment","src":"36537:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"36548:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"36537:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36509:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"36519:7:17","type":""}],"src":"36482:77:17"},{"body":{"nodeType":"YulBlock","src":"36632:62:17","statements":[{"nodeType":"YulAssignment","src":"36642:46:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36682:5:17"}],"functionName":{"name":"cleanup_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"36655:26:17"},"nodeType":"YulFunctionCall","src":"36655:33:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"36642:9:17"}]}]},"name":"convert_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36612:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"36622:9:17","type":""}],"src":"36565:129:17"},{"body":{"nodeType":"YulBlock","src":"36743:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"36753:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36775:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"36805:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"36783:21:17"},"nodeType":"YulFunctionCall","src":"36783:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36771:3:17"},"nodeType":"YulFunctionCall","src":"36771:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"36757:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"36922:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"36924:16:17"},"nodeType":"YulFunctionCall","src":"36924:18:17"},"nodeType":"YulExpressionStatement","src":"36924:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"36865:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"36877:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36862:2:17"},"nodeType":"YulFunctionCall","src":"36862:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"36901:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"36913:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36898:2:17"},"nodeType":"YulFunctionCall","src":"36898:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"36859:2:17"},"nodeType":"YulFunctionCall","src":"36859:62:17"},"nodeType":"YulIf","src":"36856:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36960:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"36964:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36953:6:17"},"nodeType":"YulFunctionCall","src":"36953:22:17"},"nodeType":"YulExpressionStatement","src":"36953:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36729:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"36737:4:17","type":""}],"src":"36700:281:17"},{"body":{"nodeType":"YulBlock","src":"37030:190:17","statements":[{"nodeType":"YulAssignment","src":"37040:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37067:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37049:17:17"},"nodeType":"YulFunctionCall","src":"37049:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37040:5:17"}]},{"body":{"nodeType":"YulBlock","src":"37163:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37165:16:17"},"nodeType":"YulFunctionCall","src":"37165:18:17"},"nodeType":"YulExpressionStatement","src":"37165:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37088:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"37095:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37085:2:17"},"nodeType":"YulFunctionCall","src":"37085:77:17"},"nodeType":"YulIf","src":"37082:103:17"},{"nodeType":"YulAssignment","src":"37194:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37205:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"37212:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37201:3:17"},"nodeType":"YulFunctionCall","src":"37201:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"37194:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37016:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"37026:3:17","type":""}],"src":"36987:233:17"},{"body":{"nodeType":"YulBlock","src":"37254:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37271:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37274:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37264:6:17"},"nodeType":"YulFunctionCall","src":"37264:88:17"},"nodeType":"YulExpressionStatement","src":"37264:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37368:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37371:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37361:6:17"},"nodeType":"YulFunctionCall","src":"37361:15:17"},"nodeType":"YulExpressionStatement","src":"37361:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37392:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37395:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37385:6:17"},"nodeType":"YulFunctionCall","src":"37385:15:17"},"nodeType":"YulExpressionStatement","src":"37385:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"37226:180:17"},{"body":{"nodeType":"YulBlock","src":"37440:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37457:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37460:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37450:6:17"},"nodeType":"YulFunctionCall","src":"37450:88:17"},"nodeType":"YulExpressionStatement","src":"37450:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37554:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37557:4:17","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37547:6:17"},"nodeType":"YulFunctionCall","src":"37547:15:17"},"nodeType":"YulExpressionStatement","src":"37547:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37578:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37581:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37571:6:17"},"nodeType":"YulFunctionCall","src":"37571:15:17"},"nodeType":"YulExpressionStatement","src":"37571:15:17"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"37412:180:17"},{"body":{"nodeType":"YulBlock","src":"37626:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37643:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37646:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37636:6:17"},"nodeType":"YulFunctionCall","src":"37636:88:17"},"nodeType":"YulExpressionStatement","src":"37636:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37740:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37743:4:17","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37733:6:17"},"nodeType":"YulFunctionCall","src":"37733:15:17"},"nodeType":"YulExpressionStatement","src":"37733:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37764:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37767:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37757:6:17"},"nodeType":"YulFunctionCall","src":"37757:15:17"},"nodeType":"YulExpressionStatement","src":"37757:15:17"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"37598:180:17"},{"body":{"nodeType":"YulBlock","src":"37812:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37829:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37832:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37822:6:17"},"nodeType":"YulFunctionCall","src":"37822:88:17"},"nodeType":"YulExpressionStatement","src":"37822:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37926:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37929:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37919:6:17"},"nodeType":"YulFunctionCall","src":"37919:15:17"},"nodeType":"YulExpressionStatement","src":"37919:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37950:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37953:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37943:6:17"},"nodeType":"YulFunctionCall","src":"37943:15:17"},"nodeType":"YulExpressionStatement","src":"37943:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"37784:180:17"},{"body":{"nodeType":"YulBlock","src":"37998:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38015:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38018:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38008:6:17"},"nodeType":"YulFunctionCall","src":"38008:88:17"},"nodeType":"YulExpressionStatement","src":"38008:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38112:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"38115:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38105:6:17"},"nodeType":"YulFunctionCall","src":"38105:15:17"},"nodeType":"YulExpressionStatement","src":"38105:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38136:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38139:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38129:6:17"},"nodeType":"YulFunctionCall","src":"38129:15:17"},"nodeType":"YulExpressionStatement","src":"38129:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"37970:180:17"},{"body":{"nodeType":"YulBlock","src":"38245:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38262:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38265:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38255:6:17"},"nodeType":"YulFunctionCall","src":"38255:12:17"},"nodeType":"YulExpressionStatement","src":"38255:12:17"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"38156:117:17"},{"body":{"nodeType":"YulBlock","src":"38368:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38385:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38388:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38378:6:17"},"nodeType":"YulFunctionCall","src":"38378:12:17"},"nodeType":"YulExpressionStatement","src":"38378:12:17"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"38279:117:17"},{"body":{"nodeType":"YulBlock","src":"38491:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38508:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38511:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38501:6:17"},"nodeType":"YulFunctionCall","src":"38501:12:17"},"nodeType":"YulExpressionStatement","src":"38501:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"38402:117:17"},{"body":{"nodeType":"YulBlock","src":"38614:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38631:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38634:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38624:6:17"},"nodeType":"YulFunctionCall","src":"38624:12:17"},"nodeType":"YulExpressionStatement","src":"38624:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"38525:117:17"},{"body":{"nodeType":"YulBlock","src":"38696:54:17","statements":[{"nodeType":"YulAssignment","src":"38706:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38724:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"38731:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38720:3:17"},"nodeType":"YulFunctionCall","src":"38720:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38740:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"38736:3:17"},"nodeType":"YulFunctionCall","src":"38736:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38716:3:17"},"nodeType":"YulFunctionCall","src":"38716:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"38706:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38679:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"38689:6:17","type":""}],"src":"38648:102:17"},{"body":{"nodeType":"YulBlock","src":"38862:60:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38884:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"38892:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38880:3:17"},"nodeType":"YulFunctionCall","src":"38880:14:17"},{"hexValue":"496e76616c6964204f72646572204944","kind":"string","nodeType":"YulLiteral","src":"38896:18:17","type":"","value":"Invalid Order ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38873:6:17"},"nodeType":"YulFunctionCall","src":"38873:42:17"},"nodeType":"YulExpressionStatement","src":"38873:42:17"}]},"name":"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38854:6:17","type":""}],"src":"38756:166:17"},{"body":{"nodeType":"YulBlock","src":"39034:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39056:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39064:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39052:3:17"},"nodeType":"YulFunctionCall","src":"39052:14:17"},{"hexValue":"496e76616c696420735f69734d616e75616c20626f6f6c","kind":"string","nodeType":"YulLiteral","src":"39068:25:17","type":"","value":"Invalid s_isManual bool"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39045:6:17"},"nodeType":"YulFunctionCall","src":"39045:49:17"},"nodeType":"YulExpressionStatement","src":"39045:49:17"}]},"name":"store_literal_in_memory_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39026:6:17","type":""}],"src":"38928:173:17"},{"body":{"nodeType":"YulBlock","src":"39213:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39235:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39243:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39231:3:17"},"nodeType":"YulFunctionCall","src":"39231:14:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"39247:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39224:6:17"},"nodeType":"YulFunctionCall","src":"39224:58:17"},"nodeType":"YulExpressionStatement","src":"39224:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39303:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39311:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39299:3:17"},"nodeType":"YulFunctionCall","src":"39299:15:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"39316:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39292:6:17"},"nodeType":"YulFunctionCall","src":"39292:33:17"},"nodeType":"YulExpressionStatement","src":"39292:33:17"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39205:6:17","type":""}],"src":"39107:225:17"},{"body":{"nodeType":"YulBlock","src":"39444:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39466:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39474:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39462:3:17"},"nodeType":"YulFunctionCall","src":"39462:14:17"},{"hexValue":"546f6b656e20756e617661696c61626c6520696e20444558","kind":"string","nodeType":"YulLiteral","src":"39478:26:17","type":"","value":"Token unavailable in DEX"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39455:6:17"},"nodeType":"YulFunctionCall","src":"39455:50:17"},"nodeType":"YulExpressionStatement","src":"39455:50:17"}]},"name":"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39436:6:17","type":""}],"src":"39338:174:17"},{"body":{"nodeType":"YulBlock","src":"39624:62:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39646:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39654:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39642:3:17"},"nodeType":"YulFunctionCall","src":"39642:14:17"},{"hexValue":"496e73756666696369656e742046756e6473","kind":"string","nodeType":"YulLiteral","src":"39658:20:17","type":"","value":"Insufficient Funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39635:6:17"},"nodeType":"YulFunctionCall","src":"39635:44:17"},"nodeType":"YulExpressionStatement","src":"39635:44:17"}]},"name":"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39616:6:17","type":""}],"src":"39518:168:17"},{"body":{"nodeType":"YulBlock","src":"39798:53:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39820:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39828:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39816:3:17"},"nodeType":"YulFunctionCall","src":"39816:14:17"},{"hexValue":"4e6f74204f776e6572","kind":"string","nodeType":"YulLiteral","src":"39832:11:17","type":"","value":"Not Owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39809:6:17"},"nodeType":"YulFunctionCall","src":"39809:35:17"},"nodeType":"YulExpressionStatement","src":"39809:35:17"}]},"name":"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39790:6:17","type":""}],"src":"39692:159:17"},{"body":{"nodeType":"YulBlock","src":"39963:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39985:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39993:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39981:3:17"},"nodeType":"YulFunctionCall","src":"39981:14:17"},{"hexValue":"546f6b656e20616c7265616479207665726966696564","kind":"string","nodeType":"YulLiteral","src":"39997:24:17","type":"","value":"Token already verified"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39974:6:17"},"nodeType":"YulFunctionCall","src":"39974:48:17"},"nodeType":"YulExpressionStatement","src":"39974:48:17"}]},"name":"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39955:6:17","type":""}],"src":"39857:172:17"},{"body":{"nodeType":"YulBlock","src":"40141:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40163:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"40171:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40159:3:17"},"nodeType":"YulFunctionCall","src":"40159:14:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"40175:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40152:6:17"},"nodeType":"YulFunctionCall","src":"40152:58:17"},"nodeType":"YulExpressionStatement","src":"40152:58:17"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40133:6:17","type":""}],"src":"40035:182:17"},{"body":{"nodeType":"YulBlock","src":"40329:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40351:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"40359:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40347:3:17"},"nodeType":"YulFunctionCall","src":"40347:14:17"},{"hexValue":"546f6b656e206e6f7420617661696c61626c65","kind":"string","nodeType":"YulLiteral","src":"40363:21:17","type":"","value":"Token not available"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40340:6:17"},"nodeType":"YulFunctionCall","src":"40340:45:17"},"nodeType":"YulExpressionStatement","src":"40340:45:17"}]},"name":"store_literal_in_memory_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40321:6:17","type":""}],"src":"40223:169:17"},{"body":{"nodeType":"YulBlock","src":"40504:70:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40526:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"40534:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40522:3:17"},"nodeType":"YulFunctionCall","src":"40522:14:17"},{"hexValue":"4f72646572206e6f7420757064617465642070726f7065726c79","kind":"string","nodeType":"YulLiteral","src":"40538:28:17","type":"","value":"Order not updated properly"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40515:6:17"},"nodeType":"YulFunctionCall","src":"40515:52:17"},"nodeType":"YulExpressionStatement","src":"40515:52:17"}]},"name":"store_literal_in_memory_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40496:6:17","type":""}],"src":"40398:176:17"},{"body":{"nodeType":"YulBlock","src":"40686:59:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40708:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"40716:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40704:3:17"},"nodeType":"YulFunctionCall","src":"40704:14:17"},{"hexValue":"4f72646572206e6f7420466f756e64","kind":"string","nodeType":"YulLiteral","src":"40720:17:17","type":"","value":"Order not Found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40697:6:17"},"nodeType":"YulFunctionCall","src":"40697:41:17"},"nodeType":"YulExpressionStatement","src":"40697:41:17"}]},"name":"store_literal_in_memory_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40678:6:17","type":""}],"src":"40580:165:17"},{"body":{"nodeType":"YulBlock","src":"40803:62:17","statements":[{"body":{"nodeType":"YulBlock","src":"40837:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"40839:16:17"},"nodeType":"YulFunctionCall","src":"40839:18:17"},"nodeType":"YulExpressionStatement","src":"40839:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40826:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"40833:1:17","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"40823:2:17"},"nodeType":"YulFunctionCall","src":"40823:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40816:6:17"},"nodeType":"YulFunctionCall","src":"40816:20:17"},"nodeType":"YulIf","src":"40813:46:17"}]},"name":"validator_assert_t_enum$_Side_$1661","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40796:5:17","type":""}],"src":"40751:114:17"},{"body":{"nodeType":"YulBlock","src":"40914:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"40971:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40980:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40983:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40973:6:17"},"nodeType":"YulFunctionCall","src":"40973:12:17"},"nodeType":"YulExpressionStatement","src":"40973:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40937:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40962:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"40944:17:17"},"nodeType":"YulFunctionCall","src":"40944:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"40934:2:17"},"nodeType":"YulFunctionCall","src":"40934:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40927:6:17"},"nodeType":"YulFunctionCall","src":"40927:43:17"},"nodeType":"YulIf","src":"40924:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40907:5:17","type":""}],"src":"40871:122:17"},{"body":{"nodeType":"YulBlock","src":"41039:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"41093:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41102:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41105:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41095:6:17"},"nodeType":"YulFunctionCall","src":"41095:12:17"},"nodeType":"YulExpressionStatement","src":"41095:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41062:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41084:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"41069:14:17"},"nodeType":"YulFunctionCall","src":"41069:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"41059:2:17"},"nodeType":"YulFunctionCall","src":"41059:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41052:6:17"},"nodeType":"YulFunctionCall","src":"41052:40:17"},"nodeType":"YulIf","src":"41049:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41032:5:17","type":""}],"src":"40999:116:17"},{"body":{"nodeType":"YulBlock","src":"41173:56:17","statements":[{"body":{"nodeType":"YulBlock","src":"41207:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41216:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41219:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41209:6:17"},"nodeType":"YulFunctionCall","src":"41209:12:17"},"nodeType":"YulExpressionStatement","src":"41209:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41196:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"41203:1:17","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41193:2:17"},"nodeType":"YulFunctionCall","src":"41193:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41186:6:17"},"nodeType":"YulFunctionCall","src":"41186:20:17"},"nodeType":"YulIf","src":"41183:40:17"}]},"name":"validator_revert_t_enum$_Side_$1661","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41166:5:17","type":""}],"src":"41121:108:17"},{"body":{"nodeType":"YulBlock","src":"41278:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"41335:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41344:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41347:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41337:6:17"},"nodeType":"YulFunctionCall","src":"41337:12:17"},"nodeType":"YulExpressionStatement","src":"41337:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41301:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41326:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41308:17:17"},"nodeType":"YulFunctionCall","src":"41308:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"41298:2:17"},"nodeType":"YulFunctionCall","src":"41298:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41291:6:17"},"nodeType":"YulFunctionCall","src":"41291:43:17"},"nodeType":"YulIf","src":"41288:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41271:5:17","type":""}],"src":"41235:122:17"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_enum$_Side_$1661(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Side_$1661(value)\n    }\n\n    // struct Exchange._Order\n    function abi_decode_t_struct$__Order_$1629_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0160) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0160)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // side\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_enum$_Side_$1661(add(headStart, offset), end))\n\n        }\n\n        {\n            // user\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // tokenA\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // amountA\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // tokenB\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // amountB\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // rate\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // originalAmountA\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // originalAmountB\n\n            let offset := 288\n\n            mstore(add(value, 0x0120), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // waiveFees\n\n            let offset := 320\n\n            mstore(add(value, 0x0140), abi_decode_t_bool(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct Exchange._filledOrder\n    function abi_decode_t_struct$__filledOrder_$1658_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0180) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0180)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // side\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_enum$_Side_$1661(add(headStart, offset), end))\n\n        }\n\n        {\n            // user\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // tokenA\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // tokenB\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // amountFilled\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // fillRate\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // originalRate\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // originalAmountA\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // originalAmountB\n\n            let offset := 288\n\n            mstore(add(value, 0x0120), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // feesWaived\n\n            let offset := 320\n\n            mstore(add(value, 0x0140), abi_decode_t_bool(add(headStart, offset), end))\n\n        }\n\n        {\n            // feesPaid\n\n            let offset := 352\n\n            mstore(add(value, 0x0160), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_enum$_Side_$1661(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_enum$_Side_$1661(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Side_$1661(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$1661(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Side_$1661t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$1661(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$1661t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$1661(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$1661t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$1661(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$__Order_$1629_memory_ptrt_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 448) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$__Order_$1629_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 352\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 384\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 416\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$__filledOrder_$1658_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 416) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$__filledOrder_$1658_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 384\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_Side_$1661t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$1661(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_Side_$1661_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$1661_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$1661_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6(pos)\n        end := add(pos, 32)\n    }\n\n    // struct Exchange._Order -> struct Exchange._Order\n    function abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_Side_$1661_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tokenA\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountA\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tokenB\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountB\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // rate\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // originalAmountA\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // originalAmountB\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // waiveFees\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n    }\n\n    // struct Exchange._filledOrder -> struct Exchange._filledOrder\n    function abi_encode_t_struct$__filledOrder_$1658_memory_ptr_to_t_struct$__filledOrder_$1658_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0180)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_Side_$1661_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tokenA\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tokenB\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountFilled\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // fillRate\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // originalRate\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // originalAmountA\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // originalAmountB\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // feesWaived\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n        {\n            // feesPaid\n\n            let memberValue0 := mload(add(value, 0x0160))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0160))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$__Order_$1629_memory_ptr__to_t_struct$__Order_$1629_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$__Order_$1629_memory_ptr_t_uint256__to_t_struct$__Order_$1629_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_struct$__filledOrder_$1658_memory_ptr__to_t_struct$__filledOrder_$1658_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_struct$__filledOrder_$1658_memory_ptr_to_t_struct$__filledOrder_$1658_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Side_$1661_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value11,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Side_$1661_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Side_$1661(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Side_$1661(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Side_$1661_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Side_$1661(value)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Order ID\")\n\n    }\n\n    function store_literal_in_memory_1cf384875fc3ea24eb0659ff5f5c22c019a71e9ca0b9fcbdaee3c8d7484c6d5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid s_isManual bool\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token unavailable in DEX\")\n\n    }\n\n    function store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Funds\")\n\n    }\n\n    function store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Owner\")\n\n    }\n\n    function store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token already verified\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ab3f48619d706ac8ad91b85bc1fb832d4f4767b3d542e8c7ef3277e6ba51519e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not available\")\n\n    }\n\n    function store_literal_in_memory_b0b1215c90cd3a4fdf3205ccd36748cea8e8c06fabac1a56440ba2568091eb2e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Order not updated properly\")\n\n    }\n\n    function store_literal_in_memory_e72915bb290e5fc9bada2f660d8633f3808a67bab627c5ce4a0f5af67f5f97f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Order not Found\")\n\n    }\n\n    function validator_assert_t_enum$_Side_$1661(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Side_$1661(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101a95760003560e01c80639c07ce26116100f9578063dafbfe6a11610097578063f2fde38b11610071578063f2fde38b14610525578063f90ef4f214610541578063fb310c9b1461055d578063ff09cdfa14610579576101a9565b8063dafbfe6a1461049f578063e4c3c7cd146104bb578063ea42f349146104f5576101a9565b8063af81c5b9116100d3578063af81c5b9146103fc578063b136e39a14610418578063bd8098ec14610434578063c3364be41461046f576101a9565b80639c07ce26146103915780639ead7222146103af578063ac1a386a146103e0576101a9565b806362c09cfa116101665780637bf1a627116101405780637bf1a627146102f45780638da5cb5b146103125780638f101b0e1461033057806392e43d3a14610360576101a9565b806362c09cfa146102b25780636f4e410b146102ce578063715018a6146102ea576101a9565b80630af4e4f0146101ae5780631027b219146101ca57806314eca9dc146101fa5780631cb67fb31461022a5780631f69565f14610252578063429d24b214610282575b600080fd5b6101c860048036038101906101c391906145c8565b610595565b005b6101e460048036038101906101df91906141c8565b610809565b6040516101f19190614b4d565b60405180910390f35b610214600480360381019061020f91906144a3565b6108bf565b6040516102219190614d2b565b60405180910390f35b61023261096d565b6040516102499b9a99989796959493929190614e00565b60405180910390f35b61026c600480360381019061026791906141c8565b610a2f565b6040516102799190614d2b565b60405180910390f35b61029c60048036038101906102979190614664565b610b3f565b6040516102a99190614b4d565b60405180910390f35b6102cc60048036038101906102c79190614396565b610e2d565b005b6102e860048036038101906102e39190614396565b611447565b005b6102f2611a60565b005b6102fc611a74565b6040516103099190614a9b565b60405180910390f35b61031a611a9a565b6040516103279190614a9b565b60405180910390f35b61034a60048036038101906103459190614303565b611ac3565b6040516103579190614d0f565b60405180910390f35b61037a6004803603810190610375919061425c565b611d00565b604051610388929190614ce4565b60405180910390f35b610399612112565b6040516103a69190614d2b565b60405180910390f35b6103c960048036038101906103c4919061460a565b612118565b6040516103d7929190614b24565b60405180910390f35b6103fa60048036038101906103f591906141c8565b61216c565b005b61041660048036038101906104119190614356565b6121b8565b005b610432600480360381019061042d91906141c8565b6122b6565b005b61044e60048036038101906104499190614423565b612302565b6040516104669c9b9a99989796959493929190614d46565b60405180910390f35b610489600480360381019061048491906142c3565b612406565b6040516104969190614d2b565b60405180910390f35b6104b960048036038101906104b491906141c8565b612476565b005b6104d560048036038101906104d0919061425c565b6124c2565b6040516104ec9b9a99989796959493929190614e00565b60405180910390f35b61050f600480360381019061050a91906141f5565b6125cd565b60405161051c9190614cc8565b60405180910390f35b61053f600480360381019061053a91906141c8565b612844565b005b61055b600480360381019061055691906144f6565b6128c8565b005b6105776004803603810190610572919061455d565b613319565b005b610593600480360381019061058e9190614476565b6138cb565b005b60086000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008281526020019081526020016000208290806001815401808255809150506001900390600052602060002090600b02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff0219169083600181111561064857610647615081565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816004015560c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555061016082015181600a015550507f78f8097f697fc6b58d127f987a03e83de8076bdc75199661d49326415098d60a826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c61014001518d61016001516040516107fd9c9b9a99989796959493929190614d46565b60405180910390a15050565b600080600090505b6006805490508110156108b4578273ffffffffffffffffffffffffffffffffffffffff1660068281548110610849576108486150df565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108a15760019150506108ba565b80806108ac90615009565b915050610811565b50600090505b919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085600181111561095257610951615081565b5b81526020019081526020016000208054905090509392505050565b600b8060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b600080600090505b600680549050811015610afe578273ffffffffffffffffffffffffffffffffffffffff1660068281548110610a6f57610a6e6150df565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610aeb5760068181548110610ad157610ad06150df565b5b906000526020600020906002020160010154915050610b3a565b8080610af690615009565b915050610a37565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3190614c68565b60405180910390fd5b919050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000866001811115610bd357610bd2615081565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610dc857838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff166001811115610c5457610c53615081565b5b6001811115610c6657610c65615081565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152505081526020019060010190610c01565b50505050905060005b8151811015610e1e5786828281518110610dee57610ded6150df565b5b6020026020010151600001511415610e0b57600192505050610e25565b8080610e1690615009565b915050610dd1565b5060009150505b949350505050565b85610e3781610809565b610e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6d90614bc8565b60405180910390fd5b84610e8081610809565b610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690614bc8565b60405180910390fd5b8461102b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338a6040518363ffffffff1660e01b8152600401610f20929190614ab6565b60206040518083038186803b158015610f3857600080fd5b505afa158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f709190614637565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8a336040518363ffffffff1660e01b8152600401610fcd929190614ab6565b60206040518083038186803b158015610fe557600080fd5b505afa158015610ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101d9190614637565b61393d90919063ffffffff16565b101561106c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106390614be8565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d633888860016040518563ffffffff1660e01b81526004016110ce9493929190614adf565b600060405180830381600087803b1580156110e857600080fd5b505af11580156110fc573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080600181111561119157611190615081565b5b81526020019081526020016000206040518061016001604052806009548152602001600060018111156111c7576111c6615081565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff021916908360018111156112a2576112a1615081565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546000338b8b8b8b8b8f8e8d6040516114199b9a99989796959493929190614e00565b60405180910390a1611437600160095461395390919063ffffffff16565b6009819055505050505050505050565b8561145181610809565b611490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148790614bc8565b60405180910390fd5b8461149a81610809565b6114d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d090614bc8565b60405180910390fd5b86611645600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338c6040518363ffffffff1660e01b815260040161153a929190614ab6565b60206040518083038186803b15801561155257600080fd5b505afa158015611566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158a9190614637565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8c336040518363ffffffff1660e01b81526004016115e7929190614ab6565b60206040518083038186803b1580156115ff57600080fd5b505afa158015611613573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116379190614637565b61393d90919063ffffffff16565b1015611686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167d90614be8565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338a8a60016040518563ffffffff1660e01b81526004016116e89493929190614adf565b600060405180830381600087803b15801561170257600080fd5b505af1158015611716573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001808111156117ab576117aa615081565b5b815260200190815260200160002060405180610160016040528060095481526020016001808111156117e0576117df615081565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff021916908360018111156118bb576118ba615081565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546001338b8b8b8b8b8f8e8d604051611a329b9a99989796959493929190614e00565b60405180910390a1611a50600160095461395390919063ffffffff16565b6009819055505050505050505050565b611a68613969565b611a7260006139e7565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611acb613ab3565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846001811115611b1f57611b1e615081565b5b81526020019081526020016000208281548110611b3f57611b3e6150df565b5b90600052602060002090600b020160405180610180016040529081600082015481526020016001820160009054906101000a900460ff166001811115611b8857611b87615081565b5b6001811115611b9a57611b99615081565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152602001600a8201548152505090509392505050565b611d08613b6a565b600080600090505b600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020805490508110156120ce5783600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000208281548110611e4857611e476150df565b5b90600052602060002090600a02016000015414156120bb57600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000208181548110611eff57611efe6150df565b5b90600052602060002090600a0201818160405180610160016040529081600082015481526020016001820160009054906101000a900460ff166001811115611f4a57611f49615081565b5b6001811115611f5c57611f5b615081565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152505091509250925050612109565b80806120c690615009565b915050611d10565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210090614ca8565b60405180910390fd5b94509492505050565b60095481565b6006818154811061212857600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b612174613969565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6121c0613969565b6121c982610809565b15612209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161220090614c28565b60405180910390fd5b600660405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b6122be613969565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6008602052826000526040600020602052816000526040600020818154811061232a57600080fd5b90600052602060002090600b020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff169080600a015490508c565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600181111561245c5761245b615081565b5b815260200190815260200160002080549050905092915050565b61247e613969565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760205283600052604060002060205282600052604060002060205281600052604060002081815481106124f657600080fd5b90600052602060002090600a02016000935093505050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b6125d5613b6a565b6000600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600181111561266857612667615081565b5b81526020019081526020016000208481548110612688576126876150df565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156126d1576126d0615081565b5b60018111156126e3576126e2615081565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581525050905080915050949350505050565b61284c613969565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156128bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128b390614ba8565b60405180910390fd5b6128c5816139e7565b50565b828483836128d884848484610b3f565b612917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161290e90614b68565b60405180910390fd5b8561292181610809565b612960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161295790614bc8565b60405180910390fd5b8561296a81610809565b6129a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129a090614bc8565b60405180910390fd5b60008a60018111156129be576129bd615081565b5b90506000600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000209050600081805490509050612a62613b6a565b600080600090505b83811015612c7c578e858281548110612a8657612a856150df565b5b90600052602060002090600a0201600001541415612c6957809150848181548110612ab457612ab36150df565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff166001811115612afd57612afc615081565b5b6001811115612b0f57612b0e615081565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250509250612c7c565b8080612c7490615009565b915050612a6a565b50600a60009054906101000a900460ff1615612e9d57816040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cfb90614c08565b60405180910390fd5b60006001811115612d1857612d17615081565b5b8f6001811115612d2b57612d2a615081565b5b1415612dd257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338460a001518560c0015160006040518563ffffffff1660e01b8152600401612d9b9493929190614adf565b600060405180830381600087803b158015612db557600080fd5b505af1158015612dc9573d6000803e3d6000fd5b50505050612e9c565b600180811115612de557612de4615081565b5b8f6001811115612df857612df7615081565b5b1415612e9b57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338460600151856080015160006040518563ffffffff1660e01b8152600401612e689493929190614adf565b600060405180830381600087803b158015612e8257600080fd5b505af1158015612e96573d6000803e3d6000fd5b505050505b5b5b60008190505b600184612eb09190614f37565b8110156130fd5784612ecc60018361395390919063ffffffff16565b81548110612edd57612edc6150df565b5b90600052602060002090600a0201858281548110612efe57612efd6150df565b5b90600052602060002090600a0201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115612f4e57612f4d615081565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff02191690831515021790555090505080806130f590615009565b915050612ea3565b508380548061310f5761310e6150b0565b5b60019003818190600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff02191690555050905583600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020908054613291929190613c1a565b507fa1cc643491754200d3eca5769e524a0fd00f9b0862b18d0da7d6e7277a83dfda8e83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c61014001516040516133009b9a99989796959493929190614e00565b60405180910390a1505050505050505050505050505050565b8360000151846020015185606001518660a0015161333984848484610b3f565b613378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161336f90614b68565b60405180910390fd5b6000600760008a6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a60200151600181111561341757613416615081565b5b60ff168152602001908152602001600020868154811061343a576134396150df565b5b90600052602060002090600a02016003015490506000600760008b6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b6020015160018111156134ed576134ec615081565b5b60ff16815260200190815260200160002087815481106135105761350f6150df565b5b90600052602060002090600a020160050154905088600760008c6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c6020015160018111156135c2576135c1615081565b5b60ff16815260200190815260200160002088815481106135e5576135e46150df565b5b90600052602060002090600a02016003018190555087600760008c6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60200151600181111561369857613697615081565b5b60ff16815260200190815260200160002088815481106136bb576136ba6150df565b5b90600052602060002090600a02016005018190555081600760008c6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60200151600181111561376e5761376d615081565b5b60ff1681526020019081526020016000208881548110613791576137906150df565b5b90600052602060002090600a020160030154108015613880575080600760008c6060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60a0015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c60200151600181111561384957613848615081565b5b60ff168152602001908152602001600020888154811061386c5761386b6150df565b5b90600052602060002090600a020160050154105b6138bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016138b690614c88565b60405180910390fd5b50505050505050505050565b80600a60006101000a81548160ff021916908315150217905550801515600a60009054906101000a900460ff1615151461393a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161393190614b88565b60405180910390fd5b50565b6000818361394b9190614f37565b905092915050565b600081836139619190614ee1565b905092915050565b613971613aab565b73ffffffffffffffffffffffffffffffffffffffff1661398f611a9a565b73ffffffffffffffffffffffffffffffffffffffff16146139e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016139dc90614c48565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518061018001604052806000815260200160006001811115613ada57613ad9615081565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081525090565b6040518061016001604052806000815260200160006001811115613b9157613b90615081565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090600a028101928215613e3c57600052602060002091600a0282015b82811115613e3b578282600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115613c9157613c90615081565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908315150217905550505091600a019190600a0190613c45565b5b509050613e499190613e4d565b5090565b5b80821115613f2d576000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff021916905550600a01613e4e565b5090565b600081359050613f4081615355565b92915050565b600081359050613f558161536c565b92915050565b600081359050613f6a81615383565b92915050565b60006101608284031215613f8757613f8661513d565b5b613f92610160614eab565b90506000613fa28482850161419e565b6000830152506020613fb684828501613f5b565b6020830152506040613fca84828501613f31565b6040830152506060613fde84828501613f31565b6060830152506080613ff28482850161419e565b60808301525060a061400684828501613f31565b60a08301525060c061401a8482850161419e565b60c08301525060e061402e8482850161419e565b60e0830152506101006140438482850161419e565b610100830152506101206140598482850161419e565b6101208301525061014061406f84828501613f46565b6101408301525092915050565b600061018082840312156140935761409261513d565b5b61409e610180614eab565b905060006140ae8482850161419e565b60008301525060206140c284828501613f5b565b60208301525060406140d684828501613f31565b60408301525060606140ea84828501613f31565b60608301525060806140fe84828501613f31565b60808301525060a06141128482850161419e565b60a08301525060c06141268482850161419e565b60c08301525060e061413a8482850161419e565b60e08301525061010061414f8482850161419e565b610100830152506101206141658482850161419e565b6101208301525061014061417b84828501613f46565b610140830152506101606141918482850161419e565b6101608301525092915050565b6000813590506141ad81615393565b92915050565b6000815190506141c281615393565b92915050565b6000602082840312156141de576141dd615142565b5b60006141ec84828501613f31565b91505092915050565b6000806000806080858703121561420f5761420e615142565b5b600061421d87828801613f31565b945050602061422e87828801613f31565b935050604061423f8782880161419e565b925050606061425087828801613f5b565b91505092959194509250565b6000806000806080858703121561427657614275615142565b5b600061428487828801613f31565b945050602061429587828801613f31565b93505060406142a68782880161419e565b92505060606142b78782880161419e565b91505092959194509250565b600080604083850312156142da576142d9615142565b5b60006142e885828601613f31565b92505060206142f985828601613f5b565b9150509250929050565b60008060006060848603121561431c5761431b615142565b5b600061432a86828701613f31565b935050602061433b86828701613f5b565b925050604061434c8682870161419e565b9150509250925092565b6000806040838503121561436d5761436c615142565b5b600061437b85828601613f31565b925050602061438c8582860161419e565b9150509250929050565b60008060008060008060c087890312156143b3576143b2615142565b5b60006143c189828a01613f31565b96505060206143d289828a0161419e565b95505060406143e389828a01613f31565b94505060606143f489828a0161419e565b935050608061440589828a0161419e565b92505060a061441689828a01613f46565b9150509295509295509295565b60008060006060848603121561443c5761443b615142565b5b600061444a86828701613f31565b935050602061445b8682870161419e565b925050604061446c8682870161419e565b9150509250925092565b60006020828403121561448c5761448b615142565b5b600061449a84828501613f46565b91505092915050565b6000806000606084860312156144bc576144bb615142565b5b60006144ca86828701613f5b565b93505060206144db86828701613f31565b92505060406144ec86828701613f31565b9150509250925092565b600080600080608085870312156145105761450f615142565b5b600061451e87828801613f5b565b945050602061452f8782880161419e565b935050604061454087828801613f31565b925050606061455187828801613f31565b91505092959194509250565b6000806000806101c0858703121561457857614577615142565b5b600061458687828801613f70565b9450506101606145988782880161419e565b9350506101806145aa8782880161419e565b9250506101a06145bc8782880161419e565b91505092959194509250565b6000806101a083850312156145e0576145df615142565b5b60006145ee8582860161407c565b9250506101806146008582860161419e565b9150509250929050565b6000602082840312156146205761461f615142565b5b600061462e8482850161419e565b91505092915050565b60006020828403121561464d5761464c615142565b5b600061465b848285016141b3565b91505092915050565b6000806000806080858703121561467e5761467d615142565b5b600061468c8782880161419e565b945050602061469d87828801613f5b565b93505060406146ae87828801613f31565b92505060606146bf87828801613f31565b91505092959194509250565b6146d481614f6b565b82525050565b6146e381614f6b565b82525050565b6146f281614f7d565b82525050565b61470181614f7d565b82525050565b61471081614fc6565b82525050565b61471f81614fc6565b82525050565b6000614732601083614ed0565b915061473d82615158565b602082019050919050565b6000614755601783614ed0565b915061476082615181565b602082019050919050565b6000614778602683614ed0565b9150614783826151aa565b604082019050919050565b600061479b601883614ed0565b91506147a6826151f9565b602082019050919050565b60006147be601283614ed0565b91506147c982615222565b602082019050919050565b60006147e1600983614ed0565b91506147ec8261524b565b602082019050919050565b6000614804601683614ed0565b915061480f82615274565b602082019050919050565b6000614827602083614ed0565b91506148328261529d565b602082019050919050565b600061484a601383614ed0565b9150614855826152c6565b602082019050919050565b600061486d601a83614ed0565b9150614878826152ef565b602082019050919050565b6000614890600f83614ed0565b915061489b82615318565b602082019050919050565b610160820160008201516148bd6000850182614a7d565b5060208201516148d06020850182614707565b5060408201516148e360408501826146cb565b5060608201516148f660608501826146cb565b5060808201516149096080850182614a7d565b5060a082015161491c60a08501826146cb565b5060c082015161492f60c0850182614a7d565b5060e082015161494260e0850182614a7d565b50610100820151614957610100850182614a7d565b5061012082015161496c610120850182614a7d565b506101408201516149816101408501826146e9565b50505050565b6101808201600082015161499e6000850182614a7d565b5060208201516149b16020850182614707565b5060408201516149c460408501826146cb565b5060608201516149d760608501826146cb565b5060808201516149ea60808501826146cb565b5060a08201516149fd60a0850182614a7d565b5060c0820151614a1060c0850182614a7d565b5060e0820151614a2360e0850182614a7d565b50610100820151614a38610100850182614a7d565b50610120820151614a4d610120850182614a7d565b50610140820151614a626101408501826146e9565b50610160820151614a77610160850182614a7d565b50505050565b614a8681614fbc565b82525050565b614a9581614fbc565b82525050565b6000602082019050614ab060008301846146da565b92915050565b6000604082019050614acb60008301856146da565b614ad860208301846146da565b9392505050565b6000608082019050614af460008301876146da565b614b0160208301866146da565b614b0e6040830185614a8c565b614b1b60608301846146f8565b95945050505050565b6000604082019050614b3960008301856146da565b614b466020830184614a8c565b9392505050565b6000602082019050614b6260008301846146f8565b92915050565b60006020820190508181036000830152614b8181614725565b9050919050565b60006020820190508181036000830152614ba181614748565b9050919050565b60006020820190508181036000830152614bc18161476b565b9050919050565b60006020820190508181036000830152614be18161478e565b9050919050565b60006020820190508181036000830152614c01816147b1565b9050919050565b60006020820190508181036000830152614c21816147d4565b9050919050565b60006020820190508181036000830152614c41816147f7565b9050919050565b60006020820190508181036000830152614c618161481a565b9050919050565b60006020820190508181036000830152614c818161483d565b9050919050565b60006020820190508181036000830152614ca181614860565b9050919050565b60006020820190508181036000830152614cc181614883565b9050919050565b600061016082019050614cde60008301846148a6565b92915050565b600061018082019050614cfa60008301856148a6565b614d08610160830184614a8c565b9392505050565b600061018082019050614d256000830184614987565b92915050565b6000602082019050614d406000830184614a8c565b92915050565b600061018082019050614d5c600083018f614a8c565b614d69602083018e614716565b614d76604083018d6146da565b614d83606083018c6146da565b614d90608083018b6146da565b614d9d60a083018a614a8c565b614daa60c0830189614a8c565b614db760e0830188614a8c565b614dc5610100830187614a8c565b614dd3610120830186614a8c565b614de16101408301856146f8565b614def610160830184614a8c565b9d9c50505050505050505050505050565b600061016082019050614e16600083018e614a8c565b614e23602083018d614716565b614e30604083018c6146da565b614e3d606083018b6146da565b614e4a608083018a614a8c565b614e5760a08301896146da565b614e6460c0830188614a8c565b614e7160e0830187614a8c565b614e7f610100830186614a8c565b614e8d610120830185614a8c565b614e9b6101408301846146f8565b9c9b505050505050505050505050565b6000614eb5614ec6565b9050614ec18282614fd8565b919050565b6000604051905090565b600082825260208201905092915050565b6000614eec82614fbc565b9150614ef783614fbc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115614f2c57614f2b615052565b5b828201905092915050565b6000614f4282614fbc565b9150614f4d83614fbc565b925082821015614f6057614f5f615052565b5b828203905092915050565b6000614f7682614f9c565b9050919050565b60008115159050919050565b6000819050614f9782615341565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000614fd182614f89565b9050919050565b614fe182615147565b810181811067ffffffffffffffff8211171561500057614fff61510e565b5b80604052505050565b600061501482614fbc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561504757615046615052565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f496e76616c6964204f7264657220494400000000000000000000000000000000600082015250565b7f496e76616c696420735f69734d616e75616c20626f6f6c000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20756e617661696c61626c6520696e204445580000000000000000600082015250565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b7f546f6b656e20616c726561647920766572696669656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f546f6b656e206e6f7420617661696c61626c6500000000000000000000000000600082015250565b7f4f72646572206e6f7420757064617465642070726f7065726c79000000000000600082015250565b7f4f72646572206e6f7420466f756e640000000000000000000000000000000000600082015250565b6002811061535257615351615081565b5b50565b61535e81614f6b565b811461536957600080fd5b50565b61537581614f7d565b811461538057600080fd5b50565b6002811061539057600080fd5b50565b61539c81614fbc565b81146153a757600080fd5b5056fea26469706673582212205bf47278ba89e11389180ae80848a9d75760152effec502e5d221ed9dd2177d764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C07CE26 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xDAFBFE6A GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xF90EF4F2 EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xFB310C9B EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0xFF09CDFA EQ PUSH2 0x579 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xDAFBFE6A EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xE4C3C7CD EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xEA42F349 EQ PUSH2 0x4F5 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xAF81C5B9 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xBD8098EC EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xC3364BE4 EQ PUSH2 0x46F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x9C07CE26 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x9EAD7222 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x3E0 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x62C09CFA GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x7BF1A627 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x8F101B0E EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x92E43D3A EQ PUSH2 0x360 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x62C09CFA EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x6F4E410B EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EA JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xAF4E4F0 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1027B219 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x14ECA9DC EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x1CB67FB3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x1F69565F EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x429D24B2 EQ PUSH2 0x282 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x45C8 JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x4B4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x44A3 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x4D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x4D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x4664 JUMP JUMPDEST PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x4B4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x4396 JUMP JUMPDEST PUSH2 0xE2D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x4396 JUMP JUMPDEST PUSH2 0x1447 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F2 PUSH2 0x1A60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FC PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x4A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x4A9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x4303 JUMP JUMPDEST PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x4D0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x425C JUMP JUMPDEST PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP3 SWAP2 SWAP1 PUSH2 0x4CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH2 0x2112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x4D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x460A JUMP JUMPDEST PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP3 SWAP2 SWAP1 PUSH2 0x4B24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0x216C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x4356 JUMP JUMPDEST PUSH2 0x21B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0x22B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x4423 JUMP JUMPDEST PUSH2 0x2302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x466 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x42C3 JUMP JUMPDEST PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x4D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0x2476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x425C JUMP JUMPDEST PUSH2 0x24C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x41F5 JUMP JUMPDEST PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x4CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x41C8 JUMP JUMPDEST PUSH2 0x2844 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x44F6 JUMP JUMPDEST PUSH2 0x28C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x577 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x455D JUMP JUMPDEST PUSH2 0x3319 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x593 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x4476 JUMP JUMPDEST PUSH2 0x38CB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x648 JUMPI PUSH2 0x647 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE POP POP PUSH32 0x78F8097F697FC6B58D127F987A03E83DE8076BDC75199661D49326415098D60A DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD DUP14 PUSH2 0x160 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7FD SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x8B4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x849 JUMPI PUSH2 0x848 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x8BA JUMP JUMPDEST DUP1 DUP1 PUSH2 0x8AC SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x811 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x952 JUMPI PUSH2 0x951 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xAFE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA6F JUMPI PUSH2 0xA6E PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAEB JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAD1 JUMPI PUSH2 0xAD0 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0xB3A JUMP JUMPDEST DUP1 DUP1 PUSH2 0xAF6 SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA37 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP1 PUSH2 0x4C68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD2 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xDC8 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC54 JUMPI PUSH2 0xC53 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC66 JUMPI PUSH2 0xC65 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC01 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xE1E JUMPI DUP7 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDEE JUMPI PUSH2 0xDED PUSH2 0x50DF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0xE0B JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xE25 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xE16 SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDD1 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0xE37 DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0xE76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6D SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0xE80 DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB6 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x102B PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP3 SWAP2 SWAP1 PUSH2 0x4AB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF70 SWAP2 SWAP1 PUSH2 0x4637 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP11 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCD SWAP3 SWAP2 SWAP1 PUSH2 0x4AB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x4637 JUMP JUMPDEST PUSH2 0x393D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1063 SWAP1 PUSH2 0x4BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1191 JUMPI PUSH2 0x1190 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11C7 JUMPI PUSH2 0x11C6 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12A2 JUMPI PUSH2 0x12A1 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x0 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1419 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1437 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x3953 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x1451 DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1487 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x149A DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D0 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH2 0x1645 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153A SWAP3 SWAP2 SWAP1 PUSH2 0x4AB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1566 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x158A SWAP2 SWAP1 PUSH2 0x4637 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP13 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E7 SWAP3 SWAP2 SWAP1 PUSH2 0x4AB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1613 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1637 SWAP2 SWAP1 PUSH2 0x4637 JUMP JUMPDEST PUSH2 0x393D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167D SWAP1 PUSH2 0x4BE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP11 DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1716 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x17AB JUMPI PUSH2 0x17AA PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x17E0 JUMPI PUSH2 0x17DF PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18BB JUMPI PUSH2 0x18BA PUSH2 0x5081 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x1 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x1A32 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1A50 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x3953 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A68 PUSH2 0x3969 JUMP JUMPDEST PUSH2 0x1A72 PUSH1 0x0 PUSH2 0x39E7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1ACB PUSH2 0x3AB3 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B1F JUMPI PUSH2 0x1B1E PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B3F JUMPI PUSH2 0x1B3E PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B88 JUMPI PUSH2 0x1B87 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1B9A JUMPI PUSH2 0x1B99 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1D08 PUSH2 0x3B6A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x20CE JUMPI DUP4 PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E48 JUMPI PUSH2 0x1E47 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x20BB JUMPI PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1EFF JUMPI PUSH2 0x1EFE PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP2 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F4A JUMPI PUSH2 0x1F49 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F5C JUMPI PUSH2 0x1F5B PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP2 POP SWAP3 POP SWAP3 POP POP PUSH2 0x2109 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x20C6 SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2100 SWAP1 PUSH2 0x4CA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x2174 PUSH2 0x3969 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x21C0 PUSH2 0x3969 JUMP JUMPDEST PUSH2 0x21C9 DUP3 PUSH2 0x809 JUMP JUMPDEST ISZERO PUSH2 0x2209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2200 SWAP1 PUSH2 0x4C28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x22BE PUSH2 0x3969 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x232A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x245C JUMPI PUSH2 0x245B PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x247E PUSH2 0x3969 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x24F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH2 0x25D5 PUSH2 0x3B6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2668 JUMPI PUSH2 0x2667 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2688 JUMPI PUSH2 0x2687 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x26D1 JUMPI PUSH2 0x26D0 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x26E3 JUMPI PUSH2 0x26E2 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x284C PUSH2 0x3969 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x28BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28B3 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28C5 DUP2 PUSH2 0x39E7 JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP5 DUP4 DUP4 PUSH2 0x28D8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x2917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x290E SWAP1 PUSH2 0x4B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x2921 DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x2960 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2957 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x296A DUP2 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x29A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A0 SWAP1 PUSH2 0x4BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29BE JUMPI PUSH2 0x29BD PUSH2 0x5081 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x2A62 PUSH2 0x3B6A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C7C JUMPI DUP15 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A86 JUMPI PUSH2 0x2A85 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x2C69 JUMPI DUP1 SWAP2 POP DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2AB4 JUMPI PUSH2 0x2AB3 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2AFD JUMPI PUSH2 0x2AFC PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2B0F JUMPI PUSH2 0x2B0E PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH2 0x2C7C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2C74 SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A6A JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E9D JUMPI DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CFB SWAP1 PUSH2 0x4C08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D18 JUMPI PUSH2 0x2D17 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D2B JUMPI PUSH2 0x2D2A PUSH2 0x5081 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2DD2 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2E9C JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x2DE5 JUMPI PUSH2 0x2DE4 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2DF8 JUMPI PUSH2 0x2DF7 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2E9B JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E68 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4ADF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0x2EB0 SWAP2 SWAP1 PUSH2 0x4F37 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x30FD JUMPI DUP5 PUSH2 0x2ECC PUSH1 0x1 DUP4 PUSH2 0x3953 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2EDD JUMPI PUSH2 0x2EDC PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2EFE JUMPI PUSH2 0x2EFD PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2F4E JUMPI PUSH2 0x2F4D PUSH2 0x5081 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP1 PUSH2 0x30F5 SWAP1 PUSH2 0x5009 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2EA3 JUMP JUMPDEST POP DUP4 DUP1 SLOAD DUP1 PUSH2 0x310F JUMPI PUSH2 0x310E PUSH2 0x50B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x7 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0x3291 SWAP3 SWAP2 SWAP1 PUSH2 0x3C1A JUMP JUMPDEST POP PUSH32 0xA1CC643491754200D3ECA5769E524A0FD00F9B0862B18D0DA7D6E7277A83DFDA DUP15 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x3300 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0xA0 ADD MLOAD PUSH2 0x3339 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x3378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x336F SWAP1 PUSH2 0x4B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP11 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3417 JUMPI PUSH2 0x3416 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x343A JUMPI PUSH2 0x3439 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP12 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x34ED JUMPI PUSH2 0x34EC PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x3510 JUMPI PUSH2 0x350F PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x5 ADD SLOAD SWAP1 POP DUP9 PUSH1 0x7 PUSH1 0x0 DUP13 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x35C2 JUMPI PUSH2 0x35C1 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x35E5 JUMPI PUSH2 0x35E4 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x7 PUSH1 0x0 DUP13 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3698 JUMPI PUSH2 0x3697 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x36BB JUMPI PUSH2 0x36BA PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP13 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x376E JUMPI PUSH2 0x376D PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x3791 JUMPI PUSH2 0x3790 PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x3 ADD SLOAD LT DUP1 ISZERO PUSH2 0x3880 JUMPI POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP13 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3849 JUMPI PUSH2 0x3848 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x386C JUMPI PUSH2 0x386B PUSH2 0x50DF JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x5 ADD SLOAD LT JUMPDEST PUSH2 0x38BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38B6 SWAP1 PUSH2 0x4C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x393A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3931 SWAP1 PUSH2 0x4B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x394B SWAP2 SWAP1 PUSH2 0x4F37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3961 SWAP2 SWAP1 PUSH2 0x4EE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3971 PUSH2 0x3AAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x398F PUSH2 0x1A9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39DC SWAP1 PUSH2 0x4C48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3ADA JUMPI PUSH2 0x3AD9 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3B91 JUMPI PUSH2 0x3B90 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3E3C JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xA MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3E3B JUMPI DUP3 DUP3 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3C91 JUMPI PUSH2 0x3C90 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP SWAP2 PUSH1 0xA ADD SWAP2 SWAP1 PUSH1 0xA ADD SWAP1 PUSH2 0x3C45 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3E49 SWAP2 SWAP1 PUSH2 0x3E4D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3F2D JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0xA ADD PUSH2 0x3E4E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F40 DUP2 PUSH2 0x5355 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F55 DUP2 PUSH2 0x536C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F6A DUP2 PUSH2 0x5383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F87 JUMPI PUSH2 0x3F86 PUSH2 0x513D JUMP JUMPDEST JUMPDEST PUSH2 0x3F92 PUSH2 0x160 PUSH2 0x4EAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3FA2 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x3FB6 DUP5 DUP3 DUP6 ADD PUSH2 0x3F5B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x3FCA DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x3FDE DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x3FF2 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x4006 DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x401A DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x402E DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x4043 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x4059 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x406F DUP5 DUP3 DUP6 ADD PUSH2 0x3F46 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4093 JUMPI PUSH2 0x4092 PUSH2 0x513D JUMP JUMPDEST JUMPDEST PUSH2 0x409E PUSH2 0x180 PUSH2 0x4EAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40AE DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x40C2 DUP5 DUP3 DUP6 ADD PUSH2 0x3F5B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x40D6 DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x40EA DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x40FE DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x4112 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x4126 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x413A DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x414F DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x4165 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x417B DUP5 DUP3 DUP6 ADD PUSH2 0x3F46 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0x4191 DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41AD DUP2 PUSH2 0x5393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x41C2 DUP2 PUSH2 0x5393 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41DE JUMPI PUSH2 0x41DD PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41EC DUP5 DUP3 DUP6 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x420F JUMPI PUSH2 0x420E PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x421D DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x422E DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x423F DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4250 DUP8 DUP3 DUP9 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4276 JUMPI PUSH2 0x4275 PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4284 DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4295 DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42A6 DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x42B7 DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42DA JUMPI PUSH2 0x42D9 PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42E8 DUP6 DUP3 DUP7 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x42F9 DUP6 DUP3 DUP7 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x431C JUMPI PUSH2 0x431B PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x432A DUP7 DUP3 DUP8 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x433B DUP7 DUP3 DUP8 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x434C DUP7 DUP3 DUP8 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x436D JUMPI PUSH2 0x436C PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x437B DUP6 DUP3 DUP7 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x438C DUP6 DUP3 DUP7 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x43B3 JUMPI PUSH2 0x43B2 PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43C1 DUP10 DUP3 DUP11 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x43D2 DUP10 DUP3 DUP11 ADD PUSH2 0x419E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x43E3 DUP10 DUP3 DUP11 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x43F4 DUP10 DUP3 DUP11 ADD PUSH2 0x419E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x4405 DUP10 DUP3 DUP11 ADD PUSH2 0x419E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x4416 DUP10 DUP3 DUP11 ADD PUSH2 0x3F46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x443C JUMPI PUSH2 0x443B PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x444A DUP7 DUP3 DUP8 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x445B DUP7 DUP3 DUP8 ADD PUSH2 0x419E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x446C DUP7 DUP3 DUP8 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x448C JUMPI PUSH2 0x448B PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x449A DUP5 DUP3 DUP6 ADD PUSH2 0x3F46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x44BC JUMPI PUSH2 0x44BB PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44CA DUP7 DUP3 DUP8 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x44DB DUP7 DUP3 DUP8 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x44EC DUP7 DUP3 DUP8 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4510 JUMPI PUSH2 0x450F PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x451E DUP8 DUP3 DUP9 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x452F DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4540 DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4551 DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4578 JUMPI PUSH2 0x4577 PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4586 DUP8 DUP3 DUP9 ADD PUSH2 0x3F70 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x160 PUSH2 0x4598 DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP4 POP POP PUSH2 0x180 PUSH2 0x45AA DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1A0 PUSH2 0x45BC DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45E0 JUMPI PUSH2 0x45DF PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45EE DUP6 DUP3 DUP7 ADD PUSH2 0x407C JUMP JUMPDEST SWAP3 POP POP PUSH2 0x180 PUSH2 0x4600 DUP6 DUP3 DUP7 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4620 JUMPI PUSH2 0x461F PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x462E DUP5 DUP3 DUP6 ADD PUSH2 0x419E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x464D JUMPI PUSH2 0x464C PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x465B DUP5 DUP3 DUP6 ADD PUSH2 0x41B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x467E JUMPI PUSH2 0x467D PUSH2 0x5142 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x468C DUP8 DUP3 DUP9 ADD PUSH2 0x419E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x469D DUP8 DUP3 DUP9 ADD PUSH2 0x3F5B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x46AE DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x46BF DUP8 DUP3 DUP9 ADD PUSH2 0x3F31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x46D4 DUP2 PUSH2 0x4F6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x46E3 DUP2 PUSH2 0x4F6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x46F2 DUP2 PUSH2 0x4F7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4701 DUP2 PUSH2 0x4F7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4710 DUP2 PUSH2 0x4FC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x471F DUP2 PUSH2 0x4FC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4732 PUSH1 0x10 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x473D DUP3 PUSH2 0x5158 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4755 PUSH1 0x17 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4760 DUP3 PUSH2 0x5181 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4778 PUSH1 0x26 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4783 DUP3 PUSH2 0x51AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479B PUSH1 0x18 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x47A6 DUP3 PUSH2 0x51F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47BE PUSH1 0x12 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x47C9 DUP3 PUSH2 0x5222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47E1 PUSH1 0x9 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x47EC DUP3 PUSH2 0x524B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4804 PUSH1 0x16 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x480F DUP3 PUSH2 0x5274 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4827 PUSH1 0x20 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4832 DUP3 PUSH2 0x529D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484A PUSH1 0x13 DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4855 DUP3 PUSH2 0x52C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x486D PUSH1 0x1A DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x4878 DUP3 PUSH2 0x52EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4890 PUSH1 0xF DUP4 PUSH2 0x4ED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x489B DUP3 PUSH2 0x5318 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x48BD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x48D0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4707 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x48E3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x48F6 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x4909 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x491C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x492F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4942 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x4957 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x496C PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x4981 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x46E9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x180 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x499E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x49B1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x4707 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x49C4 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x49D7 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x49EA PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x46CB JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x49FD PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x4A10 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4A23 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x4A38 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x4A4D PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x4A62 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x46E9 JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x4A77 PUSH2 0x160 DUP6 ADD DUP3 PUSH2 0x4A7D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4A86 DUP2 PUSH2 0x4FBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4A95 DUP2 PUSH2 0x4FBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x46DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4ACB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4AD8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x46DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4AF4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4B01 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4B0E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4B1B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x46F8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4B39 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4B46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B62 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x46F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B81 DUP2 PUSH2 0x4725 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BA1 DUP2 PUSH2 0x4748 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BC1 DUP2 PUSH2 0x476B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BE1 DUP2 PUSH2 0x478E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C01 DUP2 PUSH2 0x47B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C21 DUP2 PUSH2 0x47D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C41 DUP2 PUSH2 0x47F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C61 DUP2 PUSH2 0x481A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C81 DUP2 PUSH2 0x483D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CA1 DUP2 PUSH2 0x4860 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CC1 DUP2 PUSH2 0x4883 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x4CDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x48A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x4CFA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x48A6 JUMP JUMPDEST PUSH2 0x4D08 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x4A8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x4D25 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x4D5C PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4D69 PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x4716 JUMP JUMPDEST PUSH2 0x4D76 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4D83 PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4D90 PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4D9D PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4DAA PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4DB7 PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4DC5 PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4DD3 PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4DE1 PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x46F8 JUMP JUMPDEST PUSH2 0x4DEF PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x4A8C JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x4E16 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E23 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x4716 JUMP JUMPDEST PUSH2 0x4E30 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4E3D PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4E4A PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E57 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x46DA JUMP JUMPDEST PUSH2 0x4E64 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E71 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E7F PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E8D PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x4A8C JUMP JUMPDEST PUSH2 0x4E9B PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x46F8 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB5 PUSH2 0x4EC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x4EC1 DUP3 DUP3 PUSH2 0x4FD8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EEC DUP3 PUSH2 0x4FBC JUMP JUMPDEST SWAP2 POP PUSH2 0x4EF7 DUP4 PUSH2 0x4FBC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4F2C JUMPI PUSH2 0x4F2B PUSH2 0x5052 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F42 DUP3 PUSH2 0x4FBC JUMP JUMPDEST SWAP2 POP PUSH2 0x4F4D DUP4 PUSH2 0x4FBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4F60 JUMPI PUSH2 0x4F5F PUSH2 0x5052 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F76 DUP3 PUSH2 0x4F9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4F97 DUP3 PUSH2 0x5341 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FD1 DUP3 PUSH2 0x4F89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FE1 DUP3 PUSH2 0x5147 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5000 JUMPI PUSH2 0x4FFF PUSH2 0x510E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5014 DUP3 PUSH2 0x4FBC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x5047 JUMPI PUSH2 0x5046 PUSH2 0x5052 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204F7264657220494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420735F69734D616E75616C20626F6F6C000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20756E617661696C61626C6520696E204445580000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742046756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920766572696669656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420617661696C61626C6500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F72646572206E6F7420757064617465642070726F7065726C79000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F72646572206E6F7420466F756E640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x5352 JUMPI PUSH2 0x5351 PUSH2 0x5081 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x535E DUP2 PUSH2 0x4F6B JUMP JUMPDEST DUP2 EQ PUSH2 0x5369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5375 DUP2 PUSH2 0x4F7D JUMP JUMPDEST DUP2 EQ PUSH2 0x5380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x5390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x539C DUP2 PUSH2 0x4FBC JUMP JUMPDEST DUP2 EQ PUSH2 0x53A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST DELEGATECALL PUSH19 0x78BA89E11389180AE80848A9D75760152EFFEC POP 0x2E 0x5D 0x22 0x1E 0xD9 0xDD 0x21 PUSH24 0xD764736F6C63430008070033000000000000000000000000 ","sourceMap":"411:13124:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8342:562;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12169:272;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10118:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1767:25;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;12449:294;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11536:413;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3636:1384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5028:1428;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:2;;;:::i;:::-;;635:36:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10830:210:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11048:480;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1045:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;12751:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11957:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12876:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;951:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;10642:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13047:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;846:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;10336:298;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6464:1870:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8912:1035;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9955:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8342:562;8457:14;:26;8472:5;:10;;;8457:26;;;;;;;;;;;;;;;:33;8484:5;8457:33;;;;;;;;;;;8496:5;8457:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8520:376;8546:5;:8;;;8569:5;:10;;;8594:5;:10;;;8619:5;:12;;;8646:5;:12;;;8673:5;:18;;;8706:5;:14;;;8735:5;:18;;;8768:5;:21;;;8804:5;:21;;;8840:5;:16;;;8871:5;:14;;;8520:376;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;8342:562;;:::o;12169:272::-;12231:4;12299:9;12311:1;12299:13;;12294:117;12318:9;:16;;;;12314:1;:20;12294:117;;;12380:6;12360:26;;:9;12370:1;12360:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:26;;;12356:43;;;12395:4;12388:11;;;;;12356:43;12336:3;;;;;:::i;:::-;;;;12294:117;;;;12428:5;12421:12;;12169:272;;;;:::o;10118:210::-;10242:7;10269:11;:20;10281:7;10269:20;;;;;;;;;;;;;;;:29;10290:7;10269:29;;;;;;;;;;;;;;;:44;10307:4;10299:13;;;;;;;;:::i;:::-;;10269:44;;;;;;;;;;;:51;;;;10262:58;;10118:210;;;;;:::o;1767:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12449:294::-;12508:7;12533:9;12545:1;12533:13;;12528:168;12552:9;:16;;;;12548:1;:20;12528:168;;;12614:6;12594:26;;:9;12604:1;12594:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:26;;;12590:95;;;12648:9;12658:1;12648:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;12641:28;;;;;12590:95;12570:3;;;;;:::i;:::-;;;;12528:168;;;;12706:29;;;;;;;;;;:::i;:::-;;;;;;;;12449:294;;;;:::o;11536:413::-;11679:4;11696:22;11721:11;:20;11733:7;11721:20;;;;;;;;;;;;;;;:29;11742:7;11721:29;;;;;;;;;;;;;;;:44;11759:4;11751:13;;;;;;;;:::i;:::-;;11721:44;;;;;;;;;;;11696:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11783:9;11778:141;11802:6;:13;11798:1;:17;11778:141;;;11857:3;11841:6;11848:1;11841:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;:19;11837:71;;;11888:4;11881:11;;;;;;11837:71;11817:3;;;;;:::i;:::-;;;;11778:141;;;;11936:5;11929:12;;;11536:413;;;;;;;:::o;3636:1384::-;3874:7;13460:23;13476:6;13460:15;:23::i;:::-;13452:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3894:7:::1;13460:23;13476:6;13460:15;:23::i;:::-;13452:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4138:8:::2;4017:117;4077:6;;;;;;;;;;;:21;;;4099:10;4111:7;4077:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4017:6;;;;;;;;;;;:16;;;4034:7;4043:10;4017:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;:117;;;;:::i;:::-;:129;;3995:197;;;;;;;;;;;;:::i;:::-;;;;;;;;;4205:6;;;;;;;;;;;:32;;;4238:10;4250:7;4259:8;4269:4;4205:69;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4287:11;:20;4299:7;4287:20;;;;;;;;;;;;;;;:29;4308:7;4287:29;;;;;;;;;;;;;;;:48;4325:8:::0;4317:17:::2;;;;;;;;:::i;:::-;;4287:48;;;;;;;;;;;4355:318;;;;;;;;4380:9;;4355:318;;;;4408:8;4355:318;;;;;;;;:::i;:::-;;;;;;4435:10;4355:318;;;;;;4464:7;4355:318;;;;;;4490:8;4355:318;;;;4517:7;4355:318;;;;;;4543:8;4355:318;;;;4570:5;4355:318;;;;4594:8;4355:318;;;;4621:8;4355:318;;;;4648:10;4355:318;;;;::::0;4287:397:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4702:269;4722:9;;4746:8;4769:10;4794:7;4816:8;4839:7;4861:8;4884:5;4904:8;4927;4950:10;4702:269;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4996:16;5010:1;4996:9;;:13;;:16;;;;:::i;:::-;4984:9;:28;;;;13523:1:::1;3636:1384:::0;;;;;;;:::o;5028:1428::-;5241:7;13460:23;13476:6;13460:15;:23::i;:::-;13452:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5261:7:::1;13460:23;13476:6;13460:15;:23::i;:::-;13452:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5522:8:::2;5401:117;5461:6;;;;;;;;;;;:21;;;5483:10;5495:7;5461:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5401:6;;;;;;;;;;;:16;;;5418:7;5427:10;5401:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;:117;;;;:::i;:::-;:129;;5379:197;;;;;;;;;;;;:::i;:::-;;;;;;;;;5638:6;;;;;;;;;;;:32;;;5671:10;5683:7;5692:8;5702:4;5638:69;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5720:11;:20;5732:7;5720:20;;;;;;;;;;;;;;;:29;5741:7;5720:29;;;;;;;;;;;;;;;:49;5758:9;5750:18:::0;::::2;;;;;;;:::i;:::-;;5720:49;;;;;;;;;;;5789:319;;;;;;;;5814:9;;5789:319;;;;5842:9;5789:319:::0;::::2;;;;;;;:::i;:::-;;;;;;5870:10;5789:319;;;;;;5899:7;5789:319;;;;;;5925:8;5789:319;;;;5952:7;5789:319;;;;;;5978:8;5789:319;;;;6005:5;5789:319;;;;6029:8;5789:319;;;;6056:8;5789:319;;;;6083:10;5789:319;;;;::::0;5720:399:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6137:270;6157:9;;6181;6205:10;6230:7;6252:8;6275:7;6297:8;6320:5;6340:8;6363;6386:10;6137:270;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6432:16;6446:1;6432:9;;:13;;:16;;;;:::i;:::-;6420:9;:28;;;;13523:1:::1;5028:1428:::0;;;;;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;635:36:8:-;;;;;;;;;;;;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;10830:210:8:-;10950:19;;:::i;:::-;10989:14;:21;11004:5;10989:21;;;;;;;;;;;;;;;:36;11019:4;11011:13;;;;;;;;:::i;:::-;;10989:36;;;;;;;;;;;11026:5;10989:43;;;;;;;;:::i;:::-;;;;;;;;;;;;10982:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10830:210;;;;;:::o;11048:480::-;11200:13;;:::i;:::-;11215:7;11235:9;11247:1;11235:13;;11259:226;11271:11;:20;11283:7;11271:20;;;;;;;;;;;;;;;:29;11292:7;11271:29;;;;;;;;;;;;;;;:35;11301:4;11271:35;;;;;;;;;;;:42;;;;11267:1;:46;11259:226;;;11384:3;11339:11;:20;11351:7;11339:20;;;;;;;;;;;;;;;:29;11360:7;11339:29;;;;;;;;;;;;;;;:35;11369:4;11339:35;;;;;;;;;;;11375:1;11339:38;;;;;;;;:::i;:::-;;;;;;;;;;;;:41;;;:48;11335:139;;;11416:11;:20;11428:7;11416:20;;;;;;;;;;;;;;;:29;11437:7;11416:29;;;;;;;;;;;;;;;:35;11446:4;11416:35;;;;;;;;;;;11452:1;11416:38;;;;;;;;:::i;:::-;;;;;;;;;;;;11456:1;11408:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11335:139;11315:3;;;;;:::i;:::-;;;;11259:226;;;11495:25;;;;;;;;;;:::i;:::-;;;;;;;;11048:480;;;;;;;;:::o;1045:28::-;;;;:::o;723:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12751:117::-;1094:13:2;:11;:13::i;:::-;12845:14:8::1;12829:6;;:31;;;;;;;;;;;;;;;;;;12751:117:::0;:::o;11957:204::-;1094:13:2;:11;:13::i;:::-;12047:23:8::1;12063:6;12047:15;:23::i;:::-;12046:24;12038:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;12108:9;12123:29;;;;;;;;12134:6;12123:29;;;;;;12142:9;12123:29;;::::0;12108:45:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11957:204:::0;;:::o;12876:163::-;1094:13:2;:11;:13::i;:::-;13010:20:8::1;12982:12;;:49;;;;;;;;;;;;;;;;;;12876:163:::0;:::o;951:85::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10642:180::-;10744:7;10771:14;:21;10786:5;10771:21;;;;;;;;;;;;;;;:36;10801:4;10793:13;;;;;;;;:::i;:::-;;10771:36;;;;;;;;;;;:43;;;;10764:50;;10642:180;;;;:::o;13047:121::-;1094:13:2;:11;:13::i;:::-;13147:12:8::1;13121:11;;:39;;;;;;;;;;;;;;;;;;13047:121:::0;:::o;846:96::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10336:298::-;10478:13;;:::i;:::-;10504:19;10526:11;:20;10538:7;10526:20;;;;;;;;;;;;;;;:29;10547:7;10526:29;;;;;;;;;;;;;;;:44;10564:4;10556:13;;;;;;;;:::i;:::-;;10526:44;;;;;;;;;;;10585:5;10526:75;;;;;;;;:::i;:::-;;;;;;;;;;;;10504:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10620:5;10612:14;;;10336:298;;;;;;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6464:1870:8:-;6622:3;6627:4;6633:7;6642;13316:40;13328:3;13333:4;13339:7;13348;13316:11;:40::i;:::-;13308:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6671:7:::1;13460:23;13476:6;13460:15;:23::i;:::-;13452:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;6700:7:::2;13460:23;13476:6;13460:15;:23::i;:::-;13452:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;6725:13:::3;6749:4;6741:13;;;;;;;;:::i;:::-;;6725:29;;6765:23;6791:11;:20;6803:7;6791:20;;;;;;;;;;;;;;;:29;6812:7;6791:29;;;;;;;;;;;;;;;:36;6821:5;6791:36;;;;;;;;;;;6765:62;;6838:12;6853:6;:13;;;;6838:28;;6877:19;;:::i;:::-;6909:13;6938:9:::0;6950:1:::3;6938:13;;6933:190;6957:4;6953:1;:8;6933:190;;;7003:3;6987:6;6994:1;6987:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:12;;;:19;6983:129;;;7035:1;7027:9;;7063:6;7070:1;7063:9;;;;;;;;:::i;:::-;;;;;;;;;;;;7055:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;7091:5;;6983:129;6963:3;;;;;:::i;:::-;;;;6933:190;;;;7180:10;;;;;;;;;;;7176:620;;;7229:5;:10;;;7215:24;;:10;:24;;;7207:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;7310:8;7302:16;;;;;;;;:::i;:::-;;:4;:16;;;;;;;;:::i;:::-;;;7298:487;;;7339:6;;;;;;;;;;;:32;;;7394:10;7427:5;:12;;;7462:5;:13;;;7498:5;7339:183;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;7298:487;;;7556:9;7548:17:::0;::::3;;;;;;;:::i;:::-;;:4;:17;;;;;;;;:::i;:::-;;;7544:241;;;7586:6;;;;;;;;;;;:32;;;7641:10;7674:5;:12;;;7709:5;:13;;;7745:5;7586:183;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;7544:241;7298:487;7176:620;7811:9;7823:5;7811:17;;7806:98;7841:1;7834:4;:8;;;;:::i;:::-;7830:1;:12;7806:98;;;7876:6;7883:8;7889:1;7883;:5;;:8;;;;:::i;:::-;7876:16;;;;;;;;:::i;:::-;;;;;;;;;;;;7864:6;7871:1;7864:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7844:3;;;;;:::i;:::-;;;;7806:98;;;;7916:6;:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7980:6;7941:11;:20;7953:7;7941:20;;;;;;;;;;;;;;;:29;7962:7;7941:29;;;;;;;;;;;;;;;:36;7971:5;7941:36;;;;;;;;;;;:45;;;;;;;;:::i;:::-;;8004:322;8025:3;8043:5;:10;;;8068:5;:10;;;8093:5;:12;;;8120:5;:13;;;8148:5;:12;;;8175:5;:13;;;8203:5;:10;;;8228:5;:21;;;8264:5;:21;;;8300:5;:15;;;8004:322;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6714:1620;;;;;13523:1:::2;13388::::1;6464:1870:::0;;;;;;;;:::o;8912:1035::-;9069:5;:8;;;9079:5;:10;;;9091:5;:12;;;9105:5;:12;;;13316:40;13328:3;13333:4;13339:7;13348;13316:11;:40::i;:::-;13308:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;9130:9:::1;9142:11;:25;9154:5;:12;;;9142:25;;;;;;;;;;;;;;;:39;9168:5;:12;;;9142:39;;;;;;;;;;;;;;;:58;9188:5;:10;;;9182:17;;;;;;;;:::i;:::-;;9142:58;;;;;;;;;;;;;9215:6;9142:90;;;;;;;;:::i;:::-;;;;;;;;;;;;:98;;;9130:110;;9251:9;9263:11;:25;9275:5;:12;;;9263:25;;;;;;;;;;;;;;;:39;9289:5;:12;;;9263:39;;;;;;;;;;;;;;;:58;9309:5;:10;;;9303:17;;;;;;;;:::i;:::-;;9263:58;;;;;;;;;;;;;9336:6;9263:90;;;;;;;;:::i;:::-;;;;;;;;;;;;:98;;;9251:110;;9463:8;9372:11;:25;9384:5;:12;;;9372:25;;;;;;;;;;;;;;;:39;9398:5;:12;;;9372:39;;;;;;;;;;;;;;;:58;9418:5;:10;;;9412:17;;;;;;;;:::i;:::-;;9372:58;;;;;;;;;;;;;9431:6;9372:66;;;;;;;;:::i;:::-;;;;;;;;;;;;:88;;:99;;;;9573:8;9482:11;:25;9494:5;:12;;;9482:25;;;;;;;;;;;;;;;:39;9508:5;:12;;;9482:39;;;;;;;;;;;;;;;:58;9528:5;:10;;;9522:17;;;;;;;;:::i;:::-;;9482:58;;;;;;;;;;;;;9541:6;9482:66;;;;;;;;:::i;:::-;;;;;;;;;;;;:88;;:99;;;;9728:1;9616:11;:25;9628:5;:12;;;9616:25;;;;;;;;;;;;;;;:39;9642:5;:12;;;9616:39;;;;;;;;;;;;;;;:58;9662:5;:10;;;9656:17;;;;;;;;:::i;:::-;;9616:58;;;;;;;;;;;;;9675:6;9616:66;;;;;;;;:::i;:::-;;;;;;;;;;;;:92;;;:113;:269;;;;;9884:1;9750:11;:25;9762:5;:12;;;9750:25;;;;;;;;;;;;;;;:39;9776:5;:12;;;9750:39;;;;;;;;;;;;;;;:58;9796:5;:10;;;9790:17;;;;;;;;:::i;:::-;;9750:58;;;;;;;;;;;;;9831:6;9750:106;;;;;;;;:::i;:::-;;;;;;;;;;;;:114;;;:135;9616:269;9594:345;;;;;;;;;;;;:::i;:::-;;;;;;;;;9119:828;;8912:1035:::0;;;;;;;;:::o;9955:155::-;10023:9;10010:10;;:22;;;;;;;;;;;;;;;;;;10065:9;10051:23;;:10;;;;;;;;;;;:23;;;10043:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;9955:155;:::o;3122:96:6:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:17:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:157::-;346:5;384:6;371:20;362:29;;400:42;436:5;400:42;:::i;:::-;291:157;;;;:::o;484:2080::-;557:5;601:6;589:9;584:3;580:19;576:32;573:119;;;611:79;;:::i;:::-;573:119;710:23;726:6;710:23;:::i;:::-;701:32;;790:1;830:49;875:3;866:6;855:9;851:22;830:49;:::i;:::-;823:4;816:5;812:16;805:75;743:148;950:2;991:58;1045:3;1036:6;1025:9;1021:22;991:58;:::i;:::-;984:4;977:5;973:16;966:84;901:160;1120:2;1161:49;1206:3;1197:6;1186:9;1182:22;1161:49;:::i;:::-;1154:4;1147:5;1143:16;1136:75;1071:151;1283:2;1324:49;1369:3;1360:6;1349:9;1345:22;1324:49;:::i;:::-;1317:4;1310:5;1306:16;1299:75;1232:153;1447:3;1489:49;1534:3;1525:6;1514:9;1510:22;1489:49;:::i;:::-;1482:4;1475:5;1471:16;1464:75;1395:155;1611:3;1653:49;1698:3;1689:6;1678:9;1674:22;1653:49;:::i;:::-;1646:4;1639:5;1635:16;1628:75;1560:154;1776:3;1818:49;1863:3;1854:6;1843:9;1839:22;1818:49;:::i;:::-;1811:4;1804:5;1800:16;1793:75;1724:155;1938:3;1980:49;2025:3;2016:6;2005:9;2001:22;1980:49;:::i;:::-;1973:4;1966:5;1962:16;1955:75;1889:152;2111:3;2155:49;2200:3;2191:6;2180:9;2176:22;2155:49;:::i;:::-;2146:6;2139:5;2135:18;2128:77;2051:165;2286:3;2330:49;2375:3;2366:6;2355:9;2351:22;2330:49;:::i;:::-;2321:6;2314:5;2310:18;2303:77;2226:165;2455:3;2499:46;2541:3;2532:6;2521:9;2517:22;2499:46;:::i;:::-;2490:6;2483:5;2479:18;2472:74;2401:156;484:2080;;;;:::o;2606:2269::-;2685:5;2729:6;2717:9;2712:3;2708:19;2704:32;2701:119;;;2739:79;;:::i;:::-;2701:119;2838:23;2854:6;2838:23;:::i;:::-;2829:32;;2918:1;2958:49;3003:3;2994:6;2983:9;2979:22;2958:49;:::i;:::-;2951:4;2944:5;2940:16;2933:75;2871:148;3078:2;3119:58;3173:3;3164:6;3153:9;3149:22;3119:58;:::i;:::-;3112:4;3105:5;3101:16;3094:84;3029:160;3248:2;3289:49;3334:3;3325:6;3314:9;3310:22;3289:49;:::i;:::-;3282:4;3275:5;3271:16;3264:75;3199:151;3411:2;3452:49;3497:3;3488:6;3477:9;3473:22;3452:49;:::i;:::-;3445:4;3438:5;3434:16;3427:75;3360:153;3574:3;3616:49;3661:3;3652:6;3641:9;3637:22;3616:49;:::i;:::-;3609:4;3602:5;3598:16;3591:75;3523:154;3744:3;3786:49;3831:3;3822:6;3811:9;3807:22;3786:49;:::i;:::-;3779:4;3772:5;3768:16;3761:75;3687:160;3910:3;3952:49;3997:3;3988:6;3977:9;3973:22;3952:49;:::i;:::-;3945:4;3938:5;3934:16;3927:75;3857:156;4080:3;4122:49;4167:3;4158:6;4147:9;4143:22;4122:49;:::i;:::-;4115:4;4108:5;4104:16;4097:75;4023:160;4253:3;4297:49;4342:3;4333:6;4322:9;4318:22;4297:49;:::i;:::-;4288:6;4281:5;4277:18;4270:77;4193:165;4428:3;4472:49;4517:3;4508:6;4497:9;4493:22;4472:49;:::i;:::-;4463:6;4456:5;4452:18;4445:77;4368:165;4598:3;4642:46;4684:3;4675:6;4664:9;4660:22;4642:46;:::i;:::-;4633:6;4626:5;4622:18;4615:74;4543:157;4763:3;4807:49;4852:3;4843:6;4832:9;4828:22;4807:49;:::i;:::-;4798:6;4791:5;4787:18;4780:77;4710:158;2606:2269;;;;:::o;4881:139::-;4927:5;4965:6;4952:20;4943:29;;4981:33;5008:5;4981:33;:::i;:::-;4881:139;;;;:::o;5026:143::-;5083:5;5114:6;5108:13;5099:22;;5130:33;5157:5;5130:33;:::i;:::-;5026:143;;;;:::o;5175:329::-;5234:6;5283:2;5271:9;5262:7;5258:23;5254:32;5251:119;;;5289:79;;:::i;:::-;5251:119;5409:1;5434:53;5479:7;5470:6;5459:9;5455:22;5434:53;:::i;:::-;5424:63;;5380:117;5175:329;;;;:::o;5510:783::-;5605:6;5613;5621;5629;5678:3;5666:9;5657:7;5653:23;5649:33;5646:120;;;5685:79;;:::i;:::-;5646:120;5805:1;5830:53;5875:7;5866:6;5855:9;5851:22;5830:53;:::i;:::-;5820:63;;5776:117;5932:2;5958:53;6003:7;5994:6;5983:9;5979:22;5958:53;:::i;:::-;5948:63;;5903:118;6060:2;6086:53;6131:7;6122:6;6111:9;6107:22;6086:53;:::i;:::-;6076:63;;6031:118;6188:2;6214:62;6268:7;6259:6;6248:9;6244:22;6214:62;:::i;:::-;6204:72;;6159:127;5510:783;;;;;;;:::o;6299:765::-;6385:6;6393;6401;6409;6458:3;6446:9;6437:7;6433:23;6429:33;6426:120;;;6465:79;;:::i;:::-;6426:120;6585:1;6610:53;6655:7;6646:6;6635:9;6631:22;6610:53;:::i;:::-;6600:63;;6556:117;6712:2;6738:53;6783:7;6774:6;6763:9;6759:22;6738:53;:::i;:::-;6728:63;;6683:118;6840:2;6866:53;6911:7;6902:6;6891:9;6887:22;6866:53;:::i;:::-;6856:63;;6811:118;6968:2;6994:53;7039:7;7030:6;7019:9;7015:22;6994:53;:::i;:::-;6984:63;;6939:118;6299:765;;;;;;;:::o;7070:492::-;7147:6;7155;7204:2;7192:9;7183:7;7179:23;7175:32;7172:119;;;7210:79;;:::i;:::-;7172:119;7330:1;7355:53;7400:7;7391:6;7380:9;7376:22;7355:53;:::i;:::-;7345:63;;7301:117;7457:2;7483:62;7537:7;7528:6;7517:9;7513:22;7483:62;:::i;:::-;7473:72;;7428:127;7070:492;;;;;:::o;7568:637::-;7654:6;7662;7670;7719:2;7707:9;7698:7;7694:23;7690:32;7687:119;;;7725:79;;:::i;:::-;7687:119;7845:1;7870:53;7915:7;7906:6;7895:9;7891:22;7870:53;:::i;:::-;7860:63;;7816:117;7972:2;7998:62;8052:7;8043:6;8032:9;8028:22;7998:62;:::i;:::-;7988:72;;7943:127;8109:2;8135:53;8180:7;8171:6;8160:9;8156:22;8135:53;:::i;:::-;8125:63;;8080:118;7568:637;;;;;:::o;8211:474::-;8279:6;8287;8336:2;8324:9;8315:7;8311:23;8307:32;8304:119;;;8342:79;;:::i;:::-;8304:119;8462:1;8487:53;8532:7;8523:6;8512:9;8508:22;8487:53;:::i;:::-;8477:63;;8433:117;8589:2;8615:53;8660:7;8651:6;8640:9;8636:22;8615:53;:::i;:::-;8605:63;;8560:118;8211:474;;;;;:::o;8691:1051::-;8792:6;8800;8808;8816;8824;8832;8881:3;8869:9;8860:7;8856:23;8852:33;8849:120;;;8888:79;;:::i;:::-;8849:120;9008:1;9033:53;9078:7;9069:6;9058:9;9054:22;9033:53;:::i;:::-;9023:63;;8979:117;9135:2;9161:53;9206:7;9197:6;9186:9;9182:22;9161:53;:::i;:::-;9151:63;;9106:118;9263:2;9289:53;9334:7;9325:6;9314:9;9310:22;9289:53;:::i;:::-;9279:63;;9234:118;9391:2;9417:53;9462:7;9453:6;9442:9;9438:22;9417:53;:::i;:::-;9407:63;;9362:118;9519:3;9546:53;9591:7;9582:6;9571:9;9567:22;9546:53;:::i;:::-;9536:63;;9490:119;9648:3;9675:50;9717:7;9708:6;9697:9;9693:22;9675:50;:::i;:::-;9665:60;;9619:116;8691:1051;;;;;;;;:::o;9748:619::-;9825:6;9833;9841;9890:2;9878:9;9869:7;9865:23;9861:32;9858:119;;;9896:79;;:::i;:::-;9858:119;10016:1;10041:53;10086:7;10077:6;10066:9;10062:22;10041:53;:::i;:::-;10031:63;;9987:117;10143:2;10169:53;10214:7;10205:6;10194:9;10190:22;10169:53;:::i;:::-;10159:63;;10114:118;10271:2;10297:53;10342:7;10333:6;10322:9;10318:22;10297:53;:::i;:::-;10287:63;;10242:118;9748:619;;;;;:::o;10373:323::-;10429:6;10478:2;10466:9;10457:7;10453:23;10449:32;10446:119;;;10484:79;;:::i;:::-;10446:119;10604:1;10629:50;10671:7;10662:6;10651:9;10647:22;10629:50;:::i;:::-;10619:60;;10575:114;10373:323;;;;:::o;10702:637::-;10788:6;10796;10804;10853:2;10841:9;10832:7;10828:23;10824:32;10821:119;;;10859:79;;:::i;:::-;10821:119;10979:1;11004:62;11058:7;11049:6;11038:9;11034:22;11004:62;:::i;:::-;10994:72;;10950:126;11115:2;11141:53;11186:7;11177:6;11166:9;11162:22;11141:53;:::i;:::-;11131:63;;11086:118;11243:2;11269:53;11314:7;11305:6;11294:9;11290:22;11269:53;:::i;:::-;11259:63;;11214:118;10702:637;;;;;:::o;11345:783::-;11440:6;11448;11456;11464;11513:3;11501:9;11492:7;11488:23;11484:33;11481:120;;;11520:79;;:::i;:::-;11481:120;11640:1;11665:62;11719:7;11710:6;11699:9;11695:22;11665:62;:::i;:::-;11655:72;;11611:126;11776:2;11802:53;11847:7;11838:6;11827:9;11823:22;11802:53;:::i;:::-;11792:63;;11747:118;11904:2;11930:53;11975:7;11966:6;11955:9;11951:22;11930:53;:::i;:::-;11920:63;;11875:118;12032:2;12058:53;12103:7;12094:6;12083:9;12079:22;12058:53;:::i;:::-;12048:63;;12003:118;11345:783;;;;;;;:::o;12134:816::-;12244:6;12252;12260;12268;12317:3;12305:9;12296:7;12292:23;12288:33;12285:120;;;12324:79;;:::i;:::-;12285:120;12444:1;12469:77;12538:7;12529:6;12518:9;12514:22;12469:77;:::i;:::-;12459:87;;12415:141;12595:3;12622:53;12667:7;12658:6;12647:9;12643:22;12622:53;:::i;:::-;12612:63;;12566:119;12724:3;12751:53;12796:7;12787:6;12776:9;12772:22;12751:53;:::i;:::-;12741:63;;12695:119;12853:3;12880:53;12925:7;12916:6;12905:9;12901:22;12880:53;:::i;:::-;12870:63;;12824:119;12134:816;;;;;;;:::o;12956:536::-;13054:6;13062;13111:3;13099:9;13090:7;13086:23;13082:33;13079:120;;;13118:79;;:::i;:::-;13079:120;13238:1;13263:83;13338:7;13329:6;13318:9;13314:22;13263:83;:::i;:::-;13253:93;;13209:147;13395:3;13422:53;13467:7;13458:6;13447:9;13443:22;13422:53;:::i;:::-;13412:63;;13366:119;12956:536;;;;;:::o;13498:329::-;13557:6;13606:2;13594:9;13585:7;13581:23;13577:32;13574:119;;;13612:79;;:::i;:::-;13574:119;13732:1;13757:53;13802:7;13793:6;13782:9;13778:22;13757:53;:::i;:::-;13747:63;;13703:117;13498:329;;;;:::o;13833:351::-;13903:6;13952:2;13940:9;13931:7;13927:23;13923:32;13920:119;;;13958:79;;:::i;:::-;13920:119;14078:1;14103:64;14159:7;14150:6;14139:9;14135:22;14103:64;:::i;:::-;14093:74;;14049:128;13833:351;;;;:::o;14190:783::-;14285:6;14293;14301;14309;14358:3;14346:9;14337:7;14333:23;14329:33;14326:120;;;14365:79;;:::i;:::-;14326:120;14485:1;14510:53;14555:7;14546:6;14535:9;14531:22;14510:53;:::i;:::-;14500:63;;14456:117;14612:2;14638:62;14692:7;14683:6;14672:9;14668:22;14638:62;:::i;:::-;14628:72;;14583:127;14749:2;14775:53;14820:7;14811:6;14800:9;14796:22;14775:53;:::i;:::-;14765:63;;14720:118;14877:2;14903:53;14948:7;14939:6;14928:9;14924:22;14903:53;:::i;:::-;14893:63;;14848:118;14190:783;;;;;;;:::o;14979:108::-;15056:24;15074:5;15056:24;:::i;:::-;15051:3;15044:37;14979:108;;:::o;15093:118::-;15180:24;15198:5;15180:24;:::i;:::-;15175:3;15168:37;15093:118;;:::o;15217:99::-;15288:21;15303:5;15288:21;:::i;:::-;15283:3;15276:34;15217:99;;:::o;15322:109::-;15403:21;15418:5;15403:21;:::i;:::-;15398:3;15391:34;15322:109;;:::o;15437:135::-;15521:44;15559:5;15521:44;:::i;:::-;15516:3;15509:57;15437:135;;:::o;15578:145::-;15672:44;15710:5;15672:44;:::i;:::-;15667:3;15660:57;15578:145;;:::o;15729:366::-;15871:3;15892:67;15956:2;15951:3;15892:67;:::i;:::-;15885:74;;15968:93;16057:3;15968:93;:::i;:::-;16086:2;16081:3;16077:12;16070:19;;15729:366;;;:::o;16101:::-;16243:3;16264:67;16328:2;16323:3;16264:67;:::i;:::-;16257:74;;16340:93;16429:3;16340:93;:::i;:::-;16458:2;16453:3;16449:12;16442:19;;16101:366;;;:::o;16473:::-;16615:3;16636:67;16700:2;16695:3;16636:67;:::i;:::-;16629:74;;16712:93;16801:3;16712:93;:::i;:::-;16830:2;16825:3;16821:12;16814:19;;16473:366;;;:::o;16845:::-;16987:3;17008:67;17072:2;17067:3;17008:67;:::i;:::-;17001:74;;17084:93;17173:3;17084:93;:::i;:::-;17202:2;17197:3;17193:12;17186:19;;16845:366;;;:::o;17217:::-;17359:3;17380:67;17444:2;17439:3;17380:67;:::i;:::-;17373:74;;17456:93;17545:3;17456:93;:::i;:::-;17574:2;17569:3;17565:12;17558:19;;17217:366;;;:::o;17589:365::-;17731:3;17752:66;17816:1;17811:3;17752:66;:::i;:::-;17745:73;;17827:93;17916:3;17827:93;:::i;:::-;17945:2;17940:3;17936:12;17929:19;;17589:365;;;:::o;17960:366::-;18102:3;18123:67;18187:2;18182:3;18123:67;:::i;:::-;18116:74;;18199:93;18288:3;18199:93;:::i;:::-;18317:2;18312:3;18308:12;18301:19;;17960:366;;;:::o;18332:::-;18474:3;18495:67;18559:2;18554:3;18495:67;:::i;:::-;18488:74;;18571:93;18660:3;18571:93;:::i;:::-;18689:2;18684:3;18680:12;18673:19;;18332:366;;;:::o;18704:::-;18846:3;18867:67;18931:2;18926:3;18867:67;:::i;:::-;18860:74;;18943:93;19032:3;18943:93;:::i;:::-;19061:2;19056:3;19052:12;19045:19;;18704:366;;;:::o;19076:::-;19218:3;19239:67;19303:2;19298:3;19239:67;:::i;:::-;19232:74;;19315:93;19404:3;19315:93;:::i;:::-;19433:2;19428:3;19424:12;19417:19;;19076:366;;;:::o;19448:::-;19590:3;19611:67;19675:2;19670:3;19611:67;:::i;:::-;19604:74;;19687:93;19776:3;19687:93;:::i;:::-;19805:2;19800:3;19796:12;19789:19;;19448:366;;;:::o;19876:2121::-;20021:6;20016:3;20012:16;20108:4;20101:5;20097:16;20091:23;20127:63;20184:4;20179:3;20175:14;20161:12;20127:63;:::i;:::-;20038:162;20282:4;20275:5;20271:16;20265:23;20301:70;20365:4;20360:3;20356:14;20342:12;20301:70;:::i;:::-;20210:171;20463:4;20456:5;20452:16;20446:23;20482:63;20539:4;20534:3;20530:14;20516:12;20482:63;:::i;:::-;20391:164;20639:4;20632:5;20628:16;20622:23;20658:63;20715:4;20710:3;20706:14;20692:12;20658:63;:::i;:::-;20565:166;20816:4;20809:5;20805:16;20799:23;20835:63;20892:4;20887:3;20883:14;20869:12;20835:63;:::i;:::-;20741:167;20992:4;20985:5;20981:16;20975:23;21011:63;21068:4;21063:3;21059:14;21045:12;21011:63;:::i;:::-;20918:166;21169:4;21162:5;21158:16;21152:23;21188:63;21245:4;21240:3;21236:14;21222:12;21188:63;:::i;:::-;21094:167;21343:4;21336:5;21332:16;21326:23;21362:63;21419:4;21414:3;21410:14;21396:12;21362:63;:::i;:::-;21271:164;21528:6;21521:5;21517:18;21511:25;21549:65;21606:6;21601:3;21597:16;21583:12;21549:65;:::i;:::-;21445:179;21717:6;21710:5;21706:18;21700:25;21738:65;21795:6;21790:3;21786:16;21772:12;21738:65;:::i;:::-;21634:179;21900:6;21893:5;21889:18;21883:25;21921:59;21972:6;21967:3;21963:16;21949:12;21921:59;:::i;:::-;21823:167;19990:2007;19876:2121;;:::o;22071:2330::-;22228:6;22223:3;22219:16;22315:4;22308:5;22304:16;22298:23;22334:63;22391:4;22386:3;22382:14;22368:12;22334:63;:::i;:::-;22245:162;22489:4;22482:5;22478:16;22472:23;22508:70;22572:4;22567:3;22563:14;22549:12;22508:70;:::i;:::-;22417:171;22670:4;22663:5;22659:16;22653:23;22689:63;22746:4;22741:3;22737:14;22723:12;22689:63;:::i;:::-;22598:164;22846:4;22839:5;22835:16;22829:23;22865:63;22922:4;22917:3;22913:14;22899:12;22865:63;:::i;:::-;22772:166;23022:4;23015:5;23011:16;23005:23;23041:63;23098:4;23093:3;23089:14;23075:12;23041:63;:::i;:::-;22948:166;23204:4;23197:5;23193:16;23187:23;23223:63;23280:4;23275:3;23271:14;23257:12;23223:63;:::i;:::-;23124:172;23382:4;23375:5;23371:16;23365:23;23401:63;23458:4;23453:3;23449:14;23435:12;23401:63;:::i;:::-;23306:168;23564:4;23557:5;23553:16;23547:23;23583:63;23640:4;23635:3;23631:14;23617:12;23583:63;:::i;:::-;23484:172;23749:6;23742:5;23738:18;23732:25;23770:65;23827:6;23822:3;23818:16;23804:12;23770:65;:::i;:::-;23666:179;23938:6;23931:5;23927:18;23921:25;23959:65;24016:6;24011:3;24007:16;23993:12;23959:65;:::i;:::-;23855:179;24122:6;24115:5;24111:18;24105:25;24143:59;24194:6;24189:3;24185:16;24171:12;24143:59;:::i;:::-;24044:168;24298:6;24291:5;24287:18;24281:25;24319:65;24376:6;24371:3;24367:16;24353:12;24319:65;:::i;:::-;24222:172;22197:2204;22071:2330;;:::o;24407:108::-;24484:24;24502:5;24484:24;:::i;:::-;24479:3;24472:37;24407:108;;:::o;24521:118::-;24608:24;24626:5;24608:24;:::i;:::-;24603:3;24596:37;24521:118;;:::o;24645:222::-;24738:4;24776:2;24765:9;24761:18;24753:26;;24789:71;24857:1;24846:9;24842:17;24833:6;24789:71;:::i;:::-;24645:222;;;;:::o;24873:332::-;24994:4;25032:2;25021:9;25017:18;25009:26;;25045:71;25113:1;25102:9;25098:17;25089:6;25045:71;:::i;:::-;25126:72;25194:2;25183:9;25179:18;25170:6;25126:72;:::i;:::-;24873:332;;;;;:::o;25211:541::-;25382:4;25420:3;25409:9;25405:19;25397:27;;25434:71;25502:1;25491:9;25487:17;25478:6;25434:71;:::i;:::-;25515:72;25583:2;25572:9;25568:18;25559:6;25515:72;:::i;:::-;25597;25665:2;25654:9;25650:18;25641:6;25597:72;:::i;:::-;25679:66;25741:2;25730:9;25726:18;25717:6;25679:66;:::i;:::-;25211:541;;;;;;;:::o;25758:332::-;25879:4;25917:2;25906:9;25902:18;25894:26;;25930:71;25998:1;25987:9;25983:17;25974:6;25930:71;:::i;:::-;26011:72;26079:2;26068:9;26064:18;26055:6;26011:72;:::i;:::-;25758:332;;;;;:::o;26096:210::-;26183:4;26221:2;26210:9;26206:18;26198:26;;26234:65;26296:1;26285:9;26281:17;26272:6;26234:65;:::i;:::-;26096:210;;;;:::o;26312:419::-;26478:4;26516:2;26505:9;26501:18;26493:26;;26565:9;26559:4;26555:20;26551:1;26540:9;26536:17;26529:47;26593:131;26719:4;26593:131;:::i;:::-;26585:139;;26312:419;;;:::o;26737:::-;26903:4;26941:2;26930:9;26926:18;26918:26;;26990:9;26984:4;26980:20;26976:1;26965:9;26961:17;26954:47;27018:131;27144:4;27018:131;:::i;:::-;27010:139;;26737:419;;;:::o;27162:::-;27328:4;27366:2;27355:9;27351:18;27343:26;;27415:9;27409:4;27405:20;27401:1;27390:9;27386:17;27379:47;27443:131;27569:4;27443:131;:::i;:::-;27435:139;;27162:419;;;:::o;27587:::-;27753:4;27791:2;27780:9;27776:18;27768:26;;27840:9;27834:4;27830:20;27826:1;27815:9;27811:17;27804:47;27868:131;27994:4;27868:131;:::i;:::-;27860:139;;27587:419;;;:::o;28012:::-;28178:4;28216:2;28205:9;28201:18;28193:26;;28265:9;28259:4;28255:20;28251:1;28240:9;28236:17;28229:47;28293:131;28419:4;28293:131;:::i;:::-;28285:139;;28012:419;;;:::o;28437:::-;28603:4;28641:2;28630:9;28626:18;28618:26;;28690:9;28684:4;28680:20;28676:1;28665:9;28661:17;28654:47;28718:131;28844:4;28718:131;:::i;:::-;28710:139;;28437:419;;;:::o;28862:::-;29028:4;29066:2;29055:9;29051:18;29043:26;;29115:9;29109:4;29105:20;29101:1;29090:9;29086:17;29079:47;29143:131;29269:4;29143:131;:::i;:::-;29135:139;;28862:419;;;:::o;29287:::-;29453:4;29491:2;29480:9;29476:18;29468:26;;29540:9;29534:4;29530:20;29526:1;29515:9;29511:17;29504:47;29568:131;29694:4;29568:131;:::i;:::-;29560:139;;29287:419;;;:::o;29712:::-;29878:4;29916:2;29905:9;29901:18;29893:26;;29965:9;29959:4;29955:20;29951:1;29940:9;29936:17;29929:47;29993:131;30119:4;29993:131;:::i;:::-;29985:139;;29712:419;;;:::o;30137:::-;30303:4;30341:2;30330:9;30326:18;30318:26;;30390:9;30384:4;30380:20;30376:1;30365:9;30361:17;30354:47;30418:131;30544:4;30418:131;:::i;:::-;30410:139;;30137:419;;;:::o;30562:::-;30728:4;30766:2;30755:9;30751:18;30743:26;;30815:9;30809:4;30805:20;30801:1;30790:9;30786:17;30779:47;30843:131;30969:4;30843:131;:::i;:::-;30835:139;;30562:419;;;:::o;30987:319::-;31128:4;31166:3;31155:9;31151:19;31143:27;;31180:119;31296:1;31285:9;31281:17;31272:6;31180:119;:::i;:::-;30987:319;;;;:::o;31312:430::-;31481:4;31519:3;31508:9;31504:19;31496:27;;31533:119;31649:1;31638:9;31634:17;31625:6;31533:119;:::i;:::-;31662:73;31730:3;31719:9;31715:19;31706:6;31662:73;:::i;:::-;31312:430;;;;;:::o;31748:343::-;31901:4;31939:3;31928:9;31924:19;31916:27;;31953:131;32081:1;32070:9;32066:17;32057:6;31953:131;:::i;:::-;31748:343;;;;:::o;32097:222::-;32190:4;32228:2;32217:9;32213:18;32205:26;;32241:71;32309:1;32298:9;32294:17;32285:6;32241:71;:::i;:::-;32097:222;;;;:::o;32325:1447::-;32729:4;32767:3;32756:9;32752:19;32744:27;;32781:71;32849:1;32838:9;32834:17;32825:6;32781:71;:::i;:::-;32862:79;32937:2;32926:9;32922:18;32913:6;32862:79;:::i;:::-;32951:72;33019:2;33008:9;33004:18;32995:6;32951:72;:::i;:::-;33033;33101:2;33090:9;33086:18;33077:6;33033:72;:::i;:::-;33115:73;33183:3;33172:9;33168:19;33159:6;33115:73;:::i;:::-;33198;33266:3;33255:9;33251:19;33242:6;33198:73;:::i;:::-;33281;33349:3;33338:9;33334:19;33325:6;33281:73;:::i;:::-;33364;33432:3;33421:9;33417:19;33408:6;33364:73;:::i;:::-;33447;33515:3;33504:9;33500:19;33491:6;33447:73;:::i;:::-;33530;33598:3;33587:9;33583:19;33574:6;33530:73;:::i;:::-;33613:68;33676:3;33665:9;33661:19;33651:7;33613:68;:::i;:::-;33691:74;33760:3;33749:9;33745:19;33735:7;33691:74;:::i;:::-;32325:1447;;;;;;;;;;;;;;;:::o;33778:1334::-;34153:4;34191:3;34180:9;34176:19;34168:27;;34205:71;34273:1;34262:9;34258:17;34249:6;34205:71;:::i;:::-;34286:79;34361:2;34350:9;34346:18;34337:6;34286:79;:::i;:::-;34375:72;34443:2;34432:9;34428:18;34419:6;34375:72;:::i;:::-;34457;34525:2;34514:9;34510:18;34501:6;34457:72;:::i;:::-;34539:73;34607:3;34596:9;34592:19;34583:6;34539:73;:::i;:::-;34622;34690:3;34679:9;34675:19;34666:6;34622:73;:::i;:::-;34705;34773:3;34762:9;34758:19;34749:6;34705:73;:::i;:::-;34788;34856:3;34845:9;34841:19;34832:6;34788:73;:::i;:::-;34871;34939:3;34928:9;34924:19;34915:6;34871:73;:::i;:::-;34954;35022:3;35011:9;35007:19;34998:6;34954:73;:::i;:::-;35037:68;35100:3;35089:9;35085:19;35075:7;35037:68;:::i;:::-;33778:1334;;;;;;;;;;;;;;:::o;35118:129::-;35152:6;35179:20;;:::i;:::-;35169:30;;35208:33;35236:4;35228:6;35208:33;:::i;:::-;35118:129;;;:::o;35253:75::-;35286:6;35319:2;35313:9;35303:19;;35253:75;:::o;35334:169::-;35418:11;35452:6;35447:3;35440:19;35492:4;35487:3;35483:14;35468:29;;35334:169;;;;:::o;35509:305::-;35549:3;35568:20;35586:1;35568:20;:::i;:::-;35563:25;;35602:20;35620:1;35602:20;:::i;:::-;35597:25;;35756:1;35688:66;35684:74;35681:1;35678:81;35675:107;;;35762:18;;:::i;:::-;35675:107;35806:1;35803;35799:9;35792:16;;35509:305;;;;:::o;35820:191::-;35860:4;35880:20;35898:1;35880:20;:::i;:::-;35875:25;;35914:20;35932:1;35914:20;:::i;:::-;35909:25;;35953:1;35950;35947:8;35944:34;;;35958:18;;:::i;:::-;35944:34;36003:1;36000;35996:9;35988:17;;35820:191;;;;:::o;36017:96::-;36054:7;36083:24;36101:5;36083:24;:::i;:::-;36072:35;;36017:96;;;:::o;36119:90::-;36153:7;36196:5;36189:13;36182:21;36171:32;;36119:90;;;:::o;36215:129::-;36261:7;36290:5;36279:16;;36296:42;36332:5;36296:42;:::i;:::-;36215:129;;;:::o;36350:126::-;36387:7;36427:42;36420:5;36416:54;36405:65;;36350:126;;;:::o;36482:77::-;36519:7;36548:5;36537:16;;36482:77;;;:::o;36565:129::-;36622:9;36655:33;36682:5;36655:33;:::i;:::-;36642:46;;36565:129;;;:::o;36700:281::-;36783:27;36805:4;36783:27;:::i;:::-;36775:6;36771:40;36913:6;36901:10;36898:22;36877:18;36865:10;36862:34;36859:62;36856:88;;;36924:18;;:::i;:::-;36856:88;36964:10;36960:2;36953:22;36743:238;36700:281;;:::o;36987:233::-;37026:3;37049:24;37067:5;37049:24;:::i;:::-;37040:33;;37095:66;37088:5;37085:77;37082:103;;;37165:18;;:::i;:::-;37082:103;37212:1;37205:5;37201:13;37194:20;;36987:233;;;:::o;37226:180::-;37274:77;37271:1;37264:88;37371:4;37368:1;37361:15;37395:4;37392:1;37385:15;37412:180;37460:77;37457:1;37450:88;37557:4;37554:1;37547:15;37581:4;37578:1;37571:15;37598:180;37646:77;37643:1;37636:88;37743:4;37740:1;37733:15;37767:4;37764:1;37757:15;37784:180;37832:77;37829:1;37822:88;37929:4;37926:1;37919:15;37953:4;37950:1;37943:15;37970:180;38018:77;38015:1;38008:88;38115:4;38112:1;38105:15;38139:4;38136:1;38129:15;38156:117;38265:1;38262;38255:12;38525:117;38634:1;38631;38624:12;38648:102;38689:6;38740:2;38736:7;38731:2;38724:5;38720:14;38716:28;38706:38;;38648:102;;;:::o;38756:166::-;38896:18;38892:1;38884:6;38880:14;38873:42;38756:166;:::o;38928:173::-;39068:25;39064:1;39056:6;39052:14;39045:49;38928:173;:::o;39107:225::-;39247:34;39243:1;39235:6;39231:14;39224:58;39316:8;39311:2;39303:6;39299:15;39292:33;39107:225;:::o;39338:174::-;39478:26;39474:1;39466:6;39462:14;39455:50;39338:174;:::o;39518:168::-;39658:20;39654:1;39646:6;39642:14;39635:44;39518:168;:::o;39692:159::-;39832:11;39828:1;39820:6;39816:14;39809:35;39692:159;:::o;39857:172::-;39997:24;39993:1;39985:6;39981:14;39974:48;39857:172;:::o;40035:182::-;40175:34;40171:1;40163:6;40159:14;40152:58;40035:182;:::o;40223:169::-;40363:21;40359:1;40351:6;40347:14;40340:45;40223:169;:::o;40398:176::-;40538:28;40534:1;40526:6;40522:14;40515:52;40398:176;:::o;40580:165::-;40720:17;40716:1;40708:6;40704:14;40697:41;40580:165;:::o;40751:114::-;40833:1;40826:5;40823:12;40813:46;;40839:18;;:::i;:::-;40813:46;40751:114;:::o;40871:122::-;40944:24;40962:5;40944:24;:::i;:::-;40937:5;40934:35;40924:63;;40983:1;40980;40973:12;40924:63;40871:122;:::o;40999:116::-;41069:21;41084:5;41069:21;:::i;:::-;41062:5;41059:32;41049:60;;41105:1;41102;41095:12;41049:60;40999:116;:::o;41121:108::-;41203:1;41196:5;41193:12;41183:40;;41219:1;41216;41209:12;41183:40;41121:108;:::o;41235:122::-;41308:24;41326:5;41308:24;:::i;:::-;41301:5;41298:35;41288:63;;41347:1;41344;41337:12;41288:63;41235:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"4294400","executionCost":"infinite","totalCost":"infinite"},"external":{"addToken(address,uint256)":"infinite","cancelOrder(uint8,uint256,address,address)":"infinite","createLimitBuyOrder(address,uint256,address,uint256,uint256,bool)":"infinite","createLimitSellOrder(address,uint256,address,uint256,uint256,bool)":"infinite","ethToken()":"2559","getFilledOrder(address,uint8,uint256)":"infinite","getFilledOrderLength(address,uint8)":"3194","getOrder(address,address,uint256,uint8)":"infinite","getOrderFromArray(address,address,uint256,uint256)":"infinite","getOrderLength(uint8,address,address)":"infinite","getTokenInfo(address)":"infinite","isVerifiedToken(address)":"infinite","orderExists(uint256,uint8,address,address)":"infinite","orderStruct()":"infinite","owner()":"2589","renounceOwnership()":"30488","s_filledOrders(address,uint256,uint256)":"infinite","s_orderBook(address,address,uint256,uint256)":"infinite","s_orderId()":"2475","setManual(bool)":"27247","setPriceCheckerAddress(address)":"27053","setTradingFees(address)":"27031","setWalletAddress(address)":"27076","tokenList(uint256)":"infinite","transferOwnership(address)":"30791","updateFilledOrders((uint256,uint8,address,address,address,uint256,uint256,uint256,uint256,uint256,bool,uint256),uint256)":"infinite","updateOrder((uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool),uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{"addToken(address,uint256)":"af81c5b9","cancelOrder(uint8,uint256,address,address)":"f90ef4f2","createLimitBuyOrder(address,uint256,address,uint256,uint256,bool)":"62c09cfa","createLimitSellOrder(address,uint256,address,uint256,uint256,bool)":"6f4e410b","ethToken()":"7bf1a627","getFilledOrder(address,uint8,uint256)":"8f101b0e","getFilledOrderLength(address,uint8)":"c3364be4","getOrder(address,address,uint256,uint8)":"ea42f349","getOrderFromArray(address,address,uint256,uint256)":"92e43d3a","getOrderLength(uint8,address,address)":"14eca9dc","getTokenInfo(address)":"1f69565f","isVerifiedToken(address)":"1027b219","orderExists(uint256,uint8,address,address)":"429d24b2","orderStruct()":"1cb67fb3","owner()":"8da5cb5b","renounceOwnership()":"715018a6","s_filledOrders(address,uint256,uint256)":"bd8098ec","s_orderBook(address,address,uint256,uint256)":"e4c3c7cd","s_orderId()":"9c07ce26","setManual(bool)":"ff09cdfa","setPriceCheckerAddress(address)":"b136e39a","setTradingFees(address)":"dafbfe6a","setWalletAddress(address)":"ac1a386a","tokenList(uint256)":"9ead7222","transferOwnership(address)":"f2fde38b","updateFilledOrders((uint256,uint8,address,address,address,uint256,uint256,uint256,uint256,uint256,bool,uint256),uint256)":"0af4e4f0","updateOrder((uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool),uint256,uint256,uint256)":"fb310c9b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fees\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceChecker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"name\":\"Order\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountFilled\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"filledOrder\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_waiveFees\",\"type\":\"bool\"}],\"name\":\"createLimitBuyOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_waiveFees\",\"type\":\"bool\"}],\"name\":\"createLimitSellOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFilledOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fillRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"internalType\":\"struct Exchange._filledOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getFilledOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"internalType\":\"struct Exchange._Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"side\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getOrderFromArray\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"internalType\":\"struct Exchange._Order\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"getOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isVerifiedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"orderExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderStruct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_filledOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fillRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_orderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_orderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isManual\",\"type\":\"bool\"}],\"name\":\"setManual\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PriceCheckeraddress\",\"type\":\"address\"}],\"name\":\"setPriceCheckerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tradingFees\",\"type\":\"address\"}],\"name\":\"setTradingFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Walletaddress\",\"type\":\"address\"}],\"name\":\"setWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fillRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"internalType\":\"struct Exchange._filledOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_side\",\"type\":\"uint256\"}],\"name\":\"updateFilledOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"internalType\":\"struct Exchange._Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"updateOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Cancel(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Event when an order is cancelled\"},\"Order(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Event when an order is placed on an exchange\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(\\r\\n        address account\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(\\r\\n            currentAllowance >= subtractedValue,\\r\\n            \\\"ERC20: decreased allowance below zero\\\"\\r\\n        );\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(\\r\\n            fromBalance >= amount,\\r\\n            \\\"ERC20: transfer amount exceeds balance\\\"\\r\\n        );\\r\\n        unchecked {\\r\\n            _balances[from] = fromBalance - amount;\\r\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\r\\n            // decrementing then incrementing.\\r\\n            _balances[to] += amount;\\r\\n        }\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply += amount;\\r\\n        unchecked {\\r\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\r\\n            _balances[account] += amount;\\r\\n        }\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = accountBalance - amount;\\r\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\r\\n            _totalSupply -= amount;\\r\\n        }\\r\\n\\r\\n        emit Transfer(account, address(0), amount);\\r\\n\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(\\r\\n                currentAllowance >= amount,\\r\\n                \\\"ERC20: insufficient allowance\\\"\\r\\n            );\\r\\n            unchecked {\\r\\n                _approve(owner, spender, currentAllowance - amount);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0x98cae7e35c3cb1f12ab2eeee2506facde33e4ee4292ca6d6ebdc93a62523c256\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\\r\\n    mapping(address => mapping(address => mapping(uint256 => _Order[])))\\r\\n        public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    _Order public orderStruct;\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of USD\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event filledOrder(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 amountFilled,\\r\\n        uint256 fillRate,\\r\\n        uint256 originalRate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\r\\n        wallet = Wallet(_wallet);\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        priceChecker = PriceChecker(_priceChecker);\\r\\n    }\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    )\\r\\n        public\\r\\n        validOrder(_id, side, _tokenA, _tokenB)\\r\\n        validToken(_tokenA)\\r\\n        validToken(_tokenB)\\r\\n    {\\r\\n        uint256 _side = uint256(side);\\r\\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.exchangeUpdateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.exchangeUpdateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateFilledOrders(\\r\\n        _filledOrder memory order,\\r\\n        uint256 _side\\r\\n    ) external {\\r\\n        s_filledOrders[order.user][_side].push(order);\\r\\n\\r\\n        emit filledOrder(\\r\\n            order.id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.tokenB,\\r\\n            order.amountFilled,\\r\\n            order.fillRate,\\r\\n            order.originalRate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.feesWaived,\\r\\n            order.feesPaid\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateOrder(\\r\\n        _Order memory order,\\r\\n        uint256 _amountA,\\r\\n        uint256 _amountB,\\r\\n        uint256 _index\\r\\n    ) external validOrder(order.id, order.side, order.tokenA, order.tokenB) {\\r\\n        uint256 a = s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n            _index\\r\\n        ].amountA;\\r\\n        uint256 b = s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n            _index\\r\\n        ].amountB;\\r\\n        s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n            .amountA = _amountA;\\r\\n        s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n            .amountB = _amountB;\\r\\n\\r\\n        require(\\r\\n            s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n                .amountA <\\r\\n                a &&\\r\\n                s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n                    _index\\r\\n                ].amountB <\\r\\n                b,\\r\\n            \\\"Order not updated properly\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function setManual(bool _isManual) external {\\r\\n        s_isManual = _isManual;\\r\\n        require(s_isManual == _isManual, \\\"Invalid s_isManual bool\\\");\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 index,\\r\\n        Side side\\r\\n    ) public view returns (_Order memory) {\\r\\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][\\r\\n            index\\r\\n        ];\\r\\n        return (order);\\r\\n    }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getFilledOrder(\\r\\n        address _user,\\r\\n        Side side,\\r\\n        uint256 index\\r\\n    ) public view returns (_filledOrder memory) {\\r\\n        return s_filledOrders[_user][uint256(side)][index];\\r\\n    }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        for (i; i < s_orderBook[_tokenA][_tokenB][side].length; i++) {\\r\\n            if (s_orderBook[_tokenA][_tokenB][side][i].id == _id) {\\r\\n                return (s_orderBook[_tokenA][_tokenB][side][i], i);\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Order not Found\\\");\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Token not available\\\");\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n\\r\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_tradingFees);\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _tokenA, _tokenB), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4da7ab34528a6ddc8a19d8b7030ecf57023a2985361f1875b527d0a269d0e811\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public daiToken =\\r\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\r\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\r\\n    PriceChecker private priceFeed;\\r\\n    Wallet wallet;\\r\\n\\r\\n    constructor(address _priceCheckerAddress) {\\r\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\r\\n    }\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) public view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\r\\n        uint256 value = (\\r\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\r\\n        ).div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        return fees; //based on USD value\\r\\n    }\\r\\n\\r\\n    //Amount of DAI to deduct from fees\\r\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\r\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\r\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    //Amount of Tokens to deduct from fees\\r\\n    function amountTokensToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 _fees\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\r\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaDAI(\\r\\n        uint256 _fees,\\r\\n        address _user\\r\\n    ) public view returns (bool) {\\r\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\r\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\r\\n\\r\\n        return balance >= amtDAI;\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7891dc27d893e5a01614511576fb8e0477a7ace177b52492e745cb0c38464677\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./ERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\nimport \\\"./fillLogic.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public fundWallet;\\r\\n    uint256 decimals = 18;\\r\\n    address public aDAI;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    fillLogic fillContract;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n        locked = false;\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken, \\\"Invalid Token Type\\\");\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token) || _token == aDAI,\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n\\r\\n        updateBalance(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n            true\\r\\n        );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        updateBalance(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n            false\\r\\n        );\\r\\n        require(\\r\\n            token.transfer(\\r\\n                msg.sender,\\r\\n                _amount.div(10 ** decimals.sub(_decimals))\\r\\n            )\\r\\n        );\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function exchangeUpdateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) external isExchange {\\r\\n        updateLockedFunds(_user, _token, _amount, isAdd);\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) internal {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function exchangeUpdateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) external isExchange {\\r\\n        updateBalance(_token, _user, _amount, isAdd);\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) internal {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateFundWallet(address _fundwallet) public onlyOwner {\\r\\n        fundWallet = _fundwallet;\\r\\n    }\\r\\n\\r\\n    function withdrawToFundWallet(address _token, uint256 _decimals) external {\\r\\n        //Only allow fundWallet address to make the call\\r\\n        require(\\r\\n            msg.sender == fundWallet,\\r\\n            \\\"Invalid FundWallet address to withdraw\\\"\\r\\n        );\\r\\n        uint256 totalAmount = s_tokens[_token][fundWallet];\\r\\n        uint256 actualAmount = totalAmount.div(10 ** decimals.sub(_decimals));\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(_token, fundWallet, totalAmount, false);\\r\\n        require(token.transfer(fundWallet, actualAmount));\\r\\n        locked = false;\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    function updateFillLogicAddress(address _contract) public onlyOwner {\\r\\n        fillContract = fillLogic(_contract);\\r\\n    }\\r\\n\\r\\n    function updateaDaiAddress(address _address) public onlyOwner {\\r\\n        aDAI = address(_address);\\r\\n    }\\r\\n\\r\\n    modifier isExchange() {\\r\\n        require(\\r\\n            msg.sender == address(exchange) ||\\r\\n                msg.sender == address(fillContract),\\r\\n            \\\"Not Exchange or fillOrder contract\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc5b3f8146a024262e00685d84250a606e4608fb1f055d13dcde43072f7120652\",\"license\":\"MIT\"},\"contracts/fillLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./Exchange.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\n\\r\\ncontract fillLogic is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    Exchange exchange;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n    uint256 decimals = 10 ** 18;\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        Exchange._Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        Exchange._Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _Exchange, address _fees, address _Wallet) {\\r\\n        exchange = Exchange(_Exchange); // Set the address of the Exchange contract\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        wallet = Wallet(_Wallet);\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256[][] memory _ordersToFill\\r\\n    ) external {\\r\\n        Exchange._Order memory order;\\r\\n        uint256 index;\\r\\n\\r\\n        for (uint256 i = 0; i < _ordersToFill.length; i++) {\\r\\n            require(\\r\\n                _ordersToFill[i][2] != 0 && _ordersToFill[i][3] != 0,\\r\\n                \\\"Order values error\\\"\\r\\n            );\\r\\n\\r\\n            (order, index) = exchange.getOrderFromArray(\\r\\n                _tokenA,\\r\\n                _tokenB,\\r\\n                _ordersToFill[i][1],\\r\\n                _ordersToFill[i][0]\\r\\n            );\\r\\n\\r\\n            require(\\r\\n                order.amountA != 0 && order.amountB != 0,\\r\\n                \\\"Invalid Order Amount\\\"\\r\\n            );\\r\\n            exchange.updateOrder(\\r\\n                order,\\r\\n                order.amountA.sub(_ordersToFill[i][2]),\\r\\n                order.amountB.sub(\\r\\n                    order.rate.mul(_ordersToFill[i][2]).div(decimals)\\r\\n                ),\\r\\n                index\\r\\n            );\\r\\n\\r\\n            order.amountA = order.amountA.sub(_ordersToFill[i][2]);\\r\\n\\r\\n            uint256 fees = tradingFees.calculateFees(\\r\\n                _ordersToFill[i][2],\\r\\n                _ordersToFill[i][3],\\r\\n                order.tokenB\\r\\n            );\\r\\n            require(fees != 0, \\\"Fees cannot be 0\\\");\\r\\n\\r\\n            bool feesWaived = order.waiveFees &&\\r\\n                tradingFees.checkSufficientaDAI(fees, order.user);\\r\\n\\r\\n            if (_ordersToFill[i][1] == 0) {\\r\\n                fillBuyOrders(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n                emit fillBuyOrder(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n            } else {\\r\\n                fillSellOrders(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n                emit fillSellOrder(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n            }\\r\\n\\r\\n            if (order.amountA == 0) {\\r\\n                exchange.setManual(false);\\r\\n                exchange.cancelOrder(\\r\\n                    (\\r\\n                        _ordersToFill[i][1] == 0\\r\\n                            ? Exchange.Side.BUY\\r\\n                            : Exchange.Side.SELL\\r\\n                    ),\\r\\n                    order.id,\\r\\n                    order.tokenA,\\r\\n                    order.tokenB\\r\\n                );\\r\\n                exchange.setManual(true);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        Exchange._Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                wallet.fundWallet(),\\r\\n                aDAIToDeduct,\\r\\n                true\\r\\n            );\\r\\n\\r\\n            //Credit Bought tokens\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount,\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountTokenToDeduct),\\r\\n                true\\r\\n            );\\r\\n\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                wallet.fundWallet(),\\r\\n                amountTokenToDeduct,\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.exchangeUpdateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.exchangeUpdateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n        exchange.updateFilledOrders(\\r\\n            Exchange._filledOrder(\\r\\n                order.id,\\r\\n                Exchange.Side.BUY,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            ),\\r\\n            uint256(Exchange.Side.BUY)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        Exchange._Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                wallet.fundWallet(),\\r\\n                aDAIToDeduct,\\r\\n                true\\r\\n            );\\r\\n\\r\\n            //Credit Earned tokens\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                wallet.fundWallet(),\\r\\n                amountTokensToDeduct,\\r\\n                true\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.exchangeUpdateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            _amount,\\r\\n            false\\r\\n        );\\r\\n        //seller update\\r\\n        wallet.exchangeUpdateBalance(order.tokenA, order.user, _amount, false);\\r\\n\\r\\n        exchange.updateFilledOrders(\\r\\n            Exchange._filledOrder(\\r\\n                order.id,\\r\\n                Exchange.Side.SELL,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            ),\\r\\n            uint256(Exchange.Side.SELL)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setExchangeAddress(address _exchange) public onlyOwner {\\r\\n        exchange = Exchange(_exchange);\\r\\n    }\\r\\n\\r\\n    function setTradingFeesAddress(address _fees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_fees);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa7f41526cf6c281440ecf90511b108c78d81614c70fe71602330645ce388f180\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"contracts/Exchange.sol:Exchange","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1550,"contract":"contracts/Exchange.sol:Exchange","label":"priceChecker","offset":0,"slot":"1","type":"t_contract(PriceChecker)2954"},{"astId":1553,"contract":"contracts/Exchange.sol:Exchange","label":"tradingFees","offset":0,"slot":"2","type":"t_contract(TradingFees)3184"},{"astId":1556,"contract":"contracts/Exchange.sol:Exchange","label":"wallet","offset":0,"slot":"3","type":"t_contract(Wallet)3859"},{"astId":1561,"contract":"contracts/Exchange.sol:Exchange","label":"decimals","offset":0,"slot":"4","type":"t_uint256"},{"astId":1567,"contract":"contracts/Exchange.sol:Exchange","label":"ethToken","offset":0,"slot":"5","type":"t_address"},{"astId":1571,"contract":"contracts/Exchange.sol:Exchange","label":"tokenList","offset":0,"slot":"6","type":"t_array(t_struct(_tokenInfo)1600_storage)dyn_storage"},{"astId":1581,"contract":"contracts/Exchange.sol:Exchange","label":"s_orderBook","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)1629_storage)dyn_storage)))"},{"astId":1589,"contract":"contracts/Exchange.sol:Exchange","label":"s_filledOrders","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_filledOrder)1658_storage)dyn_storage))"},{"astId":1592,"contract":"contracts/Exchange.sol:Exchange","label":"s_orderId","offset":0,"slot":"9","type":"t_uint256"},{"astId":1595,"contract":"contracts/Exchange.sol:Exchange","label":"s_isManual","offset":0,"slot":"10","type":"t_bool"},{"astId":1632,"contract":"contracts/Exchange.sol:Exchange","label":"orderStruct","offset":0,"slot":"11","type":"t_struct(_Order)1629_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(_Order)1629_storage)dyn_storage":{"base":"t_struct(_Order)1629_storage","encoding":"dynamic_array","label":"struct Exchange._Order[]","numberOfBytes":"32"},"t_array(t_struct(_filledOrder)1658_storage)dyn_storage":{"base":"t_struct(_filledOrder)1658_storage","encoding":"dynamic_array","label":"struct Exchange._filledOrder[]","numberOfBytes":"32"},"t_array(t_struct(_tokenInfo)1600_storage)dyn_storage":{"base":"t_struct(_tokenInfo)1600_storage","encoding":"dynamic_array","label":"struct Exchange._tokenInfo[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(PriceChecker)2954":{"encoding":"inplace","label":"contract PriceChecker","numberOfBytes":"20"},"t_contract(TradingFees)3184":{"encoding":"inplace","label":"contract TradingFees","numberOfBytes":"20"},"t_contract(Wallet)3859":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_enum(Side)1661":{"encoding":"inplace","label":"enum Exchange.Side","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)1629_storage)dyn_storage)))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order[])))","numberOfBytes":"32","value":"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)1629_storage)dyn_storage))"},"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)1629_storage)dyn_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Exchange._Order[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(_Order)1629_storage)dyn_storage)"},"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_filledOrder)1658_storage)dyn_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(_filledOrder)1658_storage)dyn_storage)"},"t_mapping(t_uint256,t_array(t_struct(_Order)1629_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Exchange._Order[])","numberOfBytes":"32","value":"t_array(t_struct(_Order)1629_storage)dyn_storage"},"t_mapping(t_uint256,t_array(t_struct(_filledOrder)1658_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Exchange._filledOrder[])","numberOfBytes":"32","value":"t_array(t_struct(_filledOrder)1658_storage)dyn_storage"},"t_struct(_Order)1629_storage":{"encoding":"inplace","label":"struct Exchange._Order","members":[{"astId":1607,"contract":"contracts/Exchange.sol:Exchange","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1610,"contract":"contracts/Exchange.sol:Exchange","label":"side","offset":0,"slot":"1","type":"t_enum(Side)1661"},{"astId":1612,"contract":"contracts/Exchange.sol:Exchange","label":"user","offset":1,"slot":"1","type":"t_address"},{"astId":1614,"contract":"contracts/Exchange.sol:Exchange","label":"tokenA","offset":0,"slot":"2","type":"t_address"},{"astId":1616,"contract":"contracts/Exchange.sol:Exchange","label":"amountA","offset":0,"slot":"3","type":"t_uint256"},{"astId":1618,"contract":"contracts/Exchange.sol:Exchange","label":"tokenB","offset":0,"slot":"4","type":"t_address"},{"astId":1620,"contract":"contracts/Exchange.sol:Exchange","label":"amountB","offset":0,"slot":"5","type":"t_uint256"},{"astId":1622,"contract":"contracts/Exchange.sol:Exchange","label":"rate","offset":0,"slot":"6","type":"t_uint256"},{"astId":1624,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountA","offset":0,"slot":"7","type":"t_uint256"},{"astId":1626,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountB","offset":0,"slot":"8","type":"t_uint256"},{"astId":1628,"contract":"contracts/Exchange.sol:Exchange","label":"waiveFees","offset":0,"slot":"9","type":"t_bool"}],"numberOfBytes":"320"},"t_struct(_filledOrder)1658_storage":{"encoding":"inplace","label":"struct Exchange._filledOrder","members":[{"astId":1634,"contract":"contracts/Exchange.sol:Exchange","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1637,"contract":"contracts/Exchange.sol:Exchange","label":"side","offset":0,"slot":"1","type":"t_enum(Side)1661"},{"astId":1639,"contract":"contracts/Exchange.sol:Exchange","label":"user","offset":1,"slot":"1","type":"t_address"},{"astId":1641,"contract":"contracts/Exchange.sol:Exchange","label":"tokenA","offset":0,"slot":"2","type":"t_address"},{"astId":1643,"contract":"contracts/Exchange.sol:Exchange","label":"tokenB","offset":0,"slot":"3","type":"t_address"},{"astId":1645,"contract":"contracts/Exchange.sol:Exchange","label":"amountFilled","offset":0,"slot":"4","type":"t_uint256"},{"astId":1647,"contract":"contracts/Exchange.sol:Exchange","label":"fillRate","offset":0,"slot":"5","type":"t_uint256"},{"astId":1649,"contract":"contracts/Exchange.sol:Exchange","label":"originalRate","offset":0,"slot":"6","type":"t_uint256"},{"astId":1651,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountA","offset":0,"slot":"7","type":"t_uint256"},{"astId":1653,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountB","offset":0,"slot":"8","type":"t_uint256"},{"astId":1655,"contract":"contracts/Exchange.sol:Exchange","label":"feesWaived","offset":0,"slot":"9","type":"t_bool"},{"astId":1657,"contract":"contracts/Exchange.sol:Exchange","label":"feesPaid","offset":0,"slot":"10","type":"t_uint256"}],"numberOfBytes":"352"},"t_struct(_tokenInfo)1600_storage":{"encoding":"inplace","label":"struct Exchange._tokenInfo","members":[{"astId":1597,"contract":"contracts/Exchange.sol:Exchange","label":"add","offset":0,"slot":"0","type":"t_address"},{"astId":1599,"contract":"contracts/Exchange.sol:Exchange","label":"decimals","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"Cancel(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)":{"notice":"Event when an order is cancelled"},"Order(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)":{"notice":"Event when an order is placed on an exchange"}},"kind":"user","methods":{},"version":1}}},"contracts/PriceChecker.sol":{"PriceChecker":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_address","type":"address"}],"name":"addPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"priceFeeds","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"token","type":"address"},{"internalType":"contract AggregatorV3Interface","name":"priceFeed","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_421":{"entryPoint":null,"id":421,"parameterSlots":0,"returnSlots":0},"@_msgSender_625":{"entryPoint":50,"id":625,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":58,"id":509,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113778061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310c7f0b91461006757806341976e0914610099578063715018a6146100c95780638c35423e146100d35780638da5cb5b146100ef578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610cd3565b610129565b60405161009093929190610ead565b60405180910390f35b6100b360048036038101906100ae9190610c37565b61022b565b6040516100c09190610f4b565b60405180910390f35b6100d16102c9565b005b6100ed60048036038101906100e89190610c64565b6102dd565b005b6100f7610688565b6040516101049190610e92565b60405180910390f35b61012760048036038101906101229190610c37565b6106b1565b005b6001818154811061013957600080fd5b906000526020600020906003020160009150905080600001805461015c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610188906110b7565b80156101d55780601f106101aa576101008083540402835291602001916101d5565b820191906000526020600020905b8154815290600101906020018083116101b857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008061023783610735565b905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610d00565b5050509150508092505050919050565b6102d1610971565b6102db60006109ef565b565b6102e5610971565b60006001805480602002602001604051908101604052809291908181526020016000905b82821015610479578382906000526020600020906003020160405180606001604052908160008201805461033c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906110b7565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610309565b5050505090506000805b825181101561051a5782818151811061049f5761049e6111c1565b5b6020026020010151600001516040516020016104bb9190610e7b565b60405160208183030381529060405280519060200120866040516020016104e29190610e7b565b604051602081830303815290604052805190602001201415610507576001915061051a565b80806105129061111a565b915050610483565b50801561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610f0b565b60405180910390fd5b6000839050600160405180606001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105ef929190610abb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b9610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610eeb565b60405180910390fd5b610732816109ef565b50565b6000806001805480602002602001604051908101604052809291908181526020016000905b828210156108ca578382906000526020600020906003020160405180606001604052908160008201805461078d906110b7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906110b7565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061075a565b50505050905060005b8151811015610969578181815181106108ef576108ee6111c1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561095657818181518110610941576109406111c1565b5b6020026020010151604001519250505061096c565b80806109619061111a565b9150506108d3565b50505b919050565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff16610997610688565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906110b7565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84610f8b565b610f66565b905082815260208101848484011115610b8d57610b8c611224565b5b610b98848285611075565b509392505050565b600081359050610baf816112e5565b92915050565b600081519050610bc4816112fc565b92915050565b600082601f830112610bdf57610bde61121f565b5b8135610bef848260208601610b5e565b91505092915050565b600081359050610c0781611313565b92915050565b600081519050610c1c81611313565b92915050565b600081519050610c318161132a565b92915050565b600060208284031215610c4d57610c4c61122e565b5b6000610c5b84828501610ba0565b91505092915050565b600080600060608486031215610c7d57610c7c61122e565b5b600084013567ffffffffffffffff811115610c9b57610c9a611229565b5b610ca786828701610bca565b9350506020610cb886828701610ba0565b9250506040610cc986828701610ba0565b9150509250925092565b600060208284031215610ce957610ce861122e565b5b6000610cf784828501610bf8565b91505092915050565b600080600080600060a08688031215610d1c57610d1b61122e565b5b6000610d2a88828901610c22565b9550506020610d3b88828901610bb5565b9450506040610d4c88828901610c0d565b9350506060610d5d88828901610c0d565b9250506080610d6e88828901610c22565b9150509295509295909350565b610d8481610fe3565b82525050565b610d938161103f565b82525050565b6000610da482610fbc565b610dae8185610fc7565b9350610dbe818560208601611084565b610dc781611233565b840191505092915050565b6000610ddd82610fbc565b610de78185610fd8565b9350610df7818560208601611084565b80840191505092915050565b6000610e10602683610fc7565b9150610e1b82611244565b604082019050919050565b6000610e33601883610fc7565b9150610e3e82611293565b602082019050919050565b6000610e56602083610fc7565b9150610e61826112bc565b602082019050919050565b610e758161101f565b82525050565b6000610e878284610dd2565b915081905092915050565b6000602082019050610ea76000830184610d7b565b92915050565b60006060820190508181036000830152610ec78186610d99565b9050610ed66020830185610d7b565b610ee36040830184610d8a565b949350505050565b60006020820190508181036000830152610f0481610e03565b9050919050565b60006020820190508181036000830152610f2481610e26565b9050919050565b60006020820190508181036000830152610f4481610e49565b9050919050565b6000602082019050610f606000830184610e6c565b92915050565b6000610f70610f81565b9050610f7c82826110e9565b919050565b6000604051905090565b600067ffffffffffffffff821115610fa657610fa56111f0565b5b610faf82611233565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610fee82610fff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104a82611051565b9050919050565b600061105c82611063565b9050919050565b600061106e82610fff565b9050919050565b82818337600083830152505050565b60005b838110156110a2578082015181840152602081019050611087565b838111156110b1576000848401525b50505050565b600060028204905060018216806110cf57607f821691505b602082108114156110e3576110e2611192565b5b50919050565b6110f282611233565b810181811067ffffffffffffffff82111715611111576111106111f0565b5b80604052505050565b60006111258261101f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561115857611157611163565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5072696365204665656420616c72656164792061646465640000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6112ee81610fe3565b81146112f957600080fd5b50565b61130581610ff5565b811461131057600080fd5b50565b61131c8161101f565b811461132757600080fd5b50565b61133381611029565b811461133e57600080fd5b5056fea2646970667358221220c35e7e8ecb7262f04ee52507df9a62a77b09793980be9195195c1e70958bbdd764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1377 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8C35423E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x15C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x188 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD00 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x0 PUSH2 0x9EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E5 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x479 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x309 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x507 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x51A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x9EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8CA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x78D SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x806 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x806 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x956 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 POP POP POP PUSH2 0x96C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D3 JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xAB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB30 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB42 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0xB6C DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x1224 JUMP JUMPDEST JUMPDEST PUSH2 0xB98 DUP5 DUP3 DUP6 PUSH2 0x1075 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC4 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBDF JUMPI PUSH2 0xBDE PUSH2 0x121F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBEF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1C DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC31 DUP2 PUSH2 0x132A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x1229 JUMP JUMPDEST JUMPDEST PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xBCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCF7 DUP5 DUP3 DUP6 ADD PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1B PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD3B DUP9 DUP3 DUP10 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD4C DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD5D DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xD6E DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0x103F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDAE DUP2 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDE7 DUP2 DUP6 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x26 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 PUSH1 0x18 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH1 0x20 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC7 DUP2 DUP7 PUSH2 0xD99 JUMP JUMPDEST SWAP1 POP PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF04 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF24 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7C DUP3 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x1063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1087 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x1192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F2 DUP3 PUSH2 0x1233 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365204665656420616C72656164792061646465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12EE DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1333 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP2 EQ PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x5E PUSH31 0x8ECB7262F04EE52507DF9A62A77B09793980BE9195195C1E70958BBDD76473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"194:1570:9:-:0;;;;;;;;;;;;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;194:1570:9;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;194:1570:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_452":{"entryPoint":2417,"id":452,"parameterSlots":0,"returnSlots":0},"@_msgSender_625":{"entryPoint":2739,"id":625,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":2543,"id":509,"parameterSlots":1,"returnSlots":0},"@addPriceFeed_2885":{"entryPoint":733,"id":2885,"parameterSlots":3,"returnSlots":0},"@getPriceFeed_2927":{"entryPoint":1845,"id":2927,"parameterSlots":1,"returnSlots":1},"@getPrice_2953":{"entryPoint":555,"id":2953,"parameterSlots":1,"returnSlots":1},"@owner_438":{"entryPoint":1672,"id":438,"parameterSlots":0,"returnSlots":1},"@priceFeeds_2795":{"entryPoint":297,"id":2795,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_466":{"entryPoint":713,"id":466,"parameterSlots":0,"returnSlots":0},"@transferOwnership_489":{"entryPoint":1713,"id":489,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":2910,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":2997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":3018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3064,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_addresst_address":{"entryPoint":3172,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":3283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":3328,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3451,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_AggregatorV3Interface_$397_to_t_address_fromStack":{"entryPoint":3466,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":3587,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack":{"entryPoint":3622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":3657,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3692,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$397__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed":{"entryPoint":3757,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3819,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3915,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3942,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3969,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":3979,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4028,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4039,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4056,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":4085,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4095,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4127,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":4137,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$397_to_t_address":{"entryPoint":4159,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4177,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4195,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":4213,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":4228,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4279,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4329,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4378,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4451,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4498,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4545,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4592,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4639,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4644,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4649,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4654,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4659,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":4676,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f":{"entryPoint":4755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":4796,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4837,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":4860,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4883,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":4906,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14550:17","statements":[{"body":{"nodeType":"YulBlock","src":"91:328:17","statements":[{"nodeType":"YulAssignment","src":"101:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:17"},"nodeType":"YulFunctionCall","src":"126:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:17"},"nodeType":"YulFunctionCall","src":"110:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:17"},"nodeType":"YulFunctionCall","src":"185:21:17"},"nodeType":"YulExpressionStatement","src":"185:21:17"},{"nodeType":"YulVariableDeclaration","src":"215:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:17"},"nodeType":"YulFunctionCall","src":"226:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"282:77:17"},"nodeType":"YulFunctionCall","src":"282:79:17"},"nodeType":"YulExpressionStatement","src":"282:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:17"},"nodeType":"YulFunctionCall","src":"257:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:17"},"nodeType":"YulFunctionCall","src":"254:25:17"},"nodeType":"YulIf","src":"251:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"396:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"401:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"406:6:17"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"372:23:17"},"nodeType":"YulFunctionCall","src":"372:41:17"},"nodeType":"YulExpressionStatement","src":"372:41:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:17","type":""}],"src":"7:412:17"},{"body":{"nodeType":"YulBlock","src":"477:87:17","statements":[{"nodeType":"YulAssignment","src":"487:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"509:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"496:12:17"},"nodeType":"YulFunctionCall","src":"496:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"487:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"552:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"525:26:17"},"nodeType":"YulFunctionCall","src":"525:33:17"},"nodeType":"YulExpressionStatement","src":"525:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"455:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"463:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"471:5:17","type":""}],"src":"425:139:17"},{"body":{"nodeType":"YulBlock","src":"632:79:17","statements":[{"nodeType":"YulAssignment","src":"642:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"657:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"651:5:17"},"nodeType":"YulFunctionCall","src":"651:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"642:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"699:5:17"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"673:25:17"},"nodeType":"YulFunctionCall","src":"673:32:17"},"nodeType":"YulExpressionStatement","src":"673:32:17"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"610:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"618:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"626:5:17","type":""}],"src":"570:141:17"},{"body":{"nodeType":"YulBlock","src":"793:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"842:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"844:77:17"},"nodeType":"YulFunctionCall","src":"844:79:17"},"nodeType":"YulExpressionStatement","src":"844:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"821:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"829:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:17"},"nodeType":"YulFunctionCall","src":"817:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"836:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"813:3:17"},"nodeType":"YulFunctionCall","src":"813:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"806:6:17"},"nodeType":"YulFunctionCall","src":"806:35:17"},"nodeType":"YulIf","src":"803:122:17"},{"nodeType":"YulVariableDeclaration","src":"934:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"961:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"948:12:17"},"nodeType":"YulFunctionCall","src":"948:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"938:6:17","type":""}]},{"nodeType":"YulAssignment","src":"977:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1038:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1046:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1034:3:17"},"nodeType":"YulFunctionCall","src":"1034:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"1053:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"1061:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"986:47:17"},"nodeType":"YulFunctionCall","src":"986:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"977:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"771:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"779:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"787:5:17","type":""}],"src":"731:340:17"},{"body":{"nodeType":"YulBlock","src":"1129:87:17","statements":[{"nodeType":"YulAssignment","src":"1139:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1161:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1148:12:17"},"nodeType":"YulFunctionCall","src":"1148:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1139:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1204:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1177:26:17"},"nodeType":"YulFunctionCall","src":"1177:33:17"},"nodeType":"YulExpressionStatement","src":"1177:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1107:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1115:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1123:5:17","type":""}],"src":"1077:139:17"},{"body":{"nodeType":"YulBlock","src":"1285:80:17","statements":[{"nodeType":"YulAssignment","src":"1295:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1310:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1304:5:17"},"nodeType":"YulFunctionCall","src":"1304:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1295:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1353:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1326:26:17"},"nodeType":"YulFunctionCall","src":"1326:33:17"},"nodeType":"YulExpressionStatement","src":"1326:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1263:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1271:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1279:5:17","type":""}],"src":"1222:143:17"},{"body":{"nodeType":"YulBlock","src":"1433:79:17","statements":[{"nodeType":"YulAssignment","src":"1443:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1458:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1452:5:17"},"nodeType":"YulFunctionCall","src":"1452:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1443:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1500:5:17"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"1474:25:17"},"nodeType":"YulFunctionCall","src":"1474:32:17"},"nodeType":"YulExpressionStatement","src":"1474:32:17"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1411:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1419:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1427:5:17","type":""}],"src":"1371:141:17"},{"body":{"nodeType":"YulBlock","src":"1584:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"1630:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1632:77:17"},"nodeType":"YulFunctionCall","src":"1632:79:17"},"nodeType":"YulExpressionStatement","src":"1632:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1605:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1601:3:17"},"nodeType":"YulFunctionCall","src":"1601:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1626:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1597:3:17"},"nodeType":"YulFunctionCall","src":"1597:32:17"},"nodeType":"YulIf","src":"1594:119:17"},{"nodeType":"YulBlock","src":"1723:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1738:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1752:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1742:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1767:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1802:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1798:3:17"},"nodeType":"YulFunctionCall","src":"1798:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1822:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1777:20:17"},"nodeType":"YulFunctionCall","src":"1777:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1767:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1554:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1565:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1577:6:17","type":""}],"src":"1518:329:17"},{"body":{"nodeType":"YulBlock","src":"1963:689:17","statements":[{"body":{"nodeType":"YulBlock","src":"2009:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2011:77:17"},"nodeType":"YulFunctionCall","src":"2011:79:17"},"nodeType":"YulExpressionStatement","src":"2011:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1984:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1993:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1980:3:17"},"nodeType":"YulFunctionCall","src":"1980:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2005:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1976:3:17"},"nodeType":"YulFunctionCall","src":"1976:32:17"},"nodeType":"YulIf","src":"1973:119:17"},{"nodeType":"YulBlock","src":"2102:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2117:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2159:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:17"},"nodeType":"YulFunctionCall","src":"2144:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2131:12:17"},"nodeType":"YulFunctionCall","src":"2131:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2121:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2209:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2211:77:17"},"nodeType":"YulFunctionCall","src":"2211:79:17"},"nodeType":"YulExpressionStatement","src":"2211:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2181:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2189:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2178:2:17"},"nodeType":"YulFunctionCall","src":"2178:30:17"},"nodeType":"YulIf","src":"2175:117:17"},{"nodeType":"YulAssignment","src":"2306:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2351:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2362:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:17"},"nodeType":"YulFunctionCall","src":"2347:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2371:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2316:30:17"},"nodeType":"YulFunctionCall","src":"2316:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2306:6:17"}]}]},{"nodeType":"YulBlock","src":"2399:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2414:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2428:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2418:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2444:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2479:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2490:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:17"},"nodeType":"YulFunctionCall","src":"2475:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2499:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2454:20:17"},"nodeType":"YulFunctionCall","src":"2454:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2444:6:17"}]}]},{"nodeType":"YulBlock","src":"2527:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2542:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2556:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2546:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2572:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2607:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2618:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:17"},"nodeType":"YulFunctionCall","src":"2603:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2627:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2582:20:17"},"nodeType":"YulFunctionCall","src":"2582:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2572:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1917:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1928:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1940:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1948:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1956:6:17","type":""}],"src":"1853:799:17"},{"body":{"nodeType":"YulBlock","src":"2724:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"2770:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2772:77:17"},"nodeType":"YulFunctionCall","src":"2772:79:17"},"nodeType":"YulExpressionStatement","src":"2772:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2745:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2754:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2741:3:17"},"nodeType":"YulFunctionCall","src":"2741:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2766:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2737:3:17"},"nodeType":"YulFunctionCall","src":"2737:32:17"},"nodeType":"YulIf","src":"2734:119:17"},{"nodeType":"YulBlock","src":"2863:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2878:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2892:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2882:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2907:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2953:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:17"},"nodeType":"YulFunctionCall","src":"2938:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2962:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2917:20:17"},"nodeType":"YulFunctionCall","src":"2917:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2907:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2694:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2705:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2717:6:17","type":""}],"src":"2658:329:17"},{"body":{"nodeType":"YulBlock","src":"3135:829:17","statements":[{"body":{"nodeType":"YulBlock","src":"3182:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3184:77:17"},"nodeType":"YulFunctionCall","src":"3184:79:17"},"nodeType":"YulExpressionStatement","src":"3184:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3156:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3165:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3152:3:17"},"nodeType":"YulFunctionCall","src":"3152:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3177:3:17","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3148:3:17"},"nodeType":"YulFunctionCall","src":"3148:33:17"},"nodeType":"YulIf","src":"3145:120:17"},{"nodeType":"YulBlock","src":"3275:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3290:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3304:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3294:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3319:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3375:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:17"},"nodeType":"YulFunctionCall","src":"3360:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3384:7:17"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"3329:30:17"},"nodeType":"YulFunctionCall","src":"3329:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3319:6:17"}]}]},{"nodeType":"YulBlock","src":"3412:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3427:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3441:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3431:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3457:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3502:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3513:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3498:3:17"},"nodeType":"YulFunctionCall","src":"3498:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3522:7:17"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"3467:30:17"},"nodeType":"YulFunctionCall","src":"3467:63:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3457:6:17"}]}]},{"nodeType":"YulBlock","src":"3550:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3565:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3579:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3569:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3595:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3641:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3652:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:17"},"nodeType":"YulFunctionCall","src":"3637:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3661:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3605:31:17"},"nodeType":"YulFunctionCall","src":"3605:64:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3595:6:17"}]}]},{"nodeType":"YulBlock","src":"3689:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3704:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3718:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3708:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3734:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3780:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3791:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3776:3:17"},"nodeType":"YulFunctionCall","src":"3776:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3800:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3744:31:17"},"nodeType":"YulFunctionCall","src":"3744:64:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3734:6:17"}]}]},{"nodeType":"YulBlock","src":"3828:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3843:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3857:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3847:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3874:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3919:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3930:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3915:3:17"},"nodeType":"YulFunctionCall","src":"3915:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3939:7:17"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"3884:30:17"},"nodeType":"YulFunctionCall","src":"3884:63:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3874:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3073:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3084:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3096:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3104:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3112:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3120:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3128:6:17","type":""}],"src":"2993:971:17"},{"body":{"nodeType":"YulBlock","src":"4035:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4052:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4075:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4057:17:17"},"nodeType":"YulFunctionCall","src":"4057:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4045:6:17"},"nodeType":"YulFunctionCall","src":"4045:37:17"},"nodeType":"YulExpressionStatement","src":"4045:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4023:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4030:3:17","type":""}],"src":"3970:118:17"},{"body":{"nodeType":"YulBlock","src":"4188:95:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4205:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4270:5:17"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$397_to_t_address","nodeType":"YulIdentifier","src":"4210:59:17"},"nodeType":"YulFunctionCall","src":"4210:66:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4198:6:17"},"nodeType":"YulFunctionCall","src":"4198:79:17"},"nodeType":"YulExpressionStatement","src":"4198:79:17"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$397_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4176:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4183:3:17","type":""}],"src":"4094:189:17"},{"body":{"nodeType":"YulBlock","src":"4381:272:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4391:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4438:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4405:32:17"},"nodeType":"YulFunctionCall","src":"4405:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4395:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4453:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4519:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4524:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4460:58:17"},"nodeType":"YulFunctionCall","src":"4460:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4453:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4566:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4573:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4562:3:17"},"nodeType":"YulFunctionCall","src":"4562:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"4580:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4585:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4540:21:17"},"nodeType":"YulFunctionCall","src":"4540:52:17"},"nodeType":"YulExpressionStatement","src":"4540:52:17"},{"nodeType":"YulAssignment","src":"4601:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4612:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4639:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4617:21:17"},"nodeType":"YulFunctionCall","src":"4617:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:17"},"nodeType":"YulFunctionCall","src":"4608:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4601:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4362:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4369:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4377:3:17","type":""}],"src":"4289:364:17"},{"body":{"nodeType":"YulBlock","src":"4769:267:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4779:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4826:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4793:32:17"},"nodeType":"YulFunctionCall","src":"4793:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4783:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4841:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4925:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4930:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4848:76:17"},"nodeType":"YulFunctionCall","src":"4848:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4841:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4972:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4979:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4968:3:17"},"nodeType":"YulFunctionCall","src":"4968:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"4986:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4991:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4946:21:17"},"nodeType":"YulFunctionCall","src":"4946:52:17"},"nodeType":"YulExpressionStatement","src":"4946:52:17"},{"nodeType":"YulAssignment","src":"5007:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5023:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5014:3:17"},"nodeType":"YulFunctionCall","src":"5014:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5007:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4750:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4757:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4765:3:17","type":""}],"src":"4659:377:17"},{"body":{"nodeType":"YulBlock","src":"5188:220:17","statements":[{"nodeType":"YulAssignment","src":"5198:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5264:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5269:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5205:58:17"},"nodeType":"YulFunctionCall","src":"5205:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5198:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5370:3:17"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"5281:88:17"},"nodeType":"YulFunctionCall","src":"5281:93:17"},"nodeType":"YulExpressionStatement","src":"5281:93:17"},{"nodeType":"YulAssignment","src":"5383:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5394:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5399:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5390:3:17"},"nodeType":"YulFunctionCall","src":"5390:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5383:3:17"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5176:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5184:3:17","type":""}],"src":"5042:366:17"},{"body":{"nodeType":"YulBlock","src":"5560:220:17","statements":[{"nodeType":"YulAssignment","src":"5570:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5636:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5641:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5577:58:17"},"nodeType":"YulFunctionCall","src":"5577:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5570:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5742:3:17"}],"functionName":{"name":"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","nodeType":"YulIdentifier","src":"5653:88:17"},"nodeType":"YulFunctionCall","src":"5653:93:17"},"nodeType":"YulExpressionStatement","src":"5653:93:17"},{"nodeType":"YulAssignment","src":"5755:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5766:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5771:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5762:3:17"},"nodeType":"YulFunctionCall","src":"5762:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5755:3:17"}]}]},"name":"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5548:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5556:3:17","type":""}],"src":"5414:366:17"},{"body":{"nodeType":"YulBlock","src":"5932:220:17","statements":[{"nodeType":"YulAssignment","src":"5942:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6008:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6013:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5949:58:17"},"nodeType":"YulFunctionCall","src":"5949:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5942:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6114:3:17"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"6025:88:17"},"nodeType":"YulFunctionCall","src":"6025:93:17"},"nodeType":"YulExpressionStatement","src":"6025:93:17"},{"nodeType":"YulAssignment","src":"6127:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6138:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6143:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6134:3:17"},"nodeType":"YulFunctionCall","src":"6134:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6127:3:17"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5920:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5928:3:17","type":""}],"src":"5786:366:17"},{"body":{"nodeType":"YulBlock","src":"6223:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6240:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6263:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6245:17:17"},"nodeType":"YulFunctionCall","src":"6245:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6233:6:17"},"nodeType":"YulFunctionCall","src":"6233:37:17"},"nodeType":"YulExpressionStatement","src":"6233:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6211:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6218:3:17","type":""}],"src":"6158:118:17"},{"body":{"nodeType":"YulBlock","src":"6418:139:17","statements":[{"nodeType":"YulAssignment","src":"6429:102:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6518:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"6527:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6436:81:17"},"nodeType":"YulFunctionCall","src":"6436:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6429:3:17"}]},{"nodeType":"YulAssignment","src":"6541:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"6548:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6541:3:17"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6397:3:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6403:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6414:3:17","type":""}],"src":"6282:275:17"},{"body":{"nodeType":"YulBlock","src":"6661:124:17","statements":[{"nodeType":"YulAssignment","src":"6671:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6683:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6694:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6679:3:17"},"nodeType":"YulFunctionCall","src":"6679:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6671:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6751:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6764:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6775:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6760:3:17"},"nodeType":"YulFunctionCall","src":"6760:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6707:43:17"},"nodeType":"YulFunctionCall","src":"6707:71:17"},"nodeType":"YulExpressionStatement","src":"6707:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6633:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6645:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6656:4:17","type":""}],"src":"6563:222:17"},{"body":{"nodeType":"YulBlock","src":"6994:388:17","statements":[{"nodeType":"YulAssignment","src":"7004:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7016:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7027:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7012:3:17"},"nodeType":"YulFunctionCall","src":"7012:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7004:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7051:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7062:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7047:3:17"},"nodeType":"YulFunctionCall","src":"7047:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7070:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7076:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7066:3:17"},"nodeType":"YulFunctionCall","src":"7066:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7040:6:17"},"nodeType":"YulFunctionCall","src":"7040:47:17"},"nodeType":"YulExpressionStatement","src":"7040:47:17"},{"nodeType":"YulAssignment","src":"7096:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7168:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"7177:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7104:63:17"},"nodeType":"YulFunctionCall","src":"7104:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7096:4:17"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7236:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7249:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7260:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7245:3:17"},"nodeType":"YulFunctionCall","src":"7245:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7192:43:17"},"nodeType":"YulFunctionCall","src":"7192:72:17"},"nodeType":"YulExpressionStatement","src":"7192:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7347:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7360:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7371:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7356:3:17"},"nodeType":"YulFunctionCall","src":"7356:18:17"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$397_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7274:72:17"},"nodeType":"YulFunctionCall","src":"7274:101:17"},"nodeType":"YulExpressionStatement","src":"7274:101:17"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$397__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6950:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6962:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6970:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6978:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6989:4:17","type":""}],"src":"6791:591:17"},{"body":{"nodeType":"YulBlock","src":"7559:248:17","statements":[{"nodeType":"YulAssignment","src":"7569:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7581:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7592:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7577:3:17"},"nodeType":"YulFunctionCall","src":"7577:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7569:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7616:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7627:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7612:3:17"},"nodeType":"YulFunctionCall","src":"7612:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7635:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7641:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7631:3:17"},"nodeType":"YulFunctionCall","src":"7631:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7605:6:17"},"nodeType":"YulFunctionCall","src":"7605:47:17"},"nodeType":"YulExpressionStatement","src":"7605:47:17"},{"nodeType":"YulAssignment","src":"7661:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7795:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7669:124:17"},"nodeType":"YulFunctionCall","src":"7669:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7661:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7539:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7554:4:17","type":""}],"src":"7388:419:17"},{"body":{"nodeType":"YulBlock","src":"7984:248:17","statements":[{"nodeType":"YulAssignment","src":"7994:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8006:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8017:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8002:3:17"},"nodeType":"YulFunctionCall","src":"8002:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7994:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8041:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8052:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8037:3:17"},"nodeType":"YulFunctionCall","src":"8037:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8060:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8066:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8056:3:17"},"nodeType":"YulFunctionCall","src":"8056:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8030:6:17"},"nodeType":"YulFunctionCall","src":"8030:47:17"},"nodeType":"YulExpressionStatement","src":"8030:47:17"},{"nodeType":"YulAssignment","src":"8086:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8220:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8094:124:17"},"nodeType":"YulFunctionCall","src":"8094:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8086:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7964:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7979:4:17","type":""}],"src":"7813:419:17"},{"body":{"nodeType":"YulBlock","src":"8409:248:17","statements":[{"nodeType":"YulAssignment","src":"8419:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8431:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8442:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:17"},"nodeType":"YulFunctionCall","src":"8427:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8419:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8466:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8477:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8462:3:17"},"nodeType":"YulFunctionCall","src":"8462:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8485:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8481:3:17"},"nodeType":"YulFunctionCall","src":"8481:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8455:6:17"},"nodeType":"YulFunctionCall","src":"8455:47:17"},"nodeType":"YulExpressionStatement","src":"8455:47:17"},{"nodeType":"YulAssignment","src":"8511:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8645:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8519:124:17"},"nodeType":"YulFunctionCall","src":"8519:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8511:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8389:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8404:4:17","type":""}],"src":"8238:419:17"},{"body":{"nodeType":"YulBlock","src":"8761:124:17","statements":[{"nodeType":"YulAssignment","src":"8771:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8783:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8794:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8779:3:17"},"nodeType":"YulFunctionCall","src":"8779:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8771:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8851:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8864:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8875:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8860:3:17"},"nodeType":"YulFunctionCall","src":"8860:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8807:43:17"},"nodeType":"YulFunctionCall","src":"8807:71:17"},"nodeType":"YulExpressionStatement","src":"8807:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8733:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8745:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8756:4:17","type":""}],"src":"8663:222:17"},{"body":{"nodeType":"YulBlock","src":"8932:88:17","statements":[{"nodeType":"YulAssignment","src":"8942:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8952:18:17"},"nodeType":"YulFunctionCall","src":"8952:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8942:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9001:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"9009:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8981:19:17"},"nodeType":"YulFunctionCall","src":"8981:33:17"},"nodeType":"YulExpressionStatement","src":"8981:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8916:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8925:6:17","type":""}],"src":"8891:129:17"},{"body":{"nodeType":"YulBlock","src":"9066:35:17","statements":[{"nodeType":"YulAssignment","src":"9076:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9092:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9086:5:17"},"nodeType":"YulFunctionCall","src":"9086:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9076:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9059:6:17","type":""}],"src":"9026:75:17"},{"body":{"nodeType":"YulBlock","src":"9174:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"9279:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9281:16:17"},"nodeType":"YulFunctionCall","src":"9281:18:17"},"nodeType":"YulExpressionStatement","src":"9281:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9251:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9259:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9248:2:17"},"nodeType":"YulFunctionCall","src":"9248:30:17"},"nodeType":"YulIf","src":"9245:56:17"},{"nodeType":"YulAssignment","src":"9311:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9341:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9319:21:17"},"nodeType":"YulFunctionCall","src":"9319:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9311:4:17"}]},{"nodeType":"YulAssignment","src":"9385:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9397:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"9403:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9393:3:17"},"nodeType":"YulFunctionCall","src":"9393:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9385:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9158:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9169:4:17","type":""}],"src":"9107:308:17"},{"body":{"nodeType":"YulBlock","src":"9480:40:17","statements":[{"nodeType":"YulAssignment","src":"9491:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9507:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9501:5:17"},"nodeType":"YulFunctionCall","src":"9501:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9491:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9463:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9473:6:17","type":""}],"src":"9421:99:17"},{"body":{"nodeType":"YulBlock","src":"9622:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9639:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9644:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9632:6:17"},"nodeType":"YulFunctionCall","src":"9632:19:17"},"nodeType":"YulExpressionStatement","src":"9632:19:17"},{"nodeType":"YulAssignment","src":"9660:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9679:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9684:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9675:3:17"},"nodeType":"YulFunctionCall","src":"9675:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9660:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9594:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"9599:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9610:11:17","type":""}],"src":"9526:169:17"},{"body":{"nodeType":"YulBlock","src":"9815:34:17","statements":[{"nodeType":"YulAssignment","src":"9825:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"9840:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9825:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9787:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"9792:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9803:11:17","type":""}],"src":"9701:148:17"},{"body":{"nodeType":"YulBlock","src":"9900:51:17","statements":[{"nodeType":"YulAssignment","src":"9910:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9939:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9921:17:17"},"nodeType":"YulFunctionCall","src":"9921:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9910:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9882:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9892:7:17","type":""}],"src":"9855:96:17"},{"body":{"nodeType":"YulBlock","src":"10001:32:17","statements":[{"nodeType":"YulAssignment","src":"10011:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"10022:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10011:7:17"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9983:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9993:7:17","type":""}],"src":"9957:76:17"},{"body":{"nodeType":"YulBlock","src":"10084:81:17","statements":[{"nodeType":"YulAssignment","src":"10094:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10109:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"10116:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10105:3:17"},"nodeType":"YulFunctionCall","src":"10105:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10094:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10066:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10076:7:17","type":""}],"src":"10039:126:17"},{"body":{"nodeType":"YulBlock","src":"10216:32:17","statements":[{"nodeType":"YulAssignment","src":"10226:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"10237:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10226:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10198:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10208:7:17","type":""}],"src":"10171:77:17"},{"body":{"nodeType":"YulBlock","src":"10298:61:17","statements":[{"nodeType":"YulAssignment","src":"10308:45:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10323:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"10330:22:17","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10319:3:17"},"nodeType":"YulFunctionCall","src":"10319:34:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10308:7:17"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10280:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10290:7:17","type":""}],"src":"10254:105:17"},{"body":{"nodeType":"YulBlock","src":"10454:66:17","statements":[{"nodeType":"YulAssignment","src":"10464:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10508:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10477:30:17"},"nodeType":"YulFunctionCall","src":"10477:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10464:9:17"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$397_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10434:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10444:9:17","type":""}],"src":"10365:155:17"},{"body":{"nodeType":"YulBlock","src":"10586:66:17","statements":[{"nodeType":"YulAssignment","src":"10596:50:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10640:5:17"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"10609:30:17"},"nodeType":"YulFunctionCall","src":"10609:37:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10596:9:17"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10566:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10576:9:17","type":""}],"src":"10526:126:17"},{"body":{"nodeType":"YulBlock","src":"10718:53:17","statements":[{"nodeType":"YulAssignment","src":"10728:37:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10759:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10741:17:17"},"nodeType":"YulFunctionCall","src":"10741:24:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10728:9:17"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10698:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10708:9:17","type":""}],"src":"10658:113:17"},{"body":{"nodeType":"YulBlock","src":"10828:103:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10851:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"10856:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10861:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10838:12:17"},"nodeType":"YulFunctionCall","src":"10838:30:17"},"nodeType":"YulExpressionStatement","src":"10838:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10909:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10914:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10905:3:17"},"nodeType":"YulFunctionCall","src":"10905:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"10923:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10898:6:17"},"nodeType":"YulFunctionCall","src":"10898:27:17"},"nodeType":"YulExpressionStatement","src":"10898:27:17"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10810:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10815:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"10820:6:17","type":""}],"src":"10777:154:17"},{"body":{"nodeType":"YulBlock","src":"10986:258:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10996:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11005:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11000:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11065:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11090:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"11095:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11086:3:17"},"nodeType":"YulFunctionCall","src":"11086:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11109:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"11114:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11105:3:17"},"nodeType":"YulFunctionCall","src":"11105:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11099:5:17"},"nodeType":"YulFunctionCall","src":"11099:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11079:6:17"},"nodeType":"YulFunctionCall","src":"11079:39:17"},"nodeType":"YulExpressionStatement","src":"11079:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11026:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"11029:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11023:2:17"},"nodeType":"YulFunctionCall","src":"11023:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11037:19:17","statements":[{"nodeType":"YulAssignment","src":"11039:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11048:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"11051:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11044:3:17"},"nodeType":"YulFunctionCall","src":"11044:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11039:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"11019:3:17","statements":[]},"src":"11015:113:17"},{"body":{"nodeType":"YulBlock","src":"11162:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11212:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"11217:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11208:3:17"},"nodeType":"YulFunctionCall","src":"11208:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"11226:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11201:6:17"},"nodeType":"YulFunctionCall","src":"11201:27:17"},"nodeType":"YulExpressionStatement","src":"11201:27:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11143:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"11146:6:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11140:2:17"},"nodeType":"YulFunctionCall","src":"11140:13:17"},"nodeType":"YulIf","src":"11137:101:17"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10968:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10973:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"10978:6:17","type":""}],"src":"10937:307:17"},{"body":{"nodeType":"YulBlock","src":"11301:269:17","statements":[{"nodeType":"YulAssignment","src":"11311:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11325:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"11331:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11321:3:17"},"nodeType":"YulFunctionCall","src":"11321:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11311:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"11342:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11372:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"11378:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11368:3:17"},"nodeType":"YulFunctionCall","src":"11368:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11346:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11419:51:17","statements":[{"nodeType":"YulAssignment","src":"11433:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11447:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11455:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11443:3:17"},"nodeType":"YulFunctionCall","src":"11443:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11433:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11399:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11392:6:17"},"nodeType":"YulFunctionCall","src":"11392:26:17"},"nodeType":"YulIf","src":"11389:81:17"},{"body":{"nodeType":"YulBlock","src":"11522:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11536:16:17"},"nodeType":"YulFunctionCall","src":"11536:18:17"},"nodeType":"YulExpressionStatement","src":"11536:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11486:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11509:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11517:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11506:2:17"},"nodeType":"YulFunctionCall","src":"11506:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11483:2:17"},"nodeType":"YulFunctionCall","src":"11483:38:17"},"nodeType":"YulIf","src":"11480:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11285:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11294:6:17","type":""}],"src":"11250:320:17"},{"body":{"nodeType":"YulBlock","src":"11619:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11629:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11651:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11681:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11659:21:17"},"nodeType":"YulFunctionCall","src":"11659:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11647:3:17"},"nodeType":"YulFunctionCall","src":"11647:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"11633:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11798:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11800:16:17"},"nodeType":"YulFunctionCall","src":"11800:18:17"},"nodeType":"YulExpressionStatement","src":"11800:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11741:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"11753:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11738:2:17"},"nodeType":"YulFunctionCall","src":"11738:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11777:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"11789:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11774:2:17"},"nodeType":"YulFunctionCall","src":"11774:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11735:2:17"},"nodeType":"YulFunctionCall","src":"11735:62:17"},"nodeType":"YulIf","src":"11732:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11836:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11840:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11829:6:17"},"nodeType":"YulFunctionCall","src":"11829:22:17"},"nodeType":"YulExpressionStatement","src":"11829:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11605:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"11613:4:17","type":""}],"src":"11576:281:17"},{"body":{"nodeType":"YulBlock","src":"11906:190:17","statements":[{"nodeType":"YulAssignment","src":"11916:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11943:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11925:17:17"},"nodeType":"YulFunctionCall","src":"11925:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11916:5:17"}]},{"body":{"nodeType":"YulBlock","src":"12039:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12041:16:17"},"nodeType":"YulFunctionCall","src":"12041:18:17"},"nodeType":"YulExpressionStatement","src":"12041:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11964:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11971:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11961:2:17"},"nodeType":"YulFunctionCall","src":"11961:77:17"},"nodeType":"YulIf","src":"11958:103:17"},{"nodeType":"YulAssignment","src":"12070:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12081:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12088:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12077:3:17"},"nodeType":"YulFunctionCall","src":"12077:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12070:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11892:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11902:3:17","type":""}],"src":"11863:233:17"},{"body":{"nodeType":"YulBlock","src":"12130:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12147:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12150:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12140:6:17"},"nodeType":"YulFunctionCall","src":"12140:88:17"},"nodeType":"YulExpressionStatement","src":"12140:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12244:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12247:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12237:6:17"},"nodeType":"YulFunctionCall","src":"12237:15:17"},"nodeType":"YulExpressionStatement","src":"12237:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12268:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12271:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12261:6:17"},"nodeType":"YulFunctionCall","src":"12261:15:17"},"nodeType":"YulExpressionStatement","src":"12261:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12102:180:17"},{"body":{"nodeType":"YulBlock","src":"12316:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12333:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12336:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12326:6:17"},"nodeType":"YulFunctionCall","src":"12326:88:17"},"nodeType":"YulExpressionStatement","src":"12326:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12430:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12433:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12423:6:17"},"nodeType":"YulFunctionCall","src":"12423:15:17"},"nodeType":"YulExpressionStatement","src":"12423:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12454:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12457:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12447:6:17"},"nodeType":"YulFunctionCall","src":"12447:15:17"},"nodeType":"YulExpressionStatement","src":"12447:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12288:180:17"},{"body":{"nodeType":"YulBlock","src":"12502:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12519:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12522:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12512:6:17"},"nodeType":"YulFunctionCall","src":"12512:88:17"},"nodeType":"YulExpressionStatement","src":"12512:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12616:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12619:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12609:6:17"},"nodeType":"YulFunctionCall","src":"12609:15:17"},"nodeType":"YulExpressionStatement","src":"12609:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12640:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12643:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12633:6:17"},"nodeType":"YulFunctionCall","src":"12633:15:17"},"nodeType":"YulExpressionStatement","src":"12633:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12474:180:17"},{"body":{"nodeType":"YulBlock","src":"12688:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12705:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12708:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12698:6:17"},"nodeType":"YulFunctionCall","src":"12698:88:17"},"nodeType":"YulExpressionStatement","src":"12698:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12802:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12805:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12795:6:17"},"nodeType":"YulFunctionCall","src":"12795:15:17"},"nodeType":"YulExpressionStatement","src":"12795:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12826:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12829:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12819:6:17"},"nodeType":"YulFunctionCall","src":"12819:15:17"},"nodeType":"YulExpressionStatement","src":"12819:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"12660:180:17"},{"body":{"nodeType":"YulBlock","src":"12935:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12952:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12955:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12945:6:17"},"nodeType":"YulFunctionCall","src":"12945:12:17"},"nodeType":"YulExpressionStatement","src":"12945:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"12846:117:17"},{"body":{"nodeType":"YulBlock","src":"13058:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13075:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13078:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13068:6:17"},"nodeType":"YulFunctionCall","src":"13068:12:17"},"nodeType":"YulExpressionStatement","src":"13068:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12969:117:17"},{"body":{"nodeType":"YulBlock","src":"13181:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13198:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13201:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13191:6:17"},"nodeType":"YulFunctionCall","src":"13191:12:17"},"nodeType":"YulExpressionStatement","src":"13191:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"13092:117:17"},{"body":{"nodeType":"YulBlock","src":"13304:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13321:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13324:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13314:6:17"},"nodeType":"YulFunctionCall","src":"13314:12:17"},"nodeType":"YulExpressionStatement","src":"13314:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"13215:117:17"},{"body":{"nodeType":"YulBlock","src":"13386:54:17","statements":[{"nodeType":"YulAssignment","src":"13396:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13414:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13421:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13410:3:17"},"nodeType":"YulFunctionCall","src":"13410:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13430:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13426:3:17"},"nodeType":"YulFunctionCall","src":"13426:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13406:3:17"},"nodeType":"YulFunctionCall","src":"13406:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13396:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13369:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13379:6:17","type":""}],"src":"13338:102:17"},{"body":{"nodeType":"YulBlock","src":"13552:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13574:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13582:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13570:3:17"},"nodeType":"YulFunctionCall","src":"13570:14:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"13586:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13563:6:17"},"nodeType":"YulFunctionCall","src":"13563:58:17"},"nodeType":"YulExpressionStatement","src":"13563:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13642:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13650:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13638:3:17"},"nodeType":"YulFunctionCall","src":"13638:15:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"13655:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13631:6:17"},"nodeType":"YulFunctionCall","src":"13631:33:17"},"nodeType":"YulExpressionStatement","src":"13631:33:17"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13544:6:17","type":""}],"src":"13446:225:17"},{"body":{"nodeType":"YulBlock","src":"13783:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13805:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13813:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13801:3:17"},"nodeType":"YulFunctionCall","src":"13801:14:17"},{"hexValue":"5072696365204665656420616c7265616479206164646564","kind":"string","nodeType":"YulLiteral","src":"13817:26:17","type":"","value":"Price Feed already added"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13794:6:17"},"nodeType":"YulFunctionCall","src":"13794:50:17"},"nodeType":"YulExpressionStatement","src":"13794:50:17"}]},"name":"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13775:6:17","type":""}],"src":"13677:174:17"},{"body":{"nodeType":"YulBlock","src":"13963:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13985:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13993:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13981:3:17"},"nodeType":"YulFunctionCall","src":"13981:14:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"13997:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13974:6:17"},"nodeType":"YulFunctionCall","src":"13974:58:17"},"nodeType":"YulExpressionStatement","src":"13974:58:17"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13955:6:17","type":""}],"src":"13857:182:17"},{"body":{"nodeType":"YulBlock","src":"14088:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"14145:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14154:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14157:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14147:6:17"},"nodeType":"YulFunctionCall","src":"14147:12:17"},"nodeType":"YulExpressionStatement","src":"14147:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14111:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14136:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14118:17:17"},"nodeType":"YulFunctionCall","src":"14118:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14108:2:17"},"nodeType":"YulFunctionCall","src":"14108:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14101:6:17"},"nodeType":"YulFunctionCall","src":"14101:43:17"},"nodeType":"YulIf","src":"14098:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14081:5:17","type":""}],"src":"14045:122:17"},{"body":{"nodeType":"YulBlock","src":"14215:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"14271:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14280:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14283:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14273:6:17"},"nodeType":"YulFunctionCall","src":"14273:12:17"},"nodeType":"YulExpressionStatement","src":"14273:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14238:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14262:5:17"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"14245:16:17"},"nodeType":"YulFunctionCall","src":"14245:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14235:2:17"},"nodeType":"YulFunctionCall","src":"14235:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14228:6:17"},"nodeType":"YulFunctionCall","src":"14228:42:17"},"nodeType":"YulIf","src":"14225:62:17"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14208:5:17","type":""}],"src":"14173:120:17"},{"body":{"nodeType":"YulBlock","src":"14342:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"14399:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14408:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14411:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14401:6:17"},"nodeType":"YulFunctionCall","src":"14401:12:17"},"nodeType":"YulExpressionStatement","src":"14401:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14365:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14390:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14372:17:17"},"nodeType":"YulFunctionCall","src":"14372:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14362:2:17"},"nodeType":"YulFunctionCall","src":"14362:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14355:6:17"},"nodeType":"YulFunctionCall","src":"14355:43:17"},"nodeType":"YulIf","src":"14352:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14335:5:17","type":""}],"src":"14299:122:17"},{"body":{"nodeType":"YulBlock","src":"14469:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"14525:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14534:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14537:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14527:6:17"},"nodeType":"YulFunctionCall","src":"14527:12:17"},"nodeType":"YulExpressionStatement","src":"14527:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14492:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14516:5:17"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"14499:16:17"},"nodeType":"YulFunctionCall","src":"14499:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14489:2:17"},"nodeType":"YulFunctionCall","src":"14489:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14482:6:17"},"nodeType":"YulFunctionCall","src":"14482:42:17"},"nodeType":"YulIf","src":"14479:62:17"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14462:5:17","type":""}],"src":"14427:120:17"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$397_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$397_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$397__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_AggregatorV3Interface_$397_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$397_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price Feed already added\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c806310c7f0b91461006757806341976e0914610099578063715018a6146100c95780638c35423e146100d35780638da5cb5b146100ef578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610cd3565b610129565b60405161009093929190610ead565b60405180910390f35b6100b360048036038101906100ae9190610c37565b61022b565b6040516100c09190610f4b565b60405180910390f35b6100d16102c9565b005b6100ed60048036038101906100e89190610c64565b6102dd565b005b6100f7610688565b6040516101049190610e92565b60405180910390f35b61012760048036038101906101229190610c37565b6106b1565b005b6001818154811061013957600080fd5b906000526020600020906003020160009150905080600001805461015c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610188906110b7565b80156101d55780601f106101aa576101008083540402835291602001916101d5565b820191906000526020600020905b8154815290600101906020018083116101b857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008061023783610735565b905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610d00565b5050509150508092505050919050565b6102d1610971565b6102db60006109ef565b565b6102e5610971565b60006001805480602002602001604051908101604052809291908181526020016000905b82821015610479578382906000526020600020906003020160405180606001604052908160008201805461033c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906110b7565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610309565b5050505090506000805b825181101561051a5782818151811061049f5761049e6111c1565b5b6020026020010151600001516040516020016104bb9190610e7b565b60405160208183030381529060405280519060200120866040516020016104e29190610e7b565b604051602081830303815290604052805190602001201415610507576001915061051a565b80806105129061111a565b915050610483565b50801561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610f0b565b60405180910390fd5b6000839050600160405180606001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105ef929190610abb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b9610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610eeb565b60405180910390fd5b610732816109ef565b50565b6000806001805480602002602001604051908101604052809291908181526020016000905b828210156108ca578382906000526020600020906003020160405180606001604052908160008201805461078d906110b7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906110b7565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061075a565b50505050905060005b8151811015610969578181815181106108ef576108ee6111c1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561095657818181518110610941576109406111c1565b5b6020026020010151604001519250505061096c565b80806109619061111a565b9150506108d3565b50505b919050565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff16610997610688565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906110b7565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84610f8b565b610f66565b905082815260208101848484011115610b8d57610b8c611224565b5b610b98848285611075565b509392505050565b600081359050610baf816112e5565b92915050565b600081519050610bc4816112fc565b92915050565b600082601f830112610bdf57610bde61121f565b5b8135610bef848260208601610b5e565b91505092915050565b600081359050610c0781611313565b92915050565b600081519050610c1c81611313565b92915050565b600081519050610c318161132a565b92915050565b600060208284031215610c4d57610c4c61122e565b5b6000610c5b84828501610ba0565b91505092915050565b600080600060608486031215610c7d57610c7c61122e565b5b600084013567ffffffffffffffff811115610c9b57610c9a611229565b5b610ca786828701610bca565b9350506020610cb886828701610ba0565b9250506040610cc986828701610ba0565b9150509250925092565b600060208284031215610ce957610ce861122e565b5b6000610cf784828501610bf8565b91505092915050565b600080600080600060a08688031215610d1c57610d1b61122e565b5b6000610d2a88828901610c22565b9550506020610d3b88828901610bb5565b9450506040610d4c88828901610c0d565b9350506060610d5d88828901610c0d565b9250506080610d6e88828901610c22565b9150509295509295909350565b610d8481610fe3565b82525050565b610d938161103f565b82525050565b6000610da482610fbc565b610dae8185610fc7565b9350610dbe818560208601611084565b610dc781611233565b840191505092915050565b6000610ddd82610fbc565b610de78185610fd8565b9350610df7818560208601611084565b80840191505092915050565b6000610e10602683610fc7565b9150610e1b82611244565b604082019050919050565b6000610e33601883610fc7565b9150610e3e82611293565b602082019050919050565b6000610e56602083610fc7565b9150610e61826112bc565b602082019050919050565b610e758161101f565b82525050565b6000610e878284610dd2565b915081905092915050565b6000602082019050610ea76000830184610d7b565b92915050565b60006060820190508181036000830152610ec78186610d99565b9050610ed66020830185610d7b565b610ee36040830184610d8a565b949350505050565b60006020820190508181036000830152610f0481610e03565b9050919050565b60006020820190508181036000830152610f2481610e26565b9050919050565b60006020820190508181036000830152610f4481610e49565b9050919050565b6000602082019050610f606000830184610e6c565b92915050565b6000610f70610f81565b9050610f7c82826110e9565b919050565b6000604051905090565b600067ffffffffffffffff821115610fa657610fa56111f0565b5b610faf82611233565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610fee82610fff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104a82611051565b9050919050565b600061105c82611063565b9050919050565b600061106e82610fff565b9050919050565b82818337600083830152505050565b60005b838110156110a2578082015181840152602081019050611087565b838111156110b1576000848401525b50505050565b600060028204905060018216806110cf57607f821691505b602082108114156110e3576110e2611192565b5b50919050565b6110f282611233565b810181811067ffffffffffffffff82111715611111576111106111f0565b5b80604052505050565b60006111258261101f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561115857611157611163565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5072696365204665656420616c72656164792061646465640000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6112ee81610fe3565b81146112f957600080fd5b50565b61130581610ff5565b811461131057600080fd5b50565b61131c8161101f565b811461132757600080fd5b50565b61133381611029565b811461133e57600080fd5b5056fea2646970667358221220c35e7e8ecb7262f04ee52507df9a62a77b09793980be9195195c1e70958bbdd764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8C35423E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x15C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x188 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD00 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x0 PUSH2 0x9EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E5 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x479 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x309 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x507 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x51A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x9EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8CA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x78D SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x806 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x806 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x956 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 POP POP POP PUSH2 0x96C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D3 JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xAB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB30 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB42 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0xB6C DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x1224 JUMP JUMPDEST JUMPDEST PUSH2 0xB98 DUP5 DUP3 DUP6 PUSH2 0x1075 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC4 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBDF JUMPI PUSH2 0xBDE PUSH2 0x121F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBEF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1C DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC31 DUP2 PUSH2 0x132A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x1229 JUMP JUMPDEST JUMPDEST PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xBCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCF7 DUP5 DUP3 DUP6 ADD PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1B PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD3B DUP9 DUP3 DUP10 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD4C DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD5D DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xD6E DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0x103F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDAE DUP2 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDE7 DUP2 DUP6 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x26 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 PUSH1 0x18 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH1 0x20 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC7 DUP2 DUP7 PUSH2 0xD99 JUMP JUMPDEST SWAP1 POP PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF04 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF24 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7C DUP3 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x1063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1087 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x1192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F2 DUP3 PUSH2 0x1233 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365204665656420616C72656164792061646465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12EE DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1333 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP2 EQ PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x5E PUSH31 0x8ECB7262F04EE52507DF9A62A77B09793980BE9195195C1E70958BBDD76473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"194:1570:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;234:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1521:240;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;;;:::i;:::-;;438:713:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;234:30:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1521:240::-;1580:7;1600:31;1634:22;1647:8;1634:12;:22::i;:::-;1600:56;;1670:13;1693:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:53;;;;;;1746:6;1731:22;;;;1521:240;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;438:713:9:-;1094:13:2;:11;:13::i;:::-;579:29:9::1;611:10;579:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;632:12;668:9:::0;663:285:::1;687:9;:16;683:1;:20;663:285;;;829:9;839:1;829:12;;;;;;;;:::i;:::-;;;;;;;;:17;;;812:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;802:46;;;;;;774:5;757:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;747:34;;;;;;:101;725:212;;;893:4;883:14;;916:5;;725:212;705:3;;;;;:::i;:::-;;;;663:285;;;;967:7;966:8;958:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1014:31;1070:8;1014:65;;1090:10;1106:36;;;;;;;;1117:5;1106:36;;;;1124:6;1106:36;;;;;;1132:9;1106:36;;;;::::0;1090:53:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:583;;;438:713:::0;;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1159:354:9:-;1236:31;1280:29;1312:10;1280:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:9;1335:171;1359:9;:16;1355:1;:20;1335:171;;;1411:9;1421:1;1411:12;;;;;;;;:::i;:::-;;;;;;;;:18;;;1401:28;;:6;:28;;;1397:98;;;1457:9;1467:1;1457:12;;;;;;;;:::i;:::-;;;;;;;;:22;;;1450:29;;;;;;1397:98;1377:3;;;;;:::i;:::-;;;;1335:171;;;;1269:244;1159:354;;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:17:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:112;;;282:79;;:::i;:::-;251:112;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;7:412;;;;;:::o;425:139::-;471:5;509:6;496:20;487:29;;525:33;552:5;525:33;:::i;:::-;425:139;;;;:::o;570:141::-;626:5;657:6;651:13;642:22;;673:32;699:5;673:32;:::i;:::-;570:141;;;;:::o;731:340::-;787:5;836:3;829:4;821:6;817:17;813:27;803:122;;844:79;;:::i;:::-;803:122;961:6;948:20;986:79;1061:3;1053:6;1046:4;1038:6;1034:17;986:79;:::i;:::-;977:88;;793:278;731:340;;;;:::o;1077:139::-;1123:5;1161:6;1148:20;1139:29;;1177:33;1204:5;1177:33;:::i;:::-;1077:139;;;;:::o;1222:143::-;1279:5;1310:6;1304:13;1295:22;;1326:33;1353:5;1326:33;:::i;:::-;1222:143;;;;:::o;1371:141::-;1427:5;1458:6;1452:13;1443:22;;1474:32;1500:5;1474:32;:::i;:::-;1371:141;;;;:::o;1518:329::-;1577:6;1626:2;1614:9;1605:7;1601:23;1597:32;1594:119;;;1632:79;;:::i;:::-;1594:119;1752:1;1777:53;1822:7;1813:6;1802:9;1798:22;1777:53;:::i;:::-;1767:63;;1723:117;1518:329;;;;:::o;1853:799::-;1940:6;1948;1956;2005:2;1993:9;1984:7;1980:23;1976:32;1973:119;;;2011:79;;:::i;:::-;1973:119;2159:1;2148:9;2144:17;2131:31;2189:18;2181:6;2178:30;2175:117;;;2211:79;;:::i;:::-;2175:117;2316:63;2371:7;2362:6;2351:9;2347:22;2316:63;:::i;:::-;2306:73;;2102:287;2428:2;2454:53;2499:7;2490:6;2479:9;2475:22;2454:53;:::i;:::-;2444:63;;2399:118;2556:2;2582:53;2627:7;2618:6;2607:9;2603:22;2582:53;:::i;:::-;2572:63;;2527:118;1853:799;;;;;:::o;2658:329::-;2717:6;2766:2;2754:9;2745:7;2741:23;2737:32;2734:119;;;2772:79;;:::i;:::-;2734:119;2892:1;2917:53;2962:7;2953:6;2942:9;2938:22;2917:53;:::i;:::-;2907:63;;2863:117;2658:329;;;;:::o;2993:971::-;3096:6;3104;3112;3120;3128;3177:3;3165:9;3156:7;3152:23;3148:33;3145:120;;;3184:79;;:::i;:::-;3145:120;3304:1;3329:63;3384:7;3375:6;3364:9;3360:22;3329:63;:::i;:::-;3319:73;;3275:127;3441:2;3467:63;3522:7;3513:6;3502:9;3498:22;3467:63;:::i;:::-;3457:73;;3412:128;3579:2;3605:64;3661:7;3652:6;3641:9;3637:22;3605:64;:::i;:::-;3595:74;;3550:129;3718:2;3744:64;3800:7;3791:6;3780:9;3776:22;3744:64;:::i;:::-;3734:74;;3689:129;3857:3;3884:63;3939:7;3930:6;3919:9;3915:22;3884:63;:::i;:::-;3874:73;;3828:129;2993:971;;;;;;;;:::o;3970:118::-;4057:24;4075:5;4057:24;:::i;:::-;4052:3;4045:37;3970:118;;:::o;4094:189::-;4210:66;4270:5;4210:66;:::i;:::-;4205:3;4198:79;4094:189;;:::o;4289:364::-;4377:3;4405:39;4438:5;4405:39;:::i;:::-;4460:71;4524:6;4519:3;4460:71;:::i;:::-;4453:78;;4540:52;4585:6;4580:3;4573:4;4566:5;4562:16;4540:52;:::i;:::-;4617:29;4639:6;4617:29;:::i;:::-;4612:3;4608:39;4601:46;;4381:272;4289:364;;;;:::o;4659:377::-;4765:3;4793:39;4826:5;4793:39;:::i;:::-;4848:89;4930:6;4925:3;4848:89;:::i;:::-;4841:96;;4946:52;4991:6;4986:3;4979:4;4972:5;4968:16;4946:52;:::i;:::-;5023:6;5018:3;5014:16;5007:23;;4769:267;4659:377;;;;:::o;5042:366::-;5184:3;5205:67;5269:2;5264:3;5205:67;:::i;:::-;5198:74;;5281:93;5370:3;5281:93;:::i;:::-;5399:2;5394:3;5390:12;5383:19;;5042:366;;;:::o;5414:::-;5556:3;5577:67;5641:2;5636:3;5577:67;:::i;:::-;5570:74;;5653:93;5742:3;5653:93;:::i;:::-;5771:2;5766:3;5762:12;5755:19;;5414:366;;;:::o;5786:::-;5928:3;5949:67;6013:2;6008:3;5949:67;:::i;:::-;5942:74;;6025:93;6114:3;6025:93;:::i;:::-;6143:2;6138:3;6134:12;6127:19;;5786:366;;;:::o;6158:118::-;6245:24;6263:5;6245:24;:::i;:::-;6240:3;6233:37;6158:118;;:::o;6282:275::-;6414:3;6436:95;6527:3;6518:6;6436:95;:::i;:::-;6429:102;;6548:3;6541:10;;6282:275;;;;:::o;6563:222::-;6656:4;6694:2;6683:9;6679:18;6671:26;;6707:71;6775:1;6764:9;6760:17;6751:6;6707:71;:::i;:::-;6563:222;;;;:::o;6791:591::-;6989:4;7027:2;7016:9;7012:18;7004:26;;7076:9;7070:4;7066:20;7062:1;7051:9;7047:17;7040:47;7104:78;7177:4;7168:6;7104:78;:::i;:::-;7096:86;;7192:72;7260:2;7249:9;7245:18;7236:6;7192:72;:::i;:::-;7274:101;7371:2;7360:9;7356:18;7347:6;7274:101;:::i;:::-;6791:591;;;;;;:::o;7388:419::-;7554:4;7592:2;7581:9;7577:18;7569:26;;7641:9;7635:4;7631:20;7627:1;7616:9;7612:17;7605:47;7669:131;7795:4;7669:131;:::i;:::-;7661:139;;7388:419;;;:::o;7813:::-;7979:4;8017:2;8006:9;8002:18;7994:26;;8066:9;8060:4;8056:20;8052:1;8041:9;8037:17;8030:47;8094:131;8220:4;8094:131;:::i;:::-;8086:139;;7813:419;;;:::o;8238:::-;8404:4;8442:2;8431:9;8427:18;8419:26;;8491:9;8485:4;8481:20;8477:1;8466:9;8462:17;8455:47;8519:131;8645:4;8519:131;:::i;:::-;8511:139;;8238:419;;;:::o;8663:222::-;8756:4;8794:2;8783:9;8779:18;8771:26;;8807:71;8875:1;8864:9;8860:17;8851:6;8807:71;:::i;:::-;8663:222;;;;:::o;8891:129::-;8925:6;8952:20;;:::i;:::-;8942:30;;8981:33;9009:4;9001:6;8981:33;:::i;:::-;8891:129;;;:::o;9026:75::-;9059:6;9092:2;9086:9;9076:19;;9026:75;:::o;9107:308::-;9169:4;9259:18;9251:6;9248:30;9245:56;;;9281:18;;:::i;:::-;9245:56;9319:29;9341:6;9319:29;:::i;:::-;9311:37;;9403:4;9397;9393:15;9385:23;;9107:308;;;:::o;9421:99::-;9473:6;9507:5;9501:12;9491:22;;9421:99;;;:::o;9526:169::-;9610:11;9644:6;9639:3;9632:19;9684:4;9679:3;9675:14;9660:29;;9526:169;;;;:::o;9701:148::-;9803:11;9840:3;9825:18;;9701:148;;;;:::o;9855:96::-;9892:7;9921:24;9939:5;9921:24;:::i;:::-;9910:35;;9855:96;;;:::o;9957:76::-;9993:7;10022:5;10011:16;;9957:76;;;:::o;10039:126::-;10076:7;10116:42;10109:5;10105:54;10094:65;;10039:126;;;:::o;10171:77::-;10208:7;10237:5;10226:16;;10171:77;;;:::o;10254:105::-;10290:7;10330:22;10323:5;10319:34;10308:45;;10254:105;;;:::o;10365:155::-;10444:9;10477:37;10508:5;10477:37;:::i;:::-;10464:50;;10365:155;;;:::o;10526:126::-;10576:9;10609:37;10640:5;10609:37;:::i;:::-;10596:50;;10526:126;;;:::o;10658:113::-;10708:9;10741:24;10759:5;10741:24;:::i;:::-;10728:37;;10658:113;;;:::o;10777:154::-;10861:6;10856:3;10851;10838:30;10923:1;10914:6;10909:3;10905:16;10898:27;10777:154;;;:::o;10937:307::-;11005:1;11015:113;11029:6;11026:1;11023:13;11015:113;;;11114:1;11109:3;11105:11;11099:18;11095:1;11090:3;11086:11;11079:39;11051:2;11048:1;11044:10;11039:15;;11015:113;;;11146:6;11143:1;11140:13;11137:101;;;11226:1;11217:6;11212:3;11208:16;11201:27;11137:101;10986:258;10937:307;;;:::o;11250:320::-;11294:6;11331:1;11325:4;11321:12;11311:22;;11378:1;11372:4;11368:12;11399:18;11389:81;;11455:4;11447:6;11443:17;11433:27;;11389:81;11517:2;11509:6;11506:14;11486:18;11483:38;11480:84;;;11536:18;;:::i;:::-;11480:84;11301:269;11250:320;;;:::o;11576:281::-;11659:27;11681:4;11659:27;:::i;:::-;11651:6;11647:40;11789:6;11777:10;11774:22;11753:18;11741:10;11738:34;11735:62;11732:88;;;11800:18;;:::i;:::-;11732:88;11840:10;11836:2;11829:22;11619:238;11576:281;;:::o;11863:233::-;11902:3;11925:24;11943:5;11925:24;:::i;:::-;11916:33;;11971:66;11964:5;11961:77;11958:103;;;12041:18;;:::i;:::-;11958:103;12088:1;12081:5;12077:13;12070:20;;11863:233;;;:::o;12102:180::-;12150:77;12147:1;12140:88;12247:4;12244:1;12237:15;12271:4;12268:1;12261:15;12288:180;12336:77;12333:1;12326:88;12433:4;12430:1;12423:15;12457:4;12454:1;12447:15;12474:180;12522:77;12519:1;12512:88;12619:4;12616:1;12609:15;12643:4;12640:1;12633:15;12660:180;12708:77;12705:1;12698:88;12805:4;12802:1;12795:15;12829:4;12826:1;12819:15;12846:117;12955:1;12952;12945:12;12969:117;13078:1;13075;13068:12;13092:117;13201:1;13198;13191:12;13215:117;13324:1;13321;13314:12;13338:102;13379:6;13430:2;13426:7;13421:2;13414:5;13410:14;13406:28;13396:38;;13338:102;;;:::o;13446:225::-;13586:34;13582:1;13574:6;13570:14;13563:58;13655:8;13650:2;13642:6;13638:15;13631:33;13446:225;:::o;13677:174::-;13817:26;13813:1;13805:6;13801:14;13794:50;13677:174;:::o;13857:182::-;13997:34;13993:1;13985:6;13981:14;13974:58;13857:182;:::o;14045:122::-;14118:24;14136:5;14118:24;:::i;:::-;14111:5;14108:35;14098:63;;14157:1;14154;14147:12;14098:63;14045:122;:::o;14173:120::-;14245:23;14262:5;14245:23;:::i;:::-;14238:5;14235:34;14225:62;;14283:1;14280;14273:12;14225:62;14173:120;:::o;14299:122::-;14372:24;14390:5;14372:24;:::i;:::-;14365:5;14362:35;14352:63;;14411:1;14408;14401:12;14352:63;14299:122;:::o;14427:120::-;14499:23;14516:5;14499:23;:::i;:::-;14492:5;14489:34;14479:62;;14537:1;14534;14527:12;14479:62;14427:120;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"996600","executionCost":"infinite","totalCost":"infinite"},"external":{"addPriceFeed(string,address,address)":"infinite","getPrice(address)":"infinite","owner()":"2588","priceFeeds(uint256)":"infinite","renounceOwnership()":"30420","transferOwnership(address)":"30835"},"internal":{"getPriceFeed(address)":"infinite"}},"methodIdentifiers":{"addPriceFeed(string,address,address)":"8c35423e","getPrice(address)":"41976e09","owner()":"8da5cb5b","priceFeeds(uint256)":"10c7f0b9","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceChecker.sol\":\"PriceChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2795,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"priceFeeds","offset":0,"slot":"1","type":"t_array(t_struct(_priceFeed)2803_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(_priceFeed)2803_storage)dyn_storage":{"base":"t_struct(_priceFeed)2803_storage","encoding":"dynamic_array","label":"struct PriceChecker._priceFeed[]","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)397":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(_priceFeed)2803_storage":{"encoding":"inplace","label":"struct PriceChecker._priceFeed","members":[{"astId":2797,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2799,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"token","offset":0,"slot":"1","type":"t_address"},{"astId":2802,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"priceFeed","offset":0,"slot":"2","type":"t_contract(AggregatorV3Interface)397"}],"numberOfBytes":"96"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TradingFees.sol":{"TradingFees":{"abi":[{"inputs":[{"internalType":"address","name":"_priceCheckerAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"aDAI","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_refToken","type":"address"},{"internalType":"uint256","name":"_fees","type":"uint256"}],"name":"amountTokensToDeduct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fees","type":"uint256"}],"name":"amountaDAIToDeduct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"address","name":"_refToken","type":"address"}],"name":"calculateFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fees","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"checkSufficientaDAI","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"daiToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_PriceCheckeraddress","type":"address"}],"name":"setPriceCheckerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_Walletaddress","type":"address"}],"name":"setWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3001":{"entryPoint":null,"id":3001,"parameterSlots":1,"returnSlots":0},"@_421":{"entryPoint":null,"id":421,"parameterSlots":0,"returnSlots":0},"@_msgSender_625":{"entryPoint":341,"id":625,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":349,"id":509,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":568,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":618,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":638,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":670,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":675,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:17","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:17","statements":[{"nodeType":"YulAssignment","src":"80:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:17"},"nodeType":"YulFunctionCall","src":"89:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:17"},"nodeType":"YulFunctionCall","src":"111:33:17"},"nodeType":"YulExpressionStatement","src":"111:33:17"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:17","type":""}],"src":"7:143:17"},{"body":{"nodeType":"YulBlock","src":"233:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"279:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"281:77:17"},"nodeType":"YulFunctionCall","src":"281:79:17"},"nodeType":"YulExpressionStatement","src":"281:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:17"},"nodeType":"YulFunctionCall","src":"250:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:17"},"nodeType":"YulFunctionCall","src":"246:32:17"},"nodeType":"YulIf","src":"243:119:17"},{"nodeType":"YulBlock","src":"372:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"387:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"401:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"391:6:17","type":""}]},{"nodeType":"YulAssignment","src":"416:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:17"},"nodeType":"YulFunctionCall","src":"458:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"426:31:17"},"nodeType":"YulFunctionCall","src":"426:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:17"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:17","type":""}],"src":"156:351:17"},{"body":{"nodeType":"YulBlock","src":"553:35:17","statements":[{"nodeType":"YulAssignment","src":"563:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"579:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"573:5:17"},"nodeType":"YulFunctionCall","src":"573:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"563:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"546:6:17","type":""}],"src":"513:75:17"},{"body":{"nodeType":"YulBlock","src":"639:51:17","statements":[{"nodeType":"YulAssignment","src":"649:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"678:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"660:17:17"},"nodeType":"YulFunctionCall","src":"660:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"649:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"621:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"631:7:17","type":""}],"src":"594:96:17"},{"body":{"nodeType":"YulBlock","src":"741:81:17","statements":[{"nodeType":"YulAssignment","src":"751:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"766:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"773:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"762:3:17"},"nodeType":"YulFunctionCall","src":"762:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"751:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"723:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"733:7:17","type":""}],"src":"696:126:17"},{"body":{"nodeType":"YulBlock","src":"917:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"934:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"937:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"927:6:17"},"nodeType":"YulFunctionCall","src":"927:12:17"},"nodeType":"YulExpressionStatement","src":"927:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"828:117:17"},{"body":{"nodeType":"YulBlock","src":"1040:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1057:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1060:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1050:6:17"},"nodeType":"YulFunctionCall","src":"1050:12:17"},"nodeType":"YulExpressionStatement","src":"1050:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"951:117:17"},{"body":{"nodeType":"YulBlock","src":"1117:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1174:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1186:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1176:6:17"},"nodeType":"YulFunctionCall","src":"1176:12:17"},"nodeType":"YulExpressionStatement","src":"1176:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1140:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1165:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1147:17:17"},"nodeType":"YulFunctionCall","src":"1147:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1137:2:17"},"nodeType":"YulFunctionCall","src":"1137:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1130:6:17"},"nodeType":"YulFunctionCall","src":"1130:43:17"},"nodeType":"YulIf","src":"1127:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1110:5:17","type":""}],"src":"1074:122:17"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052670de0b6b3a764000060015573ba8dced3512925e52fe67b1b5329187589072a55600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073add98b0342e4094ec32f3b67ccfd3242c876ff7a600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015620000c757600080fd5b506040516200113f3803806200113f8339818101604052810190620000ed919062000238565b6200010d620001016200015560201b60201c565b6200015d60201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002bd565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200023281620002a3565b92915050565b6000602082840312156200025157620002506200029e565b5b6000620002618482850162000221565b91505092915050565b600062000277826200027e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002ae816200026a565b8114620002ba57600080fd5b50565b610e7280620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ac1a386a11610071578063ac1a386a14610154578063b136e39a14610170578063b98ee4191461018c578063be22f546146101bc578063ca8963f1146101da578063f2fde38b1461020a576100a9565b80631a38a4fb146100ae578063513ffedd146100cc578063715018a6146100fc5780638da5cb5b14610106578063a42963e914610124575b600080fd5b6100b6610226565b6040516100c39190610b95565b60405180910390f35b6100e660048036038101906100e19190610acf565b61024c565b6040516100f39190610c34565b60405180910390f35b61010461038a565b005b61010e61039e565b60405161011b9190610b95565b60405180910390f35b61013e60048036038101906101399190610a35565b6103c7565b60405161014b9190610c34565b60405180910390f35b61016e600480360381019061016991906109c8565b6104e5565b005b61018a600480360381019061018591906109c8565b610531565b005b6101a660048036038101906101a191906109f5565b61057d565b6040516101b39190610c34565b60405180910390f35b6101c461067a565b6040516101d19190610b95565b60405180910390f35b6101f460048036038101906101ef9190610a8f565b6106a0565b6040516102019190610bd9565b60405180910390f35b610224600480360381019061021f91906109c8565b61078f565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09846040518263ffffffff1660e01b81526004016102aa9190610b95565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610a62565b9050600061036260015461035461031f6402540be4008661081390919063ffffffff16565b6103466001546103388b8d61081390919063ffffffff16565b61082990919063ffffffff16565b61081390919063ffffffff16565b61082990919063ffffffff16565b9050600061037b6127108361082990919063ffffffff16565b90508093505050509392505050565b61039261083f565b61039c60006108bd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104479190610b95565b60206040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610a62565b905060006104d96104b66402540be4008461081390919063ffffffff16565b6104cb6001548761081390919063ffffffff16565b61082990919063ffffffff16565b90508092505050919050565b6104ed61083f565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61053961083f565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09856040518263ffffffff1660e01b81526004016105db9190610b95565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610a62565b9050600061066d61064a6402540be4008461081390919063ffffffff16565b61065f6001548761081390919063ffffffff16565b61082990919063ffffffff16565b9050809250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ac846103c7565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd5d767c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b815260040161072f929190610bb0565b60206040518083038186803b15801561074757600080fd5b505afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610a62565b9050818110159250505092915050565b61079761083f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90610bf4565b60405180910390fd5b610810816108bd565b50565b600081836108219190610c91565b905092915050565b600081836108379190610c60565b905092915050565b610847610981565b73ffffffffffffffffffffffffffffffffffffffff1661086561039e565b73ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610c14565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061099881610e0e565b92915050565b6000813590506109ad81610e25565b92915050565b6000815190506109c281610e25565b92915050565b6000602082840312156109de576109dd610d91565b5b60006109ec84828501610989565b91505092915050565b60008060408385031215610a0c57610a0b610d91565b5b6000610a1a85828601610989565b9250506020610a2b8582860161099e565b9150509250929050565b600060208284031215610a4b57610a4a610d91565b5b6000610a598482850161099e565b91505092915050565b600060208284031215610a7857610a77610d91565b5b6000610a86848285016109b3565b91505092915050565b60008060408385031215610aa657610aa5610d91565b5b6000610ab48582860161099e565b9250506020610ac585828601610989565b9150509250929050565b600080600060608486031215610ae857610ae7610d91565b5b6000610af68682870161099e565b9350506020610b078682870161099e565b9250506040610b1886828701610989565b9150509250925092565b610b2b81610ceb565b82525050565b610b3a81610cfd565b82525050565b6000610b4d602683610c4f565b9150610b5882610d96565b604082019050919050565b6000610b70602083610c4f565b9150610b7b82610de5565b602082019050919050565b610b8f81610d29565b82525050565b6000602082019050610baa6000830184610b22565b92915050565b6000604082019050610bc56000830185610b22565b610bd26020830184610b22565b9392505050565b6000602082019050610bee6000830184610b31565b92915050565b60006020820190508181036000830152610c0d81610b40565b9050919050565b60006020820190508181036000830152610c2d81610b63565b9050919050565b6000602082019050610c496000830184610b86565b92915050565b600082825260208201905092915050565b6000610c6b82610d29565b9150610c7683610d29565b925082610c8657610c85610d62565b5b828204905092915050565b6000610c9c82610d29565b9150610ca783610d29565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce057610cdf610d33565b5b828202905092915050565b6000610cf682610d09565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e1781610ceb565b8114610e2257600080fd5b50565b610e2e81610d29565b8114610e3957600080fd5b5056fea2646970667358221220d9cc0c189efe9735508c9ba7f47eac9516fcdeeeac0e2b246e46c4e4ca6fc3ac64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SSTORE PUSH20 0xBA8DCED3512925E52FE67B1B5329187589072A55 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xADD98B0342E4094EC32F3B67CCFD3242C876FF7A PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x113F CODESIZE SUB DUP1 PUSH3 0x113F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xED SWAP2 SWAP1 PUSH3 0x238 JUMP JUMPDEST PUSH3 0x10D PUSH3 0x101 PUSH3 0x155 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x15D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x29E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x261 DUP5 DUP3 DUP6 ADD PUSH3 0x221 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x277 DUP3 PUSH3 0x27E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2AE DUP2 PUSH3 0x26A JUMP JUMPDEST DUP2 EQ PUSH3 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE72 DUP1 PUSH3 0x2CD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC1A386A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xB98EE419 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xCA8963F1 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x513FFEDD EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA42963E9 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x362 PUSH1 0x1 SLOAD PUSH2 0x354 PUSH2 0x31F PUSH5 0x2540BE400 DUP7 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x346 PUSH1 0x1 SLOAD PUSH2 0x338 DUP12 DUP14 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37B PUSH2 0x2710 DUP4 PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x39C PUSH1 0x0 PUSH2 0x8BD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 PUSH2 0x4B6 PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4CB PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x539 PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x66D PUSH2 0x64A PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x65F PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6AC DUP5 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD5D767C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x847 PUSH2 0x981 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x865 PUSH2 0x39E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9AD DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C2 DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2B DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP3 DUP6 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA77 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA86 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB4 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC5 DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF6 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB07 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB18 DUP7 DUP3 DUP8 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D PUSH1 0x26 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB58 DUP3 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 PUSH1 0x20 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB7B DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0xBD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0D DUP2 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6B DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xC76 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xD62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCDF PUSH2 0xD33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF6 DUP3 PUSH2 0xD09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE2E DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP2 EQ PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xCC 0xC XOR SWAP15 INVALID SWAP8 CALLDATALOAD POP DUP13 SWAP12 0xA7 DELEGATECALL PUSH31 0xAC9516FCDEEEAC0E2B246E46C4E4CA6FC3AC64736F6C634300080700330000 ","sourceMap":"382:2973:10:-:0;;;1009:8;990:27;;1067:42;1024:86;;;;;;;;;;;;;;;;;;;;1172:42;1142:73;;;;;;;;;;;;;;;;;;;;1306:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1384:20:10;1359:9;;:46;;;;;;;;;;;;;;;;;;1306:107;382:2973;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:17:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;382:2973:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_452":{"entryPoint":2111,"id":452,"parameterSlots":0,"returnSlots":0},"@_msgSender_625":{"entryPoint":2433,"id":625,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":2237,"id":509,"parameterSlots":1,"returnSlots":0},"@aDAI_2983":{"entryPoint":550,"id":2983,"parameterSlots":0,"returnSlots":0},"@amountTokensToDeduct_3127":{"entryPoint":1405,"id":3127,"parameterSlots":2,"returnSlots":1},"@amountaDAIToDeduct_3090":{"entryPoint":967,"id":3090,"parameterSlots":1,"returnSlots":1},"@calculateFees_3055":{"entryPoint":588,"id":3055,"parameterSlots":3,"returnSlots":1},"@checkSufficientaDAI_3155":{"entryPoint":1696,"id":3155,"parameterSlots":2,"returnSlots":1},"@daiToken_2977":{"entryPoint":1658,"id":2977,"parameterSlots":0,"returnSlots":0},"@div_856":{"entryPoint":2089,"id":856,"parameterSlots":2,"returnSlots":1},"@mul_841":{"entryPoint":2067,"id":841,"parameterSlots":2,"returnSlots":1},"@owner_438":{"entryPoint":926,"id":438,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_466":{"entryPoint":906,"id":466,"parameterSlots":0,"returnSlots":0},"@setPriceCheckerAddress_3183":{"entryPoint":1329,"id":3183,"parameterSlots":1,"returnSlots":0},"@setWalletAddress_3169":{"entryPoint":1253,"id":3169,"parameterSlots":1,"returnSlots":0},"@transferOwnership_489":{"entryPoint":1935,"id":489,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2549,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":2703,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_address":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2850,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2865,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":2915,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2950,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":2992,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3060,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3124,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3168,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3217,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3307,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3325,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3337,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3369,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3379,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3426,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3473,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":3478,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3557,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3598,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3621,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8529:17","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:17","statements":[{"nodeType":"YulAssignment","src":"69:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:17"},"nodeType":"YulFunctionCall","src":"78:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:17"},"nodeType":"YulFunctionCall","src":"107:33:17"},"nodeType":"YulExpressionStatement","src":"107:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:17","type":""}],"src":"7:139:17"},{"body":{"nodeType":"YulBlock","src":"204:87:17","statements":[{"nodeType":"YulAssignment","src":"214:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:17"},"nodeType":"YulFunctionCall","src":"223:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:17"},"nodeType":"YulFunctionCall","src":"252:33:17"},"nodeType":"YulExpressionStatement","src":"252:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:17","type":""}],"src":"152:139:17"},{"body":{"nodeType":"YulBlock","src":"360:80:17","statements":[{"nodeType":"YulAssignment","src":"370:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"385:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"379:5:17"},"nodeType":"YulFunctionCall","src":"379:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"370:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"428:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"401:26:17"},"nodeType":"YulFunctionCall","src":"401:33:17"},"nodeType":"YulExpressionStatement","src":"401:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"338:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"346:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"354:5:17","type":""}],"src":"297:143:17"},{"body":{"nodeType":"YulBlock","src":"512:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"558:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"560:77:17"},"nodeType":"YulFunctionCall","src":"560:79:17"},"nodeType":"YulExpressionStatement","src":"560:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"533:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"542:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"529:3:17"},"nodeType":"YulFunctionCall","src":"529:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"554:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"525:3:17"},"nodeType":"YulFunctionCall","src":"525:32:17"},"nodeType":"YulIf","src":"522:119:17"},{"nodeType":"YulBlock","src":"651:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"666:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"670:6:17","type":""}]},{"nodeType":"YulAssignment","src":"695:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"730:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"741:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:17"},"nodeType":"YulFunctionCall","src":"726:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"750:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"705:20:17"},"nodeType":"YulFunctionCall","src":"705:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"695:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"482:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"493:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"505:6:17","type":""}],"src":"446:329:17"},{"body":{"nodeType":"YulBlock","src":"864:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"910:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"912:77:17"},"nodeType":"YulFunctionCall","src":"912:79:17"},"nodeType":"YulExpressionStatement","src":"912:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"885:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"894:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"881:3:17"},"nodeType":"YulFunctionCall","src":"881:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"906:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"877:3:17"},"nodeType":"YulFunctionCall","src":"877:32:17"},"nodeType":"YulIf","src":"874:119:17"},{"nodeType":"YulBlock","src":"1003:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1018:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1032:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1022:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1047:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1082:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1093:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1078:3:17"},"nodeType":"YulFunctionCall","src":"1078:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1102:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1057:20:17"},"nodeType":"YulFunctionCall","src":"1057:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1047:6:17"}]}]},{"nodeType":"YulBlock","src":"1130:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1145:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1159:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1149:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1175:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1210:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1221:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1206:3:17"},"nodeType":"YulFunctionCall","src":"1206:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1230:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1185:20:17"},"nodeType":"YulFunctionCall","src":"1185:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1175:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"826:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"837:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"849:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"857:6:17","type":""}],"src":"781:474:17"},{"body":{"nodeType":"YulBlock","src":"1327:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"1373:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1375:77:17"},"nodeType":"YulFunctionCall","src":"1375:79:17"},"nodeType":"YulExpressionStatement","src":"1375:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1348:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1344:3:17"},"nodeType":"YulFunctionCall","src":"1344:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1369:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1340:3:17"},"nodeType":"YulFunctionCall","src":"1340:32:17"},"nodeType":"YulIf","src":"1337:119:17"},{"nodeType":"YulBlock","src":"1466:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1481:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1495:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1485:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1510:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1545:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1556:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1541:3:17"},"nodeType":"YulFunctionCall","src":"1541:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1565:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1520:20:17"},"nodeType":"YulFunctionCall","src":"1520:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1510:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1297:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1308:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1320:6:17","type":""}],"src":"1261:329:17"},{"body":{"nodeType":"YulBlock","src":"1673:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"1719:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1721:77:17"},"nodeType":"YulFunctionCall","src":"1721:79:17"},"nodeType":"YulExpressionStatement","src":"1721:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1694:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1703:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1690:3:17"},"nodeType":"YulFunctionCall","src":"1690:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1715:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1686:3:17"},"nodeType":"YulFunctionCall","src":"1686:32:17"},"nodeType":"YulIf","src":"1683:119:17"},{"nodeType":"YulBlock","src":"1812:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1827:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1841:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1831:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1856:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1902:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1913:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:17"},"nodeType":"YulFunctionCall","src":"1898:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1922:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1866:31:17"},"nodeType":"YulFunctionCall","src":"1866:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1856:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1643:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1654:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1666:6:17","type":""}],"src":"1596:351:17"},{"body":{"nodeType":"YulBlock","src":"2036:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"2082:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2084:77:17"},"nodeType":"YulFunctionCall","src":"2084:79:17"},"nodeType":"YulExpressionStatement","src":"2084:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2057:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2066:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2053:3:17"},"nodeType":"YulFunctionCall","src":"2053:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2078:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2049:3:17"},"nodeType":"YulFunctionCall","src":"2049:32:17"},"nodeType":"YulIf","src":"2046:119:17"},{"nodeType":"YulBlock","src":"2175:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2190:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2204:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2194:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2219:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2254:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2265:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2250:3:17"},"nodeType":"YulFunctionCall","src":"2250:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2274:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2229:20:17"},"nodeType":"YulFunctionCall","src":"2229:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2219:6:17"}]}]},{"nodeType":"YulBlock","src":"2302:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2317:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2331:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2321:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2347:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:17"},"nodeType":"YulFunctionCall","src":"2378:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2402:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2357:20:17"},"nodeType":"YulFunctionCall","src":"2357:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2347:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1998:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2009:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2021:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2029:6:17","type":""}],"src":"1953:474:17"},{"body":{"nodeType":"YulBlock","src":"2533:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"2579:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2581:77:17"},"nodeType":"YulFunctionCall","src":"2581:79:17"},"nodeType":"YulExpressionStatement","src":"2581:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2554:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2563:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2550:3:17"},"nodeType":"YulFunctionCall","src":"2550:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2575:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2546:3:17"},"nodeType":"YulFunctionCall","src":"2546:32:17"},"nodeType":"YulIf","src":"2543:119:17"},{"nodeType":"YulBlock","src":"2672:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2687:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2701:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2691:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2716:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2751:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2762:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2747:3:17"},"nodeType":"YulFunctionCall","src":"2747:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2771:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2726:20:17"},"nodeType":"YulFunctionCall","src":"2726:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2716:6:17"}]}]},{"nodeType":"YulBlock","src":"2799:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2814:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2828:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2818:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2844:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2879:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2890:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2875:3:17"},"nodeType":"YulFunctionCall","src":"2875:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2899:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2854:20:17"},"nodeType":"YulFunctionCall","src":"2854:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2844:6:17"}]}]},{"nodeType":"YulBlock","src":"2927:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2942:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2956:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2946:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2972:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3007:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3018:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3003:3:17"},"nodeType":"YulFunctionCall","src":"3003:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3027:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2982:20:17"},"nodeType":"YulFunctionCall","src":"2982:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2972:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2487:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2498:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2510:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2518:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2526:6:17","type":""}],"src":"2433:619:17"},{"body":{"nodeType":"YulBlock","src":"3123:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3140:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3163:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3145:17:17"},"nodeType":"YulFunctionCall","src":"3145:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3133:6:17"},"nodeType":"YulFunctionCall","src":"3133:37:17"},"nodeType":"YulExpressionStatement","src":"3133:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3111:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3118:3:17","type":""}],"src":"3058:118:17"},{"body":{"nodeType":"YulBlock","src":"3241:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3258:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3278:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3263:14:17"},"nodeType":"YulFunctionCall","src":"3263:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3251:6:17"},"nodeType":"YulFunctionCall","src":"3251:34:17"},"nodeType":"YulExpressionStatement","src":"3251:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3229:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3236:3:17","type":""}],"src":"3182:109:17"},{"body":{"nodeType":"YulBlock","src":"3443:220:17","statements":[{"nodeType":"YulAssignment","src":"3453:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3519:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3524:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3460:58:17"},"nodeType":"YulFunctionCall","src":"3460:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3453:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3625:3:17"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"3536:88:17"},"nodeType":"YulFunctionCall","src":"3536:93:17"},"nodeType":"YulExpressionStatement","src":"3536:93:17"},{"nodeType":"YulAssignment","src":"3638:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3649:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3654:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3645:3:17"},"nodeType":"YulFunctionCall","src":"3645:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3638:3:17"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3431:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3439:3:17","type":""}],"src":"3297:366:17"},{"body":{"nodeType":"YulBlock","src":"3815:220:17","statements":[{"nodeType":"YulAssignment","src":"3825:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3891:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3896:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3832:58:17"},"nodeType":"YulFunctionCall","src":"3832:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3825:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3997:3:17"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"3908:88:17"},"nodeType":"YulFunctionCall","src":"3908:93:17"},"nodeType":"YulExpressionStatement","src":"3908:93:17"},{"nodeType":"YulAssignment","src":"4010:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4021:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4026:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4017:3:17"},"nodeType":"YulFunctionCall","src":"4017:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4010:3:17"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3803:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3811:3:17","type":""}],"src":"3669:366:17"},{"body":{"nodeType":"YulBlock","src":"4106:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4123:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4146:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4128:17:17"},"nodeType":"YulFunctionCall","src":"4128:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4116:6:17"},"nodeType":"YulFunctionCall","src":"4116:37:17"},"nodeType":"YulExpressionStatement","src":"4116:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4094:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4101:3:17","type":""}],"src":"4041:118:17"},{"body":{"nodeType":"YulBlock","src":"4263:124:17","statements":[{"nodeType":"YulAssignment","src":"4273:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4285:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4296:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4281:3:17"},"nodeType":"YulFunctionCall","src":"4281:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4273:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4353:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4366:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4377:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4362:3:17"},"nodeType":"YulFunctionCall","src":"4362:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4309:43:17"},"nodeType":"YulFunctionCall","src":"4309:71:17"},"nodeType":"YulExpressionStatement","src":"4309:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4235:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4247:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4258:4:17","type":""}],"src":"4165:222:17"},{"body":{"nodeType":"YulBlock","src":"4519:206:17","statements":[{"nodeType":"YulAssignment","src":"4529:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4541:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4552:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4537:3:17"},"nodeType":"YulFunctionCall","src":"4537:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4529:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4609:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4622:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4633:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4618:3:17"},"nodeType":"YulFunctionCall","src":"4618:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4565:43:17"},"nodeType":"YulFunctionCall","src":"4565:71:17"},"nodeType":"YulExpressionStatement","src":"4565:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4690:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4703:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4714:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4699:3:17"},"nodeType":"YulFunctionCall","src":"4699:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4646:43:17"},"nodeType":"YulFunctionCall","src":"4646:72:17"},"nodeType":"YulExpressionStatement","src":"4646:72:17"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4483:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4495:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4503:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4514:4:17","type":""}],"src":"4393:332:17"},{"body":{"nodeType":"YulBlock","src":"4823:118:17","statements":[{"nodeType":"YulAssignment","src":"4833:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4845:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4856:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4841:3:17"},"nodeType":"YulFunctionCall","src":"4841:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4833:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4907:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4931:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:17"},"nodeType":"YulFunctionCall","src":"4916:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4869:37:17"},"nodeType":"YulFunctionCall","src":"4869:65:17"},"nodeType":"YulExpressionStatement","src":"4869:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4795:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4807:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4818:4:17","type":""}],"src":"4731:210:17"},{"body":{"nodeType":"YulBlock","src":"5118:248:17","statements":[{"nodeType":"YulAssignment","src":"5128:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5140:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5151:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5136:3:17"},"nodeType":"YulFunctionCall","src":"5136:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5128:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5175:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5186:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5171:3:17"},"nodeType":"YulFunctionCall","src":"5171:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5194:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5200:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5190:3:17"},"nodeType":"YulFunctionCall","src":"5190:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5164:6:17"},"nodeType":"YulFunctionCall","src":"5164:47:17"},"nodeType":"YulExpressionStatement","src":"5164:47:17"},{"nodeType":"YulAssignment","src":"5220:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5354:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5228:124:17"},"nodeType":"YulFunctionCall","src":"5228:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5220:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5098:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5113:4:17","type":""}],"src":"4947:419:17"},{"body":{"nodeType":"YulBlock","src":"5543:248:17","statements":[{"nodeType":"YulAssignment","src":"5553:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5565:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5576:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5561:3:17"},"nodeType":"YulFunctionCall","src":"5561:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5553:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5600:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5611:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5596:3:17"},"nodeType":"YulFunctionCall","src":"5596:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5619:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5625:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5615:3:17"},"nodeType":"YulFunctionCall","src":"5615:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5589:6:17"},"nodeType":"YulFunctionCall","src":"5589:47:17"},"nodeType":"YulExpressionStatement","src":"5589:47:17"},{"nodeType":"YulAssignment","src":"5645:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5779:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5653:124:17"},"nodeType":"YulFunctionCall","src":"5653:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5645:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5523:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5538:4:17","type":""}],"src":"5372:419:17"},{"body":{"nodeType":"YulBlock","src":"5895:124:17","statements":[{"nodeType":"YulAssignment","src":"5905:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5917:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5928:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5913:3:17"},"nodeType":"YulFunctionCall","src":"5913:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5905:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5985:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5998:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6009:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5994:3:17"},"nodeType":"YulFunctionCall","src":"5994:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5941:43:17"},"nodeType":"YulFunctionCall","src":"5941:71:17"},"nodeType":"YulExpressionStatement","src":"5941:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5867:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5879:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5890:4:17","type":""}],"src":"5797:222:17"},{"body":{"nodeType":"YulBlock","src":"6065:35:17","statements":[{"nodeType":"YulAssignment","src":"6075:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6091:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6085:5:17"},"nodeType":"YulFunctionCall","src":"6085:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6075:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6058:6:17","type":""}],"src":"6025:75:17"},{"body":{"nodeType":"YulBlock","src":"6202:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6219:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6224:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6212:6:17"},"nodeType":"YulFunctionCall","src":"6212:19:17"},"nodeType":"YulExpressionStatement","src":"6212:19:17"},{"nodeType":"YulAssignment","src":"6240:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6259:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6264:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6255:3:17"},"nodeType":"YulFunctionCall","src":"6255:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6240:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6174:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"6179:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6190:11:17","type":""}],"src":"6106:169:17"},{"body":{"nodeType":"YulBlock","src":"6323:143:17","statements":[{"nodeType":"YulAssignment","src":"6333:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6356:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6338:17:17"},"nodeType":"YulFunctionCall","src":"6338:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6333:1:17"}]},{"nodeType":"YulAssignment","src":"6367:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6390:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6372:17:17"},"nodeType":"YulFunctionCall","src":"6372:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6367:1:17"}]},{"body":{"nodeType":"YulBlock","src":"6414:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6416:16:17"},"nodeType":"YulFunctionCall","src":"6416:18:17"},"nodeType":"YulExpressionStatement","src":"6416:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6411:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6404:6:17"},"nodeType":"YulFunctionCall","src":"6404:9:17"},"nodeType":"YulIf","src":"6401:35:17"},{"nodeType":"YulAssignment","src":"6446:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6455:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"6458:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6451:3:17"},"nodeType":"YulFunctionCall","src":"6451:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6446:1:17"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6312:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"6315:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6321:1:17","type":""}],"src":"6281:185:17"},{"body":{"nodeType":"YulBlock","src":"6520:300:17","statements":[{"nodeType":"YulAssignment","src":"6530:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6553:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6535:17:17"},"nodeType":"YulFunctionCall","src":"6535:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6530:1:17"}]},{"nodeType":"YulAssignment","src":"6564:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6587:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6569:17:17"},"nodeType":"YulFunctionCall","src":"6569:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6564:1:17"}]},{"body":{"nodeType":"YulBlock","src":"6762:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6764:16:17"},"nodeType":"YulFunctionCall","src":"6764:18:17"},"nodeType":"YulExpressionStatement","src":"6764:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6674:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6667:6:17"},"nodeType":"YulFunctionCall","src":"6667:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6660:6:17"},"nodeType":"YulFunctionCall","src":"6660:17:17"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6682:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6689:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"6757:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6685:3:17"},"nodeType":"YulFunctionCall","src":"6685:74:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6679:2:17"},"nodeType":"YulFunctionCall","src":"6679:81:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6656:3:17"},"nodeType":"YulFunctionCall","src":"6656:105:17"},"nodeType":"YulIf","src":"6653:131:17"},{"nodeType":"YulAssignment","src":"6794:20:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6809:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"6812:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6805:3:17"},"nodeType":"YulFunctionCall","src":"6805:9:17"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6794:7:17"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6503:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"6506:1:17","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6512:7:17","type":""}],"src":"6472:348:17"},{"body":{"nodeType":"YulBlock","src":"6871:51:17","statements":[{"nodeType":"YulAssignment","src":"6881:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6910:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6892:17:17"},"nodeType":"YulFunctionCall","src":"6892:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6881:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6853:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6863:7:17","type":""}],"src":"6826:96:17"},{"body":{"nodeType":"YulBlock","src":"6970:48:17","statements":[{"nodeType":"YulAssignment","src":"6980:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7005:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6998:6:17"},"nodeType":"YulFunctionCall","src":"6998:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6991:6:17"},"nodeType":"YulFunctionCall","src":"6991:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6980:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6952:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6962:7:17","type":""}],"src":"6928:90:17"},{"body":{"nodeType":"YulBlock","src":"7069:81:17","statements":[{"nodeType":"YulAssignment","src":"7079:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7094:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7101:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7090:3:17"},"nodeType":"YulFunctionCall","src":"7090:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7079:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7051:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7061:7:17","type":""}],"src":"7024:126:17"},{"body":{"nodeType":"YulBlock","src":"7201:32:17","statements":[{"nodeType":"YulAssignment","src":"7211:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"7222:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7211:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7183:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7193:7:17","type":""}],"src":"7156:77:17"},{"body":{"nodeType":"YulBlock","src":"7267:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7284:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7287:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7277:6:17"},"nodeType":"YulFunctionCall","src":"7277:88:17"},"nodeType":"YulExpressionStatement","src":"7277:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7381:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7384:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7374:6:17"},"nodeType":"YulFunctionCall","src":"7374:15:17"},"nodeType":"YulExpressionStatement","src":"7374:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7405:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7408:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7398:6:17"},"nodeType":"YulFunctionCall","src":"7398:15:17"},"nodeType":"YulExpressionStatement","src":"7398:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7239:180:17"},{"body":{"nodeType":"YulBlock","src":"7453:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7470:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7473:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7463:6:17"},"nodeType":"YulFunctionCall","src":"7463:88:17"},"nodeType":"YulExpressionStatement","src":"7463:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7567:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7570:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7560:6:17"},"nodeType":"YulFunctionCall","src":"7560:15:17"},"nodeType":"YulExpressionStatement","src":"7560:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7591:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7594:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7584:6:17"},"nodeType":"YulFunctionCall","src":"7584:15:17"},"nodeType":"YulExpressionStatement","src":"7584:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7425:180:17"},{"body":{"nodeType":"YulBlock","src":"7700:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7717:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7720:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7710:6:17"},"nodeType":"YulFunctionCall","src":"7710:12:17"},"nodeType":"YulExpressionStatement","src":"7710:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"7611:117:17"},{"body":{"nodeType":"YulBlock","src":"7823:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7840:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7843:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7833:6:17"},"nodeType":"YulFunctionCall","src":"7833:12:17"},"nodeType":"YulExpressionStatement","src":"7833:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"7734:117:17"},{"body":{"nodeType":"YulBlock","src":"7963:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7985:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7993:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7981:3:17"},"nodeType":"YulFunctionCall","src":"7981:14:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7997:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7974:6:17"},"nodeType":"YulFunctionCall","src":"7974:58:17"},"nodeType":"YulExpressionStatement","src":"7974:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8053:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8061:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8049:3:17"},"nodeType":"YulFunctionCall","src":"8049:15:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8066:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8042:6:17"},"nodeType":"YulFunctionCall","src":"8042:33:17"},"nodeType":"YulExpressionStatement","src":"8042:33:17"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7955:6:17","type":""}],"src":"7857:225:17"},{"body":{"nodeType":"YulBlock","src":"8194:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8216:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8224:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8212:3:17"},"nodeType":"YulFunctionCall","src":"8212:14:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8228:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8205:6:17"},"nodeType":"YulFunctionCall","src":"8205:58:17"},"nodeType":"YulExpressionStatement","src":"8205:58:17"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8186:6:17","type":""}],"src":"8088:182:17"},{"body":{"nodeType":"YulBlock","src":"8319:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"8376:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8385:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8388:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8378:6:17"},"nodeType":"YulFunctionCall","src":"8378:12:17"},"nodeType":"YulExpressionStatement","src":"8378:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8342:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8367:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8349:17:17"},"nodeType":"YulFunctionCall","src":"8349:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8339:2:17"},"nodeType":"YulFunctionCall","src":"8339:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8332:6:17"},"nodeType":"YulFunctionCall","src":"8332:43:17"},"nodeType":"YulIf","src":"8329:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8312:5:17","type":""}],"src":"8276:122:17"},{"body":{"nodeType":"YulBlock","src":"8447:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"8504:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8513:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8516:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8506:6:17"},"nodeType":"YulFunctionCall","src":"8506:12:17"},"nodeType":"YulExpressionStatement","src":"8506:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8470:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8495:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8477:17:17"},"nodeType":"YulFunctionCall","src":"8477:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8467:2:17"},"nodeType":"YulFunctionCall","src":"8467:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8460:6:17"},"nodeType":"YulFunctionCall","src":"8460:43:17"},"nodeType":"YulIf","src":"8457:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8440:5:17","type":""}],"src":"8404:122:17"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ac1a386a11610071578063ac1a386a14610154578063b136e39a14610170578063b98ee4191461018c578063be22f546146101bc578063ca8963f1146101da578063f2fde38b1461020a576100a9565b80631a38a4fb146100ae578063513ffedd146100cc578063715018a6146100fc5780638da5cb5b14610106578063a42963e914610124575b600080fd5b6100b6610226565b6040516100c39190610b95565b60405180910390f35b6100e660048036038101906100e19190610acf565b61024c565b6040516100f39190610c34565b60405180910390f35b61010461038a565b005b61010e61039e565b60405161011b9190610b95565b60405180910390f35b61013e60048036038101906101399190610a35565b6103c7565b60405161014b9190610c34565b60405180910390f35b61016e600480360381019061016991906109c8565b6104e5565b005b61018a600480360381019061018591906109c8565b610531565b005b6101a660048036038101906101a191906109f5565b61057d565b6040516101b39190610c34565b60405180910390f35b6101c461067a565b6040516101d19190610b95565b60405180910390f35b6101f460048036038101906101ef9190610a8f565b6106a0565b6040516102019190610bd9565b60405180910390f35b610224600480360381019061021f91906109c8565b61078f565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09846040518263ffffffff1660e01b81526004016102aa9190610b95565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610a62565b9050600061036260015461035461031f6402540be4008661081390919063ffffffff16565b6103466001546103388b8d61081390919063ffffffff16565b61082990919063ffffffff16565b61081390919063ffffffff16565b61082990919063ffffffff16565b9050600061037b6127108361082990919063ffffffff16565b90508093505050509392505050565b61039261083f565b61039c60006108bd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104479190610b95565b60206040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610a62565b905060006104d96104b66402540be4008461081390919063ffffffff16565b6104cb6001548761081390919063ffffffff16565b61082990919063ffffffff16565b90508092505050919050565b6104ed61083f565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61053961083f565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09856040518263ffffffff1660e01b81526004016105db9190610b95565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610a62565b9050600061066d61064a6402540be4008461081390919063ffffffff16565b61065f6001548761081390919063ffffffff16565b61082990919063ffffffff16565b9050809250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ac846103c7565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd5d767c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b815260040161072f929190610bb0565b60206040518083038186803b15801561074757600080fd5b505afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610a62565b9050818110159250505092915050565b61079761083f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90610bf4565b60405180910390fd5b610810816108bd565b50565b600081836108219190610c91565b905092915050565b600081836108379190610c60565b905092915050565b610847610981565b73ffffffffffffffffffffffffffffffffffffffff1661086561039e565b73ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610c14565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061099881610e0e565b92915050565b6000813590506109ad81610e25565b92915050565b6000815190506109c281610e25565b92915050565b6000602082840312156109de576109dd610d91565b5b60006109ec84828501610989565b91505092915050565b60008060408385031215610a0c57610a0b610d91565b5b6000610a1a85828601610989565b9250506020610a2b8582860161099e565b9150509250929050565b600060208284031215610a4b57610a4a610d91565b5b6000610a598482850161099e565b91505092915050565b600060208284031215610a7857610a77610d91565b5b6000610a86848285016109b3565b91505092915050565b60008060408385031215610aa657610aa5610d91565b5b6000610ab48582860161099e565b9250506020610ac585828601610989565b9150509250929050565b600080600060608486031215610ae857610ae7610d91565b5b6000610af68682870161099e565b9350506020610b078682870161099e565b9250506040610b1886828701610989565b9150509250925092565b610b2b81610ceb565b82525050565b610b3a81610cfd565b82525050565b6000610b4d602683610c4f565b9150610b5882610d96565b604082019050919050565b6000610b70602083610c4f565b9150610b7b82610de5565b602082019050919050565b610b8f81610d29565b82525050565b6000602082019050610baa6000830184610b22565b92915050565b6000604082019050610bc56000830185610b22565b610bd26020830184610b22565b9392505050565b6000602082019050610bee6000830184610b31565b92915050565b60006020820190508181036000830152610c0d81610b40565b9050919050565b60006020820190508181036000830152610c2d81610b63565b9050919050565b6000602082019050610c496000830184610b86565b92915050565b600082825260208201905092915050565b6000610c6b82610d29565b9150610c7683610d29565b925082610c8657610c85610d62565b5b828204905092915050565b6000610c9c82610d29565b9150610ca783610d29565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce057610cdf610d33565b5b828202905092915050565b6000610cf682610d09565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e1781610ceb565b8114610e2257600080fd5b50565b610e2e81610d29565b8114610e3957600080fd5b5056fea2646970667358221220d9cc0c189efe9735508c9ba7f47eac9516fcdeeeac0e2b246e46c4e4ca6fc3ac64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC1A386A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xB98EE419 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xCA8963F1 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x513FFEDD EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA42963E9 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x362 PUSH1 0x1 SLOAD PUSH2 0x354 PUSH2 0x31F PUSH5 0x2540BE400 DUP7 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x346 PUSH1 0x1 SLOAD PUSH2 0x338 DUP12 DUP14 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37B PUSH2 0x2710 DUP4 PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x39C PUSH1 0x0 PUSH2 0x8BD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 PUSH2 0x4B6 PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4CB PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x539 PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x66D PUSH2 0x64A PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x65F PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6AC DUP5 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD5D767C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x847 PUSH2 0x981 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x865 PUSH2 0x39E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9AD DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C2 DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2B DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP3 DUP6 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA77 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA86 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB4 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC5 DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF6 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB07 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB18 DUP7 DUP3 DUP8 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D PUSH1 0x26 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB58 DUP3 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 PUSH1 0x20 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB7B DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0xBD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0D DUP2 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6B DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xC76 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xD62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCDF PUSH2 0xD33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF6 DUP3 PUSH2 0xD09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE2E DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP2 EQ PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xCC 0xC XOR SWAP15 INVALID SWAP8 CALLDATALOAD POP DUP13 SWAP12 0xA7 DELEGATECALL PUSH31 0xAC9516FCDEEEAC0E2B246E46C4E4CA6FC3AC64736F6C634300080700330000 ","sourceMap":"382:2973:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1142:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1421:680;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2150:272:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3067:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3192:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2474:311;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1024:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2793:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1142:73:10;;;;;;;;;;;;;:::o;1421:680::-;1550:7;1797:20;1820:9;;;;;;;;;;;:18;;;1839:9;1820:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1797:52;;1880:13;1896:108;1995:8;;1911:68;1952:26;1969:8;1952:12;:16;;:26;;;;:::i;:::-;1912:34;1937:8;;1913:18;1925:5;1913:7;:11;;:18;;;;:::i;:::-;1912:24;;:34;;;;:::i;:::-;1911:40;;:68;;;;:::i;:::-;1896:98;;:108;;;;:::i;:::-;1880:124;;2015:12;2030:18;2040:7;2030:5;:9;;:18;;;;:::i;:::-;2015:33;;2068:4;2061:11;;;;;1421:680;;;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2150:272:10:-;2214:7;2234:18;2255:9;;;;;;;;;;;:18;;;2274:8;;;;;;;;;;;2255:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2234:49;;2321:11;2335:49;2359:24;2374:8;2359:10;:14;;:24;;;;:::i;:::-;2335:19;2345:8;;2335:5;:9;;:19;;;;:::i;:::-;:23;;:49;;;;:::i;:::-;2321:63;;2410:3;2395:19;;;;2150:272;;;:::o;3067:117::-;1094:13:2;:11;:13::i;:::-;3161:14:10::1;3145:6;;:31;;;;;;;;;;;;;;;;;;3067:117:::0;:::o;3192:160::-;1094:13:2;:11;:13::i;:::-;3323:20:10::1;3298:9;;:46;;;;;;;;;;;;;;;;;;3192:160:::0;:::o;2474:311::-;2584:7;2604:20;2627:9;;;;;;;;;;;:18;;;2646:9;2627:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2604:52;;2682:11;2696:51;2720:26;2737:8;2720:12;:16;;:26;;;;:::i;:::-;2696:19;2706:8;;2696:5;:9;;:19;;;;:::i;:::-;:23;;:51;;;;:::i;:::-;2682:65;;2773:3;2758:19;;;;2474:311;;;;:::o;1024:86::-;;;;;;;;;;;;;:::o;2793:266::-;2898:4;2915:14;2932:25;2951:5;2932:18;:25::i;:::-;2915:42;;2968:15;2986:6;;;;;;;;;;;:15;;;3002:4;;;;;;;;;;;3008:5;2986:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2968:46;;3045:6;3034:7;:17;;3027:24;;;;2793:266;;;;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3465:96:6:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;7:139:17:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:143::-;354:5;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;297:143;;;;:::o;446:329::-;505:6;554:2;542:9;533:7;529:23;525:32;522:119;;;560:79;;:::i;:::-;522:119;680:1;705:53;750:7;741:6;730:9;726:22;705:53;:::i;:::-;695:63;;651:117;446:329;;;;:::o;781:474::-;849:6;857;906:2;894:9;885:7;881:23;877:32;874:119;;;912:79;;:::i;:::-;874:119;1032:1;1057:53;1102:7;1093:6;1082:9;1078:22;1057:53;:::i;:::-;1047:63;;1003:117;1159:2;1185:53;1230:7;1221:6;1210:9;1206:22;1185:53;:::i;:::-;1175:63;;1130:118;781:474;;;;;:::o;1261:329::-;1320:6;1369:2;1357:9;1348:7;1344:23;1340:32;1337:119;;;1375:79;;:::i;:::-;1337:119;1495:1;1520:53;1565:7;1556:6;1545:9;1541:22;1520:53;:::i;:::-;1510:63;;1466:117;1261:329;;;;:::o;1596:351::-;1666:6;1715:2;1703:9;1694:7;1690:23;1686:32;1683:119;;;1721:79;;:::i;:::-;1683:119;1841:1;1866:64;1922:7;1913:6;1902:9;1898:22;1866:64;:::i;:::-;1856:74;;1812:128;1596:351;;;;:::o;1953:474::-;2021:6;2029;2078:2;2066:9;2057:7;2053:23;2049:32;2046:119;;;2084:79;;:::i;:::-;2046:119;2204:1;2229:53;2274:7;2265:6;2254:9;2250:22;2229:53;:::i;:::-;2219:63;;2175:117;2331:2;2357:53;2402:7;2393:6;2382:9;2378:22;2357:53;:::i;:::-;2347:63;;2302:118;1953:474;;;;;:::o;2433:619::-;2510:6;2518;2526;2575:2;2563:9;2554:7;2550:23;2546:32;2543:119;;;2581:79;;:::i;:::-;2543:119;2701:1;2726:53;2771:7;2762:6;2751:9;2747:22;2726:53;:::i;:::-;2716:63;;2672:117;2828:2;2854:53;2899:7;2890:6;2879:9;2875:22;2854:53;:::i;:::-;2844:63;;2799:118;2956:2;2982:53;3027:7;3018:6;3007:9;3003:22;2982:53;:::i;:::-;2972:63;;2927:118;2433:619;;;;;:::o;3058:118::-;3145:24;3163:5;3145:24;:::i;:::-;3140:3;3133:37;3058:118;;:::o;3182:109::-;3263:21;3278:5;3263:21;:::i;:::-;3258:3;3251:34;3182:109;;:::o;3297:366::-;3439:3;3460:67;3524:2;3519:3;3460:67;:::i;:::-;3453:74;;3536:93;3625:3;3536:93;:::i;:::-;3654:2;3649:3;3645:12;3638:19;;3297:366;;;:::o;3669:::-;3811:3;3832:67;3896:2;3891:3;3832:67;:::i;:::-;3825:74;;3908:93;3997:3;3908:93;:::i;:::-;4026:2;4021:3;4017:12;4010:19;;3669:366;;;:::o;4041:118::-;4128:24;4146:5;4128:24;:::i;:::-;4123:3;4116:37;4041:118;;:::o;4165:222::-;4258:4;4296:2;4285:9;4281:18;4273:26;;4309:71;4377:1;4366:9;4362:17;4353:6;4309:71;:::i;:::-;4165:222;;;;:::o;4393:332::-;4514:4;4552:2;4541:9;4537:18;4529:26;;4565:71;4633:1;4622:9;4618:17;4609:6;4565:71;:::i;:::-;4646:72;4714:2;4703:9;4699:18;4690:6;4646:72;:::i;:::-;4393:332;;;;;:::o;4731:210::-;4818:4;4856:2;4845:9;4841:18;4833:26;;4869:65;4931:1;4920:9;4916:17;4907:6;4869:65;:::i;:::-;4731:210;;;;:::o;4947:419::-;5113:4;5151:2;5140:9;5136:18;5128:26;;5200:9;5194:4;5190:20;5186:1;5175:9;5171:17;5164:47;5228:131;5354:4;5228:131;:::i;:::-;5220:139;;4947:419;;;:::o;5372:::-;5538:4;5576:2;5565:9;5561:18;5553:26;;5625:9;5619:4;5615:20;5611:1;5600:9;5596:17;5589:47;5653:131;5779:4;5653:131;:::i;:::-;5645:139;;5372:419;;;:::o;5797:222::-;5890:4;5928:2;5917:9;5913:18;5905:26;;5941:71;6009:1;5998:9;5994:17;5985:6;5941:71;:::i;:::-;5797:222;;;;:::o;6106:169::-;6190:11;6224:6;6219:3;6212:19;6264:4;6259:3;6255:14;6240:29;;6106:169;;;;:::o;6281:185::-;6321:1;6338:20;6356:1;6338:20;:::i;:::-;6333:25;;6372:20;6390:1;6372:20;:::i;:::-;6367:25;;6411:1;6401:35;;6416:18;;:::i;:::-;6401:35;6458:1;6455;6451:9;6446:14;;6281:185;;;;:::o;6472:348::-;6512:7;6535:20;6553:1;6535:20;:::i;:::-;6530:25;;6569:20;6587:1;6569:20;:::i;:::-;6564:25;;6757:1;6689:66;6685:74;6682:1;6679:81;6674:1;6667:9;6660:17;6656:105;6653:131;;;6764:18;;:::i;:::-;6653:131;6812:1;6809;6805:9;6794:20;;6472:348;;;;:::o;6826:96::-;6863:7;6892:24;6910:5;6892:24;:::i;:::-;6881:35;;6826:96;;;:::o;6928:90::-;6962:7;7005:5;6998:13;6991:21;6980:32;;6928:90;;;:::o;7024:126::-;7061:7;7101:42;7094:5;7090:54;7079:65;;7024:126;;;:::o;7156:77::-;7193:7;7222:5;7211:16;;7156:77;;;:::o;7239:180::-;7287:77;7284:1;7277:88;7384:4;7381:1;7374:15;7408:4;7405:1;7398:15;7425:180;7473:77;7470:1;7463:88;7570:4;7567:1;7560:15;7594:4;7591:1;7584:15;7734:117;7843:1;7840;7833:12;7857:225;7997:34;7993:1;7985:6;7981:14;7974:58;8066:8;8061:2;8053:6;8049:15;8042:33;7857:225;:::o;8088:182::-;8228:34;8224:1;8216:6;8212:14;8205:58;8088:182;:::o;8276:122::-;8349:24;8367:5;8349:24;:::i;:::-;8342:5;8339:35;8329:63;;8388:1;8385;8378:12;8329:63;8276:122;:::o;8404:::-;8477:24;8495:5;8477:24;:::i;:::-;8470:5;8467:35;8457:63;;8516:1;8513;8506:12;8457:63;8404:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"739600","executionCost":"infinite","totalCost":"infinite"},"external":{"aDAI()":"2515","amountTokensToDeduct(address,uint256)":"infinite","amountaDAIToDeduct(uint256)":"infinite","calculateFees(uint256,uint256,address)":"infinite","checkSufficientaDAI(uint256,address)":"infinite","daiToken()":"2580","owner()":"2589","renounceOwnership()":"30443","setPriceCheckerAddress(address)":"27008","setWalletAddress(address)":"26986","transferOwnership(address)":"30857"}},"methodIdentifiers":{"aDAI()":"1a38a4fb","amountTokensToDeduct(address,uint256)":"b98ee419","amountaDAIToDeduct(uint256)":"a42963e9","calculateFees(uint256,uint256,address)":"513ffedd","checkSufficientaDAI(uint256,address)":"ca8963f1","daiToken()":"be22f546","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setPriceCheckerAddress(address)":"b136e39a","setWalletAddress(address)":"ac1a386a","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceCheckerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aDAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"amountTokensToDeduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"amountaDAIToDeduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refToken\",\"type\":\"address\"}],\"name\":\"calculateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkSufficientaDAI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PriceCheckeraddress\",\"type\":\"address\"}],\"name\":\"setPriceCheckerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Walletaddress\",\"type\":\"address\"}],\"name\":\"setWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TradingFees.sol\":\"TradingFees\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(\\r\\n        address account\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(\\r\\n            currentAllowance >= subtractedValue,\\r\\n            \\\"ERC20: decreased allowance below zero\\\"\\r\\n        );\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(\\r\\n            fromBalance >= amount,\\r\\n            \\\"ERC20: transfer amount exceeds balance\\\"\\r\\n        );\\r\\n        unchecked {\\r\\n            _balances[from] = fromBalance - amount;\\r\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\r\\n            // decrementing then incrementing.\\r\\n            _balances[to] += amount;\\r\\n        }\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply += amount;\\r\\n        unchecked {\\r\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\r\\n            _balances[account] += amount;\\r\\n        }\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = accountBalance - amount;\\r\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\r\\n            _totalSupply -= amount;\\r\\n        }\\r\\n\\r\\n        emit Transfer(account, address(0), amount);\\r\\n\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(\\r\\n                currentAllowance >= amount,\\r\\n                \\\"ERC20: insufficient allowance\\\"\\r\\n            );\\r\\n            unchecked {\\r\\n                _approve(owner, spender, currentAllowance - amount);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0x98cae7e35c3cb1f12ab2eeee2506facde33e4ee4292ca6d6ebdc93a62523c256\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\\r\\n    mapping(address => mapping(address => mapping(uint256 => _Order[])))\\r\\n        public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    _Order public orderStruct;\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of USD\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event filledOrder(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 amountFilled,\\r\\n        uint256 fillRate,\\r\\n        uint256 originalRate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\r\\n        wallet = Wallet(_wallet);\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        priceChecker = PriceChecker(_priceChecker);\\r\\n    }\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    )\\r\\n        public\\r\\n        validOrder(_id, side, _tokenA, _tokenB)\\r\\n        validToken(_tokenA)\\r\\n        validToken(_tokenB)\\r\\n    {\\r\\n        uint256 _side = uint256(side);\\r\\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.exchangeUpdateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.exchangeUpdateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateFilledOrders(\\r\\n        _filledOrder memory order,\\r\\n        uint256 _side\\r\\n    ) external {\\r\\n        s_filledOrders[order.user][_side].push(order);\\r\\n\\r\\n        emit filledOrder(\\r\\n            order.id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.tokenB,\\r\\n            order.amountFilled,\\r\\n            order.fillRate,\\r\\n            order.originalRate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.feesWaived,\\r\\n            order.feesPaid\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateOrder(\\r\\n        _Order memory order,\\r\\n        uint256 _amountA,\\r\\n        uint256 _amountB,\\r\\n        uint256 _index\\r\\n    ) external validOrder(order.id, order.side, order.tokenA, order.tokenB) {\\r\\n        uint256 a = s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n            _index\\r\\n        ].amountA;\\r\\n        uint256 b = s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n            _index\\r\\n        ].amountB;\\r\\n        s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n            .amountA = _amountA;\\r\\n        s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n            .amountB = _amountB;\\r\\n\\r\\n        require(\\r\\n            s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n                .amountA <\\r\\n                a &&\\r\\n                s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n                    _index\\r\\n                ].amountB <\\r\\n                b,\\r\\n            \\\"Order not updated properly\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function setManual(bool _isManual) external {\\r\\n        s_isManual = _isManual;\\r\\n        require(s_isManual == _isManual, \\\"Invalid s_isManual bool\\\");\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 index,\\r\\n        Side side\\r\\n    ) public view returns (_Order memory) {\\r\\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][\\r\\n            index\\r\\n        ];\\r\\n        return (order);\\r\\n    }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getFilledOrder(\\r\\n        address _user,\\r\\n        Side side,\\r\\n        uint256 index\\r\\n    ) public view returns (_filledOrder memory) {\\r\\n        return s_filledOrders[_user][uint256(side)][index];\\r\\n    }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        for (i; i < s_orderBook[_tokenA][_tokenB][side].length; i++) {\\r\\n            if (s_orderBook[_tokenA][_tokenB][side][i].id == _id) {\\r\\n                return (s_orderBook[_tokenA][_tokenB][side][i], i);\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Order not Found\\\");\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Token not available\\\");\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n\\r\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_tradingFees);\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _tokenA, _tokenB), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4da7ab34528a6ddc8a19d8b7030ecf57023a2985361f1875b527d0a269d0e811\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public daiToken =\\r\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\r\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\r\\n    PriceChecker private priceFeed;\\r\\n    Wallet wallet;\\r\\n\\r\\n    constructor(address _priceCheckerAddress) {\\r\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\r\\n    }\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) public view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\r\\n        uint256 value = (\\r\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\r\\n        ).div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        return fees; //based on USD value\\r\\n    }\\r\\n\\r\\n    //Amount of DAI to deduct from fees\\r\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\r\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\r\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    //Amount of Tokens to deduct from fees\\r\\n    function amountTokensToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 _fees\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\r\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaDAI(\\r\\n        uint256 _fees,\\r\\n        address _user\\r\\n    ) public view returns (bool) {\\r\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\r\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\r\\n\\r\\n        return balance >= amtDAI;\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7891dc27d893e5a01614511576fb8e0477a7ace177b52492e745cb0c38464677\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./ERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\nimport \\\"./fillLogic.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public fundWallet;\\r\\n    uint256 decimals = 18;\\r\\n    address public aDAI;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    fillLogic fillContract;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n        locked = false;\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken, \\\"Invalid Token Type\\\");\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token) || _token == aDAI,\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n\\r\\n        updateBalance(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n            true\\r\\n        );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        updateBalance(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n            false\\r\\n        );\\r\\n        require(\\r\\n            token.transfer(\\r\\n                msg.sender,\\r\\n                _amount.div(10 ** decimals.sub(_decimals))\\r\\n            )\\r\\n        );\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function exchangeUpdateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) external isExchange {\\r\\n        updateLockedFunds(_user, _token, _amount, isAdd);\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) internal {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function exchangeUpdateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) external isExchange {\\r\\n        updateBalance(_token, _user, _amount, isAdd);\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) internal {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateFundWallet(address _fundwallet) public onlyOwner {\\r\\n        fundWallet = _fundwallet;\\r\\n    }\\r\\n\\r\\n    function withdrawToFundWallet(address _token, uint256 _decimals) external {\\r\\n        //Only allow fundWallet address to make the call\\r\\n        require(\\r\\n            msg.sender == fundWallet,\\r\\n            \\\"Invalid FundWallet address to withdraw\\\"\\r\\n        );\\r\\n        uint256 totalAmount = s_tokens[_token][fundWallet];\\r\\n        uint256 actualAmount = totalAmount.div(10 ** decimals.sub(_decimals));\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(_token, fundWallet, totalAmount, false);\\r\\n        require(token.transfer(fundWallet, actualAmount));\\r\\n        locked = false;\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    function updateFillLogicAddress(address _contract) public onlyOwner {\\r\\n        fillContract = fillLogic(_contract);\\r\\n    }\\r\\n\\r\\n    function updateaDaiAddress(address _address) public onlyOwner {\\r\\n        aDAI = address(_address);\\r\\n    }\\r\\n\\r\\n    modifier isExchange() {\\r\\n        require(\\r\\n            msg.sender == address(exchange) ||\\r\\n                msg.sender == address(fillContract),\\r\\n            \\\"Not Exchange or fillOrder contract\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc5b3f8146a024262e00685d84250a606e4608fb1f055d13dcde43072f7120652\",\"license\":\"MIT\"},\"contracts/fillLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./Exchange.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\n\\r\\ncontract fillLogic is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    Exchange exchange;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n    uint256 decimals = 10 ** 18;\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        Exchange._Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        Exchange._Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _Exchange, address _fees, address _Wallet) {\\r\\n        exchange = Exchange(_Exchange); // Set the address of the Exchange contract\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        wallet = Wallet(_Wallet);\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256[][] memory _ordersToFill\\r\\n    ) external {\\r\\n        Exchange._Order memory order;\\r\\n        uint256 index;\\r\\n\\r\\n        for (uint256 i = 0; i < _ordersToFill.length; i++) {\\r\\n            require(\\r\\n                _ordersToFill[i][2] != 0 && _ordersToFill[i][3] != 0,\\r\\n                \\\"Order values error\\\"\\r\\n            );\\r\\n\\r\\n            (order, index) = exchange.getOrderFromArray(\\r\\n                _tokenA,\\r\\n                _tokenB,\\r\\n                _ordersToFill[i][1],\\r\\n                _ordersToFill[i][0]\\r\\n            );\\r\\n\\r\\n            require(\\r\\n                order.amountA != 0 && order.amountB != 0,\\r\\n                \\\"Invalid Order Amount\\\"\\r\\n            );\\r\\n            exchange.updateOrder(\\r\\n                order,\\r\\n                order.amountA.sub(_ordersToFill[i][2]),\\r\\n                order.amountB.sub(\\r\\n                    order.rate.mul(_ordersToFill[i][2]).div(decimals)\\r\\n                ),\\r\\n                index\\r\\n            );\\r\\n\\r\\n            order.amountA = order.amountA.sub(_ordersToFill[i][2]);\\r\\n\\r\\n            uint256 fees = tradingFees.calculateFees(\\r\\n                _ordersToFill[i][2],\\r\\n                _ordersToFill[i][3],\\r\\n                order.tokenB\\r\\n            );\\r\\n            require(fees != 0, \\\"Fees cannot be 0\\\");\\r\\n\\r\\n            bool feesWaived = order.waiveFees &&\\r\\n                tradingFees.checkSufficientaDAI(fees, order.user);\\r\\n\\r\\n            if (_ordersToFill[i][1] == 0) {\\r\\n                fillBuyOrders(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n                emit fillBuyOrder(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n            } else {\\r\\n                fillSellOrders(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n                emit fillSellOrder(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n            }\\r\\n\\r\\n            if (order.amountA == 0) {\\r\\n                exchange.setManual(false);\\r\\n                exchange.cancelOrder(\\r\\n                    (\\r\\n                        _ordersToFill[i][1] == 0\\r\\n                            ? Exchange.Side.BUY\\r\\n                            : Exchange.Side.SELL\\r\\n                    ),\\r\\n                    order.id,\\r\\n                    order.tokenA,\\r\\n                    order.tokenB\\r\\n                );\\r\\n                exchange.setManual(true);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        Exchange._Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                wallet.fundWallet(),\\r\\n                aDAIToDeduct,\\r\\n                true\\r\\n            );\\r\\n\\r\\n            //Credit Bought tokens\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount,\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountTokenToDeduct),\\r\\n                true\\r\\n            );\\r\\n\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                wallet.fundWallet(),\\r\\n                amountTokenToDeduct,\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.exchangeUpdateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.exchangeUpdateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n        exchange.updateFilledOrders(\\r\\n            Exchange._filledOrder(\\r\\n                order.id,\\r\\n                Exchange.Side.BUY,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            ),\\r\\n            uint256(Exchange.Side.BUY)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        Exchange._Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                wallet.fundWallet(),\\r\\n                aDAIToDeduct,\\r\\n                true\\r\\n            );\\r\\n\\r\\n            //Credit Earned tokens\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                wallet.fundWallet(),\\r\\n                amountTokensToDeduct,\\r\\n                true\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.exchangeUpdateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            _amount,\\r\\n            false\\r\\n        );\\r\\n        //seller update\\r\\n        wallet.exchangeUpdateBalance(order.tokenA, order.user, _amount, false);\\r\\n\\r\\n        exchange.updateFilledOrders(\\r\\n            Exchange._filledOrder(\\r\\n                order.id,\\r\\n                Exchange.Side.SELL,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            ),\\r\\n            uint256(Exchange.Side.SELL)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setExchangeAddress(address _exchange) public onlyOwner {\\r\\n        exchange = Exchange(_exchange);\\r\\n    }\\r\\n\\r\\n    function setTradingFeesAddress(address _fees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_fees);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa7f41526cf6c281440ecf90511b108c78d81614c70fe71602330645ce388f180\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"contracts/TradingFees.sol:TradingFees","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2971,"contract":"contracts/TradingFees.sol:TradingFees","label":"decimals","offset":0,"slot":"1","type":"t_uint256"},{"astId":2977,"contract":"contracts/TradingFees.sol:TradingFees","label":"daiToken","offset":0,"slot":"2","type":"t_address"},{"astId":2983,"contract":"contracts/TradingFees.sol:TradingFees","label":"aDAI","offset":0,"slot":"3","type":"t_address"},{"astId":2986,"contract":"contracts/TradingFees.sol:TradingFees","label":"priceFeed","offset":0,"slot":"4","type":"t_contract(PriceChecker)2954"},{"astId":2989,"contract":"contracts/TradingFees.sol:TradingFees","label":"wallet","offset":0,"slot":"5","type":"t_contract(Wallet)3859"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(PriceChecker)2954":{"encoding":"inplace","label":"contract PriceChecker","numberOfBytes":"20"},"t_contract(Wallet)3859":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Wallet.sol":{"Wallet":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"aDAI","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"depositToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"isAdd","type":"bool"}],"name":"exchangeUpdateBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"isAdd","type":"bool"}],"name":"exchangeUpdateLockedFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fundWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"name":"getlockedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"lockedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"s_tokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_exchangeAddress","type":"address"}],"name":"updateExchangeAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_contract","type":"address"}],"name":"updateFillLogicAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_fundwallet","type":"address"}],"name":"updateFundWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"updateaDaiAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"withdrawToFundWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_421":{"entryPoint":null,"id":421,"parameterSlots":0,"returnSlots":0},"@_msgSender_625":{"entryPoint":127,"id":625,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":135,"id":509,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405260126002556000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200005857600080fd5b50620000796200006d6200007f60201b60201c565b6200008760201b60201c565b6200014b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612ad4806200015b6000396000f3fe60806040526004361061012a5760003560e01c8063715018a6116100ab578063cd5d767c1161006f578063cd5d767c146103b4578063f14210a6146103f1578063f2fde38b1461041a578063f6326fb314610443578063f7888aec1461044d578063fc11a3d61461048a5761012a565b8063715018a6146102f55780637bf1a6271461030c5780638da5cb5b1461033757806396c0ec551461036257806399c6d2de1461038b5761012a565b806354419929116100f25780635441992914610226578063545e01571461024f5780635dfbfffd146102785780635ec38bec146102a1578063664a1ad6146102ca5761012a565b8063126b9c5d1461012f5780631a38a4fb1461015857806331415a65146101835780634bdde1cf146101ac5780634fc121db146101e9575b600080fd5b34801561013b57600080fd5b5061015660048036038101906101519190611f3b565b6104b3565b005b34801561016457600080fd5b5061016d6105ad565b60405161017a9190612266565b60405180910390f35b34801561018f57600080fd5b506101aa60048036038101906101a59190611ece565b6105d3565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190611efb565b61061f565b6040516101e09190612486565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b9190611efb565b610644565b60405161021d9190612486565b60405180910390f35b34801561023257600080fd5b5061024d60048036038101906102489190611ece565b6106cb565b005b34801561025b57600080fd5b5061027660048036038101906102719190611ece565b610717565b005b34801561028457600080fd5b5061029f600480360381019061029a9190611fa2565b610763565b005b3480156102ad57600080fd5b506102c860048036038101906102c39190611ece565b610aa3565b005b3480156102d657600080fd5b506102df610aef565b6040516102ec9190612266565b60405180910390f35b34801561030157600080fd5b5061030a610b15565b005b34801561031857600080fd5b50610321610b29565b60405161032e9190612266565b60405180910390f35b34801561034357600080fd5b5061034c610b4f565b6040516103599190612266565b60405180910390f35b34801561036e57600080fd5b5061038960048036038101906103849190611fe2565b610b78565b005b34801561039757600080fd5b506103b260048036038101906103ad9190611fe2565b610f5f565b005b3480156103c057600080fd5b506103db60048036038101906103d69190611efb565b6112ed565b6040516103e89190612486565b60405180910390f35b3480156103fd57600080fd5b5061041860048036038101906104139190612062565b611312565b005b34801561042657600080fd5b50610441600480360381019061043c9190611ece565b6115ac565b005b61044b611630565b005b34801561045957600080fd5b50610474600480360381019061046f9190611efb565b6116eb565b6040516104819190612486565b60405180910390f35b34801561049657600080fd5b506104b160048036038101906104ac9190611f3b565b611772565b005b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061055c5750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61059b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610592906123e6565b60405180910390fd5b6105a78484848461186c565b50505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105db611aa2565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6006602052816000526040600020602052806000526040600020600091509150505481565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106d3611aa2565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61071f611aa2565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea90612406565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006108cb6108b084600254611b2090919063ffffffff16565b600a6108bc9190612597565b83611b3690919063ffffffff16565b905083600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360149054906101000a900460ff161561095e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095590612326565b60405180910390fd5b6001600360146101000a81548160ff0219169083151502179055506109a884600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600061186c565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610a279291906122fd565b602060405180830381600087803b158015610a4157600080fd5b505af1158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190612035565b610a8257600080fd5b6000600360146101000a81548160ff02191690831515021790555050505050565b610aab611aa2565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b1d611aa2565b610b276000611b4c565b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bd357600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b8152600401610c2e9190612266565b60206040518083038186803b158015610c4657600080fd5b505afa158015610c5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7e9190612035565b610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb4906123c6565b60405180910390fd5b81610ce3610ccb3386610644565b610cd586336116eb565b611b2090919063ffffffff16565b1015610d24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1b90612446565b60405180910390fd5b600360149054906101000a900460ff1615610d74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6b90612326565b60405180910390fd5b6001600360146101000a81548160ff02191690831515021790555082600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e0f8333610e08610ded85600254611b2090919063ffffffff16565b600a610df99190612597565b86611c1090919063ffffffff16565b600061186c565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33610e81610e6685600254611b2090919063ffffffff16565b600a610e729190612597565b86611b3690919063ffffffff16565b6040518363ffffffff1660e01b8152600401610e9e9291906122fd565b602060405180830381600087803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef09190612035565b610ef957600080fd5b6000600360146101000a81548160ff0219169083151502179055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567833384610f4287336116eb565b604051610f5294939291906122b8565b60405180910390a1505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ff0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe790612366565b60405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b815260040161104b9190612266565b60206040518083038186803b15801561106357600080fd5b505afa158015611077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b9190612035565b806110f35750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b611132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611129906123c6565b60405180910390fd5b82600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016111d293929190612281565b602060405180830381600087803b1580156111ec57600080fd5b505af1158015611200573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112249190612035565b611263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125a90612466565b60405180910390fd5b6112a2833361129b61128085600254611b2090919063ffffffff16565b600a61128c9190612597565b86611c1090919063ffffffff16565b600161186c565b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78333846112d087336116eb565b6040516112e094939291906122b8565b60405180910390a1505050565b6005602052816000526040600020602052806000526040600020600091509150505481565b8061137c61134233600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610644565b61136e600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116eb565b611b2090919063ffffffff16565b10156113bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b4906123a6565b60405180910390fd5b600360149054906101000a900460ff161561140d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140490612326565b60405180910390fd5b6001600360146101000a81548160ff021916908315150217905550611457600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600061186c565b60003373ffffffffffffffffffffffffffffffffffffffff168260405161147d90612251565b60006040518083038185875af1925050503d80600081146114ba576040519150601f19603f3d011682016040523d82523d6000602084013e6114bf565b606091505b5050905080611503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fa90612386565b60405180910390fd5b6000600360146101000a81548160ff0219169083151502179055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384611590600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116eb565b6040516115a094939291906122b8565b60405180910390a15050565b6115b4611aa2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161b90612346565b60405180910390fd5b61162d81611b4c565b50565b61165f600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163334600161186c565b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633346116d1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116eb565b6040516116e194939291906122b8565b60405180910390a1565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061181b5750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61185a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611851906123e6565b60405180910390fd5b61186684848484611c26565b50505050565b80156119865761190182600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e5c90919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a9c565b80611a9b57611a1a82600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b2090919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b611aaa611e72565b73ffffffffffffffffffffffffffffffffffffffff16611ac8610b4f565b73ffffffffffffffffffffffffffffffffffffffff1614611b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1590612426565b60405180910390fd5b565b60008183611b2e919061270f565b905092915050565b60008183611b449190612513565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183611c1e91906126b5565b905092915050565b8015611d4057611cbb82600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e5c90919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e56565b80611e5557611dd482600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b2090919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b60008183611e6a91906124bd565b905092915050565b600033905090565b600081359050611e8981612a59565b92915050565b600081359050611e9e81612a70565b92915050565b600081519050611eb381612a70565b92915050565b600081359050611ec881612a87565b92915050565b600060208284031215611ee457611ee36127e9565b5b6000611ef284828501611e7a565b91505092915050565b60008060408385031215611f1257611f116127e9565b5b6000611f2085828601611e7a565b9250506020611f3185828601611e7a565b9150509250929050565b60008060008060808587031215611f5557611f546127e9565b5b6000611f6387828801611e7a565b9450506020611f7487828801611e7a565b9350506040611f8587828801611eb9565b9250506060611f9687828801611e8f565b91505092959194509250565b60008060408385031215611fb957611fb86127e9565b5b6000611fc785828601611e7a565b9250506020611fd885828601611eb9565b9150509250929050565b600080600060608486031215611ffb57611ffa6127e9565b5b600061200986828701611e7a565b935050602061201a86828701611eb9565b925050604061202b86828701611eb9565b9150509250925092565b60006020828403121561204b5761204a6127e9565b5b600061205984828501611ea4565b91505092915050565b600060208284031215612078576120776127e9565b5b600061208684828501611eb9565b91505092915050565b61209881612743565b82525050565b60006120ab6018836124ac565b91506120b6826127fb565b602082019050919050565b60006120ce6026836124ac565b91506120d982612824565b604082019050919050565b60006120f16012836124ac565b91506120fc82612873565b602082019050919050565b60006121146015836124ac565b915061211f8261289c565b602082019050919050565b60006121376024836124ac565b9150612142826128c5565b604082019050919050565b600061215a601e836124ac565b915061216582612914565b602082019050919050565b600061217d6022836124ac565b91506121888261293d565b604082019050919050565b60006121a06026836124ac565b91506121ab8261298c565b604082019050919050565b60006121c36020836124ac565b91506121ce826129db565b602082019050919050565b60006121e6601f836124ac565b91506121f182612a04565b602082019050919050565b60006122096000836124a1565b915061221482612a2d565b600082019050919050565b600061222c600f836124ac565b915061223782612a30565b602082019050919050565b61224b81612781565b82525050565b600061225c826121fc565b9150819050919050565b600060208201905061227b600083018461208f565b92915050565b6000606082019050612296600083018661208f565b6122a3602083018561208f565b6122b06040830184612242565b949350505050565b60006080820190506122cd600083018761208f565b6122da602083018661208f565b6122e76040830185612242565b6122f46060830184612242565b95945050505050565b6000604082019050612312600083018561208f565b61231f6020830184612242565b9392505050565b6000602082019050818103600083015261233f8161209e565b9050919050565b6000602082019050818103600083015261235f816120c1565b9050919050565b6000602082019050818103600083015261237f816120e4565b9050919050565b6000602082019050818103600083015261239f81612107565b9050919050565b600060208201905081810360008301526123bf8161212a565b9050919050565b600060208201905081810360008301526123df8161214d565b9050919050565b600060208201905081810360008301526123ff81612170565b9050919050565b6000602082019050818103600083015261241f81612193565b9050919050565b6000602082019050818103600083015261243f816121b6565b9050919050565b6000602082019050818103600083015261245f816121d9565b9050919050565b6000602082019050818103600083015261247f8161221f565b9050919050565b600060208201905061249b6000830184612242565b92915050565b600081905092915050565b600082825260208201905092915050565b60006124c882612781565b91506124d383612781565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125085761250761278b565b5b828201905092915050565b600061251e82612781565b915061252983612781565b925082612539576125386127ba565b5b828204905092915050565b6000808291508390505b600185111561258e5780860481111561256a5761256961278b565b5b60018516156125795780820291505b8081029050612587856127ee565b945061254e565b94509492505050565b60006125a282612781565b91506125ad83612781565b92506125da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846125e2565b905092915050565b6000826125f257600190506126ae565b8161260057600090506126ae565b816001811461261657600281146126205761264f565b60019150506126ae565b60ff8411156126325761263161278b565b5b8360020a9150848211156126495761264861278b565b5b506126ae565b5060208310610133831016604e8410600b84101617156126845782820a90508381111561267f5761267e61278b565b5b6126ae565b6126918484846001612544565b925090508184048111156126a8576126a761278b565b5b81810290505b9392505050565b60006126c082612781565b91506126cb83612781565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156127045761270361278b565b5b828202905092915050565b600061271a82612781565b915061272583612781565b9250828210156127385761273761278b565b5b828203905092915050565b600061274e82612761565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f5265656e7472616e742063616c6c206465746563746564210000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420546f6b656e20547970650000000000000000000000000000600082015250565b7f6661696c656420746f2073656e6420616d6f756e740000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e63652045544820746f207769746860008201527f6472617700000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e206e6f74207665726966696564206f6e2045786368616e67650000600082015250565b7f4e6f742045786368616e6765206f722066696c6c4f7264657220636f6e74726160008201527f6374000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642046756e6457616c6c6574206164647265737320746f20776960008201527f7468647261770000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e73756666696369656e7420546f6b656e7320746f20776974686472617700600082015250565b50565b7f4e6f20417070726f76616c207965740000000000000000000000000000000000600082015250565b612a6281612743565b8114612a6d57600080fd5b50565b612a7981612755565b8114612a8457600080fd5b50565b612a9081612781565b8114612a9b57600080fd5b5056fea2646970667358221220ca844559473a4cc527d9ee99dc6bd92a92cd97dfac9220764d7d6f9770d2268164736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x12 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x79 PUSH3 0x6D PUSH3 0x7F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x14B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2AD4 DUP1 PUSH3 0x15B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xCD5D767C GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCD5D767C EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xFC11A3D6 EQ PUSH2 0x48A JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x96C0EC55 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x99C6D2DE EQ PUSH2 0x38B JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x54419929 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x54419929 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x545E0157 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x5DFBFFFD EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x5EC38BEC EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x664A1AD6 EQ PUSH2 0x2CA JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x126B9C5D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x31415A65 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x4BDDE1CF EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x4FC121DB EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DF PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0xB15 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0xF5F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x1312 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44B PUSH2 0x1630 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x1772 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x55C JUMPI POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP1 PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x186C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x1AA2 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D3 PUSH2 0x1AA2 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x71F PUSH2 0x1AA2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x8CB PUSH2 0x8B0 DUP5 PUSH1 0x2 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP4 PUSH2 0x1B36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x9A8 DUP5 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP3 SWAP2 SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAAB PUSH2 0x1AA2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB1D PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0xB27 PUSH1 0x0 PUSH2 0x1B4C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC7E SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0xCBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB4 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xCE3 PUSH2 0xCCB CALLER DUP7 PUSH2 0x644 JUMP JUMPDEST PUSH2 0xCD5 DUP7 CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1B SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6B SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE0F DUP4 CALLER PUSH2 0xE08 PUSH2 0xDED DUP6 PUSH1 0x2 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xDF9 SWAP2 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP7 PUSH2 0x1C10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0xE81 PUSH2 0xE66 DUP6 PUSH1 0x2 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xE72 SWAP2 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP7 PUSH2 0x1B36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9E SWAP3 SWAP2 SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0xEF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP4 CALLER DUP5 PUSH2 0xF42 DUP8 CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF52 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE7 SWAP1 PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104B SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1077 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109B SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST DUP1 PUSH2 0x10F3 JUMPI POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1129 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1200 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125A SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A2 DUP4 CALLER PUSH2 0x129B PUSH2 0x1280 DUP6 PUSH1 0x2 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP7 PUSH2 0x1C10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH2 0x186C JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 CALLER DUP5 PUSH2 0x12D0 DUP8 CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH2 0x137C PUSH2 0x1342 CALLER PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x644 JUMP JUMPDEST PUSH2 0x136E PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x13BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B4 SWAP1 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1404 SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1457 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x0 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x147D SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1503 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FA SWAP1 PUSH2 0x2386 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x1590 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x15B4 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161B SWAP1 PUSH2 0x2346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x162D DUP2 PUSH2 0x1B4C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x165F PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH1 0x1 PUSH2 0x186C JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH2 0x16D1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x181B JUMPI POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x185A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1851 SWAP1 PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1866 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1C26 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1986 JUMPI PUSH2 0x1901 DUP3 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1E5C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1A9C JUMP JUMPDEST DUP1 PUSH2 0x1A9B JUMPI PUSH2 0x1A1A DUP3 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AAA PUSH2 0x1E72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AC8 PUSH2 0xB4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B15 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B2E SWAP2 SWAP1 PUSH2 0x270F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B44 SWAP2 SWAP1 PUSH2 0x2513 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1C1E SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D40 JUMPI PUSH2 0x1CBB DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1E5C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E56 JUMP JUMPDEST DUP1 PUSH2 0x1E55 JUMPI PUSH2 0x1DD4 DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E6A SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E89 DUP2 PUSH2 0x2A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E9E DUP2 PUSH2 0x2A70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EB3 DUP2 PUSH2 0x2A70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EC8 DUP2 PUSH2 0x2A87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F20 DUP6 DUP3 DUP7 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F31 DUP6 DUP3 DUP7 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F55 JUMPI PUSH2 0x1F54 PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F63 DUP8 DUP3 DUP9 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F74 DUP8 DUP3 DUP9 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F85 DUP8 DUP3 DUP9 ADD PUSH2 0x1EB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1F96 DUP8 DUP3 DUP9 ADD PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB9 JUMPI PUSH2 0x1FB8 PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC7 DUP6 DUP3 DUP7 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD8 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FFB JUMPI PUSH2 0x1FFA PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2009 DUP7 DUP3 DUP8 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x201A DUP7 DUP3 DUP8 ADD PUSH2 0x1EB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x202B DUP7 DUP3 DUP8 ADD PUSH2 0x1EB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204B JUMPI PUSH2 0x204A PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2059 DUP5 DUP3 DUP6 ADD PUSH2 0x1EA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2078 JUMPI PUSH2 0x2077 PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2086 DUP5 DUP3 DUP6 ADD PUSH2 0x1EB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2098 DUP2 PUSH2 0x2743 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AB PUSH1 0x18 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x20B6 DUP3 PUSH2 0x27FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CE PUSH1 0x26 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x20D9 DUP3 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F1 PUSH1 0x12 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x20FC DUP3 PUSH2 0x2873 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2114 PUSH1 0x15 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x211F DUP3 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 PUSH1 0x24 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x2142 DUP3 PUSH2 0x28C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215A PUSH1 0x1E DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x2165 DUP3 PUSH2 0x2914 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217D PUSH1 0x22 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x2188 DUP3 PUSH2 0x293D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A0 PUSH1 0x26 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x21AB DUP3 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C3 PUSH1 0x20 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x21CE DUP3 PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E6 PUSH1 0x1F DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x21F1 DUP3 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2209 PUSH1 0x0 DUP4 PUSH2 0x24A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2214 DUP3 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222C PUSH1 0xF DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x2237 DUP3 PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x224B DUP2 PUSH2 0x2781 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225C DUP3 PUSH2 0x21FC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x208F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2296 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x22A3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x22B0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22CD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x22DA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x22E7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x22F4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2312 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x231F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x233F DUP2 PUSH2 0x209E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x235F DUP2 PUSH2 0x20C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x237F DUP2 PUSH2 0x20E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x239F DUP2 PUSH2 0x2107 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23BF DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23DF DUP2 PUSH2 0x214D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23FF DUP2 PUSH2 0x2170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x241F DUP2 PUSH2 0x2193 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x243F DUP2 PUSH2 0x21B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x245F DUP2 PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x247F DUP2 PUSH2 0x221F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x249B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C8 DUP3 PUSH2 0x2781 JUMP JUMPDEST SWAP2 POP PUSH2 0x24D3 DUP4 PUSH2 0x2781 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2508 JUMPI PUSH2 0x2507 PUSH2 0x278B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251E DUP3 PUSH2 0x2781 JUMP JUMPDEST SWAP2 POP PUSH2 0x2529 DUP4 PUSH2 0x2781 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2539 JUMPI PUSH2 0x2538 PUSH2 0x27BA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x258E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x278B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2579 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2587 DUP6 PUSH2 0x27EE JUMP JUMPDEST SWAP5 POP PUSH2 0x254E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A2 DUP3 PUSH2 0x2781 JUMP JUMPDEST SWAP2 POP PUSH2 0x25AD DUP4 PUSH2 0x2781 JUMP JUMPDEST SWAP3 POP PUSH2 0x25DA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x25E2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x25F2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x26AE JUMP JUMPDEST DUP2 PUSH2 0x2600 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x26AE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2616 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2620 JUMPI PUSH2 0x264F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x26AE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2632 JUMPI PUSH2 0x2631 PUSH2 0x278B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2649 JUMPI PUSH2 0x2648 PUSH2 0x278B JUMP JUMPDEST JUMPDEST POP PUSH2 0x26AE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2684 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x267F JUMPI PUSH2 0x267E PUSH2 0x278B JUMP JUMPDEST JUMPDEST PUSH2 0x26AE JUMP JUMPDEST PUSH2 0x2691 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2544 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x26A8 JUMPI PUSH2 0x26A7 PUSH2 0x278B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C0 DUP3 PUSH2 0x2781 JUMP JUMPDEST SWAP2 POP PUSH2 0x26CB DUP4 PUSH2 0x2781 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2704 JUMPI PUSH2 0x2703 PUSH2 0x278B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271A DUP3 PUSH2 0x2781 JUMP JUMPDEST SWAP2 POP PUSH2 0x2725 DUP4 PUSH2 0x2781 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2738 JUMPI PUSH2 0x2737 PUSH2 0x278B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274E DUP3 PUSH2 0x2761 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420546F6B656E20547970650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E6420616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652045544820746F2077697468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F74207665726966696564206F6E2045786368616E67650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F742045786368616E6765206F722066696C6C4F7264657220636F6E747261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6374000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642046756E6457616C6C6574206164647265737320746F207769 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7468647261770000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E7320746F20776974686472617700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E6F20417070726F76616C207965740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2A62 DUP2 PUSH2 0x2743 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A79 DUP2 PUSH2 0x2755 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A90 DUP2 PUSH2 0x2781 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA DUP5 GASLIMIT MSIZE SELFBALANCE GASPRICE 0x4C 0xC5 0x27 0xD9 0xEE SWAP10 0xDC PUSH12 0xD92A92CD97DFAC9220764D7D PUSH16 0x9770D2268164736F6C63430008070033 ","sourceMap":"404:6992:11:-:0;;;561:2;542:21;;696:1;662:36;;;;;;;;;;;;;;;;;;;;404:6992;;;;;;;;;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;404:6992:11;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;404:6992:11:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_452":{"entryPoint":6818,"id":452,"parameterSlots":0,"returnSlots":0},"@_msgSender_625":{"entryPoint":7794,"id":625,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":6988,"id":509,"parameterSlots":1,"returnSlots":0},"@aDAI_3204":{"entryPoint":1453,"id":3204,"parameterSlots":0,"returnSlots":0},"@add_811":{"entryPoint":7772,"id":811,"parameterSlots":2,"returnSlots":1},"@balanceOf_3639":{"entryPoint":5867,"id":3639,"parameterSlots":2,"returnSlots":1},"@depositETH_3280":{"entryPoint":5680,"id":3280,"parameterSlots":0,"returnSlots":0},"@depositToken_3430":{"entryPoint":3935,"id":3430,"parameterSlots":3,"returnSlots":0},"@div_856":{"entryPoint":6966,"id":856,"parameterSlots":2,"returnSlots":1},"@ethToken_3212":{"entryPoint":2857,"id":3212,"parameterSlots":0,"returnSlots":0},"@exchangeUpdateBalance_3660":{"entryPoint":1203,"id":3660,"parameterSlots":4,"returnSlots":0},"@exchangeUpdateLockedFunds_3574":{"entryPoint":6002,"id":3574,"parameterSlots":4,"returnSlots":0},"@fundWallet_3199":{"entryPoint":2799,"id":3199,"parameterSlots":0,"returnSlots":0},"@getlockedFunds_3553":{"entryPoint":1604,"id":3553,"parameterSlots":2,"returnSlots":1},"@lockedFunds_3224":{"entryPoint":1567,"id":3224,"parameterSlots":0,"returnSlots":0},"@mul_841":{"entryPoint":7184,"id":841,"parameterSlots":2,"returnSlots":1},"@owner_438":{"entryPoint":2895,"id":438,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_466":{"entryPoint":2837,"id":466,"parameterSlots":0,"returnSlots":0},"@s_tokens_3218":{"entryPoint":4845,"id":3218,"parameterSlots":0,"returnSlots":0},"@sub_826":{"entryPoint":6944,"id":826,"parameterSlots":2,"returnSlots":1},"@transferOwnership_489":{"entryPoint":5548,"id":489,"parameterSlots":1,"returnSlots":0},"@updateBalance_3709":{"entryPoint":6252,"id":3709,"parameterSlots":4,"returnSlots":0},"@updateExchangeAddress_3806":{"entryPoint":1491,"id":3806,"parameterSlots":1,"returnSlots":0},"@updateFillLogicAddress_3820":{"entryPoint":1739,"id":3820,"parameterSlots":1,"returnSlots":0},"@updateFundWallet_3721":{"entryPoint":2723,"id":3721,"parameterSlots":1,"returnSlots":0},"@updateLockedFunds_3623":{"entryPoint":7206,"id":3623,"parameterSlots":4,"returnSlots":0},"@updateaDaiAddress_3835":{"entryPoint":1815,"id":3835,"parameterSlots":1,"returnSlots":0},"@withdrawETH_3353":{"entryPoint":4882,"id":3353,"parameterSlots":1,"returnSlots":0},"@withdrawToFundWallet_3792":{"entryPoint":1891,"id":3792,"parameterSlots":2,"returnSlots":0},"@withdrawToken_3537":{"entryPoint":2936,"id":3537,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address":{"entryPoint":7802,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7823,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":7844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7865,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7931,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256t_bool":{"entryPoint":7995,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8098,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":8162,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":8245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8335,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack":{"entryPoint":8350,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":8385,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca_to_t_string_memory_ptr_fromStack":{"entryPoint":8420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack":{"entryPoint":8455,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack":{"entryPoint":8490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack":{"entryPoint":8525,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32_to_t_string_memory_ptr_fromStack":{"entryPoint":8560,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57_to_t_string_memory_ptr_fromStack":{"entryPoint":8595,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":8630,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack":{"entryPoint":8665,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack":{"entryPoint":8735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8770,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8785,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8806,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":8833,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8888,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8957,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8998,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9030,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9062,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9094,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9158,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9190,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9222,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9254,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9286,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9318,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9350,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9377,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9388,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9405,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":9491,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":9540,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":9623,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":9698,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":9909,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9999,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":10051,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10069,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10081,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10113,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10123,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10170,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10217,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_1_unsigned":{"entryPoint":10222,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210":{"entryPoint":10235,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":10276,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca":{"entryPoint":10355,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4":{"entryPoint":10396,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4":{"entryPoint":10437,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a":{"entryPoint":10516,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32":{"entryPoint":10557,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57":{"entryPoint":10636,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":10715,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9":{"entryPoint":10756,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":10797,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba":{"entryPoint":10800,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10841,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10864,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10887,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23056:17","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:17","statements":[{"nodeType":"YulAssignment","src":"69:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:17"},"nodeType":"YulFunctionCall","src":"78:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:17"},"nodeType":"YulFunctionCall","src":"107:33:17"},"nodeType":"YulExpressionStatement","src":"107:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:17","type":""}],"src":"7:139:17"},{"body":{"nodeType":"YulBlock","src":"201:84:17","statements":[{"nodeType":"YulAssignment","src":"211:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"233:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:17"},"nodeType":"YulFunctionCall","src":"220:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"211:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"249:23:17"},"nodeType":"YulFunctionCall","src":"249:30:17"},"nodeType":"YulExpressionStatement","src":"249:30:17"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"187:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"195:5:17","type":""}],"src":"152:133:17"},{"body":{"nodeType":"YulBlock","src":"351:77:17","statements":[{"nodeType":"YulAssignment","src":"361:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"376:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"370:5:17"},"nodeType":"YulFunctionCall","src":"370:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"361:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"416:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"392:23:17"},"nodeType":"YulFunctionCall","src":"392:30:17"},"nodeType":"YulExpressionStatement","src":"392:30:17"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"329:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"337:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"345:5:17","type":""}],"src":"291:137:17"},{"body":{"nodeType":"YulBlock","src":"486:87:17","statements":[{"nodeType":"YulAssignment","src":"496:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"518:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"505:12:17"},"nodeType":"YulFunctionCall","src":"505:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"496:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"561:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"534:26:17"},"nodeType":"YulFunctionCall","src":"534:33:17"},"nodeType":"YulExpressionStatement","src":"534:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"464:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"472:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"480:5:17","type":""}],"src":"434:139:17"},{"body":{"nodeType":"YulBlock","src":"645:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"691:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"693:77:17"},"nodeType":"YulFunctionCall","src":"693:79:17"},"nodeType":"YulExpressionStatement","src":"693:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"666:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"675:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"662:3:17"},"nodeType":"YulFunctionCall","src":"662:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"687:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"658:3:17"},"nodeType":"YulFunctionCall","src":"658:32:17"},"nodeType":"YulIf","src":"655:119:17"},{"nodeType":"YulBlock","src":"784:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"799:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"813:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"803:6:17","type":""}]},{"nodeType":"YulAssignment","src":"828:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"863:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"874:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"859:3:17"},"nodeType":"YulFunctionCall","src":"859:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"883:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"838:20:17"},"nodeType":"YulFunctionCall","src":"838:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"828:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"615:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"626:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"638:6:17","type":""}],"src":"579:329:17"},{"body":{"nodeType":"YulBlock","src":"997:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"1043:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1045:77:17"},"nodeType":"YulFunctionCall","src":"1045:79:17"},"nodeType":"YulExpressionStatement","src":"1045:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1018:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1014:3:17"},"nodeType":"YulFunctionCall","src":"1014:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1039:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1010:3:17"},"nodeType":"YulFunctionCall","src":"1010:32:17"},"nodeType":"YulIf","src":"1007:119:17"},{"nodeType":"YulBlock","src":"1136:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1151:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1165:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1155:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1180:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1226:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1211:3:17"},"nodeType":"YulFunctionCall","src":"1211:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1235:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1190:20:17"},"nodeType":"YulFunctionCall","src":"1190:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1180:6:17"}]}]},{"nodeType":"YulBlock","src":"1263:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1278:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1292:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1282:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1308:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1343:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1354:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:17"},"nodeType":"YulFunctionCall","src":"1339:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1363:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1318:20:17"},"nodeType":"YulFunctionCall","src":"1318:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1308:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"959:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"970:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"982:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"990:6:17","type":""}],"src":"914:474:17"},{"body":{"nodeType":"YulBlock","src":"1508:645:17","statements":[{"body":{"nodeType":"YulBlock","src":"1555:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1557:77:17"},"nodeType":"YulFunctionCall","src":"1557:79:17"},"nodeType":"YulExpressionStatement","src":"1557:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1529:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1538:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1525:3:17"},"nodeType":"YulFunctionCall","src":"1525:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1550:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1521:3:17"},"nodeType":"YulFunctionCall","src":"1521:33:17"},"nodeType":"YulIf","src":"1518:120:17"},{"nodeType":"YulBlock","src":"1648:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1663:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1677:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1667:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1692:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1727:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1738:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1723:3:17"},"nodeType":"YulFunctionCall","src":"1723:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1747:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1702:20:17"},"nodeType":"YulFunctionCall","src":"1702:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1692:6:17"}]}]},{"nodeType":"YulBlock","src":"1775:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1790:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1804:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1794:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1820:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1855:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1866:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1851:3:17"},"nodeType":"YulFunctionCall","src":"1851:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1875:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1830:20:17"},"nodeType":"YulFunctionCall","src":"1830:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1820:6:17"}]}]},{"nodeType":"YulBlock","src":"1903:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1918:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1932:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1922:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1948:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1983:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1994:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:17"},"nodeType":"YulFunctionCall","src":"1979:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2003:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1958:20:17"},"nodeType":"YulFunctionCall","src":"1958:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1948:6:17"}]}]},{"nodeType":"YulBlock","src":"2031:115:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2046:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2060:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2050:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2076:60:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2108:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2119:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2104:3:17"},"nodeType":"YulFunctionCall","src":"2104:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2128:7:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"2086:17:17"},"nodeType":"YulFunctionCall","src":"2086:50:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2076:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1454:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1465:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1477:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1485:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1493:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1501:6:17","type":""}],"src":"1394:759:17"},{"body":{"nodeType":"YulBlock","src":"2242:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"2288:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2290:77:17"},"nodeType":"YulFunctionCall","src":"2290:79:17"},"nodeType":"YulExpressionStatement","src":"2290:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2263:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2272:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2259:3:17"},"nodeType":"YulFunctionCall","src":"2259:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2284:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2255:3:17"},"nodeType":"YulFunctionCall","src":"2255:32:17"},"nodeType":"YulIf","src":"2252:119:17"},{"nodeType":"YulBlock","src":"2381:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2396:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2410:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2400:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2425:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2460:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2471:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2456:3:17"},"nodeType":"YulFunctionCall","src":"2456:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2480:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2435:20:17"},"nodeType":"YulFunctionCall","src":"2435:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2425:6:17"}]}]},{"nodeType":"YulBlock","src":"2508:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2523:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2537:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2527:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2553:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2588:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2599:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:17"},"nodeType":"YulFunctionCall","src":"2584:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2608:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2563:20:17"},"nodeType":"YulFunctionCall","src":"2563:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2553:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2204:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2215:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2227:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2235:6:17","type":""}],"src":"2159:474:17"},{"body":{"nodeType":"YulBlock","src":"2739:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"2785:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2787:77:17"},"nodeType":"YulFunctionCall","src":"2787:79:17"},"nodeType":"YulExpressionStatement","src":"2787:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2760:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2769:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2756:3:17"},"nodeType":"YulFunctionCall","src":"2756:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2781:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2752:3:17"},"nodeType":"YulFunctionCall","src":"2752:32:17"},"nodeType":"YulIf","src":"2749:119:17"},{"nodeType":"YulBlock","src":"2878:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2893:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2907:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2897:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2922:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2957:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2968:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2953:3:17"},"nodeType":"YulFunctionCall","src":"2953:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2977:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2932:20:17"},"nodeType":"YulFunctionCall","src":"2932:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2922:6:17"}]}]},{"nodeType":"YulBlock","src":"3005:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3020:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3034:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3024:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3050:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3085:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3096:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3081:3:17"},"nodeType":"YulFunctionCall","src":"3081:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3105:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3060:20:17"},"nodeType":"YulFunctionCall","src":"3060:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3050:6:17"}]}]},{"nodeType":"YulBlock","src":"3133:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3148:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3162:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3152:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3178:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3213:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3224:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3209:3:17"},"nodeType":"YulFunctionCall","src":"3209:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3233:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3188:20:17"},"nodeType":"YulFunctionCall","src":"3188:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3178:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2693:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2704:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2716:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2724:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2732:6:17","type":""}],"src":"2639:619:17"},{"body":{"nodeType":"YulBlock","src":"3338:271:17","statements":[{"body":{"nodeType":"YulBlock","src":"3384:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3386:77:17"},"nodeType":"YulFunctionCall","src":"3386:79:17"},"nodeType":"YulExpressionStatement","src":"3386:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3359:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3368:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3355:3:17"},"nodeType":"YulFunctionCall","src":"3355:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3380:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3351:3:17"},"nodeType":"YulFunctionCall","src":"3351:32:17"},"nodeType":"YulIf","src":"3348:119:17"},{"nodeType":"YulBlock","src":"3477:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3492:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3506:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3496:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3521:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3564:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3575:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3560:3:17"},"nodeType":"YulFunctionCall","src":"3560:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3584:7:17"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"3531:28:17"},"nodeType":"YulFunctionCall","src":"3531:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3521:6:17"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3308:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3319:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3331:6:17","type":""}],"src":"3264:345:17"},{"body":{"nodeType":"YulBlock","src":"3681:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"3727:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3729:77:17"},"nodeType":"YulFunctionCall","src":"3729:79:17"},"nodeType":"YulExpressionStatement","src":"3729:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3702:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3711:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3698:3:17"},"nodeType":"YulFunctionCall","src":"3698:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3723:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3694:3:17"},"nodeType":"YulFunctionCall","src":"3694:32:17"},"nodeType":"YulIf","src":"3691:119:17"},{"nodeType":"YulBlock","src":"3820:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3835:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3849:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3839:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3864:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3899:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3910:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3895:3:17"},"nodeType":"YulFunctionCall","src":"3895:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3874:20:17"},"nodeType":"YulFunctionCall","src":"3874:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3864:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3651:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3662:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3674:6:17","type":""}],"src":"3615:329:17"},{"body":{"nodeType":"YulBlock","src":"4015:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4032:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4055:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4037:17:17"},"nodeType":"YulFunctionCall","src":"4037:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4025:6:17"},"nodeType":"YulFunctionCall","src":"4025:37:17"},"nodeType":"YulExpressionStatement","src":"4025:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4003:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4010:3:17","type":""}],"src":"3950:118:17"},{"body":{"nodeType":"YulBlock","src":"4220:220:17","statements":[{"nodeType":"YulAssignment","src":"4230:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4296:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4301:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4237:58:17"},"nodeType":"YulFunctionCall","src":"4237:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4230:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4402:3:17"}],"functionName":{"name":"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","nodeType":"YulIdentifier","src":"4313:88:17"},"nodeType":"YulFunctionCall","src":"4313:93:17"},"nodeType":"YulExpressionStatement","src":"4313:93:17"},{"nodeType":"YulAssignment","src":"4415:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4426:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4431:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4422:3:17"},"nodeType":"YulFunctionCall","src":"4422:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4415:3:17"}]}]},"name":"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4208:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4216:3:17","type":""}],"src":"4074:366:17"},{"body":{"nodeType":"YulBlock","src":"4592:220:17","statements":[{"nodeType":"YulAssignment","src":"4602:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4668:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4673:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4609:58:17"},"nodeType":"YulFunctionCall","src":"4609:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4602:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4774:3:17"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"4685:88:17"},"nodeType":"YulFunctionCall","src":"4685:93:17"},"nodeType":"YulExpressionStatement","src":"4685:93:17"},{"nodeType":"YulAssignment","src":"4787:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4798:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4803:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4794:3:17"},"nodeType":"YulFunctionCall","src":"4794:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4787:3:17"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4580:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4588:3:17","type":""}],"src":"4446:366:17"},{"body":{"nodeType":"YulBlock","src":"4964:220:17","statements":[{"nodeType":"YulAssignment","src":"4974:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5040:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5045:2:17","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4981:58:17"},"nodeType":"YulFunctionCall","src":"4981:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4974:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5146:3:17"}],"functionName":{"name":"store_literal_in_memory_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca","nodeType":"YulIdentifier","src":"5057:88:17"},"nodeType":"YulFunctionCall","src":"5057:93:17"},"nodeType":"YulExpressionStatement","src":"5057:93:17"},{"nodeType":"YulAssignment","src":"5159:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5170:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5175:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5166:3:17"},"nodeType":"YulFunctionCall","src":"5166:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5159:3:17"}]}]},"name":"abi_encode_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4952:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4960:3:17","type":""}],"src":"4818:366:17"},{"body":{"nodeType":"YulBlock","src":"5336:220:17","statements":[{"nodeType":"YulAssignment","src":"5346:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5412:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5417:2:17","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5353:58:17"},"nodeType":"YulFunctionCall","src":"5353:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5346:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5518:3:17"}],"functionName":{"name":"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","nodeType":"YulIdentifier","src":"5429:88:17"},"nodeType":"YulFunctionCall","src":"5429:93:17"},"nodeType":"YulExpressionStatement","src":"5429:93:17"},{"nodeType":"YulAssignment","src":"5531:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5542:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5547:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5538:3:17"},"nodeType":"YulFunctionCall","src":"5538:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5531:3:17"}]}]},"name":"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5324:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5332:3:17","type":""}],"src":"5190:366:17"},{"body":{"nodeType":"YulBlock","src":"5708:220:17","statements":[{"nodeType":"YulAssignment","src":"5718:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5784:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5789:2:17","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5725:58:17"},"nodeType":"YulFunctionCall","src":"5725:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5718:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5890:3:17"}],"functionName":{"name":"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","nodeType":"YulIdentifier","src":"5801:88:17"},"nodeType":"YulFunctionCall","src":"5801:93:17"},"nodeType":"YulExpressionStatement","src":"5801:93:17"},{"nodeType":"YulAssignment","src":"5903:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5914:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5919:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5910:3:17"},"nodeType":"YulFunctionCall","src":"5910:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5903:3:17"}]}]},"name":"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5696:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5704:3:17","type":""}],"src":"5562:366:17"},{"body":{"nodeType":"YulBlock","src":"6080:220:17","statements":[{"nodeType":"YulAssignment","src":"6090:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6156:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6161:2:17","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6097:58:17"},"nodeType":"YulFunctionCall","src":"6097:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6090:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6262:3:17"}],"functionName":{"name":"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","nodeType":"YulIdentifier","src":"6173:88:17"},"nodeType":"YulFunctionCall","src":"6173:93:17"},"nodeType":"YulExpressionStatement","src":"6173:93:17"},{"nodeType":"YulAssignment","src":"6275:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6286:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6291:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6282:3:17"},"nodeType":"YulFunctionCall","src":"6282:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6275:3:17"}]}]},"name":"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6068:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6076:3:17","type":""}],"src":"5934:366:17"},{"body":{"nodeType":"YulBlock","src":"6452:220:17","statements":[{"nodeType":"YulAssignment","src":"6462:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6528:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6533:2:17","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6469:58:17"},"nodeType":"YulFunctionCall","src":"6469:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6462:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:17"}],"functionName":{"name":"store_literal_in_memory_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32","nodeType":"YulIdentifier","src":"6545:88:17"},"nodeType":"YulFunctionCall","src":"6545:93:17"},"nodeType":"YulExpressionStatement","src":"6545:93:17"},{"nodeType":"YulAssignment","src":"6647:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6658:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6663:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6654:3:17"},"nodeType":"YulFunctionCall","src":"6654:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6647:3:17"}]}]},"name":"abi_encode_t_stringliteral_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6440:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6448:3:17","type":""}],"src":"6306:366:17"},{"body":{"nodeType":"YulBlock","src":"6824:220:17","statements":[{"nodeType":"YulAssignment","src":"6834:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6900:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6905:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6841:58:17"},"nodeType":"YulFunctionCall","src":"6841:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6834:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7006:3:17"}],"functionName":{"name":"store_literal_in_memory_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57","nodeType":"YulIdentifier","src":"6917:88:17"},"nodeType":"YulFunctionCall","src":"6917:93:17"},"nodeType":"YulExpressionStatement","src":"6917:93:17"},{"nodeType":"YulAssignment","src":"7019:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7030:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7035:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7026:3:17"},"nodeType":"YulFunctionCall","src":"7026:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7019:3:17"}]}]},"name":"abi_encode_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6812:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6820:3:17","type":""}],"src":"6678:366:17"},{"body":{"nodeType":"YulBlock","src":"7196:220:17","statements":[{"nodeType":"YulAssignment","src":"7206:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7272:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7277:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7213:58:17"},"nodeType":"YulFunctionCall","src":"7213:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7206:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7378:3:17"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"7289:88:17"},"nodeType":"YulFunctionCall","src":"7289:93:17"},"nodeType":"YulExpressionStatement","src":"7289:93:17"},{"nodeType":"YulAssignment","src":"7391:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7402:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7407:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7398:3:17"},"nodeType":"YulFunctionCall","src":"7398:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7391:3:17"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7184:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7192:3:17","type":""}],"src":"7050:366:17"},{"body":{"nodeType":"YulBlock","src":"7568:220:17","statements":[{"nodeType":"YulAssignment","src":"7578:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7644:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7649:2:17","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7585:58:17"},"nodeType":"YulFunctionCall","src":"7585:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7578:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7750:3:17"}],"functionName":{"name":"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","nodeType":"YulIdentifier","src":"7661:88:17"},"nodeType":"YulFunctionCall","src":"7661:93:17"},"nodeType":"YulExpressionStatement","src":"7661:93:17"},{"nodeType":"YulAssignment","src":"7763:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7774:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7779:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7770:3:17"},"nodeType":"YulFunctionCall","src":"7770:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7763:3:17"}]}]},"name":"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7556:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7564:3:17","type":""}],"src":"7422:366:17"},{"body":{"nodeType":"YulBlock","src":"7957:235:17","statements":[{"nodeType":"YulAssignment","src":"7967:90:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8050:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8055:1:17","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7974:75:17"},"nodeType":"YulFunctionCall","src":"7974:83:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7967:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8155:3:17"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"8066:88:17"},"nodeType":"YulFunctionCall","src":"8066:93:17"},"nodeType":"YulExpressionStatement","src":"8066:93:17"},{"nodeType":"YulAssignment","src":"8168:18:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8179:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8184:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8175:3:17"},"nodeType":"YulFunctionCall","src":"8175:11:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8168:3:17"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7945:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7953:3:17","type":""}],"src":"7794:398:17"},{"body":{"nodeType":"YulBlock","src":"8344:220:17","statements":[{"nodeType":"YulAssignment","src":"8354:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8420:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8425:2:17","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8361:58:17"},"nodeType":"YulFunctionCall","src":"8361:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8354:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8526:3:17"}],"functionName":{"name":"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","nodeType":"YulIdentifier","src":"8437:88:17"},"nodeType":"YulFunctionCall","src":"8437:93:17"},"nodeType":"YulExpressionStatement","src":"8437:93:17"},{"nodeType":"YulAssignment","src":"8539:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8550:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8555:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8546:3:17"},"nodeType":"YulFunctionCall","src":"8546:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8539:3:17"}]}]},"name":"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8332:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8340:3:17","type":""}],"src":"8198:366:17"},{"body":{"nodeType":"YulBlock","src":"8635:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8652:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8675:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8657:17:17"},"nodeType":"YulFunctionCall","src":"8657:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8645:6:17"},"nodeType":"YulFunctionCall","src":"8645:37:17"},"nodeType":"YulExpressionStatement","src":"8645:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8623:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8630:3:17","type":""}],"src":"8570:118:17"},{"body":{"nodeType":"YulBlock","src":"8882:191:17","statements":[{"nodeType":"YulAssignment","src":"8893:154:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9043:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8900:141:17"},"nodeType":"YulFunctionCall","src":"8900:147:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8893:3:17"}]},{"nodeType":"YulAssignment","src":"9057:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"9064:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9057:3:17"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8869:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8878:3:17","type":""}],"src":"8694:379:17"},{"body":{"nodeType":"YulBlock","src":"9177:124:17","statements":[{"nodeType":"YulAssignment","src":"9187:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9199:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9210:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9195:3:17"},"nodeType":"YulFunctionCall","src":"9195:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9187:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9267:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9280:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9291:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9276:3:17"},"nodeType":"YulFunctionCall","src":"9276:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9223:43:17"},"nodeType":"YulFunctionCall","src":"9223:71:17"},"nodeType":"YulExpressionStatement","src":"9223:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9149:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9161:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9172:4:17","type":""}],"src":"9079:222:17"},{"body":{"nodeType":"YulBlock","src":"9461:288:17","statements":[{"nodeType":"YulAssignment","src":"9471:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9483:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9494:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9479:3:17"},"nodeType":"YulFunctionCall","src":"9479:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9471:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9551:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9564:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9575:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9560:3:17"},"nodeType":"YulFunctionCall","src":"9560:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9507:43:17"},"nodeType":"YulFunctionCall","src":"9507:71:17"},"nodeType":"YulExpressionStatement","src":"9507:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9632:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9645:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9656:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9641:3:17"},"nodeType":"YulFunctionCall","src":"9641:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9588:43:17"},"nodeType":"YulFunctionCall","src":"9588:72:17"},"nodeType":"YulExpressionStatement","src":"9588:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9714:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9727:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9738:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9723:3:17"},"nodeType":"YulFunctionCall","src":"9723:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9670:43:17"},"nodeType":"YulFunctionCall","src":"9670:72:17"},"nodeType":"YulExpressionStatement","src":"9670:72:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9417:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9429:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9437:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9445:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9456:4:17","type":""}],"src":"9307:442:17"},{"body":{"nodeType":"YulBlock","src":"9937:371:17","statements":[{"nodeType":"YulAssignment","src":"9947:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9959:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9970:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9955:3:17"},"nodeType":"YulFunctionCall","src":"9955:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9947:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10028:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10041:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10052:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10037:3:17"},"nodeType":"YulFunctionCall","src":"10037:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9984:43:17"},"nodeType":"YulFunctionCall","src":"9984:71:17"},"nodeType":"YulExpressionStatement","src":"9984:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10109:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10122:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10133:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10118:3:17"},"nodeType":"YulFunctionCall","src":"10118:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10065:43:17"},"nodeType":"YulFunctionCall","src":"10065:72:17"},"nodeType":"YulExpressionStatement","src":"10065:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10191:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10204:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10215:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10200:3:17"},"nodeType":"YulFunctionCall","src":"10200:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10147:43:17"},"nodeType":"YulFunctionCall","src":"10147:72:17"},"nodeType":"YulExpressionStatement","src":"10147:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10273:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10286:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10297:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10282:3:17"},"nodeType":"YulFunctionCall","src":"10282:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10229:43:17"},"nodeType":"YulFunctionCall","src":"10229:72:17"},"nodeType":"YulExpressionStatement","src":"10229:72:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9885:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9897:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9905:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9913:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9921:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9932:4:17","type":""}],"src":"9755:553:17"},{"body":{"nodeType":"YulBlock","src":"10440:206:17","statements":[{"nodeType":"YulAssignment","src":"10450:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10462:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10473:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10458:3:17"},"nodeType":"YulFunctionCall","src":"10458:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10450:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10530:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10543:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10554:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10539:3:17"},"nodeType":"YulFunctionCall","src":"10539:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10486:43:17"},"nodeType":"YulFunctionCall","src":"10486:71:17"},"nodeType":"YulExpressionStatement","src":"10486:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10611:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10624:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10635:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10620:3:17"},"nodeType":"YulFunctionCall","src":"10620:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10567:43:17"},"nodeType":"YulFunctionCall","src":"10567:72:17"},"nodeType":"YulExpressionStatement","src":"10567:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10404:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10416:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10424:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10435:4:17","type":""}],"src":"10314:332:17"},{"body":{"nodeType":"YulBlock","src":"10823:248:17","statements":[{"nodeType":"YulAssignment","src":"10833:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10845:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10856:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10841:3:17"},"nodeType":"YulFunctionCall","src":"10841:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10833:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10880:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10891:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10876:3:17"},"nodeType":"YulFunctionCall","src":"10876:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10899:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10905:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10895:3:17"},"nodeType":"YulFunctionCall","src":"10895:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10869:6:17"},"nodeType":"YulFunctionCall","src":"10869:47:17"},"nodeType":"YulExpressionStatement","src":"10869:47:17"},{"nodeType":"YulAssignment","src":"10925:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11059:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10933:124:17"},"nodeType":"YulFunctionCall","src":"10933:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10925:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10803:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10818:4:17","type":""}],"src":"10652:419:17"},{"body":{"nodeType":"YulBlock","src":"11248:248:17","statements":[{"nodeType":"YulAssignment","src":"11258:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11270:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11281:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11266:3:17"},"nodeType":"YulFunctionCall","src":"11266:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11258:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11305:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11316:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11301:3:17"},"nodeType":"YulFunctionCall","src":"11301:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11324:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11330:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11320:3:17"},"nodeType":"YulFunctionCall","src":"11320:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11294:6:17"},"nodeType":"YulFunctionCall","src":"11294:47:17"},"nodeType":"YulExpressionStatement","src":"11294:47:17"},{"nodeType":"YulAssignment","src":"11350:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11484:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11358:124:17"},"nodeType":"YulFunctionCall","src":"11358:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11350:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11228:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11243:4:17","type":""}],"src":"11077:419:17"},{"body":{"nodeType":"YulBlock","src":"11673:248:17","statements":[{"nodeType":"YulAssignment","src":"11683:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11695:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11706:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11691:3:17"},"nodeType":"YulFunctionCall","src":"11691:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11683:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11730:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11741:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11726:3:17"},"nodeType":"YulFunctionCall","src":"11726:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11749:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11755:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11745:3:17"},"nodeType":"YulFunctionCall","src":"11745:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11719:6:17"},"nodeType":"YulFunctionCall","src":"11719:47:17"},"nodeType":"YulExpressionStatement","src":"11719:47:17"},{"nodeType":"YulAssignment","src":"11775:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11909:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11783:124:17"},"nodeType":"YulFunctionCall","src":"11783:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11775:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11653:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11668:4:17","type":""}],"src":"11502:419:17"},{"body":{"nodeType":"YulBlock","src":"12098:248:17","statements":[{"nodeType":"YulAssignment","src":"12108:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12120:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12131:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12116:3:17"},"nodeType":"YulFunctionCall","src":"12116:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12108:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12155:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12166:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12151:3:17"},"nodeType":"YulFunctionCall","src":"12151:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12174:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"12180:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12170:3:17"},"nodeType":"YulFunctionCall","src":"12170:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12144:6:17"},"nodeType":"YulFunctionCall","src":"12144:47:17"},"nodeType":"YulExpressionStatement","src":"12144:47:17"},{"nodeType":"YulAssignment","src":"12200:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12334:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12208:124:17"},"nodeType":"YulFunctionCall","src":"12208:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12200:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12078:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12093:4:17","type":""}],"src":"11927:419:17"},{"body":{"nodeType":"YulBlock","src":"12523:248:17","statements":[{"nodeType":"YulAssignment","src":"12533:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12545:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12556:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12541:3:17"},"nodeType":"YulFunctionCall","src":"12541:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12533:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12580:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12591:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12576:3:17"},"nodeType":"YulFunctionCall","src":"12576:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12599:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"12605:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12595:3:17"},"nodeType":"YulFunctionCall","src":"12595:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12569:6:17"},"nodeType":"YulFunctionCall","src":"12569:47:17"},"nodeType":"YulExpressionStatement","src":"12569:47:17"},{"nodeType":"YulAssignment","src":"12625:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12759:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12633:124:17"},"nodeType":"YulFunctionCall","src":"12633:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12625:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12503:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12518:4:17","type":""}],"src":"12352:419:17"},{"body":{"nodeType":"YulBlock","src":"12948:248:17","statements":[{"nodeType":"YulAssignment","src":"12958:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12970:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12981:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12966:3:17"},"nodeType":"YulFunctionCall","src":"12966:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12958:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13005:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13016:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13001:3:17"},"nodeType":"YulFunctionCall","src":"13001:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13024:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13030:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13020:3:17"},"nodeType":"YulFunctionCall","src":"13020:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12994:6:17"},"nodeType":"YulFunctionCall","src":"12994:47:17"},"nodeType":"YulExpressionStatement","src":"12994:47:17"},{"nodeType":"YulAssignment","src":"13050:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13184:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13058:124:17"},"nodeType":"YulFunctionCall","src":"13058:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13050:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12928:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12943:4:17","type":""}],"src":"12777:419:17"},{"body":{"nodeType":"YulBlock","src":"13373:248:17","statements":[{"nodeType":"YulAssignment","src":"13383:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13395:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13406:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13391:3:17"},"nodeType":"YulFunctionCall","src":"13391:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13383:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13430:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13441:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13426:3:17"},"nodeType":"YulFunctionCall","src":"13426:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13449:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13455:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13445:3:17"},"nodeType":"YulFunctionCall","src":"13445:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13419:6:17"},"nodeType":"YulFunctionCall","src":"13419:47:17"},"nodeType":"YulExpressionStatement","src":"13419:47:17"},{"nodeType":"YulAssignment","src":"13475:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13609:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13483:124:17"},"nodeType":"YulFunctionCall","src":"13483:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13475:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13353:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13368:4:17","type":""}],"src":"13202:419:17"},{"body":{"nodeType":"YulBlock","src":"13798:248:17","statements":[{"nodeType":"YulAssignment","src":"13808:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13820:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13831:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13816:3:17"},"nodeType":"YulFunctionCall","src":"13816:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13808:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13855:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13866:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13851:3:17"},"nodeType":"YulFunctionCall","src":"13851:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13874:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13880:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13870:3:17"},"nodeType":"YulFunctionCall","src":"13870:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13844:6:17"},"nodeType":"YulFunctionCall","src":"13844:47:17"},"nodeType":"YulExpressionStatement","src":"13844:47:17"},{"nodeType":"YulAssignment","src":"13900:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14034:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13908:124:17"},"nodeType":"YulFunctionCall","src":"13908:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13900:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13778:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13793:4:17","type":""}],"src":"13627:419:17"},{"body":{"nodeType":"YulBlock","src":"14223:248:17","statements":[{"nodeType":"YulAssignment","src":"14233:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14245:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14256:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14241:3:17"},"nodeType":"YulFunctionCall","src":"14241:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14233:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14280:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14291:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14276:3:17"},"nodeType":"YulFunctionCall","src":"14276:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14299:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14305:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14295:3:17"},"nodeType":"YulFunctionCall","src":"14295:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14269:6:17"},"nodeType":"YulFunctionCall","src":"14269:47:17"},"nodeType":"YulExpressionStatement","src":"14269:47:17"},{"nodeType":"YulAssignment","src":"14325:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14459:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14333:124:17"},"nodeType":"YulFunctionCall","src":"14333:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14325:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14203:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14218:4:17","type":""}],"src":"14052:419:17"},{"body":{"nodeType":"YulBlock","src":"14648:248:17","statements":[{"nodeType":"YulAssignment","src":"14658:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14670:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14681:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14666:3:17"},"nodeType":"YulFunctionCall","src":"14666:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14658:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14705:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14716:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14701:3:17"},"nodeType":"YulFunctionCall","src":"14701:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14724:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14730:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14720:3:17"},"nodeType":"YulFunctionCall","src":"14720:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14694:6:17"},"nodeType":"YulFunctionCall","src":"14694:47:17"},"nodeType":"YulExpressionStatement","src":"14694:47:17"},{"nodeType":"YulAssignment","src":"14750:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14884:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14758:124:17"},"nodeType":"YulFunctionCall","src":"14758:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14750:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14628:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14643:4:17","type":""}],"src":"14477:419:17"},{"body":{"nodeType":"YulBlock","src":"15073:248:17","statements":[{"nodeType":"YulAssignment","src":"15083:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15095:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15106:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15091:3:17"},"nodeType":"YulFunctionCall","src":"15091:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15083:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15130:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15141:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15126:3:17"},"nodeType":"YulFunctionCall","src":"15126:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15149:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15155:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15145:3:17"},"nodeType":"YulFunctionCall","src":"15145:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15119:6:17"},"nodeType":"YulFunctionCall","src":"15119:47:17"},"nodeType":"YulExpressionStatement","src":"15119:47:17"},{"nodeType":"YulAssignment","src":"15175:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15309:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15183:124:17"},"nodeType":"YulFunctionCall","src":"15183:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15175:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15053:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15068:4:17","type":""}],"src":"14902:419:17"},{"body":{"nodeType":"YulBlock","src":"15425:124:17","statements":[{"nodeType":"YulAssignment","src":"15435:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15447:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15458:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15443:3:17"},"nodeType":"YulFunctionCall","src":"15443:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15435:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15515:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15528:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15539:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15524:3:17"},"nodeType":"YulFunctionCall","src":"15524:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15471:43:17"},"nodeType":"YulFunctionCall","src":"15471:71:17"},"nodeType":"YulExpressionStatement","src":"15471:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15397:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15409:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15420:4:17","type":""}],"src":"15327:222:17"},{"body":{"nodeType":"YulBlock","src":"15595:35:17","statements":[{"nodeType":"YulAssignment","src":"15605:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15621:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15615:5:17"},"nodeType":"YulFunctionCall","src":"15615:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15605:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15588:6:17","type":""}],"src":"15555:75:17"},{"body":{"nodeType":"YulBlock","src":"15749:34:17","statements":[{"nodeType":"YulAssignment","src":"15759:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"15774:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15759:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15721:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"15726:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15737:11:17","type":""}],"src":"15636:147:17"},{"body":{"nodeType":"YulBlock","src":"15885:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15902:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"15907:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15895:6:17"},"nodeType":"YulFunctionCall","src":"15895:19:17"},"nodeType":"YulExpressionStatement","src":"15895:19:17"},{"nodeType":"YulAssignment","src":"15923:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15942:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15947:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15938:3:17"},"nodeType":"YulFunctionCall","src":"15938:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15923:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15857:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"15862:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15873:11:17","type":""}],"src":"15789:169:17"},{"body":{"nodeType":"YulBlock","src":"16008:261:17","statements":[{"nodeType":"YulAssignment","src":"16018:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16041:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16023:17:17"},"nodeType":"YulFunctionCall","src":"16023:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16018:1:17"}]},{"nodeType":"YulAssignment","src":"16052:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16075:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16057:17:17"},"nodeType":"YulFunctionCall","src":"16057:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16052:1:17"}]},{"body":{"nodeType":"YulBlock","src":"16215:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16217:16:17"},"nodeType":"YulFunctionCall","src":"16217:18:17"},"nodeType":"YulExpressionStatement","src":"16217:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16136:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16143:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"16211:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16139:3:17"},"nodeType":"YulFunctionCall","src":"16139:74:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16133:2:17"},"nodeType":"YulFunctionCall","src":"16133:81:17"},"nodeType":"YulIf","src":"16130:107:17"},{"nodeType":"YulAssignment","src":"16247:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16258:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"16261:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16254:3:17"},"nodeType":"YulFunctionCall","src":"16254:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16247:3:17"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15995:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"15998:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16004:3:17","type":""}],"src":"15964:305:17"},{"body":{"nodeType":"YulBlock","src":"16317:143:17","statements":[{"nodeType":"YulAssignment","src":"16327:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16350:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16332:17:17"},"nodeType":"YulFunctionCall","src":"16332:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16327:1:17"}]},{"nodeType":"YulAssignment","src":"16361:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16384:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16366:17:17"},"nodeType":"YulFunctionCall","src":"16366:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16361:1:17"}]},{"body":{"nodeType":"YulBlock","src":"16408:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"16410:16:17"},"nodeType":"YulFunctionCall","src":"16410:18:17"},"nodeType":"YulExpressionStatement","src":"16410:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16405:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16398:6:17"},"nodeType":"YulFunctionCall","src":"16398:9:17"},"nodeType":"YulIf","src":"16395:35:17"},{"nodeType":"YulAssignment","src":"16440:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16449:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"16452:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16445:3:17"},"nodeType":"YulFunctionCall","src":"16445:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"16440:1:17"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16306:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"16309:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"16315:1:17","type":""}],"src":"16275:185:17"},{"body":{"nodeType":"YulBlock","src":"16539:775:17","statements":[{"nodeType":"YulAssignment","src":"16549:15:17","value":{"name":"_power","nodeType":"YulIdentifier","src":"16558:6:17"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16549:5:17"}]},{"nodeType":"YulAssignment","src":"16573:14:17","value":{"name":"_base","nodeType":"YulIdentifier","src":"16582:5:17"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"16573:4:17"}]},{"body":{"nodeType":"YulBlock","src":"16631:677:17","statements":[{"body":{"nodeType":"YulBlock","src":"16719:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16721:16:17"},"nodeType":"YulFunctionCall","src":"16721:18:17"},"nodeType":"YulExpressionStatement","src":"16721:18:17"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16697:4:17"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"16707:3:17"},{"name":"base","nodeType":"YulIdentifier","src":"16712:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16703:3:17"},"nodeType":"YulFunctionCall","src":"16703:14:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16694:2:17"},"nodeType":"YulFunctionCall","src":"16694:24:17"},"nodeType":"YulIf","src":"16691:50:17"},{"body":{"nodeType":"YulBlock","src":"16786:419:17","statements":[{"nodeType":"YulAssignment","src":"17166:25:17","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"17179:5:17"},{"name":"base","nodeType":"YulIdentifier","src":"17186:4:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17175:3:17"},"nodeType":"YulFunctionCall","src":"17175:16:17"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17166:5:17"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16761:8:17"},{"kind":"number","nodeType":"YulLiteral","src":"16771:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16757:3:17"},"nodeType":"YulFunctionCall","src":"16757:16:17"},"nodeType":"YulIf","src":"16754:451:17"},{"nodeType":"YulAssignment","src":"17218:23:17","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17230:4:17"},{"name":"base","nodeType":"YulIdentifier","src":"17236:4:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17226:3:17"},"nodeType":"YulFunctionCall","src":"17226:15:17"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"17218:4:17"}]},{"nodeType":"YulAssignment","src":"17254:44:17","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17289:8:17"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"17266:22:17"},"nodeType":"YulFunctionCall","src":"17266:32:17"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"17254:8:17"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16607:8:17"},{"kind":"number","nodeType":"YulLiteral","src":"16617:1:17","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16604:2:17"},"nodeType":"YulFunctionCall","src":"16604:15:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16620:2:17","statements":[]},"pre":{"nodeType":"YulBlock","src":"16600:3:17","statements":[]},"src":"16596:712:17"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"16494:6:17","type":""},{"name":"_base","nodeType":"YulTypedName","src":"16502:5:17","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"16509:8:17","type":""},{"name":"max","nodeType":"YulTypedName","src":"16519:3:17","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"16527:5:17","type":""},{"name":"base","nodeType":"YulTypedName","src":"16534:4:17","type":""}],"src":"16466:848:17"},{"body":{"nodeType":"YulBlock","src":"17386:219:17","statements":[{"nodeType":"YulAssignment","src":"17396:31:17","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17422:4:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17404:17:17"},"nodeType":"YulFunctionCall","src":"17404:23:17"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"17396:4:17"}]},{"nodeType":"YulAssignment","src":"17436:39:17","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17466:8:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17448:17:17"},"nodeType":"YulFunctionCall","src":"17448:27:17"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"17436:8:17"}]},{"nodeType":"YulAssignment","src":"17485:113:17","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17515:4:17"},{"name":"exponent","nodeType":"YulIdentifier","src":"17521:8:17"},{"kind":"number","nodeType":"YulLiteral","src":"17531:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"17494:20:17"},"nodeType":"YulFunctionCall","src":"17494:104:17"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17485:5:17"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"17361:4:17","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17367:8:17","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17380:5:17","type":""}],"src":"17320:285:17"},{"body":{"nodeType":"YulBlock","src":"17671:1013:17","statements":[{"body":{"nodeType":"YulBlock","src":"17866:20:17","statements":[{"nodeType":"YulAssignment","src":"17868:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"17877:1:17","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17868:5:17"}]},{"nodeType":"YulLeave","src":"17879:5:17"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17856:8:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17849:6:17"},"nodeType":"YulFunctionCall","src":"17849:16:17"},"nodeType":"YulIf","src":"17846:40:17"},{"body":{"nodeType":"YulBlock","src":"17911:20:17","statements":[{"nodeType":"YulAssignment","src":"17913:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"17922:1:17","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17913:5:17"}]},{"nodeType":"YulLeave","src":"17924:5:17"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17905:4:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17898:6:17"},"nodeType":"YulFunctionCall","src":"17898:12:17"},"nodeType":"YulIf","src":"17895:36:17"},{"cases":[{"body":{"nodeType":"YulBlock","src":"18041:20:17","statements":[{"nodeType":"YulAssignment","src":"18043:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"18052:1:17","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18043:5:17"}]},{"nodeType":"YulLeave","src":"18054:5:17"}]},"nodeType":"YulCase","src":"18034:27:17","value":{"kind":"number","nodeType":"YulLiteral","src":"18039:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18085:176:17","statements":[{"body":{"nodeType":"YulBlock","src":"18120:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18122:16:17"},"nodeType":"YulFunctionCall","src":"18122:18:17"},"nodeType":"YulExpressionStatement","src":"18122:18:17"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18105:8:17"},{"kind":"number","nodeType":"YulLiteral","src":"18115:3:17","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18102:2:17"},"nodeType":"YulFunctionCall","src":"18102:17:17"},"nodeType":"YulIf","src":"18099:43:17"},{"nodeType":"YulAssignment","src":"18155:25:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18168:1:17","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"18171:8:17"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"18164:3:17"},"nodeType":"YulFunctionCall","src":"18164:16:17"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18155:5:17"}]},{"body":{"nodeType":"YulBlock","src":"18211:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18213:16:17"},"nodeType":"YulFunctionCall","src":"18213:18:17"},"nodeType":"YulExpressionStatement","src":"18213:18:17"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"18199:5:17"},{"name":"max","nodeType":"YulIdentifier","src":"18206:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18196:2:17"},"nodeType":"YulFunctionCall","src":"18196:14:17"},"nodeType":"YulIf","src":"18193:40:17"},{"nodeType":"YulLeave","src":"18246:5:17"}]},"nodeType":"YulCase","src":"18070:191:17","value":{"kind":"number","nodeType":"YulLiteral","src":"18075:1:17","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"17991:4:17"},"nodeType":"YulSwitch","src":"17984:277:17"},{"body":{"nodeType":"YulBlock","src":"18393:123:17","statements":[{"nodeType":"YulAssignment","src":"18407:28:17","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18420:4:17"},{"name":"exponent","nodeType":"YulIdentifier","src":"18426:8:17"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"18416:3:17"},"nodeType":"YulFunctionCall","src":"18416:19:17"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18407:5:17"}]},{"body":{"nodeType":"YulBlock","src":"18466:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18468:16:17"},"nodeType":"YulFunctionCall","src":"18468:18:17"},"nodeType":"YulExpressionStatement","src":"18468:18:17"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"18454:5:17"},{"name":"max","nodeType":"YulIdentifier","src":"18461:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18451:2:17"},"nodeType":"YulFunctionCall","src":"18451:14:17"},"nodeType":"YulIf","src":"18448:40:17"},{"nodeType":"YulLeave","src":"18501:5:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18296:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"18302:2:17","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18293:2:17"},"nodeType":"YulFunctionCall","src":"18293:12:17"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18310:8:17"},{"kind":"number","nodeType":"YulLiteral","src":"18320:2:17","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18307:2:17"},"nodeType":"YulFunctionCall","src":"18307:16:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18289:3:17"},"nodeType":"YulFunctionCall","src":"18289:35:17"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18345:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"18351:3:17","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18342:2:17"},"nodeType":"YulFunctionCall","src":"18342:13:17"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18360:8:17"},{"kind":"number","nodeType":"YulLiteral","src":"18370:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18357:2:17"},"nodeType":"YulFunctionCall","src":"18357:16:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18338:3:17"},"nodeType":"YulFunctionCall","src":"18338:36:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18273:2:17"},"nodeType":"YulFunctionCall","src":"18273:111:17"},"nodeType":"YulIf","src":"18270:246:17"},{"nodeType":"YulAssignment","src":"18526:57:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:1:17","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"18563:4:17"},{"name":"exponent","nodeType":"YulIdentifier","src":"18569:8:17"},{"name":"max","nodeType":"YulIdentifier","src":"18579:3:17"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"18541:18:17"},"nodeType":"YulFunctionCall","src":"18541:42:17"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18526:5:17"},{"name":"base","nodeType":"YulIdentifier","src":"18533:4:17"}]},{"body":{"nodeType":"YulBlock","src":"18622:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18624:16:17"},"nodeType":"YulFunctionCall","src":"18624:18:17"},"nodeType":"YulExpressionStatement","src":"18624:18:17"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"18599:5:17"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"18610:3:17"},{"name":"base","nodeType":"YulIdentifier","src":"18615:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18606:3:17"},"nodeType":"YulFunctionCall","src":"18606:14:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18596:2:17"},"nodeType":"YulFunctionCall","src":"18596:25:17"},"nodeType":"YulIf","src":"18593:51:17"},{"nodeType":"YulAssignment","src":"18653:25:17","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"18666:5:17"},{"name":"base","nodeType":"YulIdentifier","src":"18673:4:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18662:3:17"},"nodeType":"YulFunctionCall","src":"18662:16:17"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18653:5:17"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"17641:4:17","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17647:8:17","type":""},{"name":"max","nodeType":"YulTypedName","src":"17657:3:17","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17665:5:17","type":""}],"src":"17611:1073:17"},{"body":{"nodeType":"YulBlock","src":"18738:300:17","statements":[{"nodeType":"YulAssignment","src":"18748:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18771:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18753:17:17"},"nodeType":"YulFunctionCall","src":"18753:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18748:1:17"}]},{"nodeType":"YulAssignment","src":"18782:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18805:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18787:17:17"},"nodeType":"YulFunctionCall","src":"18787:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18782:1:17"}]},{"body":{"nodeType":"YulBlock","src":"18980:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18982:16:17"},"nodeType":"YulFunctionCall","src":"18982:18:17"},"nodeType":"YulExpressionStatement","src":"18982:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18892:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18885:6:17"},"nodeType":"YulFunctionCall","src":"18885:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18878:6:17"},"nodeType":"YulFunctionCall","src":"18878:17:17"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18900:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18907:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"18975:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18903:3:17"},"nodeType":"YulFunctionCall","src":"18903:74:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18897:2:17"},"nodeType":"YulFunctionCall","src":"18897:81:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18874:3:17"},"nodeType":"YulFunctionCall","src":"18874:105:17"},"nodeType":"YulIf","src":"18871:131:17"},{"nodeType":"YulAssignment","src":"19012:20:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19027:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"19030:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19023:3:17"},"nodeType":"YulFunctionCall","src":"19023:9:17"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"19012:7:17"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18721:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"18724:1:17","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"18730:7:17","type":""}],"src":"18690:348:17"},{"body":{"nodeType":"YulBlock","src":"19089:146:17","statements":[{"nodeType":"YulAssignment","src":"19099:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19122:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19104:17:17"},"nodeType":"YulFunctionCall","src":"19104:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19099:1:17"}]},{"nodeType":"YulAssignment","src":"19133:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19156:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19138:17:17"},"nodeType":"YulFunctionCall","src":"19138:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19133:1:17"}]},{"body":{"nodeType":"YulBlock","src":"19180:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19182:16:17"},"nodeType":"YulFunctionCall","src":"19182:18:17"},"nodeType":"YulExpressionStatement","src":"19182:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19174:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"19177:1:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19171:2:17"},"nodeType":"YulFunctionCall","src":"19171:8:17"},"nodeType":"YulIf","src":"19168:34:17"},{"nodeType":"YulAssignment","src":"19212:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19224:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"19227:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19220:3:17"},"nodeType":"YulFunctionCall","src":"19220:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19212:4:17"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19075:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"19078:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19084:4:17","type":""}],"src":"19044:191:17"},{"body":{"nodeType":"YulBlock","src":"19286:51:17","statements":[{"nodeType":"YulAssignment","src":"19296:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19325:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"19307:17:17"},"nodeType":"YulFunctionCall","src":"19307:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19296:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19268:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19278:7:17","type":""}],"src":"19241:96:17"},{"body":{"nodeType":"YulBlock","src":"19385:48:17","statements":[{"nodeType":"YulAssignment","src":"19395:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19420:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19413:6:17"},"nodeType":"YulFunctionCall","src":"19413:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19406:6:17"},"nodeType":"YulFunctionCall","src":"19406:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19395:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19367:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19377:7:17","type":""}],"src":"19343:90:17"},{"body":{"nodeType":"YulBlock","src":"19484:81:17","statements":[{"nodeType":"YulAssignment","src":"19494:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19509:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"19516:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19505:3:17"},"nodeType":"YulFunctionCall","src":"19505:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19494:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19466:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19476:7:17","type":""}],"src":"19439:126:17"},{"body":{"nodeType":"YulBlock","src":"19616:32:17","statements":[{"nodeType":"YulAssignment","src":"19626:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"19637:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19626:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19598:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19608:7:17","type":""}],"src":"19571:77:17"},{"body":{"nodeType":"YulBlock","src":"19682:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19699:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19702:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19692:6:17"},"nodeType":"YulFunctionCall","src":"19692:88:17"},"nodeType":"YulExpressionStatement","src":"19692:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19796:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19799:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:17"},"nodeType":"YulFunctionCall","src":"19789:15:17"},"nodeType":"YulExpressionStatement","src":"19789:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19820:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19823:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19813:6:17"},"nodeType":"YulFunctionCall","src":"19813:15:17"},"nodeType":"YulExpressionStatement","src":"19813:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19654:180:17"},{"body":{"nodeType":"YulBlock","src":"19868:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19885:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19888:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19878:6:17"},"nodeType":"YulFunctionCall","src":"19878:88:17"},"nodeType":"YulExpressionStatement","src":"19878:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19982:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19985:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19975:6:17"},"nodeType":"YulFunctionCall","src":"19975:15:17"},"nodeType":"YulExpressionStatement","src":"19975:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20006:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20009:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19999:6:17"},"nodeType":"YulFunctionCall","src":"19999:15:17"},"nodeType":"YulExpressionStatement","src":"19999:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"19840:180:17"},{"body":{"nodeType":"YulBlock","src":"20115:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20132:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20135:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20125:6:17"},"nodeType":"YulFunctionCall","src":"20125:12:17"},"nodeType":"YulExpressionStatement","src":"20125:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20026:117:17"},{"body":{"nodeType":"YulBlock","src":"20238:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20255:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20258:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20248:6:17"},"nodeType":"YulFunctionCall","src":"20248:12:17"},"nodeType":"YulExpressionStatement","src":"20248:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"20149:117:17"},{"body":{"nodeType":"YulBlock","src":"20323:51:17","statements":[{"nodeType":"YulAssignment","src":"20333:34:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20358:1:17","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"20361:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20354:3:17"},"nodeType":"YulFunctionCall","src":"20354:13:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"20333:8:17"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20304:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"20314:8:17","type":""}],"src":"20272:102:17"},{"body":{"nodeType":"YulBlock","src":"20486:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20508:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20516:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20504:3:17"},"nodeType":"YulFunctionCall","src":"20504:14:17"},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","kind":"string","nodeType":"YulLiteral","src":"20520:26:17","type":"","value":"Reentrant call detected!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20497:6:17"},"nodeType":"YulFunctionCall","src":"20497:50:17"},"nodeType":"YulExpressionStatement","src":"20497:50:17"}]},"name":"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20478:6:17","type":""}],"src":"20380:174:17"},{"body":{"nodeType":"YulBlock","src":"20666:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20688:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20696:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20684:3:17"},"nodeType":"YulFunctionCall","src":"20684:14:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"20700:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20677:6:17"},"nodeType":"YulFunctionCall","src":"20677:58:17"},"nodeType":"YulExpressionStatement","src":"20677:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20756:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20764:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20752:3:17"},"nodeType":"YulFunctionCall","src":"20752:15:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"20769:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20745:6:17"},"nodeType":"YulFunctionCall","src":"20745:33:17"},"nodeType":"YulExpressionStatement","src":"20745:33:17"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20658:6:17","type":""}],"src":"20560:225:17"},{"body":{"nodeType":"YulBlock","src":"20897:62:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20919:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20927:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20915:3:17"},"nodeType":"YulFunctionCall","src":"20915:14:17"},{"hexValue":"496e76616c696420546f6b656e2054797065","kind":"string","nodeType":"YulLiteral","src":"20931:20:17","type":"","value":"Invalid Token Type"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20908:6:17"},"nodeType":"YulFunctionCall","src":"20908:44:17"},"nodeType":"YulExpressionStatement","src":"20908:44:17"}]},"name":"store_literal_in_memory_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20889:6:17","type":""}],"src":"20791:168:17"},{"body":{"nodeType":"YulBlock","src":"21071:65:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21093:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21101:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21089:3:17"},"nodeType":"YulFunctionCall","src":"21089:14:17"},{"hexValue":"6661696c656420746f2073656e6420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"21105:23:17","type":"","value":"failed to send amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21082:6:17"},"nodeType":"YulFunctionCall","src":"21082:47:17"},"nodeType":"YulExpressionStatement","src":"21082:47:17"}]},"name":"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21063:6:17","type":""}],"src":"20965:171:17"},{"body":{"nodeType":"YulBlock","src":"21248:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21270:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21278:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21266:3:17"},"nodeType":"YulFunctionCall","src":"21266:14:17"},{"hexValue":"496e73756666696369656e742062616c616e63652045544820746f2077697468","kind":"string","nodeType":"YulLiteral","src":"21282:34:17","type":"","value":"Insufficient balance ETH to with"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21259:6:17"},"nodeType":"YulFunctionCall","src":"21259:58:17"},"nodeType":"YulExpressionStatement","src":"21259:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21338:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21346:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21334:3:17"},"nodeType":"YulFunctionCall","src":"21334:15:17"},{"hexValue":"64726177","kind":"string","nodeType":"YulLiteral","src":"21351:6:17","type":"","value":"draw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21327:6:17"},"nodeType":"YulFunctionCall","src":"21327:31:17"},"nodeType":"YulExpressionStatement","src":"21327:31:17"}]},"name":"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21240:6:17","type":""}],"src":"21142:223:17"},{"body":{"nodeType":"YulBlock","src":"21477:74:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21499:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21507:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21495:3:17"},"nodeType":"YulFunctionCall","src":"21495:14:17"},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","kind":"string","nodeType":"YulLiteral","src":"21511:32:17","type":"","value":"Token not verified on Exchange"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21488:6:17"},"nodeType":"YulFunctionCall","src":"21488:56:17"},"nodeType":"YulExpressionStatement","src":"21488:56:17"}]},"name":"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21469:6:17","type":""}],"src":"21371:180:17"},{"body":{"nodeType":"YulBlock","src":"21663:115:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21685:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21693:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21681:3:17"},"nodeType":"YulFunctionCall","src":"21681:14:17"},{"hexValue":"4e6f742045786368616e6765206f722066696c6c4f7264657220636f6e747261","kind":"string","nodeType":"YulLiteral","src":"21697:34:17","type":"","value":"Not Exchange or fillOrder contra"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21674:6:17"},"nodeType":"YulFunctionCall","src":"21674:58:17"},"nodeType":"YulExpressionStatement","src":"21674:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21753:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21761:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21749:3:17"},"nodeType":"YulFunctionCall","src":"21749:15:17"},{"hexValue":"6374","kind":"string","nodeType":"YulLiteral","src":"21766:4:17","type":"","value":"ct"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21742:6:17"},"nodeType":"YulFunctionCall","src":"21742:29:17"},"nodeType":"YulExpressionStatement","src":"21742:29:17"}]},"name":"store_literal_in_memory_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21655:6:17","type":""}],"src":"21557:221:17"},{"body":{"nodeType":"YulBlock","src":"21890:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21912:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21920:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21908:3:17"},"nodeType":"YulFunctionCall","src":"21908:14:17"},{"hexValue":"496e76616c69642046756e6457616c6c6574206164647265737320746f207769","kind":"string","nodeType":"YulLiteral","src":"21924:34:17","type":"","value":"Invalid FundWallet address to wi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21901:6:17"},"nodeType":"YulFunctionCall","src":"21901:58:17"},"nodeType":"YulExpressionStatement","src":"21901:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21980:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21988:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21976:3:17"},"nodeType":"YulFunctionCall","src":"21976:15:17"},{"hexValue":"746864726177","kind":"string","nodeType":"YulLiteral","src":"21993:8:17","type":"","value":"thdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21969:6:17"},"nodeType":"YulFunctionCall","src":"21969:33:17"},"nodeType":"YulExpressionStatement","src":"21969:33:17"}]},"name":"store_literal_in_memory_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21882:6:17","type":""}],"src":"21784:225:17"},{"body":{"nodeType":"YulBlock","src":"22121:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22143:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22151:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22139:3:17"},"nodeType":"YulFunctionCall","src":"22139:14:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22155:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22132:6:17"},"nodeType":"YulFunctionCall","src":"22132:58:17"},"nodeType":"YulExpressionStatement","src":"22132:58:17"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22113:6:17","type":""}],"src":"22015:182:17"},{"body":{"nodeType":"YulBlock","src":"22309:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22331:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22339:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22327:3:17"},"nodeType":"YulFunctionCall","src":"22327:14:17"},{"hexValue":"496e73756666696369656e7420546f6b656e7320746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"22343:33:17","type":"","value":"Insufficient Tokens to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22320:6:17"},"nodeType":"YulFunctionCall","src":"22320:57:17"},"nodeType":"YulExpressionStatement","src":"22320:57:17"}]},"name":"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22301:6:17","type":""}],"src":"22203:181:17"},{"body":{"nodeType":"YulBlock","src":"22496:8:17","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22488:6:17","type":""}],"src":"22390:114:17"},{"body":{"nodeType":"YulBlock","src":"22616:59:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22638:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22646:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22634:3:17"},"nodeType":"YulFunctionCall","src":"22634:14:17"},{"hexValue":"4e6f20417070726f76616c20796574","kind":"string","nodeType":"YulLiteral","src":"22650:17:17","type":"","value":"No Approval yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22627:6:17"},"nodeType":"YulFunctionCall","src":"22627:41:17"},"nodeType":"YulExpressionStatement","src":"22627:41:17"}]},"name":"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22608:6:17","type":""}],"src":"22510:165:17"},{"body":{"nodeType":"YulBlock","src":"22724:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"22781:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22790:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22793:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22783:6:17"},"nodeType":"YulFunctionCall","src":"22783:12:17"},"nodeType":"YulExpressionStatement","src":"22783:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22747:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22772:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"22754:17:17"},"nodeType":"YulFunctionCall","src":"22754:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22744:2:17"},"nodeType":"YulFunctionCall","src":"22744:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22737:6:17"},"nodeType":"YulFunctionCall","src":"22737:43:17"},"nodeType":"YulIf","src":"22734:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22717:5:17","type":""}],"src":"22681:122:17"},{"body":{"nodeType":"YulBlock","src":"22849:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"22903:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22912:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22915:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22905:6:17"},"nodeType":"YulFunctionCall","src":"22905:12:17"},"nodeType":"YulExpressionStatement","src":"22905:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22872:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22894:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22879:14:17"},"nodeType":"YulFunctionCall","src":"22879:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22869:2:17"},"nodeType":"YulFunctionCall","src":"22869:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22862:6:17"},"nodeType":"YulFunctionCall","src":"22862:40:17"},"nodeType":"YulIf","src":"22859:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22842:5:17","type":""}],"src":"22809:116:17"},{"body":{"nodeType":"YulBlock","src":"22974:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"23031:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23040:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23043:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23033:6:17"},"nodeType":"YulFunctionCall","src":"23033:12:17"},"nodeType":"YulExpressionStatement","src":"23033:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22997:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23022:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23004:17:17"},"nodeType":"YulFunctionCall","src":"23004:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22994:2:17"},"nodeType":"YulFunctionCall","src":"22994:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22987:6:17"},"nodeType":"YulFunctionCall","src":"22987:43:17"},"nodeType":"YulIf","src":"22984:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22967:5:17","type":""}],"src":"22931:122:17"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reentrant call detected!\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Token Type\")\n\n    }\n\n    function store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"failed to send amount\")\n\n    }\n\n    function store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance ETH to with\")\n\n        mstore(add(memPtr, 32), \"draw\")\n\n    }\n\n    function store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not verified on Exchange\")\n\n    }\n\n    function store_literal_in_memory_8d6d50882fd00d8c32bed31b389d07bd869c79695f969a4e401bd9a9a5d3be32(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Exchange or fillOrder contra\")\n\n        mstore(add(memPtr, 32), \"ct\")\n\n    }\n\n    function store_literal_in_memory_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid FundWallet address to wi\")\n\n        mstore(add(memPtr, 32), \"thdraw\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Tokens to withdraw\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Approval yet\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061012a5760003560e01c8063715018a6116100ab578063cd5d767c1161006f578063cd5d767c146103b4578063f14210a6146103f1578063f2fde38b1461041a578063f6326fb314610443578063f7888aec1461044d578063fc11a3d61461048a5761012a565b8063715018a6146102f55780637bf1a6271461030c5780638da5cb5b1461033757806396c0ec551461036257806399c6d2de1461038b5761012a565b806354419929116100f25780635441992914610226578063545e01571461024f5780635dfbfffd146102785780635ec38bec146102a1578063664a1ad6146102ca5761012a565b8063126b9c5d1461012f5780631a38a4fb1461015857806331415a65146101835780634bdde1cf146101ac5780634fc121db146101e9575b600080fd5b34801561013b57600080fd5b5061015660048036038101906101519190611f3b565b6104b3565b005b34801561016457600080fd5b5061016d6105ad565b60405161017a9190612266565b60405180910390f35b34801561018f57600080fd5b506101aa60048036038101906101a59190611ece565b6105d3565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190611efb565b61061f565b6040516101e09190612486565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b9190611efb565b610644565b60405161021d9190612486565b60405180910390f35b34801561023257600080fd5b5061024d60048036038101906102489190611ece565b6106cb565b005b34801561025b57600080fd5b5061027660048036038101906102719190611ece565b610717565b005b34801561028457600080fd5b5061029f600480360381019061029a9190611fa2565b610763565b005b3480156102ad57600080fd5b506102c860048036038101906102c39190611ece565b610aa3565b005b3480156102d657600080fd5b506102df610aef565b6040516102ec9190612266565b60405180910390f35b34801561030157600080fd5b5061030a610b15565b005b34801561031857600080fd5b50610321610b29565b60405161032e9190612266565b60405180910390f35b34801561034357600080fd5b5061034c610b4f565b6040516103599190612266565b60405180910390f35b34801561036e57600080fd5b5061038960048036038101906103849190611fe2565b610b78565b005b34801561039757600080fd5b506103b260048036038101906103ad9190611fe2565b610f5f565b005b3480156103c057600080fd5b506103db60048036038101906103d69190611efb565b6112ed565b6040516103e89190612486565b60405180910390f35b3480156103fd57600080fd5b5061041860048036038101906104139190612062565b611312565b005b34801561042657600080fd5b50610441600480360381019061043c9190611ece565b6115ac565b005b61044b611630565b005b34801561045957600080fd5b50610474600480360381019061046f9190611efb565b6116eb565b6040516104819190612486565b60405180910390f35b34801561049657600080fd5b506104b160048036038101906104ac9190611f3b565b611772565b005b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061055c5750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61059b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610592906123e6565b60405180910390fd5b6105a78484848461186c565b50505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105db611aa2565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6006602052816000526040600020602052806000526040600020600091509150505481565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106d3611aa2565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61071f611aa2565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea90612406565b60405180910390fd5b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006108cb6108b084600254611b2090919063ffffffff16565b600a6108bc9190612597565b83611b3690919063ffffffff16565b905083600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360149054906101000a900460ff161561095e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095590612326565b60405180910390fd5b6001600360146101000a81548160ff0219169083151502179055506109a884600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600061186c565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610a279291906122fd565b602060405180830381600087803b158015610a4157600080fd5b505af1158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190612035565b610a8257600080fd5b6000600360146101000a81548160ff02191690831515021790555050505050565b610aab611aa2565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b1d611aa2565b610b276000611b4c565b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bd357600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b8152600401610c2e9190612266565b60206040518083038186803b158015610c4657600080fd5b505afa158015610c5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7e9190612035565b610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb4906123c6565b60405180910390fd5b81610ce3610ccb3386610644565b610cd586336116eb565b611b2090919063ffffffff16565b1015610d24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1b90612446565b60405180910390fd5b600360149054906101000a900460ff1615610d74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6b90612326565b60405180910390fd5b6001600360146101000a81548160ff02191690831515021790555082600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e0f8333610e08610ded85600254611b2090919063ffffffff16565b600a610df99190612597565b86611c1090919063ffffffff16565b600061186c565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33610e81610e6685600254611b2090919063ffffffff16565b600a610e729190612597565b86611b3690919063ffffffff16565b6040518363ffffffff1660e01b8152600401610e9e9291906122fd565b602060405180830381600087803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef09190612035565b610ef957600080fd5b6000600360146101000a81548160ff0219169083151502179055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567833384610f4287336116eb565b604051610f5294939291906122b8565b60405180910390a1505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ff0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe790612366565b60405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b815260040161104b9190612266565b60206040518083038186803b15801561106357600080fd5b505afa158015611077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b9190612035565b806110f35750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b611132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611129906123c6565b60405180910390fd5b82600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016111d293929190612281565b602060405180830381600087803b1580156111ec57600080fd5b505af1158015611200573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112249190612035565b611263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125a90612466565b60405180910390fd5b6112a2833361129b61128085600254611b2090919063ffffffff16565b600a61128c9190612597565b86611c1090919063ffffffff16565b600161186c565b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78333846112d087336116eb565b6040516112e094939291906122b8565b60405180910390a1505050565b6005602052816000526040600020602052806000526040600020600091509150505481565b8061137c61134233600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610644565b61136e600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116eb565b611b2090919063ffffffff16565b10156113bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b4906123a6565b60405180910390fd5b600360149054906101000a900460ff161561140d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140490612326565b60405180910390fd5b6001600360146101000a81548160ff021916908315150217905550611457600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600061186c565b60003373ffffffffffffffffffffffffffffffffffffffff168260405161147d90612251565b60006040518083038185875af1925050503d80600081146114ba576040519150601f19603f3d011682016040523d82523d6000602084013e6114bf565b606091505b5050905080611503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fa90612386565b60405180910390fd5b6000600360146101000a81548160ff0219169083151502179055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384611590600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116eb565b6040516115a094939291906122b8565b60405180910390a15050565b6115b4611aa2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161b90612346565b60405180910390fd5b61162d81611b4c565b50565b61165f600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163334600161186c565b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633346116d1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336116eb565b6040516116e194939291906122b8565b60405180910390a1565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061181b5750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61185a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611851906123e6565b60405180910390fd5b61186684848484611c26565b50505050565b80156119865761190182600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e5c90919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a9c565b80611a9b57611a1a82600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b2090919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b611aaa611e72565b73ffffffffffffffffffffffffffffffffffffffff16611ac8610b4f565b73ffffffffffffffffffffffffffffffffffffffff1614611b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1590612426565b60405180910390fd5b565b60008183611b2e919061270f565b905092915050565b60008183611b449190612513565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183611c1e91906126b5565b905092915050565b8015611d4057611cbb82600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e5c90919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e56565b80611e5557611dd482600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b2090919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b60008183611e6a91906124bd565b905092915050565b600033905090565b600081359050611e8981612a59565b92915050565b600081359050611e9e81612a70565b92915050565b600081519050611eb381612a70565b92915050565b600081359050611ec881612a87565b92915050565b600060208284031215611ee457611ee36127e9565b5b6000611ef284828501611e7a565b91505092915050565b60008060408385031215611f1257611f116127e9565b5b6000611f2085828601611e7a565b9250506020611f3185828601611e7a565b9150509250929050565b60008060008060808587031215611f5557611f546127e9565b5b6000611f6387828801611e7a565b9450506020611f7487828801611e7a565b9350506040611f8587828801611eb9565b9250506060611f9687828801611e8f565b91505092959194509250565b60008060408385031215611fb957611fb86127e9565b5b6000611fc785828601611e7a565b9250506020611fd885828601611eb9565b9150509250929050565b600080600060608486031215611ffb57611ffa6127e9565b5b600061200986828701611e7a565b935050602061201a86828701611eb9565b925050604061202b86828701611eb9565b9150509250925092565b60006020828403121561204b5761204a6127e9565b5b600061205984828501611ea4565b91505092915050565b600060208284031215612078576120776127e9565b5b600061208684828501611eb9565b91505092915050565b61209881612743565b82525050565b60006120ab6018836124ac565b91506120b6826127fb565b602082019050919050565b60006120ce6026836124ac565b91506120d982612824565b604082019050919050565b60006120f16012836124ac565b91506120fc82612873565b602082019050919050565b60006121146015836124ac565b915061211f8261289c565b602082019050919050565b60006121376024836124ac565b9150612142826128c5565b604082019050919050565b600061215a601e836124ac565b915061216582612914565b602082019050919050565b600061217d6022836124ac565b91506121888261293d565b604082019050919050565b60006121a06026836124ac565b91506121ab8261298c565b604082019050919050565b60006121c36020836124ac565b91506121ce826129db565b602082019050919050565b60006121e6601f836124ac565b91506121f182612a04565b602082019050919050565b60006122096000836124a1565b915061221482612a2d565b600082019050919050565b600061222c600f836124ac565b915061223782612a30565b602082019050919050565b61224b81612781565b82525050565b600061225c826121fc565b9150819050919050565b600060208201905061227b600083018461208f565b92915050565b6000606082019050612296600083018661208f565b6122a3602083018561208f565b6122b06040830184612242565b949350505050565b60006080820190506122cd600083018761208f565b6122da602083018661208f565b6122e76040830185612242565b6122f46060830184612242565b95945050505050565b6000604082019050612312600083018561208f565b61231f6020830184612242565b9392505050565b6000602082019050818103600083015261233f8161209e565b9050919050565b6000602082019050818103600083015261235f816120c1565b9050919050565b6000602082019050818103600083015261237f816120e4565b9050919050565b6000602082019050818103600083015261239f81612107565b9050919050565b600060208201905081810360008301526123bf8161212a565b9050919050565b600060208201905081810360008301526123df8161214d565b9050919050565b600060208201905081810360008301526123ff81612170565b9050919050565b6000602082019050818103600083015261241f81612193565b9050919050565b6000602082019050818103600083015261243f816121b6565b9050919050565b6000602082019050818103600083015261245f816121d9565b9050919050565b6000602082019050818103600083015261247f8161221f565b9050919050565b600060208201905061249b6000830184612242565b92915050565b600081905092915050565b600082825260208201905092915050565b60006124c882612781565b91506124d383612781565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125085761250761278b565b5b828201905092915050565b600061251e82612781565b915061252983612781565b925082612539576125386127ba565b5b828204905092915050565b6000808291508390505b600185111561258e5780860481111561256a5761256961278b565b5b60018516156125795780820291505b8081029050612587856127ee565b945061254e565b94509492505050565b60006125a282612781565b91506125ad83612781565b92506125da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846125e2565b905092915050565b6000826125f257600190506126ae565b8161260057600090506126ae565b816001811461261657600281146126205761264f565b60019150506126ae565b60ff8411156126325761263161278b565b5b8360020a9150848211156126495761264861278b565b5b506126ae565b5060208310610133831016604e8410600b84101617156126845782820a90508381111561267f5761267e61278b565b5b6126ae565b6126918484846001612544565b925090508184048111156126a8576126a761278b565b5b81810290505b9392505050565b60006126c082612781565b91506126cb83612781565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156127045761270361278b565b5b828202905092915050565b600061271a82612781565b915061272583612781565b9250828210156127385761273761278b565b5b828203905092915050565b600061274e82612761565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f5265656e7472616e742063616c6c206465746563746564210000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420546f6b656e20547970650000000000000000000000000000600082015250565b7f6661696c656420746f2073656e6420616d6f756e740000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e63652045544820746f207769746860008201527f6472617700000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e206e6f74207665726966696564206f6e2045786368616e67650000600082015250565b7f4e6f742045786368616e6765206f722066696c6c4f7264657220636f6e74726160008201527f6374000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642046756e6457616c6c6574206164647265737320746f20776960008201527f7468647261770000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e73756666696369656e7420546f6b656e7320746f20776974686472617700600082015250565b50565b7f4e6f20417070726f76616c207965740000000000000000000000000000000000600082015250565b612a6281612743565b8114612a6d57600080fd5b50565b612a7981612755565b8114612a8457600080fd5b50565b612a9081612781565b8114612a9b57600080fd5b5056fea2646970667358221220ca844559473a4cc527d9ee99dc6bd92a92cd97dfac9220764d7d6f9770d2268164736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xCD5D767C GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCD5D767C EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xFC11A3D6 EQ PUSH2 0x48A JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x96C0EC55 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x99C6D2DE EQ PUSH2 0x38B JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x54419929 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x54419929 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x545E0157 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x5DFBFFFD EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x5EC38BEC EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x664A1AD6 EQ PUSH2 0x2CA JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x126B9C5D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x31415A65 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x4BDDE1CF EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x4FC121DB EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DF PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0xB15 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0xB29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0xF5F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x1312 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44B PUSH2 0x1630 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x1772 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x55C JUMPI POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP1 PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x186C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x1AA2 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D3 PUSH2 0x1AA2 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x71F PUSH2 0x1AA2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x8CB PUSH2 0x8B0 DUP5 PUSH1 0x2 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP4 PUSH2 0x1B36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x9A8 DUP5 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP3 SWAP2 SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAAB PUSH2 0x1AA2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB1D PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0xB27 PUSH1 0x0 PUSH2 0x1B4C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC7E SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0xCBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB4 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xCE3 PUSH2 0xCCB CALLER DUP7 PUSH2 0x644 JUMP JUMPDEST PUSH2 0xCD5 DUP7 CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1B SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6B SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE0F DUP4 CALLER PUSH2 0xE08 PUSH2 0xDED DUP6 PUSH1 0x2 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xDF9 SWAP2 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP7 PUSH2 0x1C10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0xE81 PUSH2 0xE66 DUP6 PUSH1 0x2 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xE72 SWAP2 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP7 PUSH2 0x1B36 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9E SWAP3 SWAP2 SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF0 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0xEF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP4 CALLER DUP5 PUSH2 0xF42 DUP8 CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF52 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE7 SWAP1 PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104B SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1077 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109B SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST DUP1 PUSH2 0x10F3 JUMPI POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1129 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1200 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125A SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A2 DUP4 CALLER PUSH2 0x129B PUSH2 0x1280 DUP6 PUSH1 0x2 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x2597 JUMP JUMPDEST DUP7 PUSH2 0x1C10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH2 0x186C JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 CALLER DUP5 PUSH2 0x12D0 DUP8 CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH2 0x137C PUSH2 0x1342 CALLER PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x644 JUMP JUMPDEST PUSH2 0x136E PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x13BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B4 SWAP1 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1404 SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1457 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x0 PUSH2 0x186C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x147D SWAP1 PUSH2 0x2251 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1503 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FA SWAP1 PUSH2 0x2386 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x1590 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x15B4 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161B SWAP1 PUSH2 0x2346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x162D DUP2 PUSH2 0x1B4C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x165F PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH1 0x1 PUSH2 0x186C JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH2 0x16D1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x181B JUMPI POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x185A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1851 SWAP1 PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1866 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1C26 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1986 JUMPI PUSH2 0x1901 DUP3 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1E5C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1A9C JUMP JUMPDEST DUP1 PUSH2 0x1A9B JUMPI PUSH2 0x1A1A DUP3 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AAA PUSH2 0x1E72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AC8 PUSH2 0xB4F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B15 SWAP1 PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B2E SWAP2 SWAP1 PUSH2 0x270F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B44 SWAP2 SWAP1 PUSH2 0x2513 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1C1E SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D40 JUMPI PUSH2 0x1CBB DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1E5C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E56 JUMP JUMPDEST DUP1 PUSH2 0x1E55 JUMPI PUSH2 0x1DD4 DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E6A SWAP2 SWAP1 PUSH2 0x24BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E89 DUP2 PUSH2 0x2A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E9E DUP2 PUSH2 0x2A70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EB3 DUP2 PUSH2 0x2A70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EC8 DUP2 PUSH2 0x2A87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F20 DUP6 DUP3 DUP7 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F31 DUP6 DUP3 DUP7 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F55 JUMPI PUSH2 0x1F54 PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F63 DUP8 DUP3 DUP9 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F74 DUP8 DUP3 DUP9 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F85 DUP8 DUP3 DUP9 ADD PUSH2 0x1EB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1F96 DUP8 DUP3 DUP9 ADD PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB9 JUMPI PUSH2 0x1FB8 PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC7 DUP6 DUP3 DUP7 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD8 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FFB JUMPI PUSH2 0x1FFA PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2009 DUP7 DUP3 DUP8 ADD PUSH2 0x1E7A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x201A DUP7 DUP3 DUP8 ADD PUSH2 0x1EB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x202B DUP7 DUP3 DUP8 ADD PUSH2 0x1EB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x204B JUMPI PUSH2 0x204A PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2059 DUP5 DUP3 DUP6 ADD PUSH2 0x1EA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2078 JUMPI PUSH2 0x2077 PUSH2 0x27E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2086 DUP5 DUP3 DUP6 ADD PUSH2 0x1EB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2098 DUP2 PUSH2 0x2743 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AB PUSH1 0x18 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x20B6 DUP3 PUSH2 0x27FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CE PUSH1 0x26 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x20D9 DUP3 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F1 PUSH1 0x12 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x20FC DUP3 PUSH2 0x2873 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2114 PUSH1 0x15 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x211F DUP3 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 PUSH1 0x24 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x2142 DUP3 PUSH2 0x28C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215A PUSH1 0x1E DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x2165 DUP3 PUSH2 0x2914 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217D PUSH1 0x22 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x2188 DUP3 PUSH2 0x293D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A0 PUSH1 0x26 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x21AB DUP3 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C3 PUSH1 0x20 DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x21CE DUP3 PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E6 PUSH1 0x1F DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x21F1 DUP3 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2209 PUSH1 0x0 DUP4 PUSH2 0x24A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2214 DUP3 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222C PUSH1 0xF DUP4 PUSH2 0x24AC JUMP JUMPDEST SWAP2 POP PUSH2 0x2237 DUP3 PUSH2 0x2A30 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x224B DUP2 PUSH2 0x2781 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225C DUP3 PUSH2 0x21FC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x208F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2296 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x22A3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x22B0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22CD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x22DA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x22E7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x22F4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2312 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x231F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x233F DUP2 PUSH2 0x209E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x235F DUP2 PUSH2 0x20C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x237F DUP2 PUSH2 0x20E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x239F DUP2 PUSH2 0x2107 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23BF DUP2 PUSH2 0x212A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23DF DUP2 PUSH2 0x214D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23FF DUP2 PUSH2 0x2170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x241F DUP2 PUSH2 0x2193 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x243F DUP2 PUSH2 0x21B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x245F DUP2 PUSH2 0x21D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x247F DUP2 PUSH2 0x221F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x249B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C8 DUP3 PUSH2 0x2781 JUMP JUMPDEST SWAP2 POP PUSH2 0x24D3 DUP4 PUSH2 0x2781 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2508 JUMPI PUSH2 0x2507 PUSH2 0x278B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251E DUP3 PUSH2 0x2781 JUMP JUMPDEST SWAP2 POP PUSH2 0x2529 DUP4 PUSH2 0x2781 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2539 JUMPI PUSH2 0x2538 PUSH2 0x27BA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x258E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x278B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2579 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2587 DUP6 PUSH2 0x27EE JUMP JUMPDEST SWAP5 POP PUSH2 0x254E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A2 DUP3 PUSH2 0x2781 JUMP JUMPDEST SWAP2 POP PUSH2 0x25AD DUP4 PUSH2 0x2781 JUMP JUMPDEST SWAP3 POP PUSH2 0x25DA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x25E2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x25F2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x26AE JUMP JUMPDEST DUP2 PUSH2 0x2600 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x26AE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2616 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2620 JUMPI PUSH2 0x264F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x26AE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2632 JUMPI PUSH2 0x2631 PUSH2 0x278B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2649 JUMPI PUSH2 0x2648 PUSH2 0x278B JUMP JUMPDEST JUMPDEST POP PUSH2 0x26AE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2684 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x267F JUMPI PUSH2 0x267E PUSH2 0x278B JUMP JUMPDEST JUMPDEST PUSH2 0x26AE JUMP JUMPDEST PUSH2 0x2691 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2544 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x26A8 JUMPI PUSH2 0x26A7 PUSH2 0x278B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C0 DUP3 PUSH2 0x2781 JUMP JUMPDEST SWAP2 POP PUSH2 0x26CB DUP4 PUSH2 0x2781 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2704 JUMPI PUSH2 0x2703 PUSH2 0x278B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271A DUP3 PUSH2 0x2781 JUMP JUMPDEST SWAP2 POP PUSH2 0x2725 DUP4 PUSH2 0x2781 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2738 JUMPI PUSH2 0x2737 PUSH2 0x278B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274E DUP3 PUSH2 0x2761 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420546F6B656E20547970650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E6420616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652045544820746F2077697468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F74207665726966696564206F6E2045786368616E67650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F742045786368616E6765206F722066696C6C4F7264657220636F6E747261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6374000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642046756E6457616C6C6574206164647265737320746F207769 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7468647261770000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E7320746F20776974686472617700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E6F20417070726F76616C207965740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2A62 DUP2 PUSH2 0x2743 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A79 DUP2 PUSH2 0x2755 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A90 DUP2 PUSH2 0x2781 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA DUP5 GASLIMIT MSIZE SELFBALANCE GASPRICE 0x4C 0xC5 0x27 0xD9 0xEE SWAP10 0xDC PUSH12 0xD92A92CD97DFAC9220764D7D PUSH16 0x9770D2268164736F6C63430008070033 ","sourceMap":"404:6992:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5405:217;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;570:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6788:130;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;817:66;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4324:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6926:122;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7056:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6113:667;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5998:107;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;510:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;;;;;;;;;;;;;:::i;:::-;;662:36:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3214:1102:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2307:899;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;707:63;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1504:704;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1232:264:11;;;:::i;:::-;;5243:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4494:225;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5405:217;7246:8;;;;;;;;;;;7224:31;;:10;:31;;;:87;;;;7298:12;;;;;;;;;;;7276:35;;:10;:35;;;7224:87;7202:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;5570:44:::1;5584:6;5592:5;5599:7;5608:5;5570:13;:44::i;:::-;5405:217:::0;;;;:::o;570:19::-;;;;;;;;;;;;;:::o;6788:130::-;1094:13:2;:11;:13::i;:::-;6893:16:11::1;6873:8;;:37;;;;;;;;;;;;;;;;;;6788:130:::0;:::o;817:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4324:162::-;4425:7;4452:11;:18;4464:5;4452:18;;;;;;;;;;;;;;;:26;4471:6;4452:26;;;;;;;;;;;;;;;;4445:33;;4324:162;;;;:::o;6926:122::-;1094:13:2;:11;:13::i;:::-;7030:9:11::1;7005:12;;:35;;;;;;;;;;;;;;;;;;6926:122:::0;:::o;7056:105::-;1094:13:2;:11;:13::i;:::-;7144:8:11::1;7129:4;;:24;;;;;;;;;;;;;;;;;;7056:105:::0;:::o;6113:667::-;6292:10;;;;;;;;;;;6278:24;;:10;:24;;;6256:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;6379:19;6401:8;:16;6410:6;6401:16;;;;;;;;;;;;;;;:28;6418:10;;;;;;;;;;;6401:28;;;;;;;;;;;;;;;;6379:50;;6440:20;6463:46;6485:23;6498:9;6485:8;;:12;;:23;;;;:::i;:::-;6479:2;:29;;;;:::i;:::-;6463:11;:15;;:46;;;;:::i;:::-;6440:69;;6535:6;6520:5;;:22;;;;;;;;;;;;;;;;;;6564:6;;;;;;;;;;;6563:7;6555:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;6619:4;6610:6;;:13;;;;;;;;;;;;;;;;;;6634:53;6648:6;6656:10;;;;;;;;;;;6668:11;6681:5;6634:13;:53::i;:::-;6706:5;;;;;;;;;;;:14;;;6721:10;;;;;;;;;;;6733:12;6706:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6698:49;;;;;;6767:5;6758:6;;:14;;;;;;;;;;;;;;;;;;6187:593;;6113:667;;:::o;5998:107::-;1094:13:2;:11;:13::i;:::-;6086:11:11::1;6073:10;;:24;;;;;;;;;;;;;;;;;;5998:107:::0;:::o;510:25::-;;;;;;;;;;;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;662:36:11:-;;;;;;;;;;;;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3214:1102:11:-;3361:8;;;;;;;;;;;3351:18;;:6;:18;;;;3343:27;;;;;;3403:8;;;;;;;;;;;:24;;;3428:6;3403:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3381:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;3633:7;3528:101;3580:34;3595:10;3607:6;3580:14;:34::i;:::-;3528:29;3538:6;3546:10;3528:9;:29::i;:::-;:33;;:101;;;;:::i;:::-;:112;;3506:193;;;;;;;;;;;;:::i;:::-;;;;;;;;;3719:6;;;;;;;;;;;3718:7;3710:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3774:4;3765:6;;:13;;;;;;;;;;;;;;;;;;3806:6;3791:5;;:22;;;;;;;;;;;;;;;;;;3824:147;3852:6;3873:10;3898:42;3916:23;3929:9;3916:8;;:12;;:23;;;;:::i;:::-;3910:2;:29;;;;:::i;:::-;3898:7;:11;;:42;;;;:::i;:::-;3955:5;3824:13;:147::i;:::-;4004:5;;;;;;;;;;;:14;;;4037:10;4066:42;4084:23;4097:9;4084:8;;:12;;:23;;;;:::i;:::-;4078:2;:29;;;;:::i;:::-;4066:7;:11;;:42;;;;:::i;:::-;4004:119;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3982:152;;;;;;4156:5;4147:6;;:14;;;;;;;;;;;;;;;;;;4177:131;4200:6;4221:10;4246:7;4268:29;4278:6;4286:10;4268:9;:29::i;:::-;4177:131;;;;;;;;;:::i;:::-;;;;;;;;3214:1102;;;:::o;2307:899::-;2453:8;;;;;;;;;;;2443:18;;:6;:18;;;;2435:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2517:8;;;;;;;;;;;:24;;;2542:6;2517:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;;;2563:4;;;;;;;;;;;2553:14;;:6;:14;;;2517:50;2495:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;2717:6;2702:5;;:22;;;;;;;;;;;;;;;;;;2794:5;;;;;;;;;;;:18;;;2813:10;2833:4;2840:7;2794:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2772:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;2904:146;2932:6;2953:10;2978:42;2996:23;3009:9;2996:8;;:12;;:23;;;;:::i;:::-;2990:2;:29;;;;:::i;:::-;2978:7;:11;;:42;;;;:::i;:::-;3035:4;2904:13;:146::i;:::-;3068:130;3090:6;3111:10;3136:7;3158:29;3168:6;3176:10;3158:9;:29::i;:::-;3068:130;;;;;;;;;:::i;:::-;;;;;;;;2307:899;;;:::o;707:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1504:704::-;1693:7;1584:105;1638:36;1653:10;1665:8;;;;;;;;;;;1638:14;:36::i;:::-;1584:31;1594:8;;;;;;;;;;;1604:10;1584:9;:31::i;:::-;:35;;:105;;;;:::i;:::-;:116;;1562:202;;;;;;;;;;;;:::i;:::-;;;;;;;;;1784:6;;;;;;;;;;;1783:7;1775:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1839:4;1830:6;;:13;;;;;;;;;;;;;;;;;;1854:51;1868:8;;;;;;;;;;;1878:10;1890:7;1899:5;1854:13;:51::i;:::-;1917:12;1935:10;:15;;1958:7;1935:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1916:54;;;1989:7;1981:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2042:5;2033:6;;:14;;;;;;;;;;;;;;;;;;2065:135;2088:8;;;;;;;;;;;2111:10;2136:7;2158:31;2168:8;;;;;;;;;;;2178:10;2158:9;:31::i;:::-;2065:135;;;;;;;;;:::i;:::-;;;;;;;;1551:657;1504:704;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1232:264:11:-;1282:52;1296:8;;;;;;;;;;;1306:10;1318:9;1329:4;1282:13;:52::i;:::-;1352:136;1374:8;;;;;;;;;;;1397:10;1422:9;1446:31;1456:8;;;;;;;;;;;1466:10;1446:9;:31::i;:::-;1352:136;;;;;;;;;:::i;:::-;;;;;;;;1232:264::o;5243:154::-;5339:7;5366:8;:16;5375:6;5366:16;;;;;;;;;;;;;;;:23;5383:5;5366:23;;;;;;;;;;;;;;;;5359:30;;5243:154;;;;:::o;4494:225::-;7246:8;;;;;;;;;;;7224:31;;:10;:31;;;:87;;;;7298:12;;;;;;;;;;;7276:35;;:10;:35;;;7224:87;7202:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;4663:48:::1;4681:5;4688:6;4696:7;4705:5;4663:17;:48::i;:::-;4494:225:::0;;;;:::o;5630:360::-;5780:5;5776:207;;;5828:36;5856:7;5828:8;:16;5837:6;5828:16;;;;;;;;;;;;;;;:23;5845:5;5828:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5802:8;:16;5811:6;5802:16;;;;;;;;;;;;;;;:23;5819:5;5802:23;;;;;;;;;;;;;;;:62;;;;5776:207;;;5887:5;5882:101;;5935:36;5963:7;5935:8;:16;5944:6;5935:16;;;;;;;;;;;;;;;:23;5952:5;5935:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5909:8;:16;5918:6;5909:16;;;;;;;;;;;;;;;:23;5926:5;5909:23;;;;;;;;;;;;;;;:62;;;;5882:101;5776:207;5630:360;;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;3122:96:6:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3465:96:6:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;4727:440:11:-;4881:5;4877:283;;;4932:71;4981:7;4932:11;:18;4944:5;4932:18;;;;;;;;;;;;;;;:26;4951:6;4932:26;;;;;;;;;;;;;;;;:30;;:71;;;;:::i;:::-;4903:11;:18;4915:5;4903:18;;;;;;;;;;;;;;;:26;4922:6;4903:26;;;;;;;;;;;;;;;:100;;;;4877:283;;;5026:5;5021:139;;5077:71;5126:7;5077:11;:18;5089:5;5077:18;;;;;;;;;;;;;;;:26;5096:6;5077:26;;;;;;;;;;;;;;;;:30;;:71;;;;:::i;:::-;5048:11;:18;5060:5;5048:18;;;;;;;;;;;;;;;:26;5067:6;5048:26;;;;;;;;;;;;;;;:100;;;;5021:139;4877:283;4727:440;;;;:::o;2755:96:6:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;640::5:-;693:7;719:10;712:17;;640:96;:::o;7:139:17:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:137::-;345:5;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;291:137;;;;:::o;434:139::-;480:5;518:6;505:20;496:29;;534:33;561:5;534:33;:::i;:::-;434:139;;;;:::o;579:329::-;638:6;687:2;675:9;666:7;662:23;658:32;655:119;;;693:79;;:::i;:::-;655:119;813:1;838:53;883:7;874:6;863:9;859:22;838:53;:::i;:::-;828:63;;784:117;579:329;;;;:::o;914:474::-;982:6;990;1039:2;1027:9;1018:7;1014:23;1010:32;1007:119;;;1045:79;;:::i;:::-;1007:119;1165:1;1190:53;1235:7;1226:6;1215:9;1211:22;1190:53;:::i;:::-;1180:63;;1136:117;1292:2;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1263:118;914:474;;;;;:::o;1394:759::-;1477:6;1485;1493;1501;1550:3;1538:9;1529:7;1525:23;1521:33;1518:120;;;1557:79;;:::i;:::-;1518:120;1677:1;1702:53;1747:7;1738:6;1727:9;1723:22;1702:53;:::i;:::-;1692:63;;1648:117;1804:2;1830:53;1875:7;1866:6;1855:9;1851:22;1830:53;:::i;:::-;1820:63;;1775:118;1932:2;1958:53;2003:7;1994:6;1983:9;1979:22;1958:53;:::i;:::-;1948:63;;1903:118;2060:2;2086:50;2128:7;2119:6;2108:9;2104:22;2086:50;:::i;:::-;2076:60;;2031:115;1394:759;;;;;;;:::o;2159:474::-;2227:6;2235;2284:2;2272:9;2263:7;2259:23;2255:32;2252:119;;;2290:79;;:::i;:::-;2252:119;2410:1;2435:53;2480:7;2471:6;2460:9;2456:22;2435:53;:::i;:::-;2425:63;;2381:117;2537:2;2563:53;2608:7;2599:6;2588:9;2584:22;2563:53;:::i;:::-;2553:63;;2508:118;2159:474;;;;;:::o;2639:619::-;2716:6;2724;2732;2781:2;2769:9;2760:7;2756:23;2752:32;2749:119;;;2787:79;;:::i;:::-;2749:119;2907:1;2932:53;2977:7;2968:6;2957:9;2953:22;2932:53;:::i;:::-;2922:63;;2878:117;3034:2;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3005:118;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2639:619;;;;;:::o;3264:345::-;3331:6;3380:2;3368:9;3359:7;3355:23;3351:32;3348:119;;;3386:79;;:::i;:::-;3348:119;3506:1;3531:61;3584:7;3575:6;3564:9;3560:22;3531:61;:::i;:::-;3521:71;;3477:125;3264:345;;;;:::o;3615:329::-;3674:6;3723:2;3711:9;3702:7;3698:23;3694:32;3691:119;;;3729:79;;:::i;:::-;3691:119;3849:1;3874:53;3919:7;3910:6;3899:9;3895:22;3874:53;:::i;:::-;3864:63;;3820:117;3615:329;;;;:::o;3950:118::-;4037:24;4055:5;4037:24;:::i;:::-;4032:3;4025:37;3950:118;;:::o;4074:366::-;4216:3;4237:67;4301:2;4296:3;4237:67;:::i;:::-;4230:74;;4313:93;4402:3;4313:93;:::i;:::-;4431:2;4426:3;4422:12;4415:19;;4074:366;;;:::o;4446:::-;4588:3;4609:67;4673:2;4668:3;4609:67;:::i;:::-;4602:74;;4685:93;4774:3;4685:93;:::i;:::-;4803:2;4798:3;4794:12;4787:19;;4446:366;;;:::o;4818:::-;4960:3;4981:67;5045:2;5040:3;4981:67;:::i;:::-;4974:74;;5057:93;5146:3;5057:93;:::i;:::-;5175:2;5170:3;5166:12;5159:19;;4818:366;;;:::o;5190:::-;5332:3;5353:67;5417:2;5412:3;5353:67;:::i;:::-;5346:74;;5429:93;5518:3;5429:93;:::i;:::-;5547:2;5542:3;5538:12;5531:19;;5190:366;;;:::o;5562:::-;5704:3;5725:67;5789:2;5784:3;5725:67;:::i;:::-;5718:74;;5801:93;5890:3;5801:93;:::i;:::-;5919:2;5914:3;5910:12;5903:19;;5562:366;;;:::o;5934:::-;6076:3;6097:67;6161:2;6156:3;6097:67;:::i;:::-;6090:74;;6173:93;6262:3;6173:93;:::i;:::-;6291:2;6286:3;6282:12;6275:19;;5934:366;;;:::o;6306:::-;6448:3;6469:67;6533:2;6528:3;6469:67;:::i;:::-;6462:74;;6545:93;6634:3;6545:93;:::i;:::-;6663:2;6658:3;6654:12;6647:19;;6306:366;;;:::o;6678:::-;6820:3;6841:67;6905:2;6900:3;6841:67;:::i;:::-;6834:74;;6917:93;7006:3;6917:93;:::i;:::-;7035:2;7030:3;7026:12;7019:19;;6678:366;;;:::o;7050:::-;7192:3;7213:67;7277:2;7272:3;7213:67;:::i;:::-;7206:74;;7289:93;7378:3;7289:93;:::i;:::-;7407:2;7402:3;7398:12;7391:19;;7050:366;;;:::o;7422:::-;7564:3;7585:67;7649:2;7644:3;7585:67;:::i;:::-;7578:74;;7661:93;7750:3;7661:93;:::i;:::-;7779:2;7774:3;7770:12;7763:19;;7422:366;;;:::o;7794:398::-;7953:3;7974:83;8055:1;8050:3;7974:83;:::i;:::-;7967:90;;8066:93;8155:3;8066:93;:::i;:::-;8184:1;8179:3;8175:11;8168:18;;7794:398;;;:::o;8198:366::-;8340:3;8361:67;8425:2;8420:3;8361:67;:::i;:::-;8354:74;;8437:93;8526:3;8437:93;:::i;:::-;8555:2;8550:3;8546:12;8539:19;;8198:366;;;:::o;8570:118::-;8657:24;8675:5;8657:24;:::i;:::-;8652:3;8645:37;8570:118;;:::o;8694:379::-;8878:3;8900:147;9043:3;8900:147;:::i;:::-;8893:154;;9064:3;9057:10;;8694:379;;;:::o;9079:222::-;9172:4;9210:2;9199:9;9195:18;9187:26;;9223:71;9291:1;9280:9;9276:17;9267:6;9223:71;:::i;:::-;9079:222;;;;:::o;9307:442::-;9456:4;9494:2;9483:9;9479:18;9471:26;;9507:71;9575:1;9564:9;9560:17;9551:6;9507:71;:::i;:::-;9588:72;9656:2;9645:9;9641:18;9632:6;9588:72;:::i;:::-;9670;9738:2;9727:9;9723:18;9714:6;9670:72;:::i;:::-;9307:442;;;;;;:::o;9755:553::-;9932:4;9970:3;9959:9;9955:19;9947:27;;9984:71;10052:1;10041:9;10037:17;10028:6;9984:71;:::i;:::-;10065:72;10133:2;10122:9;10118:18;10109:6;10065:72;:::i;:::-;10147;10215:2;10204:9;10200:18;10191:6;10147:72;:::i;:::-;10229;10297:2;10286:9;10282:18;10273:6;10229:72;:::i;:::-;9755:553;;;;;;;:::o;10314:332::-;10435:4;10473:2;10462:9;10458:18;10450:26;;10486:71;10554:1;10543:9;10539:17;10530:6;10486:71;:::i;:::-;10567:72;10635:2;10624:9;10620:18;10611:6;10567:72;:::i;:::-;10314:332;;;;;:::o;10652:419::-;10818:4;10856:2;10845:9;10841:18;10833:26;;10905:9;10899:4;10895:20;10891:1;10880:9;10876:17;10869:47;10933:131;11059:4;10933:131;:::i;:::-;10925:139;;10652:419;;;:::o;11077:::-;11243:4;11281:2;11270:9;11266:18;11258:26;;11330:9;11324:4;11320:20;11316:1;11305:9;11301:17;11294:47;11358:131;11484:4;11358:131;:::i;:::-;11350:139;;11077:419;;;:::o;11502:::-;11668:4;11706:2;11695:9;11691:18;11683:26;;11755:9;11749:4;11745:20;11741:1;11730:9;11726:17;11719:47;11783:131;11909:4;11783:131;:::i;:::-;11775:139;;11502:419;;;:::o;11927:::-;12093:4;12131:2;12120:9;12116:18;12108:26;;12180:9;12174:4;12170:20;12166:1;12155:9;12151:17;12144:47;12208:131;12334:4;12208:131;:::i;:::-;12200:139;;11927:419;;;:::o;12352:::-;12518:4;12556:2;12545:9;12541:18;12533:26;;12605:9;12599:4;12595:20;12591:1;12580:9;12576:17;12569:47;12633:131;12759:4;12633:131;:::i;:::-;12625:139;;12352:419;;;:::o;12777:::-;12943:4;12981:2;12970:9;12966:18;12958:26;;13030:9;13024:4;13020:20;13016:1;13005:9;13001:17;12994:47;13058:131;13184:4;13058:131;:::i;:::-;13050:139;;12777:419;;;:::o;13202:::-;13368:4;13406:2;13395:9;13391:18;13383:26;;13455:9;13449:4;13445:20;13441:1;13430:9;13426:17;13419:47;13483:131;13609:4;13483:131;:::i;:::-;13475:139;;13202:419;;;:::o;13627:::-;13793:4;13831:2;13820:9;13816:18;13808:26;;13880:9;13874:4;13870:20;13866:1;13855:9;13851:17;13844:47;13908:131;14034:4;13908:131;:::i;:::-;13900:139;;13627:419;;;:::o;14052:::-;14218:4;14256:2;14245:9;14241:18;14233:26;;14305:9;14299:4;14295:20;14291:1;14280:9;14276:17;14269:47;14333:131;14459:4;14333:131;:::i;:::-;14325:139;;14052:419;;;:::o;14477:::-;14643:4;14681:2;14670:9;14666:18;14658:26;;14730:9;14724:4;14720:20;14716:1;14705:9;14701:17;14694:47;14758:131;14884:4;14758:131;:::i;:::-;14750:139;;14477:419;;;:::o;14902:::-;15068:4;15106:2;15095:9;15091:18;15083:26;;15155:9;15149:4;15145:20;15141:1;15130:9;15126:17;15119:47;15183:131;15309:4;15183:131;:::i;:::-;15175:139;;14902:419;;;:::o;15327:222::-;15420:4;15458:2;15447:9;15443:18;15435:26;;15471:71;15539:1;15528:9;15524:17;15515:6;15471:71;:::i;:::-;15327:222;;;;:::o;15636:147::-;15737:11;15774:3;15759:18;;15636:147;;;;:::o;15789:169::-;15873:11;15907:6;15902:3;15895:19;15947:4;15942:3;15938:14;15923:29;;15789:169;;;;:::o;15964:305::-;16004:3;16023:20;16041:1;16023:20;:::i;:::-;16018:25;;16057:20;16075:1;16057:20;:::i;:::-;16052:25;;16211:1;16143:66;16139:74;16136:1;16133:81;16130:107;;;16217:18;;:::i;:::-;16130:107;16261:1;16258;16254:9;16247:16;;15964:305;;;;:::o;16275:185::-;16315:1;16332:20;16350:1;16332:20;:::i;:::-;16327:25;;16366:20;16384:1;16366:20;:::i;:::-;16361:25;;16405:1;16395:35;;16410:18;;:::i;:::-;16395:35;16452:1;16449;16445:9;16440:14;;16275:185;;;;:::o;16466:848::-;16527:5;16534:4;16558:6;16549:15;;16582:5;16573:14;;16596:712;16617:1;16607:8;16604:15;16596:712;;;16712:4;16707:3;16703:14;16697:4;16694:24;16691:50;;;16721:18;;:::i;:::-;16691:50;16771:1;16761:8;16757:16;16754:451;;;17186:4;17179:5;17175:16;17166:25;;16754:451;17236:4;17230;17226:15;17218:23;;17266:32;17289:8;17266:32;:::i;:::-;17254:44;;16596:712;;;16466:848;;;;;;;:::o;17320:285::-;17380:5;17404:23;17422:4;17404:23;:::i;:::-;17396:31;;17448:27;17466:8;17448:27;:::i;:::-;17436:39;;17494:104;17531:66;17521:8;17515:4;17494:104;:::i;:::-;17485:113;;17320:285;;;;:::o;17611:1073::-;17665:5;17856:8;17846:40;;17877:1;17868:10;;17879:5;;17846:40;17905:4;17895:36;;17922:1;17913:10;;17924:5;;17895:36;17991:4;18039:1;18034:27;;;;18075:1;18070:191;;;;17984:277;;18034:27;18052:1;18043:10;;18054:5;;;18070:191;18115:3;18105:8;18102:17;18099:43;;;18122:18;;:::i;:::-;18099:43;18171:8;18168:1;18164:16;18155:25;;18206:3;18199:5;18196:14;18193:40;;;18213:18;;:::i;:::-;18193:40;18246:5;;;17984:277;;18370:2;18360:8;18357:16;18351:3;18345:4;18342:13;18338:36;18320:2;18310:8;18307:16;18302:2;18296:4;18293:12;18289:35;18273:111;18270:246;;;18426:8;18420:4;18416:19;18407:28;;18461:3;18454:5;18451:14;18448:40;;;18468:18;;:::i;:::-;18448:40;18501:5;;18270:246;18541:42;18579:3;18569:8;18563:4;18560:1;18541:42;:::i;:::-;18526:57;;;;18615:4;18610:3;18606:14;18599:5;18596:25;18593:51;;;18624:18;;:::i;:::-;18593:51;18673:4;18666:5;18662:16;18653:25;;17611:1073;;;;;;:::o;18690:348::-;18730:7;18753:20;18771:1;18753:20;:::i;:::-;18748:25;;18787:20;18805:1;18787:20;:::i;:::-;18782:25;;18975:1;18907:66;18903:74;18900:1;18897:81;18892:1;18885:9;18878:17;18874:105;18871:131;;;18982:18;;:::i;:::-;18871:131;19030:1;19027;19023:9;19012:20;;18690:348;;;;:::o;19044:191::-;19084:4;19104:20;19122:1;19104:20;:::i;:::-;19099:25;;19138:20;19156:1;19138:20;:::i;:::-;19133:25;;19177:1;19174;19171:8;19168:34;;;19182:18;;:::i;:::-;19168:34;19227:1;19224;19220:9;19212:17;;19044:191;;;;:::o;19241:96::-;19278:7;19307:24;19325:5;19307:24;:::i;:::-;19296:35;;19241:96;;;:::o;19343:90::-;19377:7;19420:5;19413:13;19406:21;19395:32;;19343:90;;;:::o;19439:126::-;19476:7;19516:42;19509:5;19505:54;19494:65;;19439:126;;;:::o;19571:77::-;19608:7;19637:5;19626:16;;19571:77;;;:::o;19654:180::-;19702:77;19699:1;19692:88;19799:4;19796:1;19789:15;19823:4;19820:1;19813:15;19840:180;19888:77;19885:1;19878:88;19985:4;19982:1;19975:15;20009:4;20006:1;19999:15;20149:117;20258:1;20255;20248:12;20272:102;20314:8;20361:5;20358:1;20354:13;20333:34;;20272:102;;;:::o;20380:174::-;20520:26;20516:1;20508:6;20504:14;20497:50;20380:174;:::o;20560:225::-;20700:34;20696:1;20688:6;20684:14;20677:58;20769:8;20764:2;20756:6;20752:15;20745:33;20560:225;:::o;20791:168::-;20931:20;20927:1;20919:6;20915:14;20908:44;20791:168;:::o;20965:171::-;21105:23;21101:1;21093:6;21089:14;21082:47;20965:171;:::o;21142:223::-;21282:34;21278:1;21270:6;21266:14;21259:58;21351:6;21346:2;21338:6;21334:15;21327:31;21142:223;:::o;21371:180::-;21511:32;21507:1;21499:6;21495:14;21488:56;21371:180;:::o;21557:221::-;21697:34;21693:1;21685:6;21681:14;21674:58;21766:4;21761:2;21753:6;21749:15;21742:29;21557:221;:::o;21784:225::-;21924:34;21920:1;21912:6;21908:14;21901:58;21993:8;21988:2;21980:6;21976:15;21969:33;21784:225;:::o;22015:182::-;22155:34;22151:1;22143:6;22139:14;22132:58;22015:182;:::o;22203:181::-;22343:33;22339:1;22331:6;22327:14;22320:57;22203:181;:::o;22390:114::-;;:::o;22510:165::-;22650:17;22646:1;22638:6;22634:14;22627:41;22510:165;:::o;22681:122::-;22754:24;22772:5;22754:24;:::i;:::-;22747:5;22744:35;22734:63;;22793:1;22790;22783:12;22734:63;22681:122;:::o;22809:116::-;22879:21;22894:5;22879:21;:::i;:::-;22872:5;22869:32;22859:60;;22915:1;22912;22905:12;22859:60;22809:116;:::o;22931:122::-;23004:24;23022:5;23004:24;:::i;:::-;22997:5;22994:35;22984:63;;23043:1;23040;23033:12;22984:63;22931:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2192800","executionCost":"infinite","totalCost":"infinite"},"external":{"aDAI()":"2560","balanceOf(address,address)":"infinite","depositETH()":"infinite","depositToken(address,uint256,uint256)":"infinite","ethToken()":"2559","exchangeUpdateBalance(address,address,uint256,bool)":"infinite","exchangeUpdateLockedFunds(address,address,uint256,bool)":"infinite","fundWallet()":"2625","getlockedFunds(address,address)":"infinite","lockedFunds(address,address)":"infinite","owner()":"2589","renounceOwnership()":"30421","s_tokens(address,address)":"infinite","transferOwnership(address)":"30813","updateExchangeAddress(address)":"27054","updateFillLogicAddress(address)":"27009","updateFundWallet(address)":"27075","updateaDaiAddress(address)":"27031","withdrawETH(uint256)":"infinite","withdrawToFundWallet(address,uint256)":"infinite","withdrawToken(address,uint256,uint256)":"infinite"},"internal":{"updateBalance(address,address,uint256,bool)":"infinite","updateLockedFunds(address,address,uint256,bool)":"infinite"}},"methodIdentifiers":{"aDAI()":"1a38a4fb","balanceOf(address,address)":"f7888aec","depositETH()":"f6326fb3","depositToken(address,uint256,uint256)":"99c6d2de","ethToken()":"7bf1a627","exchangeUpdateBalance(address,address,uint256,bool)":"126b9c5d","exchangeUpdateLockedFunds(address,address,uint256,bool)":"fc11a3d6","fundWallet()":"664a1ad6","getlockedFunds(address,address)":"4fc121db","lockedFunds(address,address)":"4bdde1cf","owner()":"8da5cb5b","renounceOwnership()":"715018a6","s_tokens(address,address)":"cd5d767c","transferOwnership(address)":"f2fde38b","updateExchangeAddress(address)":"31415a65","updateFillLogicAddress(address)":"54419929","updateFundWallet(address)":"5ec38bec","updateaDaiAddress(address)":"545e0157","withdrawETH(uint256)":"f14210a6","withdrawToFundWallet(address,uint256)":"5dfbfffd","withdrawToken(address,uint256,uint256)":"96c0ec55"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aDAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"exchangeUpdateBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"exchangeUpdateLockedFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getlockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchangeAddress\",\"type\":\"address\"}],\"name\":\"updateExchangeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"updateFillLogicAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fundwallet\",\"type\":\"address\"}],\"name\":\"updateFundWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"updateaDaiAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"withdrawToFundWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Withdraw(address,address,uint256,uint256)\":{\"notice\":\"Event when amount withdrawn exchange\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(\\r\\n        address account\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(\\r\\n            currentAllowance >= subtractedValue,\\r\\n            \\\"ERC20: decreased allowance below zero\\\"\\r\\n        );\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(\\r\\n            fromBalance >= amount,\\r\\n            \\\"ERC20: transfer amount exceeds balance\\\"\\r\\n        );\\r\\n        unchecked {\\r\\n            _balances[from] = fromBalance - amount;\\r\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\r\\n            // decrementing then incrementing.\\r\\n            _balances[to] += amount;\\r\\n        }\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply += amount;\\r\\n        unchecked {\\r\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\r\\n            _balances[account] += amount;\\r\\n        }\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = accountBalance - amount;\\r\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\r\\n            _totalSupply -= amount;\\r\\n        }\\r\\n\\r\\n        emit Transfer(account, address(0), amount);\\r\\n\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(\\r\\n                currentAllowance >= amount,\\r\\n                \\\"ERC20: insufficient allowance\\\"\\r\\n            );\\r\\n            unchecked {\\r\\n                _approve(owner, spender, currentAllowance - amount);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0x98cae7e35c3cb1f12ab2eeee2506facde33e4ee4292ca6d6ebdc93a62523c256\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\\r\\n    mapping(address => mapping(address => mapping(uint256 => _Order[])))\\r\\n        public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    _Order public orderStruct;\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of USD\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event filledOrder(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 amountFilled,\\r\\n        uint256 fillRate,\\r\\n        uint256 originalRate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\r\\n        wallet = Wallet(_wallet);\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        priceChecker = PriceChecker(_priceChecker);\\r\\n    }\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    )\\r\\n        public\\r\\n        validOrder(_id, side, _tokenA, _tokenB)\\r\\n        validToken(_tokenA)\\r\\n        validToken(_tokenB)\\r\\n    {\\r\\n        uint256 _side = uint256(side);\\r\\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.exchangeUpdateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.exchangeUpdateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateFilledOrders(\\r\\n        _filledOrder memory order,\\r\\n        uint256 _side\\r\\n    ) external {\\r\\n        s_filledOrders[order.user][_side].push(order);\\r\\n\\r\\n        emit filledOrder(\\r\\n            order.id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.tokenB,\\r\\n            order.amountFilled,\\r\\n            order.fillRate,\\r\\n            order.originalRate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.feesWaived,\\r\\n            order.feesPaid\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateOrder(\\r\\n        _Order memory order,\\r\\n        uint256 _amountA,\\r\\n        uint256 _amountB,\\r\\n        uint256 _index\\r\\n    ) external validOrder(order.id, order.side, order.tokenA, order.tokenB) {\\r\\n        uint256 a = s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n            _index\\r\\n        ].amountA;\\r\\n        uint256 b = s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n            _index\\r\\n        ].amountB;\\r\\n        s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n            .amountA = _amountA;\\r\\n        s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n            .amountB = _amountB;\\r\\n\\r\\n        require(\\r\\n            s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n                .amountA <\\r\\n                a &&\\r\\n                s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n                    _index\\r\\n                ].amountB <\\r\\n                b,\\r\\n            \\\"Order not updated properly\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function setManual(bool _isManual) external {\\r\\n        s_isManual = _isManual;\\r\\n        require(s_isManual == _isManual, \\\"Invalid s_isManual bool\\\");\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 index,\\r\\n        Side side\\r\\n    ) public view returns (_Order memory) {\\r\\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][\\r\\n            index\\r\\n        ];\\r\\n        return (order);\\r\\n    }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getFilledOrder(\\r\\n        address _user,\\r\\n        Side side,\\r\\n        uint256 index\\r\\n    ) public view returns (_filledOrder memory) {\\r\\n        return s_filledOrders[_user][uint256(side)][index];\\r\\n    }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        for (i; i < s_orderBook[_tokenA][_tokenB][side].length; i++) {\\r\\n            if (s_orderBook[_tokenA][_tokenB][side][i].id == _id) {\\r\\n                return (s_orderBook[_tokenA][_tokenB][side][i], i);\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Order not Found\\\");\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Token not available\\\");\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n\\r\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_tradingFees);\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _tokenA, _tokenB), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4da7ab34528a6ddc8a19d8b7030ecf57023a2985361f1875b527d0a269d0e811\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public daiToken =\\r\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\r\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\r\\n    PriceChecker private priceFeed;\\r\\n    Wallet wallet;\\r\\n\\r\\n    constructor(address _priceCheckerAddress) {\\r\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\r\\n    }\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) public view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\r\\n        uint256 value = (\\r\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\r\\n        ).div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        return fees; //based on USD value\\r\\n    }\\r\\n\\r\\n    //Amount of DAI to deduct from fees\\r\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\r\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\r\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    //Amount of Tokens to deduct from fees\\r\\n    function amountTokensToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 _fees\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\r\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaDAI(\\r\\n        uint256 _fees,\\r\\n        address _user\\r\\n    ) public view returns (bool) {\\r\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\r\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\r\\n\\r\\n        return balance >= amtDAI;\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7891dc27d893e5a01614511576fb8e0477a7ace177b52492e745cb0c38464677\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./ERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\nimport \\\"./fillLogic.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public fundWallet;\\r\\n    uint256 decimals = 18;\\r\\n    address public aDAI;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    fillLogic fillContract;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n        locked = false;\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken, \\\"Invalid Token Type\\\");\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token) || _token == aDAI,\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n\\r\\n        updateBalance(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n            true\\r\\n        );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        updateBalance(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n            false\\r\\n        );\\r\\n        require(\\r\\n            token.transfer(\\r\\n                msg.sender,\\r\\n                _amount.div(10 ** decimals.sub(_decimals))\\r\\n            )\\r\\n        );\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function exchangeUpdateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) external isExchange {\\r\\n        updateLockedFunds(_user, _token, _amount, isAdd);\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) internal {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function exchangeUpdateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) external isExchange {\\r\\n        updateBalance(_token, _user, _amount, isAdd);\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) internal {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateFundWallet(address _fundwallet) public onlyOwner {\\r\\n        fundWallet = _fundwallet;\\r\\n    }\\r\\n\\r\\n    function withdrawToFundWallet(address _token, uint256 _decimals) external {\\r\\n        //Only allow fundWallet address to make the call\\r\\n        require(\\r\\n            msg.sender == fundWallet,\\r\\n            \\\"Invalid FundWallet address to withdraw\\\"\\r\\n        );\\r\\n        uint256 totalAmount = s_tokens[_token][fundWallet];\\r\\n        uint256 actualAmount = totalAmount.div(10 ** decimals.sub(_decimals));\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(_token, fundWallet, totalAmount, false);\\r\\n        require(token.transfer(fundWallet, actualAmount));\\r\\n        locked = false;\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    function updateFillLogicAddress(address _contract) public onlyOwner {\\r\\n        fillContract = fillLogic(_contract);\\r\\n    }\\r\\n\\r\\n    function updateaDaiAddress(address _address) public onlyOwner {\\r\\n        aDAI = address(_address);\\r\\n    }\\r\\n\\r\\n    modifier isExchange() {\\r\\n        require(\\r\\n            msg.sender == address(exchange) ||\\r\\n                msg.sender == address(fillContract),\\r\\n            \\\"Not Exchange or fillOrder contract\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc5b3f8146a024262e00685d84250a606e4608fb1f055d13dcde43072f7120652\",\"license\":\"MIT\"},\"contracts/fillLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./Exchange.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\n\\r\\ncontract fillLogic is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    Exchange exchange;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n    uint256 decimals = 10 ** 18;\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        Exchange._Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        Exchange._Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _Exchange, address _fees, address _Wallet) {\\r\\n        exchange = Exchange(_Exchange); // Set the address of the Exchange contract\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        wallet = Wallet(_Wallet);\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256[][] memory _ordersToFill\\r\\n    ) external {\\r\\n        Exchange._Order memory order;\\r\\n        uint256 index;\\r\\n\\r\\n        for (uint256 i = 0; i < _ordersToFill.length; i++) {\\r\\n            require(\\r\\n                _ordersToFill[i][2] != 0 && _ordersToFill[i][3] != 0,\\r\\n                \\\"Order values error\\\"\\r\\n            );\\r\\n\\r\\n            (order, index) = exchange.getOrderFromArray(\\r\\n                _tokenA,\\r\\n                _tokenB,\\r\\n                _ordersToFill[i][1],\\r\\n                _ordersToFill[i][0]\\r\\n            );\\r\\n\\r\\n            require(\\r\\n                order.amountA != 0 && order.amountB != 0,\\r\\n                \\\"Invalid Order Amount\\\"\\r\\n            );\\r\\n            exchange.updateOrder(\\r\\n                order,\\r\\n                order.amountA.sub(_ordersToFill[i][2]),\\r\\n                order.amountB.sub(\\r\\n                    order.rate.mul(_ordersToFill[i][2]).div(decimals)\\r\\n                ),\\r\\n                index\\r\\n            );\\r\\n\\r\\n            order.amountA = order.amountA.sub(_ordersToFill[i][2]);\\r\\n\\r\\n            uint256 fees = tradingFees.calculateFees(\\r\\n                _ordersToFill[i][2],\\r\\n                _ordersToFill[i][3],\\r\\n                order.tokenB\\r\\n            );\\r\\n            require(fees != 0, \\\"Fees cannot be 0\\\");\\r\\n\\r\\n            bool feesWaived = order.waiveFees &&\\r\\n                tradingFees.checkSufficientaDAI(fees, order.user);\\r\\n\\r\\n            if (_ordersToFill[i][1] == 0) {\\r\\n                fillBuyOrders(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n                emit fillBuyOrder(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n            } else {\\r\\n                fillSellOrders(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n                emit fillSellOrder(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n            }\\r\\n\\r\\n            if (order.amountA == 0) {\\r\\n                exchange.setManual(false);\\r\\n                exchange.cancelOrder(\\r\\n                    (\\r\\n                        _ordersToFill[i][1] == 0\\r\\n                            ? Exchange.Side.BUY\\r\\n                            : Exchange.Side.SELL\\r\\n                    ),\\r\\n                    order.id,\\r\\n                    order.tokenA,\\r\\n                    order.tokenB\\r\\n                );\\r\\n                exchange.setManual(true);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        Exchange._Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                wallet.fundWallet(),\\r\\n                aDAIToDeduct,\\r\\n                true\\r\\n            );\\r\\n\\r\\n            //Credit Bought tokens\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount,\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountTokenToDeduct),\\r\\n                true\\r\\n            );\\r\\n\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                wallet.fundWallet(),\\r\\n                amountTokenToDeduct,\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.exchangeUpdateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.exchangeUpdateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n        exchange.updateFilledOrders(\\r\\n            Exchange._filledOrder(\\r\\n                order.id,\\r\\n                Exchange.Side.BUY,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            ),\\r\\n            uint256(Exchange.Side.BUY)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        Exchange._Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                wallet.fundWallet(),\\r\\n                aDAIToDeduct,\\r\\n                true\\r\\n            );\\r\\n\\r\\n            //Credit Earned tokens\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                wallet.fundWallet(),\\r\\n                amountTokensToDeduct,\\r\\n                true\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.exchangeUpdateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            _amount,\\r\\n            false\\r\\n        );\\r\\n        //seller update\\r\\n        wallet.exchangeUpdateBalance(order.tokenA, order.user, _amount, false);\\r\\n\\r\\n        exchange.updateFilledOrders(\\r\\n            Exchange._filledOrder(\\r\\n                order.id,\\r\\n                Exchange.Side.SELL,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            ),\\r\\n            uint256(Exchange.Side.SELL)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setExchangeAddress(address _exchange) public onlyOwner {\\r\\n        exchange = Exchange(_exchange);\\r\\n    }\\r\\n\\r\\n    function setTradingFeesAddress(address _fees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_fees);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa7f41526cf6c281440ecf90511b108c78d81614c70fe71602330645ce388f180\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"contracts/Wallet.sol:Wallet","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":3199,"contract":"contracts/Wallet.sol:Wallet","label":"fundWallet","offset":0,"slot":"1","type":"t_address"},{"astId":3202,"contract":"contracts/Wallet.sol:Wallet","label":"decimals","offset":0,"slot":"2","type":"t_uint256"},{"astId":3204,"contract":"contracts/Wallet.sol:Wallet","label":"aDAI","offset":0,"slot":"3","type":"t_address"},{"astId":3206,"contract":"contracts/Wallet.sol:Wallet","label":"locked","offset":20,"slot":"3","type":"t_bool"},{"astId":3212,"contract":"contracts/Wallet.sol:Wallet","label":"ethToken","offset":0,"slot":"4","type":"t_address"},{"astId":3218,"contract":"contracts/Wallet.sol:Wallet","label":"s_tokens","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3224,"contract":"contracts/Wallet.sol:Wallet","label":"lockedFunds","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3227,"contract":"contracts/Wallet.sol:Wallet","label":"exchange","offset":0,"slot":"7","type":"t_contract(Exchange)2785"},{"astId":3230,"contract":"contracts/Wallet.sol:Wallet","label":"fillContract","offset":0,"slot":"8","type":"t_contract(fillLogic)4606"},{"astId":3233,"contract":"contracts/Wallet.sol:Wallet","label":"token","offset":0,"slot":"9","type":"t_contract(IERC20)588"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(Exchange)2785":{"encoding":"inplace","label":"contract Exchange","numberOfBytes":"20"},"t_contract(IERC20)588":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(fillLogic)4606":{"encoding":"inplace","label":"contract fillLogic","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"Withdraw(address,address,uint256,uint256)":{"notice":"Event when amount withdrawn exchange"}},"kind":"user","methods":{},"version":1}}},"contracts/fillLogic.sol":{"fillLogic":{"abi":[{"inputs":[{"internalType":"address","name":"_Exchange","type":"address"},{"internalType":"address","name":"_fees","type":"address"},{"internalType":"address","name":"_Wallet","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"indexed":false,"internalType":"struct Exchange._Order","name":"remainingOrder","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"amountBought","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillBuyRate","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"fillBuyOrder","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"indexed":false,"internalType":"struct Exchange._Order","name":"remainingOrder","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"amountSold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillSellRate","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"fillSellOrder","type":"event"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256[][]","name":"_ordersToFill","type":"uint256[][]"}],"name":"fillOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_exchange","type":"address"}],"name":"setExchangeAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_fees","type":"address"}],"name":"setTradingFeesAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_Walletaddress","type":"address"}],"name":"setWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3939":{"entryPoint":null,"id":3939,"parameterSlots":3,"returnSlots":0},"@_421":{"entryPoint":null,"id":421,"parameterSlots":0,"returnSlots":0},"@_msgSender_625":{"entryPoint":303,"id":625,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":311,"id":509,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":507,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":530,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":622,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":642,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":674,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":679,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1511:17","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:17","statements":[{"nodeType":"YulAssignment","src":"80:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:17"},"nodeType":"YulFunctionCall","src":"89:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:17"},"nodeType":"YulFunctionCall","src":"111:33:17"},"nodeType":"YulExpressionStatement","src":"111:33:17"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:17","type":""}],"src":"7:143:17"},{"body":{"nodeType":"YulBlock","src":"267:552:17","statements":[{"body":{"nodeType":"YulBlock","src":"313:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"315:77:17"},"nodeType":"YulFunctionCall","src":"315:79:17"},"nodeType":"YulExpressionStatement","src":"315:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"288:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"297:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"284:3:17"},"nodeType":"YulFunctionCall","src":"284:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"309:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"280:3:17"},"nodeType":"YulFunctionCall","src":"280:32:17"},"nodeType":"YulIf","src":"277:119:17"},{"nodeType":"YulBlock","src":"406:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"421:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"435:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"425:6:17","type":""}]},{"nodeType":"YulAssignment","src":"450:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"496:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"507:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"492:3:17"},"nodeType":"YulFunctionCall","src":"492:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"516:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"460:31:17"},"nodeType":"YulFunctionCall","src":"460:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"450:6:17"}]}]},{"nodeType":"YulBlock","src":"544:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"559:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"573:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"563:6:17","type":""}]},{"nodeType":"YulAssignment","src":"589:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"635:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"646:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"631:3:17"},"nodeType":"YulFunctionCall","src":"631:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"655:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"599:31:17"},"nodeType":"YulFunctionCall","src":"599:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:17"}]}]},{"nodeType":"YulBlock","src":"683:129:17","statements":[{"nodeType":"YulVariableDeclaration","src":"698:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"712:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"702:6:17","type":""}]},{"nodeType":"YulAssignment","src":"728:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"774:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"785:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"770:3:17"},"nodeType":"YulFunctionCall","src":"770:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"794:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"738:31:17"},"nodeType":"YulFunctionCall","src":"738:64:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"728:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"221:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"232:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"244:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"252:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"260:6:17","type":""}],"src":"156:663:17"},{"body":{"nodeType":"YulBlock","src":"865:35:17","statements":[{"nodeType":"YulAssignment","src":"875:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"891:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"885:5:17"},"nodeType":"YulFunctionCall","src":"885:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"875:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"858:6:17","type":""}],"src":"825:75:17"},{"body":{"nodeType":"YulBlock","src":"951:51:17","statements":[{"nodeType":"YulAssignment","src":"961:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"972:17:17"},"nodeType":"YulFunctionCall","src":"972:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"961:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"933:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"943:7:17","type":""}],"src":"906:96:17"},{"body":{"nodeType":"YulBlock","src":"1053:81:17","statements":[{"nodeType":"YulAssignment","src":"1063:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1078:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1085:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1074:3:17"},"nodeType":"YulFunctionCall","src":"1074:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1063:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1035:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1045:7:17","type":""}],"src":"1008:126:17"},{"body":{"nodeType":"YulBlock","src":"1229:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1246:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1249:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1239:6:17"},"nodeType":"YulFunctionCall","src":"1239:12:17"},"nodeType":"YulExpressionStatement","src":"1239:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1140:117:17"},{"body":{"nodeType":"YulBlock","src":"1352:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1369:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1372:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1362:6:17"},"nodeType":"YulFunctionCall","src":"1362:12:17"},"nodeType":"YulExpressionStatement","src":"1362:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1263:117:17"},{"body":{"nodeType":"YulBlock","src":"1429:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1486:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1495:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1488:6:17"},"nodeType":"YulFunctionCall","src":"1488:12:17"},"nodeType":"YulExpressionStatement","src":"1488:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1459:17:17"},"nodeType":"YulFunctionCall","src":"1459:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1449:2:17"},"nodeType":"YulFunctionCall","src":"1449:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1442:6:17"},"nodeType":"YulFunctionCall","src":"1442:43:17"},"nodeType":"YulIf","src":"1439:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1422:5:17","type":""}],"src":"1386:122:17"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052670de0b6b3a76400006004553480156200001d57600080fd5b50604051620035d0380380620035d0833981810160405281019062000043919062000212565b62000063620000576200012f60201b60201c565b6200013760201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620002c1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200020c81620002a7565b92915050565b6000806000606084860312156200022e576200022d620002a2565b5b60006200023e86828701620001fb565b93505060206200025186828701620001fb565b92505060406200026486828701620001fb565b9150509250925092565b60006200027b8262000282565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002b2816200026e565b8114620002be57600080fd5b50565b6132ff80620002d16000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639df4d1861161005b5780639df4d186146100c6578063ac1a386a146100e2578063d082ea8c146100fe578063f2fde38b1461011a5761007d565b8063715018a614610082578063857ba6501461008c5780638da5cb5b146100a8575b600080fd5b61008a610136565b005b6100a660048036038101906100a19190612706565b61014a565b005b6100b0610c1b565b6040516100bd9190612b0f565b60405180910390f35b6100e060048036038101906100db91906126ac565b610c44565b005b6100fc60048036038101906100f791906126ac565b610c90565b005b610118600480360381019061011391906126ac565b610cdc565b005b610134600480360381019061012f91906126ac565b610d28565b005b61013e610dac565b6101486000610e2a565b565b610152612318565b600080600090505b8351811015610c13576000848281518110610178576101776130e5565b5b6020026020010151600281518110610193576101926130e5565b5b6020026020010151141580156101df575060008482815181106101b9576101b86130e5565b5b60200260200101516003815181106101d4576101d36130e5565b5b602002602001015114155b61021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021590612c3d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166392e43d3a8787878581518110610271576102706130e5565b5b602002602001015160018151811061028c5761028b6130e5565b5b60200260200101518886815181106102a7576102a66130e5565b5b60200260200101516000815181106102c2576102c16130e5565b5b60200260200101516040518563ffffffff1660e01b81526004016102e99493929190612b6f565b6101806040518083038186803b15801561030257600080fd5b505afa158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a91906127a2565b8093508194505050600083608001511415801561035c575060008360c0015114155b61039b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039290612c9d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb310c9b846104268785815181106103f0576103ef6130e5565b5b602002602001015160028151811061040b5761040a6130e5565b5b60200260200101518760800151610eee90919063ffffffff16565b61049c61048960045461047b8b8981518110610445576104446130e5565b5b60200260200101516002815181106104605761045f6130e5565b5b60200260200101518b60e00151610f0490919063ffffffff16565b610f1a90919063ffffffff16565b8860c00151610eee90919063ffffffff16565b866040518563ffffffff1660e01b81526004016104bc9493929190612d35565b600060405180830381600087803b1580156104d657600080fd5b505af11580156104ea573d6000803e3d6000fd5b5050505061053a848281518110610504576105036130e5565b5b602002602001015160028151811061051f5761051e6130e5565b5b60200260200101518460800151610eee90919063ffffffff16565b8360800181815250506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663513ffedd868481518110610596576105956130e5565b5b60200260200101516002815181106105b1576105b06130e5565b5b60200260200101518785815181106105cc576105cb6130e5565b5b60200260200101516003815181106105e7576105e66130e5565b5b60200260200101518760a001516040518463ffffffff1660e01b815260040161061293929190612ded565b60206040518083038186803b15801561062a57600080fd5b505afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066291906127e4565b905060008114156106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90612cbd565b60405180910390fd5b600084610140015180156107695750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca8963f18387604001516040518363ffffffff1660e01b8152600401610718929190612dc4565b60206040518083038186803b15801561073057600080fd5b505afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190612775565b5b905060008684815181106107805761077f6130e5565b5b602002602001015160018151811061079b5761079a6130e5565b5b602002602001015114156108ce57610820858785815181106107c0576107bf6130e5565b5b60200260200101516002815181106107db576107da6130e5565b5b60200260200101518886815181106107f6576107f56130e5565b5b6020026020010151600381518110610811576108106130e5565b5b60200260200101518486610f30565b7f3b9846c737e068d8f2cef4f3047025f465c9bc72bb212e31e6ce53ad6b6a894b85878581518110610855576108546130e5565b5b60200260200101516002815181106108705761086f6130e5565b5b602002602001015188868151811061088b5761088a6130e5565b5b60200260200101516003815181106108a6576108a56130e5565b5b602002602001015184866040516108c1959493929190612cdd565b60405180910390a16109ef565b610945858785815181106108e5576108e46130e5565b5b6020026020010151600281518110610900576108ff6130e5565b5b602002602001015188868151811061091b5761091a6130e5565b5b6020026020010151600381518110610936576109356130e5565b5b60200260200101518486611923565b7fd6c6c0a27de1c0f74adbc5d0061e767a3fc239e8a9d70cf49eba77fc944eb7fb8587858151811061097a576109796130e5565b5b6020026020010151600281518110610995576109946130e5565b5b60200260200101518886815181106109b0576109af6130e5565b5b60200260200101516003815181106109cb576109ca6130e5565b5b602002602001015184866040516109e6959493929190612cdd565b60405180910390a15b600085608001511415610bfe57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff09cdfa60006040518263ffffffff1660e01b8152600401610a589190612bdd565b600060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f90ef4f26000888681518110610add57610adc6130e5565b5b6020026020010151600181518110610af857610af76130e5565b5b602002602001015114610b0c576001610b0f565b60005b876000015188606001518960a001516040518563ffffffff1660e01b8152600401610b3d9493929190612bf8565b600060405180830381600087803b158015610b5757600080fd5b505af1158015610b6b573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff09cdfa60016040518263ffffffff1660e01b8152600401610bcb9190612bdd565b600060405180830381600087803b158015610be557600080fd5b505af1158015610bf9573d6000803e3d6000fd5b505050505b50508080610c0b9061300f565b91505061015a565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c4c610dac565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610c98610dac565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ce4610dac565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610d30610dac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610da0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9790612c5d565b60405180910390fd5b610da981610e2a565b50565b610db4612310565b73ffffffffffffffffffffffffffffffffffffffff16610dd2610c1b565b73ffffffffffffffffffffffffffffffffffffffff1614610e28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1f90612c7d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610efc9190612f3d565b905092915050565b60008183610f129190612ee3565b905092915050565b60008183610f289190612eb2565b905092915050565b8115611390576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a42963e9836040518263ffffffff1660e01b8152600401610f939190612da9565b60206040518083038186803b158015610fab57600080fd5b505afa158015610fbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe391906127e4565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631a38a4fb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561108b57600080fd5b505afa15801561109f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c391906126d9565b88604001518460006040518563ffffffff1660e01b81526004016110ea9493929190612b2a565b600060405180830381600087803b15801561110457600080fd5b505af1158015611118573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631a38a4fb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111c257600080fd5b505afa1580156111d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fa91906126d9565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663664a1ad66040518163ffffffff1660e01b815260040160206040518083038186803b15801561126257600080fd5b505afa158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a91906126d9565b8460016040518563ffffffff1660e01b81526004016112bc9493929190612b2a565b600060405180830381600087803b1580156112d657600080fd5b505af11580156112ea573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d876060015188604001518860016040518563ffffffff1660e01b81526004016113589493929190612b2a565b600060405180830381600087803b15801561137257600080fd5b505af1158015611386573d6000803e3d6000fd5b505050505061162c565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b98ee4198760600151846040518363ffffffff1660e01b81526004016113f3929190612bb4565b60206040518083038186803b15801561140b57600080fd5b505afa15801561141f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144391906127e4565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d876060015188604001516114a0858a610eee90919063ffffffff16565b60016040518563ffffffff1660e01b81526004016114c19493929190612b2a565b600060405180830381600087803b1580156114db57600080fd5b505af11580156114ef573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d8760600151600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663664a1ad66040518163ffffffff1660e01b815260040160206040518083038186803b15801561159e57600080fd5b505afa1580156115b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d691906126d9565b8460016040518563ffffffff1660e01b81526004016115f89493929190612b2a565b600060405180830381600087803b15801561161257600080fd5b505af1158015611626573d6000803e3d6000fd5b50505050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d686604001518760a0015161169f6004546116918a8c60e00151610f0490919063ffffffff16565b610f1a90919063ffffffff16565b60006040518563ffffffff1660e01b81526004016116c09493929190612b2a565b600060405180830381600087803b1580156116da57600080fd5b505af11580156116ee573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d8660a0015187604001516117616004546117538a8a610f0490919063ffffffff16565b610f1a90919063ffffffff16565b60006040518563ffffffff1660e01b81526004016117829493929190612b2a565b600060405180830381600087803b15801561179c57600080fd5b505af11580156117b0573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630af4e4f0604051806101800160405280886000015181526020016000600181111561181c5761181b6130b6565b5b8152602001886040015173ffffffffffffffffffffffffffffffffffffffff168152602001886060015173ffffffffffffffffffffffffffffffffffffffff1681526020018860a0015173ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018860e00151815260200188610100015181526020018861012001518152602001851515815260200184815250600060018111156118cd576118cc6130b6565b5b6040518363ffffffff1660e01b81526004016118ea929190612d7e565b600060405180830381600087803b15801561190457600080fd5b505af1158015611918573d6000803e3d6000fd5b505050505050505050565b8115611da9576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a42963e9836040518263ffffffff1660e01b81526004016119869190612da9565b60206040518083038186803b15801561199e57600080fd5b505afa1580156119b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d691906127e4565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631a38a4fb6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a7e57600080fd5b505afa158015611a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab691906126d9565b88604001518460006040518563ffffffff1660e01b8152600401611add9493929190612b2a565b600060405180830381600087803b158015611af757600080fd5b505af1158015611b0b573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631a38a4fb6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bb557600080fd5b505afa158015611bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bed91906126d9565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663664a1ad66040518163ffffffff1660e01b815260040160206040518083038186803b158015611c5557600080fd5b505afa158015611c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8d91906126d9565b8460016040518563ffffffff1660e01b8152600401611caf9493929190612b2a565b600060405180830381600087803b158015611cc957600080fd5b505af1158015611cdd573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d8760a001518860400151611d50600454611d428b8b610f0490919063ffffffff16565b610f1a90919063ffffffff16565b60016040518563ffffffff1660e01b8152600401611d719493929190612b2a565b600060405180830381600087803b158015611d8b57600080fd5b505af1158015611d9f573d6000803e3d6000fd5b505050505061206b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b98ee4198760a00151846040518363ffffffff1660e01b8152600401611e0c929190612bb4565b60206040518083038186803b158015611e2457600080fd5b505afa158015611e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5c91906127e4565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d8760a00151600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663664a1ad66040518163ffffffff1660e01b815260040160206040518083038186803b158015611f0957600080fd5b505afa158015611f1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4191906126d9565b8460016040518563ffffffff1660e01b8152600401611f639493929190612b2a565b600060405180830381600087803b158015611f7d57600080fd5b505af1158015611f91573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d8760a00151886040015161201685612008600454611ffa8d8d610f0490919063ffffffff16565b610f1a90919063ffffffff16565b610eee90919063ffffffff16565b60016040518563ffffffff1660e01b81526004016120379493929190612b2a565b600060405180830381600087803b15801561205157600080fd5b505af1158015612065573d6000803e3d6000fd5b50505050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6866040015187606001518760006040518563ffffffff1660e01b81526004016120d59493929190612b2a565b600060405180830381600087803b1580156120ef57600080fd5b505af1158015612103573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d866060015187604001518760006040518563ffffffff1660e01b81526004016121719493929190612b2a565b600060405180830381600087803b15801561218b57600080fd5b505af115801561219f573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630af4e4f06040518061018001604052808860000151815260200160018081111561220a576122096130b6565b5b8152602001886040015173ffffffffffffffffffffffffffffffffffffffff168152602001886060015173ffffffffffffffffffffffffffffffffffffffff1681526020018860a0015173ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018860e001518152602001886101000151815260200188610120015181526020018515158152602001848152506001808111156122ba576122b96130b6565b5b6040518363ffffffff1660e01b81526004016122d7929190612d7e565b600060405180830381600087803b1580156122f157600080fd5b505af1158015612305573d6000803e3d6000fd5b505050505050505050565b600033905090565b604051806101600160405280600081526020016000600181111561233f5761233e6130b6565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b60006123db6123d684612e49565b612e24565b905080838252602082019050828560208602820111156123fe576123fd61314d565b5b60005b8581101561244c57813567ffffffffffffffff81111561242457612423613143565b5b808601612431898261251e565b85526020850194506020840193505050600181019050612401565b5050509392505050565b600061246961246484612e75565b612e24565b9050808382526020820190508285602086028201111561248c5761248b61314d565b5b60005b858110156124bc57816124a28882612682565b84526020840193506020830192505060018101905061248f565b5050509392505050565b6000813590506124d581613274565b92915050565b6000815190506124ea81613274565b92915050565b600082601f83011261250557612504613143565b5b81356125158482602086016123c8565b91505092915050565b600082601f83011261253357612532613143565b5b8135612543848260208601612456565b91505092915050565b60008151905061255b8161328b565b92915050565b600081519050612570816132a2565b92915050565b6000610160828403121561258d5761258c613148565b5b612598610160612e24565b905060006125a884828501612697565b60008301525060206125bc84828501612561565b60208301525060406125d0848285016124db565b60408301525060606125e4848285016124db565b60608301525060806125f884828501612697565b60808301525060a061260c848285016124db565b60a08301525060c061262084828501612697565b60c08301525060e061263484828501612697565b60e08301525061010061264984828501612697565b6101008301525061012061265f84828501612697565b610120830152506101406126758482850161254c565b6101408301525092915050565b600081359050612691816132b2565b92915050565b6000815190506126a6816132b2565b92915050565b6000602082840312156126c2576126c1613157565b5b60006126d0848285016124c6565b91505092915050565b6000602082840312156126ef576126ee613157565b5b60006126fd848285016124db565b91505092915050565b60008060006060848603121561271f5761271e613157565b5b600061272d868287016124c6565b935050602061273e868287016124c6565b925050604084013567ffffffffffffffff81111561275f5761275e613152565b5b61276b868287016124f0565b9150509250925092565b60006020828403121561278b5761278a613157565b5b60006127998482850161254c565b91505092915050565b60008061018083850312156127ba576127b9613157565b5b60006127c885828601612576565b9250506101606127da85828601612697565b9150509250929050565b6000602082840312156127fa576127f9613157565b5b600061280884828501612697565b91505092915050565b61281a81612f71565b82525050565b61282981612f71565b82525050565b61283881612f83565b82525050565b61284781612f83565b82525050565b61285681612fcc565b82525050565b61286581612fcc565b82525050565b6000612878601283612ea1565b91506128838261316d565b602082019050919050565b600061289b602683612ea1565b91506128a682613196565b604082019050919050565b60006128be602083612ea1565b91506128c9826131e5565b602082019050919050565b60006128e1601483612ea1565b91506128ec8261320e565b602082019050919050565b6000612904601083612ea1565b915061290f82613237565b602082019050919050565b610160820160008201516129316000850182612af1565b506020820151612944602085018261284d565b5060408201516129576040850182612811565b50606082015161296a6060850182612811565b50608082015161297d6080850182612af1565b5060a082015161299060a0850182612811565b5060c08201516129a360c0850182612af1565b5060e08201516129b660e0850182612af1565b506101008201516129cb610100850182612af1565b506101208201516129e0610120850182612af1565b506101408201516129f561014085018261282f565b50505050565b61018082016000820151612a126000850182612af1565b506020820151612a25602085018261284d565b506040820151612a386040850182612811565b506060820151612a4b6060850182612811565b506080820151612a5e6080850182612811565b5060a0820151612a7160a0850182612af1565b5060c0820151612a8460c0850182612af1565b5060e0820151612a9760e0850182612af1565b50610100820151612aac610100850182612af1565b50610120820151612ac1610120850182612af1565b50610140820151612ad661014085018261282f565b50610160820151612aeb610160850182612af1565b50505050565b612afa81612fc2565b82525050565b612b0981612fc2565b82525050565b6000602082019050612b246000830184612820565b92915050565b6000608082019050612b3f6000830187612820565b612b4c6020830186612820565b612b596040830185612b00565b612b66606083018461283e565b95945050505050565b6000608082019050612b846000830187612820565b612b916020830186612820565b612b9e6040830185612b00565b612bab6060830184612b00565b95945050505050565b6000604082019050612bc96000830185612820565b612bd66020830184612b00565b9392505050565b6000602082019050612bf2600083018461283e565b92915050565b6000608082019050612c0d600083018761285c565b612c1a6020830186612b00565b612c276040830185612820565b612c346060830184612820565b95945050505050565b60006020820190508181036000830152612c568161286b565b9050919050565b60006020820190508181036000830152612c768161288e565b9050919050565b60006020820190508181036000830152612c96816128b1565b9050919050565b60006020820190508181036000830152612cb6816128d4565b9050919050565b60006020820190508181036000830152612cd6816128f7565b9050919050565b60006101e082019050612cf3600083018861291a565b612d01610160830187612b00565b612d0f610180830186612b00565b612d1d6101a083018561283e565b612d2b6101c0830184612b00565b9695505050505050565b60006101c082019050612d4b600083018761291a565b612d59610160830186612b00565b612d67610180830185612b00565b612d756101a0830184612b00565b95945050505050565b60006101a082019050612d9460008301856129fb565b612da2610180830184612b00565b9392505050565b6000602082019050612dbe6000830184612b00565b92915050565b6000604082019050612dd96000830185612b00565b612de66020830184612820565b9392505050565b6000606082019050612e026000830186612b00565b612e0f6020830185612b00565b612e1c6040830184612820565b949350505050565b6000612e2e612e3f565b9050612e3a8282612fde565b919050565b6000604051905090565b600067ffffffffffffffff821115612e6457612e63613114565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612e9057612e8f613114565b5b602082029050602081019050919050565b600082825260208201905092915050565b6000612ebd82612fc2565b9150612ec883612fc2565b925082612ed857612ed7613087565b5b828204905092915050565b6000612eee82612fc2565b9150612ef983612fc2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612f3257612f31613058565b5b828202905092915050565b6000612f4882612fc2565b9150612f5383612fc2565b925082821015612f6657612f65613058565b5b828203905092915050565b6000612f7c82612fa2565b9050919050565b60008115159050919050565b6000819050612f9d82613260565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612fd782612f8f565b9050919050565b612fe78261315c565b810181811067ffffffffffffffff8211171561300657613005613114565b5b80604052505050565b600061301a82612fc2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561304d5761304c613058565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f726465722076616c756573206572726f720000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c6964204f7264657220416d6f756e74000000000000000000000000600082015250565b7f466565732063616e6e6f74206265203000000000000000000000000000000000600082015250565b60028110613271576132706130b6565b5b50565b61327d81612f71565b811461328857600080fd5b50565b61329481612f83565b811461329f57600080fd5b50565b600281106132af57600080fd5b50565b6132bb81612fc2565b81146132c657600080fd5b5056fea264697066735822122093ee57015b30482edeee151b7145946bb9a155fbfbf5a6ce293c4d2623ca3b9f64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x35D0 CODESIZE SUB DUP1 PUSH3 0x35D0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x43 SWAP2 SWAP1 PUSH3 0x212 JUMP JUMPDEST PUSH3 0x63 PUSH3 0x57 PUSH3 0x12F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x137 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x2C1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x20C DUP2 PUSH3 0x2A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x22E JUMPI PUSH3 0x22D PUSH3 0x2A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x23E DUP7 DUP3 DUP8 ADD PUSH3 0x1FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x251 DUP7 DUP3 DUP8 ADD PUSH3 0x1FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x264 DUP7 DUP3 DUP8 ADD PUSH3 0x1FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27B DUP3 PUSH3 0x282 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2B2 DUP2 PUSH3 0x26E JUMP JUMPDEST DUP2 EQ PUSH3 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32FF DUP1 PUSH3 0x2D1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DF4D186 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9DF4D186 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xD082EA8C EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x857BA650 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x136 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x2706 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x2B0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH2 0xCDC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH2 0xDAC JUMP JUMPDEST PUSH2 0x148 PUSH1 0x0 PUSH2 0xE2A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x152 PUSH2 0x2318 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC13 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x193 JUMPI PUSH2 0x192 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI POP PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1D4 JUMPI PUSH2 0x1D3 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ ISZERO JUMPDEST PUSH2 0x21E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP1 PUSH2 0x2C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x92E43D3A DUP8 DUP8 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x28C JUMPI PUSH2 0x28B PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C2 JUMPI PUSH2 0x2C1 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x27A2 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x35C JUMPI POP PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD EQ ISZERO JUMPDEST PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392 SWAP1 PUSH2 0x2C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB310C9B DUP5 PUSH2 0x426 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3F0 JUMPI PUSH2 0x3EF PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x40B JUMPI PUSH2 0x40A PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD PUSH2 0xEEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x49C PUSH2 0x489 PUSH1 0x4 SLOAD PUSH2 0x47B DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x445 JUMPI PUSH2 0x444 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x460 JUMPI PUSH2 0x45F PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0xE0 ADD MLOAD PUSH2 0xF04 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH1 0xC0 ADD MLOAD PUSH2 0xEEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x53A DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x504 JUMPI PUSH2 0x503 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0xEEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x513FFEDD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x596 JUMPI PUSH2 0x595 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5CC JUMPI PUSH2 0x5CB PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x5E7 JUMPI PUSH2 0x5E6 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x612 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x140 ADD MLOAD DUP1 ISZERO PUSH2 0x769 JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCA8963F1 DUP4 DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x744 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x2775 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x780 JUMPI PUSH2 0x77F PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x79B JUMPI PUSH2 0x79A PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ ISZERO PUSH2 0x8CE JUMPI PUSH2 0x820 DUP6 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x7C0 JUMPI PUSH2 0x7BF PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x7DB JUMPI PUSH2 0x7DA PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x7F6 JUMPI PUSH2 0x7F5 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x811 JUMPI PUSH2 0x810 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH2 0xF30 JUMP JUMPDEST PUSH32 0x3B9846C737E068D8F2CEF4F3047025F465C9BC72BB212E31E6CE53AD6B6A894B DUP6 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x855 JUMPI PUSH2 0x854 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x870 JUMPI PUSH2 0x86F PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x8A6 JUMPI PUSH2 0x8A5 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8C1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9EF JUMP JUMPDEST PUSH2 0x945 DUP6 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x8E5 JUMPI PUSH2 0x8E4 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x900 JUMPI PUSH2 0x8FF PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x91B JUMPI PUSH2 0x91A PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x936 JUMPI PUSH2 0x935 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH2 0x1923 JUMP JUMPDEST PUSH32 0xD6C6C0A27DE1C0F74ADBC5D0061E767A3FC239E8A9D70CF49EBA77FC944EB7FB DUP6 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x97A JUMPI PUSH2 0x979 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x995 JUMPI PUSH2 0x994 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x9B0 JUMPI PUSH2 0x9AF PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x9CB JUMPI PUSH2 0x9CA PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9E6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x80 ADD MLOAD EQ ISZERO PUSH2 0xBFE JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF09CDFA PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF90EF4F2 PUSH1 0x0 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xADD JUMPI PUSH2 0xADC PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF7 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ PUSH2 0xB0C JUMPI PUSH1 0x1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x60 ADD MLOAD DUP10 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF09CDFA PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xC0B SWAP1 PUSH2 0x300F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC4C PUSH2 0xDAC JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC98 PUSH2 0xDAC JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xCE4 PUSH2 0xDAC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD30 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD97 SWAP1 PUSH2 0x2C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA9 DUP2 PUSH2 0xE2A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDB4 PUSH2 0x2310 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDD2 PUSH2 0xC1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1F SWAP1 PUSH2 0x2C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xEFC SWAP2 SWAP1 PUSH2 0x2F3D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF12 SWAP2 SWAP1 PUSH2 0x2EE3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x2EB2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1390 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA42963E9 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A38A4FB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x109F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1118 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A38A4FB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x664A1AD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1276 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1358 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1386 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x162C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB98EE419 DUP8 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F3 SWAP3 SWAP2 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1443 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x14A0 DUP6 DUP11 PUSH2 0xEEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x664A1AD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15D6 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1626 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD PUSH2 0x169F PUSH1 0x4 SLOAD PUSH2 0x1691 DUP11 DUP13 PUSH1 0xE0 ADD MLOAD PUSH2 0xF04 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x1761 PUSH1 0x4 SLOAD PUSH2 0x1753 DUP11 DUP11 PUSH2 0xF04 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1782 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAF4E4F0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0xE0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH2 0x100 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH2 0x120 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18EA SWAP3 SWAP2 SWAP1 PUSH2 0x2D7E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1918 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1DA9 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA42963E9 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1986 SWAP2 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x199E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A38A4FB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AB6 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A38A4FB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BED SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x664A1AD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8D SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CAF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x1D50 PUSH1 0x4 SLOAD PUSH2 0x1D42 DUP12 DUP12 PUSH2 0xF04 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D71 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x206B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB98EE419 DUP8 PUSH1 0xA0 ADD MLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0C SWAP3 SWAP2 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E5C SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x664A1AD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F41 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F63 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x2016 DUP6 PUSH2 0x2008 PUSH1 0x4 SLOAD PUSH2 0x1FFA DUP14 DUP14 PUSH2 0xF04 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2037 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2065 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20D5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2103 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2171 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x218B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x219F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAF4E4F0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x220A JUMPI PUSH2 0x2209 PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0xE0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH2 0x100 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH2 0x120 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x22BA JUMPI PUSH2 0x22B9 PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D7 SWAP3 SWAP2 SWAP1 PUSH2 0x2D7E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2305 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x233F JUMPI PUSH2 0x233E PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DB PUSH2 0x23D6 DUP5 PUSH2 0x2E49 JUMP JUMPDEST PUSH2 0x2E24 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x23FE JUMPI PUSH2 0x23FD PUSH2 0x314D JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x244C JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2424 JUMPI PUSH2 0x2423 PUSH2 0x3143 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x2431 DUP10 DUP3 PUSH2 0x251E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD SWAP4 POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2401 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2469 PUSH2 0x2464 DUP5 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x2E24 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x248C JUMPI PUSH2 0x248B PUSH2 0x314D JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24BC JUMPI DUP2 PUSH2 0x24A2 DUP9 DUP3 PUSH2 0x2682 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x248F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24D5 DUP2 PUSH2 0x3274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24EA DUP2 PUSH2 0x3274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2505 JUMPI PUSH2 0x2504 PUSH2 0x3143 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2515 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x23C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2533 JUMPI PUSH2 0x2532 PUSH2 0x3143 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2543 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x255B DUP2 PUSH2 0x328B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2570 DUP2 PUSH2 0x32A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x258D JUMPI PUSH2 0x258C PUSH2 0x3148 JUMP JUMPDEST JUMPDEST PUSH2 0x2598 PUSH2 0x160 PUSH2 0x2E24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25A8 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x25BC DUP5 DUP3 DUP6 ADD PUSH2 0x2561 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x25D0 DUP5 DUP3 DUP6 ADD PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x25E4 DUP5 DUP3 DUP6 ADD PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x25F8 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x260C DUP5 DUP3 DUP6 ADD PUSH2 0x24DB JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x2620 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x2634 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x2649 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x265F DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x2675 DUP5 DUP3 DUP6 ADD PUSH2 0x254C JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2691 DUP2 PUSH2 0x32B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26A6 DUP2 PUSH2 0x32B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C2 JUMPI PUSH2 0x26C1 PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26D0 DUP5 DUP3 DUP6 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26EF JUMPI PUSH2 0x26EE PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26FD DUP5 DUP3 DUP6 ADD PUSH2 0x24DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x271F JUMPI PUSH2 0x271E PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x272D DUP7 DUP3 DUP8 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x273E DUP7 DUP3 DUP8 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x275F JUMPI PUSH2 0x275E PUSH2 0x3152 JUMP JUMPDEST JUMPDEST PUSH2 0x276B DUP7 DUP3 DUP8 ADD PUSH2 0x24F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x278B JUMPI PUSH2 0x278A PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2799 DUP5 DUP3 DUP6 ADD PUSH2 0x254C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x180 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BA JUMPI PUSH2 0x27B9 PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C8 DUP6 DUP3 DUP7 ADD PUSH2 0x2576 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x160 PUSH2 0x27DA DUP6 DUP3 DUP7 ADD PUSH2 0x2697 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27FA JUMPI PUSH2 0x27F9 PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2808 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x281A DUP2 PUSH2 0x2F71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2829 DUP2 PUSH2 0x2F71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2838 DUP2 PUSH2 0x2F83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2847 DUP2 PUSH2 0x2F83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2856 DUP2 PUSH2 0x2FCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2865 DUP2 PUSH2 0x2FCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2878 PUSH1 0x12 DUP4 PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2883 DUP3 PUSH2 0x316D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289B PUSH1 0x26 DUP4 PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x28A6 DUP3 PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28BE PUSH1 0x20 DUP4 PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x28C9 DUP3 PUSH2 0x31E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E1 PUSH1 0x14 DUP4 PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x28EC DUP3 PUSH2 0x320E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2904 PUSH1 0x10 DUP4 PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x290F DUP3 PUSH2 0x3237 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2931 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2944 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x284D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2957 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x296A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x297D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2990 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x29A3 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x29B6 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x29CB PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x29E0 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x29F5 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x282F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x180 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2A12 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2A25 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x284D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2A38 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2A4B PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2A5E PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2A71 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2A84 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2A97 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2AAC PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x2AC1 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x2AD6 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x282F JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x2AEB PUSH2 0x160 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2AFA DUP2 PUSH2 0x2FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2B09 DUP2 PUSH2 0x2FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B24 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B3F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2B4C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2B59 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2B66 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x283E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B84 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2B91 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2B9E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2BAB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BC9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2BD6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x283E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C0D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x285C JUMP JUMPDEST PUSH2 0x2C1A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2C27 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2C34 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2820 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C56 DUP2 PUSH2 0x286B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C76 DUP2 PUSH2 0x288E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C96 DUP2 PUSH2 0x28B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CB6 DUP2 PUSH2 0x28D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CD6 DUP2 PUSH2 0x28F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 ADD SWAP1 POP PUSH2 0x2CF3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x291A JUMP JUMPDEST PUSH2 0x2D01 PUSH2 0x160 DUP4 ADD DUP8 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2D0F PUSH2 0x180 DUP4 ADD DUP7 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2D1D PUSH2 0x1A0 DUP4 ADD DUP6 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x2D2B PUSH2 0x1C0 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP PUSH2 0x2D4B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x291A JUMP JUMPDEST PUSH2 0x2D59 PUSH2 0x160 DUP4 ADD DUP7 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2D67 PUSH2 0x180 DUP4 ADD DUP6 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2D75 PUSH2 0x1A0 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 ADD SWAP1 POP PUSH2 0x2D94 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x29FB JUMP JUMPDEST PUSH2 0x2DA2 PUSH2 0x180 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DBE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DD9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2DE6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2820 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E02 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2E0F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2E1C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2820 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2E PUSH2 0x2E3F JUMP JUMPDEST SWAP1 POP PUSH2 0x2E3A DUP3 DUP3 PUSH2 0x2FDE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E64 JUMPI PUSH2 0x2E63 PUSH2 0x3114 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E90 JUMPI PUSH2 0x2E8F PUSH2 0x3114 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EBD DUP3 PUSH2 0x2FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC8 DUP4 PUSH2 0x2FC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2ED8 JUMPI PUSH2 0x2ED7 PUSH2 0x3087 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EEE DUP3 PUSH2 0x2FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF9 DUP4 PUSH2 0x2FC2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2F32 JUMPI PUSH2 0x2F31 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F48 DUP3 PUSH2 0x2FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F53 DUP4 PUSH2 0x2FC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2F66 JUMPI PUSH2 0x2F65 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7C DUP3 PUSH2 0x2FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2F9D DUP3 PUSH2 0x3260 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD7 DUP3 PUSH2 0x2F8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FE7 DUP3 PUSH2 0x315C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3006 JUMPI PUSH2 0x3005 PUSH2 0x3114 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301A DUP3 PUSH2 0x2FC2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x304D JUMPI PUSH2 0x304C PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465722076616C756573206572726F720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204F7264657220416D6F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x466565732063616E6E6F74206265203000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3271 JUMPI PUSH2 0x3270 PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x327D DUP2 PUSH2 0x2F71 JUMP JUMPDEST DUP2 EQ PUSH2 0x3288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3294 DUP2 PUSH2 0x2F83 JUMP JUMPDEST DUP2 EQ PUSH2 0x329F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x32AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32BB DUP2 PUSH2 0x2FC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x32C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xEE JUMPI ADD JUMPDEST ADDRESS BASEFEE 0x2E 0xDE 0xEE ISZERO SHL PUSH18 0x45946BB9A155FBFBF5A6CE293C4D2623CA3B SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"256:8973:12:-:0;;;456:8;437:27;;851:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;945:9:12;925:8;;:30;;;;;;;;;;;;;;;;;;1036:5;1010:11;;:32;;;;;;;;;;;;;;;;;;1069:7;1053:6;;:24;;;;;;;;;;;;;;;;;;851:234;;;256:8973;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:17:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:119;;;315:79;;:::i;:::-;277:119;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;156:663;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1008:126;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;256:8973:12:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_452":{"entryPoint":3500,"id":452,"parameterSlots":0,"returnSlots":0},"@_msgSender_625":{"entryPoint":8976,"id":625,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_509":{"entryPoint":3626,"id":509,"parameterSlots":1,"returnSlots":0},"@div_856":{"entryPoint":3866,"id":856,"parameterSlots":2,"returnSlots":1},"@fillBuyOrders_4395":{"entryPoint":3888,"id":4395,"parameterSlots":5,"returnSlots":0},"@fillOrder_4226":{"entryPoint":330,"id":4226,"parameterSlots":3,"returnSlots":0},"@fillSellOrders_4563":{"entryPoint":6435,"id":4563,"parameterSlots":5,"returnSlots":0},"@mul_841":{"entryPoint":3844,"id":841,"parameterSlots":2,"returnSlots":1},"@owner_438":{"entryPoint":3099,"id":438,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_466":{"entryPoint":310,"id":466,"parameterSlots":0,"returnSlots":0},"@setExchangeAddress_4591":{"entryPoint":3292,"id":4591,"parameterSlots":1,"returnSlots":0},"@setTradingFeesAddress_4605":{"entryPoint":3140,"id":4605,"parameterSlots":1,"returnSlots":0},"@setWalletAddress_4577":{"entryPoint":3216,"id":4577,"parameterSlots":1,"returnSlots":0},"@sub_826":{"entryPoint":3822,"id":826,"parameterSlots":2,"returnSlots":1},"@transferOwnership_489":{"entryPoint":3368,"id":489,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr":{"entryPoint":9160,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9302,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9414,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":9435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr":{"entryPoint":9456,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":9548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_Side_$1661_fromMemory":{"entryPoint":9569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$__Order_$1629_memory_ptr_fromMemory":{"entryPoint":9590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9858,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":9879,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":9945,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr":{"entryPoint":9990,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":10101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$__Order_$1629_memory_ptrt_uint256_fromMemory":{"entryPoint":10146,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":10212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":10257,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10272,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":10287,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10302,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$1661_to_t_uint8":{"entryPoint":10317,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack":{"entryPoint":10332,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0_to_t_string_memory_ptr_fromStack":{"entryPoint":10347,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":10382,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":10417,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073_to_t_string_memory_ptr_fromStack":{"entryPoint":10452,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88_to_t_string_memory_ptr_fromStack":{"entryPoint":10487,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack":{"entryPoint":10522,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$__filledOrder_$1658_memory_ptr_to_t_struct$__filledOrder_$1658_memory_ptr_fromStack":{"entryPoint":10747,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10993,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11008,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":11023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed":{"entryPoint":11050,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11119,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11188,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11229,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Side_$1661_t_uint256_t_address_t_address__to_t_uint8_t_uint256_t_address_t_address__fromStack_reversed":{"entryPoint":11256,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11357,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11389,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11421,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11453,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__to_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":11485,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11573,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_struct$__filledOrder_$1658_memory_ptr_t_uint256__to_t_struct$__filledOrder_$1658_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":11646,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":11716,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":11757,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":11812,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":11839,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr":{"entryPoint":11849,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11893,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":11937,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11954,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":12003,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12093,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":12145,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12163,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Side_$1661":{"entryPoint":12175,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12194,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12226,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Side_$1661_to_t_uint8":{"entryPoint":12236,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":12254,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":12303,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":12376,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":12423,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":12470,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12517,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12564,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":12611,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":12616,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":12621,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":12626,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12631,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12636,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0":{"entryPoint":12653,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":12694,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":12773,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073":{"entryPoint":12814,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88":{"entryPoint":12855,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Side_$1661":{"entryPoint":12896,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":12916,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12939,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_Side_$1661":{"entryPoint":12962,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12978,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:29848:17","statements":[{"body":{"nodeType":"YulBlock","src":"153:875:17","statements":[{"nodeType":"YulAssignment","src":"163:115:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"270:6:17"}],"functionName":{"name":"array_allocation_size_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"188:81:17"},"nodeType":"YulFunctionCall","src":"188:89:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"172:15:17"},"nodeType":"YulFunctionCall","src":"172:106:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"163:5:17"}]},{"nodeType":"YulVariableDeclaration","src":"287:16:17","value":{"name":"array","nodeType":"YulIdentifier","src":"298:5:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"291:3:17","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"320:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"327:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"313:6:17"},"nodeType":"YulFunctionCall","src":"313:21:17"},"nodeType":"YulExpressionStatement","src":"313:21:17"},{"nodeType":"YulAssignment","src":"343:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"354:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"361:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"350:3:17"},"nodeType":"YulFunctionCall","src":"350:16:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"343:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"376:17:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"387:6:17"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"380:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"442:103:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"456:77:17"},"nodeType":"YulFunctionCall","src":"456:79:17"},"nodeType":"YulExpressionStatement","src":"456:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"412:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"421:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"429:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"417:3:17"},"nodeType":"YulFunctionCall","src":"417:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"408:3:17"},"nodeType":"YulFunctionCall","src":"408:27:17"},{"name":"end","nodeType":"YulIdentifier","src":"437:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"405:2:17"},"nodeType":"YulFunctionCall","src":"405:36:17"},"nodeType":"YulIf","src":"402:143:17"},{"body":{"nodeType":"YulBlock","src":"614:408:17","statements":[{"nodeType":"YulVariableDeclaration","src":"629:36:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"661:3:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"648:12:17"},"nodeType":"YulFunctionCall","src":"648:17:17"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"633:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"717:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"719:77:17"},"nodeType":"YulFunctionCall","src":"719:79:17"},"nodeType":"YulExpressionStatement","src":"719:79:17"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"684:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"697:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"681:2:17"},"nodeType":"YulFunctionCall","src":"681:35:17"},"nodeType":"YulIf","src":"678:122:17"},{"nodeType":"YulVariableDeclaration","src":"813:42:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"835:6:17"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"843:11:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:17"},"nodeType":"YulFunctionCall","src":"831:24:17"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"817:10:17","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"876:3:17"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"927:10:17"},{"name":"end","nodeType":"YulIdentifier","src":"939:3:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"881:45:17"},"nodeType":"YulFunctionCall","src":"881:62:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"869:6:17"},"nodeType":"YulFunctionCall","src":"869:75:17"},"nodeType":"YulExpressionStatement","src":"869:75:17"},{"nodeType":"YulAssignment","src":"957:21:17","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"968:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"973:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"964:3:17"},"nodeType":"YulFunctionCall","src":"964:14:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"957:3:17"}]},{"nodeType":"YulAssignment","src":"991:21:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1002:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1007:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"998:3:17"},"nodeType":"YulFunctionCall","src":"998:14:17"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"991:3:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"576:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"579:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"573:2:17"},"nodeType":"YulFunctionCall","src":"573:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"587:18:17","statements":[{"nodeType":"YulAssignment","src":"589:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"598:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"601:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"594:3:17"},"nodeType":"YulFunctionCall","src":"594:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"589:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"558:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"560:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"569:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"564:1:17","type":""}]}]},"src":"554:468:17"}]},"name":"abi_decode_available_length_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"123:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"131:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"139:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"147:5:17","type":""}],"src":"26:1002:17"},{"body":{"nodeType":"YulBlock","src":"1153:620:17","statements":[{"nodeType":"YulAssignment","src":"1163:90:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1245:6:17"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1188:56:17"},"nodeType":"YulFunctionCall","src":"1188:64:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1172:15:17"},"nodeType":"YulFunctionCall","src":"1172:81:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1163:5:17"}]},{"nodeType":"YulVariableDeclaration","src":"1262:16:17","value":{"name":"array","nodeType":"YulIdentifier","src":"1273:5:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1266:3:17","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1295:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"1302:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1288:6:17"},"nodeType":"YulFunctionCall","src":"1288:21:17"},"nodeType":"YulExpressionStatement","src":"1288:21:17"},{"nodeType":"YulAssignment","src":"1318:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1329:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1336:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1325:3:17"},"nodeType":"YulFunctionCall","src":"1325:16:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1318:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"1351:17:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"1362:6:17"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1355:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1417:103:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1431:77:17"},"nodeType":"YulFunctionCall","src":"1431:79:17"},"nodeType":"YulExpressionStatement","src":"1431:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1387:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1396:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1404:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1392:3:17"},"nodeType":"YulFunctionCall","src":"1392:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:17"},"nodeType":"YulFunctionCall","src":"1383:27:17"},{"name":"end","nodeType":"YulIdentifier","src":"1412:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1380:2:17"},"nodeType":"YulFunctionCall","src":"1380:36:17"},"nodeType":"YulIf","src":"1377:143:17"},{"body":{"nodeType":"YulBlock","src":"1589:178:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1604:21:17","value":{"name":"src","nodeType":"YulIdentifier","src":"1622:3:17"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"1608:10:17","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1646:3:17"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"1672:10:17"},{"name":"end","nodeType":"YulIdentifier","src":"1684:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1651:20:17"},"nodeType":"YulFunctionCall","src":"1651:37:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1639:6:17"},"nodeType":"YulFunctionCall","src":"1639:50:17"},"nodeType":"YulExpressionStatement","src":"1639:50:17"},{"nodeType":"YulAssignment","src":"1702:21:17","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1713:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1718:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1709:3:17"},"nodeType":"YulFunctionCall","src":"1709:14:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1702:3:17"}]},{"nodeType":"YulAssignment","src":"1736:21:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1747:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1752:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1743:3:17"},"nodeType":"YulFunctionCall","src":"1743:14:17"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1736:3:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1551:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1554:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1548:2:17"},"nodeType":"YulFunctionCall","src":"1548:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1562:18:17","statements":[{"nodeType":"YulAssignment","src":"1564:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1573:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1576:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1569:3:17"},"nodeType":"YulFunctionCall","src":"1569:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1564:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1533:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1535:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1544:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1539:1:17","type":""}]}]},"src":"1529:238:17"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1123:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1131:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1139:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1147:5:17","type":""}],"src":"1051:722:17"},{"body":{"nodeType":"YulBlock","src":"1831:87:17","statements":[{"nodeType":"YulAssignment","src":"1841:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1863:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1850:12:17"},"nodeType":"YulFunctionCall","src":"1850:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1841:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1906:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1879:26:17"},"nodeType":"YulFunctionCall","src":"1879:33:17"},"nodeType":"YulExpressionStatement","src":"1879:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1809:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1817:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1825:5:17","type":""}],"src":"1779:139:17"},{"body":{"nodeType":"YulBlock","src":"1987:80:17","statements":[{"nodeType":"YulAssignment","src":"1997:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2012:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2006:5:17"},"nodeType":"YulFunctionCall","src":"2006:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1997:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2055:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2028:26:17"},"nodeType":"YulFunctionCall","src":"2028:33:17"},"nodeType":"YulExpressionStatement","src":"2028:33:17"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1965:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1973:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1981:5:17","type":""}],"src":"1924:143:17"},{"body":{"nodeType":"YulBlock","src":"2194:318:17","statements":[{"body":{"nodeType":"YulBlock","src":"2243:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2245:77:17"},"nodeType":"YulFunctionCall","src":"2245:79:17"},"nodeType":"YulExpressionStatement","src":"2245:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2222:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2230:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:17"},"nodeType":"YulFunctionCall","src":"2218:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2237:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2214:3:17"},"nodeType":"YulFunctionCall","src":"2214:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2207:6:17"},"nodeType":"YulFunctionCall","src":"2207:35:17"},"nodeType":"YulIf","src":"2204:122:17"},{"nodeType":"YulVariableDeclaration","src":"2335:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2362:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2349:12:17"},"nodeType":"YulFunctionCall","src":"2349:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2339:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2378:128:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2479:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2487:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:17"},"nodeType":"YulFunctionCall","src":"2475:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2494:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2502:3:17"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2387:87:17"},"nodeType":"YulFunctionCall","src":"2387:119:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2378:5:17"}]}]},"name":"abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2172:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2180:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2188:5:17","type":""}],"src":"2092:420:17"},{"body":{"nodeType":"YulBlock","src":"2612:293:17","statements":[{"body":{"nodeType":"YulBlock","src":"2661:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2663:77:17"},"nodeType":"YulFunctionCall","src":"2663:79:17"},"nodeType":"YulExpressionStatement","src":"2663:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2640:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2636:3:17"},"nodeType":"YulFunctionCall","src":"2636:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2655:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2632:3:17"},"nodeType":"YulFunctionCall","src":"2632:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2625:6:17"},"nodeType":"YulFunctionCall","src":"2625:35:17"},"nodeType":"YulIf","src":"2622:122:17"},{"nodeType":"YulVariableDeclaration","src":"2753:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2780:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2767:12:17"},"nodeType":"YulFunctionCall","src":"2767:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2757:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2796:103:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2872:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2880:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2868:3:17"},"nodeType":"YulFunctionCall","src":"2868:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2887:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2895:3:17"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2805:62:17"},"nodeType":"YulFunctionCall","src":"2805:94:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2796:5:17"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2590:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2598:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2606:5:17","type":""}],"src":"2535:370:17"},{"body":{"nodeType":"YulBlock","src":"2971:77:17","statements":[{"nodeType":"YulAssignment","src":"2981:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2996:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2990:5:17"},"nodeType":"YulFunctionCall","src":"2990:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2981:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3036:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"3012:23:17"},"nodeType":"YulFunctionCall","src":"3012:30:17"},"nodeType":"YulExpressionStatement","src":"3012:30:17"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2957:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2965:5:17","type":""}],"src":"2911:137:17"},{"body":{"nodeType":"YulBlock","src":"3126:89:17","statements":[{"nodeType":"YulAssignment","src":"3136:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3151:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3145:5:17"},"nodeType":"YulFunctionCall","src":"3145:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3136:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3203:5:17"}],"functionName":{"name":"validator_revert_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"3167:35:17"},"nodeType":"YulFunctionCall","src":"3167:42:17"},"nodeType":"YulExpressionStatement","src":"3167:42:17"}]},"name":"abi_decode_t_enum$_Side_$1661_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3104:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3112:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3120:5:17","type":""}],"src":"3054:161:17"},{"body":{"nodeType":"YulBlock","src":"3341:2122:17","statements":[{"body":{"nodeType":"YulBlock","src":"3387:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"3389:77:17"},"nodeType":"YulFunctionCall","src":"3389:79:17"},"nodeType":"YulExpressionStatement","src":"3389:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3362:3:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3367:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3358:3:17"},"nodeType":"YulFunctionCall","src":"3358:19:17"},{"kind":"number","nodeType":"YulLiteral","src":"3379:6:17","type":"","value":"0x0160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3354:3:17"},"nodeType":"YulFunctionCall","src":"3354:32:17"},"nodeType":"YulIf","src":"3351:119:17"},{"nodeType":"YulAssignment","src":"3479:32:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3504:6:17","type":"","value":"0x0160"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3488:15:17"},"nodeType":"YulFunctionCall","src":"3488:23:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3479:5:17"}]},{"nodeType":"YulBlock","src":"3521:159:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3554:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3568:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3558:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3594:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3601:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3590:3:17"},"nodeType":"YulFunctionCall","src":"3590:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3644:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3655:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3640:3:17"},"nodeType":"YulFunctionCall","src":"3640:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"3664:3:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3608:31:17"},"nodeType":"YulFunctionCall","src":"3608:60:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3583:6:17"},"nodeType":"YulFunctionCall","src":"3583:86:17"},"nodeType":"YulExpressionStatement","src":"3583:86:17"}]},{"nodeType":"YulBlock","src":"3690:171:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3725:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3739:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3729:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3766:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3773:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3762:3:17"},"nodeType":"YulFunctionCall","src":"3762:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3825:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3836:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3821:3:17"},"nodeType":"YulFunctionCall","src":"3821:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"3845:3:17"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1661_fromMemory","nodeType":"YulIdentifier","src":"3780:40:17"},"nodeType":"YulFunctionCall","src":"3780:69:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3755:6:17"},"nodeType":"YulFunctionCall","src":"3755:95:17"},"nodeType":"YulExpressionStatement","src":"3755:95:17"}]},{"nodeType":"YulBlock","src":"3871:162:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3906:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3920:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3910:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3947:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3954:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3943:3:17"},"nodeType":"YulFunctionCall","src":"3943:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3997:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4008:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3993:3:17"},"nodeType":"YulFunctionCall","src":"3993:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4017:3:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3961:31:17"},"nodeType":"YulFunctionCall","src":"3961:60:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3936:6:17"},"nodeType":"YulFunctionCall","src":"3936:86:17"},"nodeType":"YulExpressionStatement","src":"3936:86:17"}]},{"nodeType":"YulBlock","src":"4043:164:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4080:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4094:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4084:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4121:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4128:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4117:3:17"},"nodeType":"YulFunctionCall","src":"4117:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4171:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4182:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4167:3:17"},"nodeType":"YulFunctionCall","src":"4167:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4191:3:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4135:31:17"},"nodeType":"YulFunctionCall","src":"4135:60:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4110:6:17"},"nodeType":"YulFunctionCall","src":"4110:86:17"},"nodeType":"YulExpressionStatement","src":"4110:86:17"}]},{"nodeType":"YulBlock","src":"4217:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4255:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4269:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4259:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4297:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4304:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4293:3:17"},"nodeType":"YulFunctionCall","src":"4293:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4347:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4358:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4343:3:17"},"nodeType":"YulFunctionCall","src":"4343:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4367:3:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4311:31:17"},"nodeType":"YulFunctionCall","src":"4311:60:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4286:6:17"},"nodeType":"YulFunctionCall","src":"4286:86:17"},"nodeType":"YulExpressionStatement","src":"4286:86:17"}]},{"nodeType":"YulBlock","src":"4393:165:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4430:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4444:3:17","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4434:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4472:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4479:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4468:3:17"},"nodeType":"YulFunctionCall","src":"4468:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4522:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4533:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4518:3:17"},"nodeType":"YulFunctionCall","src":"4518:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4542:3:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4486:31:17"},"nodeType":"YulFunctionCall","src":"4486:60:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4461:6:17"},"nodeType":"YulFunctionCall","src":"4461:86:17"},"nodeType":"YulExpressionStatement","src":"4461:86:17"}]},{"nodeType":"YulBlock","src":"4568:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4606:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4620:3:17","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4610:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4648:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4655:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4644:3:17"},"nodeType":"YulFunctionCall","src":"4644:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4698:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4709:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4694:3:17"},"nodeType":"YulFunctionCall","src":"4694:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4718:3:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4662:31:17"},"nodeType":"YulFunctionCall","src":"4662:60:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4637:6:17"},"nodeType":"YulFunctionCall","src":"4637:86:17"},"nodeType":"YulExpressionStatement","src":"4637:86:17"}]},{"nodeType":"YulBlock","src":"4744:163:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4779:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4793:3:17","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4783:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4821:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4828:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4817:3:17"},"nodeType":"YulFunctionCall","src":"4817:16:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4871:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4882:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4867:3:17"},"nodeType":"YulFunctionCall","src":"4867:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"4891:3:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4835:31:17"},"nodeType":"YulFunctionCall","src":"4835:60:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4810:6:17"},"nodeType":"YulFunctionCall","src":"4810:86:17"},"nodeType":"YulExpressionStatement","src":"4810:86:17"}]},{"nodeType":"YulBlock","src":"4917:176:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4963:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4977:3:17","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4967:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5005:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5012:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5001:3:17"},"nodeType":"YulFunctionCall","src":"5001:18:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5057:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5068:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5053:3:17"},"nodeType":"YulFunctionCall","src":"5053:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"5077:3:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5021:31:17"},"nodeType":"YulFunctionCall","src":"5021:60:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4994:6:17"},"nodeType":"YulFunctionCall","src":"4994:88:17"},"nodeType":"YulExpressionStatement","src":"4994:88:17"}]},{"nodeType":"YulBlock","src":"5103:176:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5149:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5163:3:17","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5153:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5191:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5198:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5187:3:17"},"nodeType":"YulFunctionCall","src":"5187:18:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5243:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5254:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5239:3:17"},"nodeType":"YulFunctionCall","src":"5239:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"5263:3:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5207:31:17"},"nodeType":"YulFunctionCall","src":"5207:60:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5180:6:17"},"nodeType":"YulFunctionCall","src":"5180:88:17"},"nodeType":"YulExpressionStatement","src":"5180:88:17"}]},{"nodeType":"YulBlock","src":"5289:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5329:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5343:3:17","type":"","value":"320"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5333:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5371:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5378:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5367:3:17"},"nodeType":"YulFunctionCall","src":"5367:18:17"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5420:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5431:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5416:3:17"},"nodeType":"YulFunctionCall","src":"5416:22:17"},{"name":"end","nodeType":"YulIdentifier","src":"5440:3:17"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"5387:28:17"},"nodeType":"YulFunctionCall","src":"5387:57:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5360:6:17"},"nodeType":"YulFunctionCall","src":"5360:85:17"},"nodeType":"YulExpressionStatement","src":"5360:85:17"}]}]},"name":"abi_decode_t_struct$__Order_$1629_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3316:9:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3327:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3335:5:17","type":""}],"src":"3251:2212:17"},{"body":{"nodeType":"YulBlock","src":"5521:87:17","statements":[{"nodeType":"YulAssignment","src":"5531:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5553:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5540:12:17"},"nodeType":"YulFunctionCall","src":"5540:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5531:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5596:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"5569:26:17"},"nodeType":"YulFunctionCall","src":"5569:33:17"},"nodeType":"YulExpressionStatement","src":"5569:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5499:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5507:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5515:5:17","type":""}],"src":"5469:139:17"},{"body":{"nodeType":"YulBlock","src":"5677:80:17","statements":[{"nodeType":"YulAssignment","src":"5687:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5702:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5696:5:17"},"nodeType":"YulFunctionCall","src":"5696:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5687:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5745:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"5718:26:17"},"nodeType":"YulFunctionCall","src":"5718:33:17"},"nodeType":"YulExpressionStatement","src":"5718:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5655:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5663:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5671:5:17","type":""}],"src":"5614:143:17"},{"body":{"nodeType":"YulBlock","src":"5829:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"5875:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5877:77:17"},"nodeType":"YulFunctionCall","src":"5877:79:17"},"nodeType":"YulExpressionStatement","src":"5877:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5850:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5859:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5846:3:17"},"nodeType":"YulFunctionCall","src":"5846:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5871:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5842:3:17"},"nodeType":"YulFunctionCall","src":"5842:32:17"},"nodeType":"YulIf","src":"5839:119:17"},{"nodeType":"YulBlock","src":"5968:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5983:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5997:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5987:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6012:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6047:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6058:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6043:3:17"},"nodeType":"YulFunctionCall","src":"6043:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6067:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6022:20:17"},"nodeType":"YulFunctionCall","src":"6022:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6012:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5799:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5810:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5822:6:17","type":""}],"src":"5763:329:17"},{"body":{"nodeType":"YulBlock","src":"6175:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"6221:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6223:77:17"},"nodeType":"YulFunctionCall","src":"6223:79:17"},"nodeType":"YulExpressionStatement","src":"6223:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6196:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6205:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6192:3:17"},"nodeType":"YulFunctionCall","src":"6192:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6217:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6188:3:17"},"nodeType":"YulFunctionCall","src":"6188:32:17"},"nodeType":"YulIf","src":"6185:119:17"},{"nodeType":"YulBlock","src":"6314:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6329:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6343:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6333:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6358:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6404:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6415:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6400:3:17"},"nodeType":"YulFunctionCall","src":"6400:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6424:7:17"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6368:31:17"},"nodeType":"YulFunctionCall","src":"6368:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6358:6:17"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6145:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6156:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6168:6:17","type":""}],"src":"6098:351:17"},{"body":{"nodeType":"YulBlock","src":"6605:729:17","statements":[{"body":{"nodeType":"YulBlock","src":"6651:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6653:77:17"},"nodeType":"YulFunctionCall","src":"6653:79:17"},"nodeType":"YulExpressionStatement","src":"6653:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6626:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6635:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6622:3:17"},"nodeType":"YulFunctionCall","src":"6622:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6647:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6618:3:17"},"nodeType":"YulFunctionCall","src":"6618:32:17"},"nodeType":"YulIf","src":"6615:119:17"},{"nodeType":"YulBlock","src":"6744:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6759:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6773:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6763:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6788:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6823:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6834:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6819:3:17"},"nodeType":"YulFunctionCall","src":"6819:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6843:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6798:20:17"},"nodeType":"YulFunctionCall","src":"6798:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6788:6:17"}]}]},{"nodeType":"YulBlock","src":"6871:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6886:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6900:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6890:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6916:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6951:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6962:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6947:3:17"},"nodeType":"YulFunctionCall","src":"6947:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6971:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6926:20:17"},"nodeType":"YulFunctionCall","src":"6926:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6916:6:17"}]}]},{"nodeType":"YulBlock","src":"6999:328:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7014:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7045:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7056:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7041:3:17"},"nodeType":"YulFunctionCall","src":"7041:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7028:12:17"},"nodeType":"YulFunctionCall","src":"7028:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7018:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7107:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7109:77:17"},"nodeType":"YulFunctionCall","src":"7109:79:17"},"nodeType":"YulExpressionStatement","src":"7109:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7079:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7087:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7076:2:17"},"nodeType":"YulFunctionCall","src":"7076:30:17"},"nodeType":"YulIf","src":"7073:117:17"},{"nodeType":"YulAssignment","src":"7204:113:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7289:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7300:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7285:3:17"},"nodeType":"YulFunctionCall","src":"7285:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7309:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7214:70:17"},"nodeType":"YulFunctionCall","src":"7214:103:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7204:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6559:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6570:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6582:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6590:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6598:6:17","type":""}],"src":"6455:879:17"},{"body":{"nodeType":"YulBlock","src":"7414:271:17","statements":[{"body":{"nodeType":"YulBlock","src":"7460:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7462:77:17"},"nodeType":"YulFunctionCall","src":"7462:79:17"},"nodeType":"YulExpressionStatement","src":"7462:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7435:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7444:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7431:3:17"},"nodeType":"YulFunctionCall","src":"7431:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7456:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7427:3:17"},"nodeType":"YulFunctionCall","src":"7427:32:17"},"nodeType":"YulIf","src":"7424:119:17"},{"nodeType":"YulBlock","src":"7553:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7568:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7582:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7572:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7597:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7640:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7651:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7636:3:17"},"nodeType":"YulFunctionCall","src":"7636:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7660:7:17"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"7607:28:17"},"nodeType":"YulFunctionCall","src":"7607:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7597:6:17"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7384:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7395:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7407:6:17","type":""}],"src":"7340:345:17"},{"body":{"nodeType":"YulBlock","src":"7809:439:17","statements":[{"body":{"nodeType":"YulBlock","src":"7856:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7858:77:17"},"nodeType":"YulFunctionCall","src":"7858:79:17"},"nodeType":"YulExpressionStatement","src":"7858:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7830:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7839:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7826:3:17"},"nodeType":"YulFunctionCall","src":"7826:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7851:3:17","type":"","value":"384"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7822:3:17"},"nodeType":"YulFunctionCall","src":"7822:33:17"},"nodeType":"YulIf","src":"7819:120:17"},{"nodeType":"YulBlock","src":"7949:152:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7964:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7978:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7968:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7993:98:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8063:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8074:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8059:3:17"},"nodeType":"YulFunctionCall","src":"8059:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8083:7:17"}],"functionName":{"name":"abi_decode_t_struct$__Order_$1629_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"8003:55:17"},"nodeType":"YulFunctionCall","src":"8003:88:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7993:6:17"}]}]},{"nodeType":"YulBlock","src":"8111:130:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8126:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8140:3:17","type":"","value":"352"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8130:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8157:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8203:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8214:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8199:3:17"},"nodeType":"YulFunctionCall","src":"8199:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8223:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"8167:31:17"},"nodeType":"YulFunctionCall","src":"8167:64:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8157:6:17"}]}]}]},"name":"abi_decode_tuple_t_struct$__Order_$1629_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7771:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7782:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7794:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7802:6:17","type":""}],"src":"7691:557:17"},{"body":{"nodeType":"YulBlock","src":"8331:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"8377:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8379:77:17"},"nodeType":"YulFunctionCall","src":"8379:79:17"},"nodeType":"YulExpressionStatement","src":"8379:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8352:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8361:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8348:3:17"},"nodeType":"YulFunctionCall","src":"8348:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8373:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8344:3:17"},"nodeType":"YulFunctionCall","src":"8344:32:17"},"nodeType":"YulIf","src":"8341:119:17"},{"nodeType":"YulBlock","src":"8470:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8485:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8499:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8489:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8514:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8560:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8571:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8556:3:17"},"nodeType":"YulFunctionCall","src":"8556:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8580:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"8524:31:17"},"nodeType":"YulFunctionCall","src":"8524:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8514:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8301:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8312:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8324:6:17","type":""}],"src":"8254:351:17"},{"body":{"nodeType":"YulBlock","src":"8666:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8683:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8706:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8688:17:17"},"nodeType":"YulFunctionCall","src":"8688:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8676:6:17"},"nodeType":"YulFunctionCall","src":"8676:37:17"},"nodeType":"YulExpressionStatement","src":"8676:37:17"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8654:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8661:3:17","type":""}],"src":"8611:108:17"},{"body":{"nodeType":"YulBlock","src":"8790:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8807:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8830:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8812:17:17"},"nodeType":"YulFunctionCall","src":"8812:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8800:6:17"},"nodeType":"YulFunctionCall","src":"8800:37:17"},"nodeType":"YulExpressionStatement","src":"8800:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8778:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8785:3:17","type":""}],"src":"8725:118:17"},{"body":{"nodeType":"YulBlock","src":"8898:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8915:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8935:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"8920:14:17"},"nodeType":"YulFunctionCall","src":"8920:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8908:6:17"},"nodeType":"YulFunctionCall","src":"8908:34:17"},"nodeType":"YulExpressionStatement","src":"8908:34:17"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8886:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8893:3:17","type":""}],"src":"8849:99:17"},{"body":{"nodeType":"YulBlock","src":"9013:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9030:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9050:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9035:14:17"},"nodeType":"YulFunctionCall","src":"9035:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9023:6:17"},"nodeType":"YulFunctionCall","src":"9023:34:17"},"nodeType":"YulExpressionStatement","src":"9023:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9001:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9008:3:17","type":""}],"src":"8954:109:17"},{"body":{"nodeType":"YulBlock","src":"9131:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9148:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9191:5:17"}],"functionName":{"name":"convert_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulIdentifier","src":"9153:37:17"},"nodeType":"YulFunctionCall","src":"9153:44:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9141:6:17"},"nodeType":"YulFunctionCall","src":"9141:57:17"},"nodeType":"YulExpressionStatement","src":"9141:57:17"}]},"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9119:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9126:3:17","type":""}],"src":"9069:135:17"},{"body":{"nodeType":"YulBlock","src":"9282:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9299:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9342:5:17"}],"functionName":{"name":"convert_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulIdentifier","src":"9304:37:17"},"nodeType":"YulFunctionCall","src":"9304:44:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9292:6:17"},"nodeType":"YulFunctionCall","src":"9292:57:17"},"nodeType":"YulExpressionStatement","src":"9292:57:17"}]},"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9270:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9277:3:17","type":""}],"src":"9210:145:17"},{"body":{"nodeType":"YulBlock","src":"9507:220:17","statements":[{"nodeType":"YulAssignment","src":"9517:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9583:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9588:2:17","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9524:58:17"},"nodeType":"YulFunctionCall","src":"9524:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9517:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9689:3:17"}],"functionName":{"name":"store_literal_in_memory_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0","nodeType":"YulIdentifier","src":"9600:88:17"},"nodeType":"YulFunctionCall","src":"9600:93:17"},"nodeType":"YulExpressionStatement","src":"9600:93:17"},{"nodeType":"YulAssignment","src":"9702:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9713:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9718:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9709:3:17"},"nodeType":"YulFunctionCall","src":"9709:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9702:3:17"}]}]},"name":"abi_encode_t_stringliteral_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9495:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9503:3:17","type":""}],"src":"9361:366:17"},{"body":{"nodeType":"YulBlock","src":"9879:220:17","statements":[{"nodeType":"YulAssignment","src":"9889:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9955:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9960:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9896:58:17"},"nodeType":"YulFunctionCall","src":"9896:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9889:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10061:3:17"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"9972:88:17"},"nodeType":"YulFunctionCall","src":"9972:93:17"},"nodeType":"YulExpressionStatement","src":"9972:93:17"},{"nodeType":"YulAssignment","src":"10074:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10085:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10090:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10081:3:17"},"nodeType":"YulFunctionCall","src":"10081:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10074:3:17"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9867:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9875:3:17","type":""}],"src":"9733:366:17"},{"body":{"nodeType":"YulBlock","src":"10251:220:17","statements":[{"nodeType":"YulAssignment","src":"10261:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10327:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10332:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10268:58:17"},"nodeType":"YulFunctionCall","src":"10268:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10261:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10433:3:17"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"10344:88:17"},"nodeType":"YulFunctionCall","src":"10344:93:17"},"nodeType":"YulExpressionStatement","src":"10344:93:17"},{"nodeType":"YulAssignment","src":"10446:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10457:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10462:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10453:3:17"},"nodeType":"YulFunctionCall","src":"10453:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10446:3:17"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10239:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10247:3:17","type":""}],"src":"10105:366:17"},{"body":{"nodeType":"YulBlock","src":"10623:220:17","statements":[{"nodeType":"YulAssignment","src":"10633:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10699:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10704:2:17","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10640:58:17"},"nodeType":"YulFunctionCall","src":"10640:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10633:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10805:3:17"}],"functionName":{"name":"store_literal_in_memory_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073","nodeType":"YulIdentifier","src":"10716:88:17"},"nodeType":"YulFunctionCall","src":"10716:93:17"},"nodeType":"YulExpressionStatement","src":"10716:93:17"},{"nodeType":"YulAssignment","src":"10818:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10829:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10834:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10825:3:17"},"nodeType":"YulFunctionCall","src":"10825:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10818:3:17"}]}]},"name":"abi_encode_t_stringliteral_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10611:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10619:3:17","type":""}],"src":"10477:366:17"},{"body":{"nodeType":"YulBlock","src":"10995:220:17","statements":[{"nodeType":"YulAssignment","src":"11005:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11071:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11076:2:17","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11012:58:17"},"nodeType":"YulFunctionCall","src":"11012:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11005:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11177:3:17"}],"functionName":{"name":"store_literal_in_memory_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88","nodeType":"YulIdentifier","src":"11088:88:17"},"nodeType":"YulFunctionCall","src":"11088:93:17"},"nodeType":"YulExpressionStatement","src":"11088:93:17"},{"nodeType":"YulAssignment","src":"11190:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11201:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11206:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11197:3:17"},"nodeType":"YulFunctionCall","src":"11197:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11190:3:17"}]}]},"name":"abi_encode_t_stringliteral_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10983:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10991:3:17","type":""}],"src":"10849:366:17"},{"body":{"nodeType":"YulBlock","src":"11391:2007:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11401:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11417:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11422:6:17","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:17"},"nodeType":"YulFunctionCall","src":"11413:16:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"11405:4:17","type":""}]},{"nodeType":"YulBlock","src":"11439:162:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11472:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11502:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11509:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11498:3:17"},"nodeType":"YulFunctionCall","src":"11498:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11492:5:17"},"nodeType":"YulFunctionCall","src":"11492:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11476:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11562:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11585:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11576:3:17"},"nodeType":"YulFunctionCall","src":"11576:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11528:33:17"},"nodeType":"YulFunctionCall","src":"11528:63:17"},"nodeType":"YulExpressionStatement","src":"11528:63:17"}]},{"nodeType":"YulBlock","src":"11611:171:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11646:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11676:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11683:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11672:3:17"},"nodeType":"YulFunctionCall","src":"11672:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11666:5:17"},"nodeType":"YulFunctionCall","src":"11666:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11650:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11743:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11761:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11766:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11757:3:17"},"nodeType":"YulFunctionCall","src":"11757:14:17"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulIdentifier","src":"11702:40:17"},"nodeType":"YulFunctionCall","src":"11702:70:17"},"nodeType":"YulExpressionStatement","src":"11702:70:17"}]},{"nodeType":"YulBlock","src":"11792:164:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11827:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11857:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11864:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11853:3:17"},"nodeType":"YulFunctionCall","src":"11853:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11847:5:17"},"nodeType":"YulFunctionCall","src":"11847:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11831:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11917:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11935:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11940:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11931:3:17"},"nodeType":"YulFunctionCall","src":"11931:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"11883:33:17"},"nodeType":"YulFunctionCall","src":"11883:63:17"},"nodeType":"YulExpressionStatement","src":"11883:63:17"}]},{"nodeType":"YulBlock","src":"11966:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12003:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12033:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12040:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12029:3:17"},"nodeType":"YulFunctionCall","src":"12029:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12023:5:17"},"nodeType":"YulFunctionCall","src":"12023:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12007:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12093:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12111:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12116:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12107:3:17"},"nodeType":"YulFunctionCall","src":"12107:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"12059:33:17"},"nodeType":"YulFunctionCall","src":"12059:63:17"},"nodeType":"YulExpressionStatement","src":"12059:63:17"}]},{"nodeType":"YulBlock","src":"12142:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12180:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12210:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12217:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12206:3:17"},"nodeType":"YulFunctionCall","src":"12206:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12200:5:17"},"nodeType":"YulFunctionCall","src":"12200:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12184:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12270:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12288:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12293:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12284:3:17"},"nodeType":"YulFunctionCall","src":"12284:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12236:33:17"},"nodeType":"YulFunctionCall","src":"12236:63:17"},"nodeType":"YulExpressionStatement","src":"12236:63:17"}]},{"nodeType":"YulBlock","src":"12319:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12356:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12386:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12393:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12382:3:17"},"nodeType":"YulFunctionCall","src":"12382:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12376:5:17"},"nodeType":"YulFunctionCall","src":"12376:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12360:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12446:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12464:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12469:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12460:3:17"},"nodeType":"YulFunctionCall","src":"12460:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"12412:33:17"},"nodeType":"YulFunctionCall","src":"12412:63:17"},"nodeType":"YulExpressionStatement","src":"12412:63:17"}]},{"nodeType":"YulBlock","src":"12495:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12533:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12563:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12570:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12559:3:17"},"nodeType":"YulFunctionCall","src":"12559:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12553:5:17"},"nodeType":"YulFunctionCall","src":"12553:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12537:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12623:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12641:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12646:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12637:3:17"},"nodeType":"YulFunctionCall","src":"12637:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12589:33:17"},"nodeType":"YulFunctionCall","src":"12589:63:17"},"nodeType":"YulExpressionStatement","src":"12589:63:17"}]},{"nodeType":"YulBlock","src":"12672:164:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12707:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12737:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12744:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12733:3:17"},"nodeType":"YulFunctionCall","src":"12733:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12727:5:17"},"nodeType":"YulFunctionCall","src":"12727:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12711:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12797:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12815:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12820:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12811:3:17"},"nodeType":"YulFunctionCall","src":"12811:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12763:33:17"},"nodeType":"YulFunctionCall","src":"12763:63:17"},"nodeType":"YulExpressionStatement","src":"12763:63:17"}]},{"nodeType":"YulBlock","src":"12846:179:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12892:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12922:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12929:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12918:3:17"},"nodeType":"YulFunctionCall","src":"12918:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12912:5:17"},"nodeType":"YulFunctionCall","src":"12912:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12896:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12984:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13002:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13007:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12998:3:17"},"nodeType":"YulFunctionCall","src":"12998:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12950:33:17"},"nodeType":"YulFunctionCall","src":"12950:65:17"},"nodeType":"YulExpressionStatement","src":"12950:65:17"}]},{"nodeType":"YulBlock","src":"13035:179:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13081:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13111:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13118:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13107:3:17"},"nodeType":"YulFunctionCall","src":"13107:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13101:5:17"},"nodeType":"YulFunctionCall","src":"13101:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13085:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13173:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13191:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13196:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13187:3:17"},"nodeType":"YulFunctionCall","src":"13187:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13139:33:17"},"nodeType":"YulFunctionCall","src":"13139:65:17"},"nodeType":"YulExpressionStatement","src":"13139:65:17"}]},{"nodeType":"YulBlock","src":"13224:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13264:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13294:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13301:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13290:3:17"},"nodeType":"YulFunctionCall","src":"13290:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13284:5:17"},"nodeType":"YulFunctionCall","src":"13284:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13268:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13350:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13368:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13373:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13364:3:17"},"nodeType":"YulFunctionCall","src":"13364:16:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"13322:27:17"},"nodeType":"YulFunctionCall","src":"13322:59:17"},"nodeType":"YulExpressionStatement","src":"13322:59:17"}]}]},"name":"abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11378:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11385:3:17","type":""}],"src":"11277:2121:17"},{"body":{"nodeType":"YulBlock","src":"13598:2204:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13608:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13624:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13629:6:17","type":"","value":"0x0180"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13620:3:17"},"nodeType":"YulFunctionCall","src":"13620:16:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"13612:4:17","type":""}]},{"nodeType":"YulBlock","src":"13646:162:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13679:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13709:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13716:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13705:3:17"},"nodeType":"YulFunctionCall","src":"13705:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13699:5:17"},"nodeType":"YulFunctionCall","src":"13699:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13683:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13769:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13787:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13792:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13783:3:17"},"nodeType":"YulFunctionCall","src":"13783:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13735:33:17"},"nodeType":"YulFunctionCall","src":"13735:63:17"},"nodeType":"YulExpressionStatement","src":"13735:63:17"}]},{"nodeType":"YulBlock","src":"13818:171:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13853:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13883:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13890:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13879:3:17"},"nodeType":"YulFunctionCall","src":"13879:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13873:5:17"},"nodeType":"YulFunctionCall","src":"13873:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13857:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13950:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13968:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13973:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13964:3:17"},"nodeType":"YulFunctionCall","src":"13964:14:17"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulIdentifier","src":"13909:40:17"},"nodeType":"YulFunctionCall","src":"13909:70:17"},"nodeType":"YulExpressionStatement","src":"13909:70:17"}]},{"nodeType":"YulBlock","src":"13999:164:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14034:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14064:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14071:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14060:3:17"},"nodeType":"YulFunctionCall","src":"14060:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14054:5:17"},"nodeType":"YulFunctionCall","src":"14054:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14038:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14124:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14142:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14147:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14138:3:17"},"nodeType":"YulFunctionCall","src":"14138:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"14090:33:17"},"nodeType":"YulFunctionCall","src":"14090:63:17"},"nodeType":"YulExpressionStatement","src":"14090:63:17"}]},{"nodeType":"YulBlock","src":"14173:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14210:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14240:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14247:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14236:3:17"},"nodeType":"YulFunctionCall","src":"14236:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14230:5:17"},"nodeType":"YulFunctionCall","src":"14230:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14214:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14300:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14318:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14323:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14314:3:17"},"nodeType":"YulFunctionCall","src":"14314:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"14266:33:17"},"nodeType":"YulFunctionCall","src":"14266:63:17"},"nodeType":"YulExpressionStatement","src":"14266:63:17"}]},{"nodeType":"YulBlock","src":"14349:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14386:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14416:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14423:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14412:3:17"},"nodeType":"YulFunctionCall","src":"14412:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14406:5:17"},"nodeType":"YulFunctionCall","src":"14406:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14390:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14476:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14494:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14499:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14490:3:17"},"nodeType":"YulFunctionCall","src":"14490:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"14442:33:17"},"nodeType":"YulFunctionCall","src":"14442:63:17"},"nodeType":"YulExpressionStatement","src":"14442:63:17"}]},{"nodeType":"YulBlock","src":"14525:172:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14568:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14598:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14605:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14594:3:17"},"nodeType":"YulFunctionCall","src":"14594:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14588:5:17"},"nodeType":"YulFunctionCall","src":"14588:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14572:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14658:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14676:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14681:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14672:3:17"},"nodeType":"YulFunctionCall","src":"14672:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14624:33:17"},"nodeType":"YulFunctionCall","src":"14624:63:17"},"nodeType":"YulExpressionStatement","src":"14624:63:17"}]},{"nodeType":"YulBlock","src":"14707:168:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14746:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14776:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14783:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14772:3:17"},"nodeType":"YulFunctionCall","src":"14772:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14766:5:17"},"nodeType":"YulFunctionCall","src":"14766:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14750:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14836:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14854:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14859:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14850:3:17"},"nodeType":"YulFunctionCall","src":"14850:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14802:33:17"},"nodeType":"YulFunctionCall","src":"14802:63:17"},"nodeType":"YulExpressionStatement","src":"14802:63:17"}]},{"nodeType":"YulBlock","src":"14885:172:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14928:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14958:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14965:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14954:3:17"},"nodeType":"YulFunctionCall","src":"14954:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14948:5:17"},"nodeType":"YulFunctionCall","src":"14948:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14932:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15018:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15036:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15041:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15032:3:17"},"nodeType":"YulFunctionCall","src":"15032:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14984:33:17"},"nodeType":"YulFunctionCall","src":"14984:63:17"},"nodeType":"YulExpressionStatement","src":"14984:63:17"}]},{"nodeType":"YulBlock","src":"15067:179:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15113:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15143:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"15150:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15139:3:17"},"nodeType":"YulFunctionCall","src":"15139:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15133:5:17"},"nodeType":"YulFunctionCall","src":"15133:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15117:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15205:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15223:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15228:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15219:3:17"},"nodeType":"YulFunctionCall","src":"15219:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15171:33:17"},"nodeType":"YulFunctionCall","src":"15171:65:17"},"nodeType":"YulExpressionStatement","src":"15171:65:17"}]},{"nodeType":"YulBlock","src":"15256:179:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15302:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15332:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"15339:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15328:3:17"},"nodeType":"YulFunctionCall","src":"15328:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15322:5:17"},"nodeType":"YulFunctionCall","src":"15322:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15306:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15394:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15412:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15417:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15408:3:17"},"nodeType":"YulFunctionCall","src":"15408:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15360:33:17"},"nodeType":"YulFunctionCall","src":"15360:65:17"},"nodeType":"YulExpressionStatement","src":"15360:65:17"}]},{"nodeType":"YulBlock","src":"15445:168:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15486:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15516:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"15523:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15512:3:17"},"nodeType":"YulFunctionCall","src":"15512:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15506:5:17"},"nodeType":"YulFunctionCall","src":"15506:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15490:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15572:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15590:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15595:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15586:3:17"},"nodeType":"YulFunctionCall","src":"15586:16:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"15544:27:17"},"nodeType":"YulFunctionCall","src":"15544:59:17"},"nodeType":"YulExpressionStatement","src":"15544:59:17"}]},{"nodeType":"YulBlock","src":"15623:172:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15662:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15692:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"15699:6:17","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15688:3:17"},"nodeType":"YulFunctionCall","src":"15688:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15682:5:17"},"nodeType":"YulFunctionCall","src":"15682:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15666:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15754:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15772:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15777:6:17","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15768:3:17"},"nodeType":"YulFunctionCall","src":"15768:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15720:33:17"},"nodeType":"YulFunctionCall","src":"15720:65:17"},"nodeType":"YulExpressionStatement","src":"15720:65:17"}]}]},"name":"abi_encode_t_struct$__filledOrder_$1658_memory_ptr_to_t_struct$__filledOrder_$1658_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13585:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13592:3:17","type":""}],"src":"13472:2330:17"},{"body":{"nodeType":"YulBlock","src":"15863:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15880:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15903:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15885:17:17"},"nodeType":"YulFunctionCall","src":"15885:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15873:6:17"},"nodeType":"YulFunctionCall","src":"15873:37:17"},"nodeType":"YulExpressionStatement","src":"15873:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15851:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15858:3:17","type":""}],"src":"15808:108:17"},{"body":{"nodeType":"YulBlock","src":"15987:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16004:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16027:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16009:17:17"},"nodeType":"YulFunctionCall","src":"16009:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15997:6:17"},"nodeType":"YulFunctionCall","src":"15997:37:17"},"nodeType":"YulExpressionStatement","src":"15997:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15975:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15982:3:17","type":""}],"src":"15922:118:17"},{"body":{"nodeType":"YulBlock","src":"16144:124:17","statements":[{"nodeType":"YulAssignment","src":"16154:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16166:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16177:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16162:3:17"},"nodeType":"YulFunctionCall","src":"16162:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16154:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16234:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16247:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16258:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16243:3:17"},"nodeType":"YulFunctionCall","src":"16243:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16190:43:17"},"nodeType":"YulFunctionCall","src":"16190:71:17"},"nodeType":"YulExpressionStatement","src":"16190:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16116:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16128:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16139:4:17","type":""}],"src":"16046:222:17"},{"body":{"nodeType":"YulBlock","src":"16450:365:17","statements":[{"nodeType":"YulAssignment","src":"16460:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16472:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16483:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16468:3:17"},"nodeType":"YulFunctionCall","src":"16468:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16460:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16541:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16554:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16565:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16550:3:17"},"nodeType":"YulFunctionCall","src":"16550:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16497:43:17"},"nodeType":"YulFunctionCall","src":"16497:71:17"},"nodeType":"YulExpressionStatement","src":"16497:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16622:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16635:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16646:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16631:3:17"},"nodeType":"YulFunctionCall","src":"16631:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16578:43:17"},"nodeType":"YulFunctionCall","src":"16578:72:17"},"nodeType":"YulExpressionStatement","src":"16578:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16704:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16717:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16728:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16713:3:17"},"nodeType":"YulFunctionCall","src":"16713:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16660:43:17"},"nodeType":"YulFunctionCall","src":"16660:72:17"},"nodeType":"YulExpressionStatement","src":"16660:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16780:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16793:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16804:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:17"},"nodeType":"YulFunctionCall","src":"16789:18:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"16742:37:17"},"nodeType":"YulFunctionCall","src":"16742:66:17"},"nodeType":"YulExpressionStatement","src":"16742:66:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16398:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16410:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16418:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16426:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16434:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16445:4:17","type":""}],"src":"16274:541:17"},{"body":{"nodeType":"YulBlock","src":"17003:371:17","statements":[{"nodeType":"YulAssignment","src":"17013:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17025:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17036:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17021:3:17"},"nodeType":"YulFunctionCall","src":"17021:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17013:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17094:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17107:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17118:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17103:3:17"},"nodeType":"YulFunctionCall","src":"17103:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17050:43:17"},"nodeType":"YulFunctionCall","src":"17050:71:17"},"nodeType":"YulExpressionStatement","src":"17050:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17175:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17188:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17199:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17184:3:17"},"nodeType":"YulFunctionCall","src":"17184:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17131:43:17"},"nodeType":"YulFunctionCall","src":"17131:72:17"},"nodeType":"YulExpressionStatement","src":"17131:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17257:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17270:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17281:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17266:3:17"},"nodeType":"YulFunctionCall","src":"17266:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17213:43:17"},"nodeType":"YulFunctionCall","src":"17213:72:17"},"nodeType":"YulExpressionStatement","src":"17213:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17339:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17352:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17363:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17348:3:17"},"nodeType":"YulFunctionCall","src":"17348:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17295:43:17"},"nodeType":"YulFunctionCall","src":"17295:72:17"},"nodeType":"YulExpressionStatement","src":"17295:72:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16951:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16963:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16971:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16979:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16987:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16998:4:17","type":""}],"src":"16821:553:17"},{"body":{"nodeType":"YulBlock","src":"17506:206:17","statements":[{"nodeType":"YulAssignment","src":"17516:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17528:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17539:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17524:3:17"},"nodeType":"YulFunctionCall","src":"17524:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17516:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17596:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17609:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17620:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17605:3:17"},"nodeType":"YulFunctionCall","src":"17605:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17552:43:17"},"nodeType":"YulFunctionCall","src":"17552:71:17"},"nodeType":"YulExpressionStatement","src":"17552:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17677:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17690:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17701:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17686:3:17"},"nodeType":"YulFunctionCall","src":"17686:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17633:43:17"},"nodeType":"YulFunctionCall","src":"17633:72:17"},"nodeType":"YulExpressionStatement","src":"17633:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17470:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17482:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17490:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17501:4:17","type":""}],"src":"17380:332:17"},{"body":{"nodeType":"YulBlock","src":"17810:118:17","statements":[{"nodeType":"YulAssignment","src":"17820:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17832:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17843:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17828:3:17"},"nodeType":"YulFunctionCall","src":"17828:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17820:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17894:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17907:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17918:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17903:3:17"},"nodeType":"YulFunctionCall","src":"17903:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"17856:37:17"},"nodeType":"YulFunctionCall","src":"17856:65:17"},"nodeType":"YulExpressionStatement","src":"17856:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17782:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17794:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17805:4:17","type":""}],"src":"17718:210:17"},{"body":{"nodeType":"YulBlock","src":"18123:378:17","statements":[{"nodeType":"YulAssignment","src":"18133:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18145:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18156:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18141:3:17"},"nodeType":"YulFunctionCall","src":"18141:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18133:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18221:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18234:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18245:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18230:3:17"},"nodeType":"YulFunctionCall","src":"18230:17:17"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"18170:50:17"},"nodeType":"YulFunctionCall","src":"18170:78:17"},"nodeType":"YulExpressionStatement","src":"18170:78:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18302:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18315:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18326:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18311:3:17"},"nodeType":"YulFunctionCall","src":"18311:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18258:43:17"},"nodeType":"YulFunctionCall","src":"18258:72:17"},"nodeType":"YulExpressionStatement","src":"18258:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18384:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18397:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18408:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18393:3:17"},"nodeType":"YulFunctionCall","src":"18393:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18340:43:17"},"nodeType":"YulFunctionCall","src":"18340:72:17"},"nodeType":"YulExpressionStatement","src":"18340:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18466:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18479:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18490:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18475:3:17"},"nodeType":"YulFunctionCall","src":"18475:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18422:43:17"},"nodeType":"YulFunctionCall","src":"18422:72:17"},"nodeType":"YulExpressionStatement","src":"18422:72:17"}]},"name":"abi_encode_tuple_t_enum$_Side_$1661_t_uint256_t_address_t_address__to_t_uint8_t_uint256_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18071:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18083:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18091:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18099:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18107:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18118:4:17","type":""}],"src":"17934:567:17"},{"body":{"nodeType":"YulBlock","src":"18678:248:17","statements":[{"nodeType":"YulAssignment","src":"18688:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18700:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18711:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18696:3:17"},"nodeType":"YulFunctionCall","src":"18696:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18688:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18735:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18746:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18731:3:17"},"nodeType":"YulFunctionCall","src":"18731:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18754:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"18760:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18750:3:17"},"nodeType":"YulFunctionCall","src":"18750:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18724:6:17"},"nodeType":"YulFunctionCall","src":"18724:47:17"},"nodeType":"YulExpressionStatement","src":"18724:47:17"},{"nodeType":"YulAssignment","src":"18780:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18914:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18788:124:17"},"nodeType":"YulFunctionCall","src":"18788:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18780:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18658:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18673:4:17","type":""}],"src":"18507:419:17"},{"body":{"nodeType":"YulBlock","src":"19103:248:17","statements":[{"nodeType":"YulAssignment","src":"19113:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19125:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19136:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19121:3:17"},"nodeType":"YulFunctionCall","src":"19121:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19113:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19160:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19171:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19156:3:17"},"nodeType":"YulFunctionCall","src":"19156:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19179:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"19185:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19175:3:17"},"nodeType":"YulFunctionCall","src":"19175:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19149:6:17"},"nodeType":"YulFunctionCall","src":"19149:47:17"},"nodeType":"YulExpressionStatement","src":"19149:47:17"},{"nodeType":"YulAssignment","src":"19205:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19339:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19213:124:17"},"nodeType":"YulFunctionCall","src":"19213:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19205:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19083:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19098:4:17","type":""}],"src":"18932:419:17"},{"body":{"nodeType":"YulBlock","src":"19528:248:17","statements":[{"nodeType":"YulAssignment","src":"19538:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19550:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19561:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19546:3:17"},"nodeType":"YulFunctionCall","src":"19546:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19538:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19585:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19596:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19581:3:17"},"nodeType":"YulFunctionCall","src":"19581:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19604:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"19610:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19600:3:17"},"nodeType":"YulFunctionCall","src":"19600:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19574:6:17"},"nodeType":"YulFunctionCall","src":"19574:47:17"},"nodeType":"YulExpressionStatement","src":"19574:47:17"},{"nodeType":"YulAssignment","src":"19630:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19764:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19638:124:17"},"nodeType":"YulFunctionCall","src":"19638:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19630:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19508:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19523:4:17","type":""}],"src":"19357:419:17"},{"body":{"nodeType":"YulBlock","src":"19953:248:17","statements":[{"nodeType":"YulAssignment","src":"19963:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19975:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19986:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19971:3:17"},"nodeType":"YulFunctionCall","src":"19971:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19963:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20010:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20021:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20006:3:17"},"nodeType":"YulFunctionCall","src":"20006:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20029:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20035:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20025:3:17"},"nodeType":"YulFunctionCall","src":"20025:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19999:6:17"},"nodeType":"YulFunctionCall","src":"19999:47:17"},"nodeType":"YulExpressionStatement","src":"19999:47:17"},{"nodeType":"YulAssignment","src":"20055:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20189:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20063:124:17"},"nodeType":"YulFunctionCall","src":"20063:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20055:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19933:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19948:4:17","type":""}],"src":"19782:419:17"},{"body":{"nodeType":"YulBlock","src":"20378:248:17","statements":[{"nodeType":"YulAssignment","src":"20388:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20400:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20411:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20396:3:17"},"nodeType":"YulFunctionCall","src":"20396:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20388:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20435:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20446:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20431:3:17"},"nodeType":"YulFunctionCall","src":"20431:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20454:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20460:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20450:3:17"},"nodeType":"YulFunctionCall","src":"20450:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20424:6:17"},"nodeType":"YulFunctionCall","src":"20424:47:17"},"nodeType":"YulExpressionStatement","src":"20424:47:17"},{"nodeType":"YulAssignment","src":"20480:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20614:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20488:124:17"},"nodeType":"YulFunctionCall","src":"20488:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20480:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20358:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20373:4:17","type":""}],"src":"20207:419:17"},{"body":{"nodeType":"YulBlock","src":"20884:499:17","statements":[{"nodeType":"YulAssignment","src":"20894:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20906:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20917:3:17","type":"","value":"480"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20902:3:17"},"nodeType":"YulFunctionCall","src":"20902:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20894:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21023:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21036:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21047:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21032:3:17"},"nodeType":"YulFunctionCall","src":"21032:17:17"}],"functionName":{"name":"abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20931:91:17"},"nodeType":"YulFunctionCall","src":"20931:119:17"},"nodeType":"YulExpressionStatement","src":"20931:119:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21104:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21117:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21128:3:17","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21113:3:17"},"nodeType":"YulFunctionCall","src":"21113:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21060:43:17"},"nodeType":"YulFunctionCall","src":"21060:73:17"},"nodeType":"YulExpressionStatement","src":"21060:73:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21187:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21200:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21211:3:17","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21196:3:17"},"nodeType":"YulFunctionCall","src":"21196:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21143:43:17"},"nodeType":"YulFunctionCall","src":"21143:73:17"},"nodeType":"YulExpressionStatement","src":"21143:73:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21264:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21277:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21288:3:17","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21273:3:17"},"nodeType":"YulFunctionCall","src":"21273:19:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21226:37:17"},"nodeType":"YulFunctionCall","src":"21226:67:17"},"nodeType":"YulExpressionStatement","src":"21226:67:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21347:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21360:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21371:3:17","type":"","value":"448"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21356:3:17"},"nodeType":"YulFunctionCall","src":"21356:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21303:43:17"},"nodeType":"YulFunctionCall","src":"21303:73:17"},"nodeType":"YulExpressionStatement","src":"21303:73:17"}]},"name":"abi_encode_tuple_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__to_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20824:9:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20836:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20844:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20852:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20860:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20868:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20879:4:17","type":""}],"src":"20632:751:17"},{"body":{"nodeType":"YulBlock","src":"21619:422:17","statements":[{"nodeType":"YulAssignment","src":"21629:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21641:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21652:3:17","type":"","value":"448"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21637:3:17"},"nodeType":"YulFunctionCall","src":"21637:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21629:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21758:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21771:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21782:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21767:3:17"},"nodeType":"YulFunctionCall","src":"21767:17:17"}],"functionName":{"name":"abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21666:91:17"},"nodeType":"YulFunctionCall","src":"21666:119:17"},"nodeType":"YulExpressionStatement","src":"21666:119:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21839:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21852:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21863:3:17","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21848:3:17"},"nodeType":"YulFunctionCall","src":"21848:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21795:43:17"},"nodeType":"YulFunctionCall","src":"21795:73:17"},"nodeType":"YulExpressionStatement","src":"21795:73:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21922:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21935:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21946:3:17","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21931:3:17"},"nodeType":"YulFunctionCall","src":"21931:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21878:43:17"},"nodeType":"YulFunctionCall","src":"21878:73:17"},"nodeType":"YulExpressionStatement","src":"21878:73:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22005:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22018:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22029:3:17","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22014:3:17"},"nodeType":"YulFunctionCall","src":"22014:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21961:43:17"},"nodeType":"YulFunctionCall","src":"21961:73:17"},"nodeType":"YulExpressionStatement","src":"21961:73:17"}]},"name":"abi_encode_tuple_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21567:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21579:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21587:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21595:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21603:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21614:4:17","type":""}],"src":"21389:652:17"},{"body":{"nodeType":"YulBlock","src":"22233:268:17","statements":[{"nodeType":"YulAssignment","src":"22243:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22255:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22266:3:17","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22251:3:17"},"nodeType":"YulFunctionCall","src":"22251:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22243:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22384:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22397:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22408:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22393:3:17"},"nodeType":"YulFunctionCall","src":"22393:17:17"}],"functionName":{"name":"abi_encode_t_struct$__filledOrder_$1658_memory_ptr_to_t_struct$__filledOrder_$1658_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22280:103:17"},"nodeType":"YulFunctionCall","src":"22280:131:17"},"nodeType":"YulExpressionStatement","src":"22280:131:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22465:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22478:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22489:3:17","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22474:3:17"},"nodeType":"YulFunctionCall","src":"22474:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22421:43:17"},"nodeType":"YulFunctionCall","src":"22421:73:17"},"nodeType":"YulExpressionStatement","src":"22421:73:17"}]},"name":"abi_encode_tuple_t_struct$__filledOrder_$1658_memory_ptr_t_uint256__to_t_struct$__filledOrder_$1658_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22197:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22209:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22217:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22228:4:17","type":""}],"src":"22047:454:17"},{"body":{"nodeType":"YulBlock","src":"22605:124:17","statements":[{"nodeType":"YulAssignment","src":"22615:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22627:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22638:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22623:3:17"},"nodeType":"YulFunctionCall","src":"22623:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22615:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22695:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22708:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22719:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22704:3:17"},"nodeType":"YulFunctionCall","src":"22704:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22651:43:17"},"nodeType":"YulFunctionCall","src":"22651:71:17"},"nodeType":"YulExpressionStatement","src":"22651:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22577:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22589:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22600:4:17","type":""}],"src":"22507:222:17"},{"body":{"nodeType":"YulBlock","src":"22861:206:17","statements":[{"nodeType":"YulAssignment","src":"22871:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22883:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22894:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22879:3:17"},"nodeType":"YulFunctionCall","src":"22879:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22871:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22951:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22964:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22975:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22960:3:17"},"nodeType":"YulFunctionCall","src":"22960:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22907:43:17"},"nodeType":"YulFunctionCall","src":"22907:71:17"},"nodeType":"YulExpressionStatement","src":"22907:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23032:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23045:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23056:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23041:3:17"},"nodeType":"YulFunctionCall","src":"23041:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22988:43:17"},"nodeType":"YulFunctionCall","src":"22988:72:17"},"nodeType":"YulExpressionStatement","src":"22988:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22825:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22837:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22845:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22856:4:17","type":""}],"src":"22735:332:17"},{"body":{"nodeType":"YulBlock","src":"23227:288:17","statements":[{"nodeType":"YulAssignment","src":"23237:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23249:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23260:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23245:3:17"},"nodeType":"YulFunctionCall","src":"23245:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23237:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23317:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23330:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23341:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23326:3:17"},"nodeType":"YulFunctionCall","src":"23326:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23273:43:17"},"nodeType":"YulFunctionCall","src":"23273:71:17"},"nodeType":"YulExpressionStatement","src":"23273:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23398:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23411:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23422:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23407:3:17"},"nodeType":"YulFunctionCall","src":"23407:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23354:43:17"},"nodeType":"YulFunctionCall","src":"23354:72:17"},"nodeType":"YulExpressionStatement","src":"23354:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23480:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23493:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23504:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23489:3:17"},"nodeType":"YulFunctionCall","src":"23489:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23436:43:17"},"nodeType":"YulFunctionCall","src":"23436:72:17"},"nodeType":"YulExpressionStatement","src":"23436:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23183:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23195:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23203:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23211:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23222:4:17","type":""}],"src":"23073:442:17"},{"body":{"nodeType":"YulBlock","src":"23562:88:17","statements":[{"nodeType":"YulAssignment","src":"23572:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"23582:18:17"},"nodeType":"YulFunctionCall","src":"23582:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23572:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23631:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"23639:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"23611:19:17"},"nodeType":"YulFunctionCall","src":"23611:33:17"},"nodeType":"YulExpressionStatement","src":"23611:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"23546:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"23555:6:17","type":""}],"src":"23521:129:17"},{"body":{"nodeType":"YulBlock","src":"23696:35:17","statements":[{"nodeType":"YulAssignment","src":"23706:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23722:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23716:5:17"},"nodeType":"YulFunctionCall","src":"23716:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23706:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"23689:6:17","type":""}],"src":"23656:75:17"},{"body":{"nodeType":"YulBlock","src":"23844:229:17","statements":[{"body":{"nodeType":"YulBlock","src":"23949:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"23951:16:17"},"nodeType":"YulFunctionCall","src":"23951:18:17"},"nodeType":"YulExpressionStatement","src":"23951:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23921:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"23929:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23918:2:17"},"nodeType":"YulFunctionCall","src":"23918:30:17"},"nodeType":"YulIf","src":"23915:56:17"},{"nodeType":"YulAssignment","src":"23981:25:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23993:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"24001:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23989:3:17"},"nodeType":"YulFunctionCall","src":"23989:17:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"23981:4:17"}]},{"nodeType":"YulAssignment","src":"24043:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"24055:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"24061:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24051:3:17"},"nodeType":"YulFunctionCall","src":"24051:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"24043:4:17"}]}]},"name":"array_allocation_size_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"23828:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"23839:4:17","type":""}],"src":"23737:336:17"},{"body":{"nodeType":"YulBlock","src":"24161:229:17","statements":[{"body":{"nodeType":"YulBlock","src":"24266:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"24268:16:17"},"nodeType":"YulFunctionCall","src":"24268:18:17"},"nodeType":"YulExpressionStatement","src":"24268:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24238:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"24246:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24235:2:17"},"nodeType":"YulFunctionCall","src":"24235:30:17"},"nodeType":"YulIf","src":"24232:56:17"},{"nodeType":"YulAssignment","src":"24298:25:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24310:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"24318:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24306:3:17"},"nodeType":"YulFunctionCall","src":"24306:17:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"24298:4:17"}]},{"nodeType":"YulAssignment","src":"24360:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"24372:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"24378:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24368:3:17"},"nodeType":"YulFunctionCall","src":"24368:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"24360:4:17"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"24145:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"24156:4:17","type":""}],"src":"24079:311:17"},{"body":{"nodeType":"YulBlock","src":"24492:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24509:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"24514:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24502:6:17"},"nodeType":"YulFunctionCall","src":"24502:19:17"},"nodeType":"YulExpressionStatement","src":"24502:19:17"},{"nodeType":"YulAssignment","src":"24530:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24549:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24554:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24545:3:17"},"nodeType":"YulFunctionCall","src":"24545:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"24530:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24464:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"24469:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"24480:11:17","type":""}],"src":"24396:169:17"},{"body":{"nodeType":"YulBlock","src":"24613:143:17","statements":[{"nodeType":"YulAssignment","src":"24623:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24646:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24628:17:17"},"nodeType":"YulFunctionCall","src":"24628:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24623:1:17"}]},{"nodeType":"YulAssignment","src":"24657:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24680:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24662:17:17"},"nodeType":"YulFunctionCall","src":"24662:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24657:1:17"}]},{"body":{"nodeType":"YulBlock","src":"24704:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"24706:16:17"},"nodeType":"YulFunctionCall","src":"24706:18:17"},"nodeType":"YulExpressionStatement","src":"24706:18:17"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24701:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24694:6:17"},"nodeType":"YulFunctionCall","src":"24694:9:17"},"nodeType":"YulIf","src":"24691:35:17"},{"nodeType":"YulAssignment","src":"24736:14:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24745:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"24748:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24741:3:17"},"nodeType":"YulFunctionCall","src":"24741:9:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"24736:1:17"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24602:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"24605:1:17","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"24611:1:17","type":""}],"src":"24571:185:17"},{"body":{"nodeType":"YulBlock","src":"24810:300:17","statements":[{"nodeType":"YulAssignment","src":"24820:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24843:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24825:17:17"},"nodeType":"YulFunctionCall","src":"24825:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24820:1:17"}]},{"nodeType":"YulAssignment","src":"24854:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24877:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24859:17:17"},"nodeType":"YulFunctionCall","src":"24859:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24854:1:17"}]},{"body":{"nodeType":"YulBlock","src":"25052:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25054:16:17"},"nodeType":"YulFunctionCall","src":"25054:18:17"},"nodeType":"YulExpressionStatement","src":"25054:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24964:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24957:6:17"},"nodeType":"YulFunctionCall","src":"24957:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24950:6:17"},"nodeType":"YulFunctionCall","src":"24950:17:17"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24972:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24979:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"25047:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24975:3:17"},"nodeType":"YulFunctionCall","src":"24975:74:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24969:2:17"},"nodeType":"YulFunctionCall","src":"24969:81:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24946:3:17"},"nodeType":"YulFunctionCall","src":"24946:105:17"},"nodeType":"YulIf","src":"24943:131:17"},{"nodeType":"YulAssignment","src":"25084:20:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25099:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"25102:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25095:3:17"},"nodeType":"YulFunctionCall","src":"25095:9:17"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"25084:7:17"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24793:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"24796:1:17","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"24802:7:17","type":""}],"src":"24762:348:17"},{"body":{"nodeType":"YulBlock","src":"25161:146:17","statements":[{"nodeType":"YulAssignment","src":"25171:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25194:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25176:17:17"},"nodeType":"YulFunctionCall","src":"25176:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25171:1:17"}]},{"nodeType":"YulAssignment","src":"25205:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25228:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25210:17:17"},"nodeType":"YulFunctionCall","src":"25210:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25205:1:17"}]},{"body":{"nodeType":"YulBlock","src":"25252:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25254:16:17"},"nodeType":"YulFunctionCall","src":"25254:18:17"},"nodeType":"YulExpressionStatement","src":"25254:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25246:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"25249:1:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25243:2:17"},"nodeType":"YulFunctionCall","src":"25243:8:17"},"nodeType":"YulIf","src":"25240:34:17"},{"nodeType":"YulAssignment","src":"25284:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25296:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"25299:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25292:3:17"},"nodeType":"YulFunctionCall","src":"25292:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"25284:4:17"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25147:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"25150:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"25156:4:17","type":""}],"src":"25116:191:17"},{"body":{"nodeType":"YulBlock","src":"25358:51:17","statements":[{"nodeType":"YulAssignment","src":"25368:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25397:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"25379:17:17"},"nodeType":"YulFunctionCall","src":"25379:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"25368:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25340:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"25350:7:17","type":""}],"src":"25313:96:17"},{"body":{"nodeType":"YulBlock","src":"25457:48:17","statements":[{"nodeType":"YulAssignment","src":"25467:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25492:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25485:6:17"},"nodeType":"YulFunctionCall","src":"25485:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25478:6:17"},"nodeType":"YulFunctionCall","src":"25478:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"25467:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25439:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"25449:7:17","type":""}],"src":"25415:90:17"},{"body":{"nodeType":"YulBlock","src":"25565:75:17","statements":[{"nodeType":"YulAssignment","src":"25575:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"25586:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"25575:7:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25628:5:17"}],"functionName":{"name":"validator_assert_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"25592:35:17"},"nodeType":"YulFunctionCall","src":"25592:42:17"},"nodeType":"YulExpressionStatement","src":"25592:42:17"}]},"name":"cleanup_t_enum$_Side_$1661","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25547:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"25557:7:17","type":""}],"src":"25511:129:17"},{"body":{"nodeType":"YulBlock","src":"25691:81:17","statements":[{"nodeType":"YulAssignment","src":"25701:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25716:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"25723:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25712:3:17"},"nodeType":"YulFunctionCall","src":"25712:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"25701:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25673:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"25683:7:17","type":""}],"src":"25646:126:17"},{"body":{"nodeType":"YulBlock","src":"25823:32:17","statements":[{"nodeType":"YulAssignment","src":"25833:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"25844:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"25833:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25805:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"25815:7:17","type":""}],"src":"25778:77:17"},{"body":{"nodeType":"YulBlock","src":"25928:62:17","statements":[{"nodeType":"YulAssignment","src":"25938:46:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25978:5:17"}],"functionName":{"name":"cleanup_t_enum$_Side_$1661","nodeType":"YulIdentifier","src":"25951:26:17"},"nodeType":"YulFunctionCall","src":"25951:33:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"25938:9:17"}]}]},"name":"convert_t_enum$_Side_$1661_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25908:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"25918:9:17","type":""}],"src":"25861:129:17"},{"body":{"nodeType":"YulBlock","src":"26039:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"26049:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26071:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"26101:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"26079:21:17"},"nodeType":"YulFunctionCall","src":"26079:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26067:3:17"},"nodeType":"YulFunctionCall","src":"26067:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"26053:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"26218:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"26220:16:17"},"nodeType":"YulFunctionCall","src":"26220:18:17"},"nodeType":"YulExpressionStatement","src":"26220:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"26161:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"26173:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26158:2:17"},"nodeType":"YulFunctionCall","src":"26158:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"26197:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"26209:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26194:2:17"},"nodeType":"YulFunctionCall","src":"26194:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"26155:2:17"},"nodeType":"YulFunctionCall","src":"26155:62:17"},"nodeType":"YulIf","src":"26152:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26256:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"26260:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26249:6:17"},"nodeType":"YulFunctionCall","src":"26249:22:17"},"nodeType":"YulExpressionStatement","src":"26249:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26025:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"26033:4:17","type":""}],"src":"25996:281:17"},{"body":{"nodeType":"YulBlock","src":"26326:190:17","statements":[{"nodeType":"YulAssignment","src":"26336:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26363:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26345:17:17"},"nodeType":"YulFunctionCall","src":"26345:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26336:5:17"}]},{"body":{"nodeType":"YulBlock","src":"26459:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26461:16:17"},"nodeType":"YulFunctionCall","src":"26461:18:17"},"nodeType":"YulExpressionStatement","src":"26461:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26384:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"26391:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26381:2:17"},"nodeType":"YulFunctionCall","src":"26381:77:17"},"nodeType":"YulIf","src":"26378:103:17"},{"nodeType":"YulAssignment","src":"26490:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26501:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"26508:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26497:3:17"},"nodeType":"YulFunctionCall","src":"26497:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26490:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26312:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26322:3:17","type":""}],"src":"26283:233:17"},{"body":{"nodeType":"YulBlock","src":"26550:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26567:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26570:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26560:6:17"},"nodeType":"YulFunctionCall","src":"26560:88:17"},"nodeType":"YulExpressionStatement","src":"26560:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26664:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26667:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26657:6:17"},"nodeType":"YulFunctionCall","src":"26657:15:17"},"nodeType":"YulExpressionStatement","src":"26657:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26688:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26691:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26681:6:17"},"nodeType":"YulFunctionCall","src":"26681:15:17"},"nodeType":"YulExpressionStatement","src":"26681:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"26522:180:17"},{"body":{"nodeType":"YulBlock","src":"26736:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26753:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26756:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26746:6:17"},"nodeType":"YulFunctionCall","src":"26746:88:17"},"nodeType":"YulExpressionStatement","src":"26746:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26850:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26853:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26843:6:17"},"nodeType":"YulFunctionCall","src":"26843:15:17"},"nodeType":"YulExpressionStatement","src":"26843:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26874:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26877:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26867:6:17"},"nodeType":"YulFunctionCall","src":"26867:15:17"},"nodeType":"YulExpressionStatement","src":"26867:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"26708:180:17"},{"body":{"nodeType":"YulBlock","src":"26922:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26939:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26942:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26932:6:17"},"nodeType":"YulFunctionCall","src":"26932:88:17"},"nodeType":"YulExpressionStatement","src":"26932:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27036:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27039:4:17","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27029:6:17"},"nodeType":"YulFunctionCall","src":"27029:15:17"},"nodeType":"YulExpressionStatement","src":"27029:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27060:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27063:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27053:6:17"},"nodeType":"YulFunctionCall","src":"27053:15:17"},"nodeType":"YulExpressionStatement","src":"27053:15:17"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"26894:180:17"},{"body":{"nodeType":"YulBlock","src":"27108:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27125:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27128:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27118:6:17"},"nodeType":"YulFunctionCall","src":"27118:88:17"},"nodeType":"YulExpressionStatement","src":"27118:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27222:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27225:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27215:6:17"},"nodeType":"YulFunctionCall","src":"27215:15:17"},"nodeType":"YulExpressionStatement","src":"27215:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27246:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27249:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27239:6:17"},"nodeType":"YulFunctionCall","src":"27239:15:17"},"nodeType":"YulExpressionStatement","src":"27239:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"27080:180:17"},{"body":{"nodeType":"YulBlock","src":"27294:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27311:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27314:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27304:6:17"},"nodeType":"YulFunctionCall","src":"27304:88:17"},"nodeType":"YulExpressionStatement","src":"27304:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27408:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27411:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27401:6:17"},"nodeType":"YulFunctionCall","src":"27401:15:17"},"nodeType":"YulExpressionStatement","src":"27401:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27432:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27435:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27425:6:17"},"nodeType":"YulFunctionCall","src":"27425:15:17"},"nodeType":"YulExpressionStatement","src":"27425:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"27266:180:17"},{"body":{"nodeType":"YulBlock","src":"27541:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27558:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27561:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27551:6:17"},"nodeType":"YulFunctionCall","src":"27551:12:17"},"nodeType":"YulExpressionStatement","src":"27551:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"27452:117:17"},{"body":{"nodeType":"YulBlock","src":"27664:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27681:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27684:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27674:6:17"},"nodeType":"YulFunctionCall","src":"27674:12:17"},"nodeType":"YulExpressionStatement","src":"27674:12:17"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"27575:117:17"},{"body":{"nodeType":"YulBlock","src":"27787:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27804:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27807:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27797:6:17"},"nodeType":"YulFunctionCall","src":"27797:12:17"},"nodeType":"YulExpressionStatement","src":"27797:12:17"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"27698:117:17"},{"body":{"nodeType":"YulBlock","src":"27910:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27927:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27930:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27920:6:17"},"nodeType":"YulFunctionCall","src":"27920:12:17"},"nodeType":"YulExpressionStatement","src":"27920:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"27821:117:17"},{"body":{"nodeType":"YulBlock","src":"28033:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28050:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28053:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28043:6:17"},"nodeType":"YulFunctionCall","src":"28043:12:17"},"nodeType":"YulExpressionStatement","src":"28043:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"27944:117:17"},{"body":{"nodeType":"YulBlock","src":"28156:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28173:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28176:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28166:6:17"},"nodeType":"YulFunctionCall","src":"28166:12:17"},"nodeType":"YulExpressionStatement","src":"28166:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"28067:117:17"},{"body":{"nodeType":"YulBlock","src":"28238:54:17","statements":[{"nodeType":"YulAssignment","src":"28248:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28266:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"28273:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28262:3:17"},"nodeType":"YulFunctionCall","src":"28262:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28282:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28278:3:17"},"nodeType":"YulFunctionCall","src":"28278:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28258:3:17"},"nodeType":"YulFunctionCall","src":"28258:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"28248:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28221:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"28231:6:17","type":""}],"src":"28190:102:17"},{"body":{"nodeType":"YulBlock","src":"28404:62:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28426:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"28434:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28422:3:17"},"nodeType":"YulFunctionCall","src":"28422:14:17"},{"hexValue":"4f726465722076616c756573206572726f72","kind":"string","nodeType":"YulLiteral","src":"28438:20:17","type":"","value":"Order values error"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28415:6:17"},"nodeType":"YulFunctionCall","src":"28415:44:17"},"nodeType":"YulExpressionStatement","src":"28415:44:17"}]},"name":"store_literal_in_memory_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28396:6:17","type":""}],"src":"28298:168:17"},{"body":{"nodeType":"YulBlock","src":"28578:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28600:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"28608:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28596:3:17"},"nodeType":"YulFunctionCall","src":"28596:14:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"28612:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28589:6:17"},"nodeType":"YulFunctionCall","src":"28589:58:17"},"nodeType":"YulExpressionStatement","src":"28589:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28668:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"28676:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28664:3:17"},"nodeType":"YulFunctionCall","src":"28664:15:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"28681:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28657:6:17"},"nodeType":"YulFunctionCall","src":"28657:33:17"},"nodeType":"YulExpressionStatement","src":"28657:33:17"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28570:6:17","type":""}],"src":"28472:225:17"},{"body":{"nodeType":"YulBlock","src":"28809:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28831:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"28839:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28827:3:17"},"nodeType":"YulFunctionCall","src":"28827:14:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"28843:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28820:6:17"},"nodeType":"YulFunctionCall","src":"28820:58:17"},"nodeType":"YulExpressionStatement","src":"28820:58:17"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28801:6:17","type":""}],"src":"28703:182:17"},{"body":{"nodeType":"YulBlock","src":"28997:64:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29019:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"29027:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29015:3:17"},"nodeType":"YulFunctionCall","src":"29015:14:17"},{"hexValue":"496e76616c6964204f7264657220416d6f756e74","kind":"string","nodeType":"YulLiteral","src":"29031:22:17","type":"","value":"Invalid Order Amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29008:6:17"},"nodeType":"YulFunctionCall","src":"29008:46:17"},"nodeType":"YulExpressionStatement","src":"29008:46:17"}]},"name":"store_literal_in_memory_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28989:6:17","type":""}],"src":"28891:170:17"},{"body":{"nodeType":"YulBlock","src":"29173:60:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29195:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"29203:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29191:3:17"},"nodeType":"YulFunctionCall","src":"29191:14:17"},{"hexValue":"466565732063616e6e6f742062652030","kind":"string","nodeType":"YulLiteral","src":"29207:18:17","type":"","value":"Fees cannot be 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29184:6:17"},"nodeType":"YulFunctionCall","src":"29184:42:17"},"nodeType":"YulExpressionStatement","src":"29184:42:17"}]},"name":"store_literal_in_memory_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29165:6:17","type":""}],"src":"29067:166:17"},{"body":{"nodeType":"YulBlock","src":"29291:62:17","statements":[{"body":{"nodeType":"YulBlock","src":"29325:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"29327:16:17"},"nodeType":"YulFunctionCall","src":"29327:18:17"},"nodeType":"YulExpressionStatement","src":"29327:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29314:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"29321:1:17","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29311:2:17"},"nodeType":"YulFunctionCall","src":"29311:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29304:6:17"},"nodeType":"YulFunctionCall","src":"29304:20:17"},"nodeType":"YulIf","src":"29301:46:17"}]},"name":"validator_assert_t_enum$_Side_$1661","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29284:5:17","type":""}],"src":"29239:114:17"},{"body":{"nodeType":"YulBlock","src":"29402:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"29459:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29468:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29471:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29461:6:17"},"nodeType":"YulFunctionCall","src":"29461:12:17"},"nodeType":"YulExpressionStatement","src":"29461:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29425:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29450:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"29432:17:17"},"nodeType":"YulFunctionCall","src":"29432:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29422:2:17"},"nodeType":"YulFunctionCall","src":"29422:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29415:6:17"},"nodeType":"YulFunctionCall","src":"29415:43:17"},"nodeType":"YulIf","src":"29412:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29395:5:17","type":""}],"src":"29359:122:17"},{"body":{"nodeType":"YulBlock","src":"29527:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"29581:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29590:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29593:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29583:6:17"},"nodeType":"YulFunctionCall","src":"29583:12:17"},"nodeType":"YulExpressionStatement","src":"29583:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29550:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29572:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"29557:14:17"},"nodeType":"YulFunctionCall","src":"29557:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29547:2:17"},"nodeType":"YulFunctionCall","src":"29547:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29540:6:17"},"nodeType":"YulFunctionCall","src":"29540:40:17"},"nodeType":"YulIf","src":"29537:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29520:5:17","type":""}],"src":"29487:116:17"},{"body":{"nodeType":"YulBlock","src":"29661:56:17","statements":[{"body":{"nodeType":"YulBlock","src":"29695:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29704:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29707:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29697:6:17"},"nodeType":"YulFunctionCall","src":"29697:12:17"},"nodeType":"YulExpressionStatement","src":"29697:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29684:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"29691:1:17","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29681:2:17"},"nodeType":"YulFunctionCall","src":"29681:12:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29674:6:17"},"nodeType":"YulFunctionCall","src":"29674:20:17"},"nodeType":"YulIf","src":"29671:40:17"}]},"name":"validator_revert_t_enum$_Side_$1661","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29654:5:17","type":""}],"src":"29609:108:17"},{"body":{"nodeType":"YulBlock","src":"29766:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"29823:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29832:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29835:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29825:6:17"},"nodeType":"YulFunctionCall","src":"29825:12:17"},"nodeType":"YulExpressionStatement","src":"29825:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29789:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29814:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29796:17:17"},"nodeType":"YulFunctionCall","src":"29796:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29786:2:17"},"nodeType":"YulFunctionCall","src":"29786:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29779:6:17"},"nodeType":"YulFunctionCall","src":"29779:43:17"},"nodeType":"YulIf","src":"29776:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29759:5:17","type":""}],"src":"29723:122:17"}]},"contents":"{\n\n    // uint256[][]\n    function abi_decode_available_length_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_array$_t_uint256_$dyn_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[][]\n    function abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_enum$_Side_$1661_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_enum$_Side_$1661(value)\n    }\n\n    // struct Exchange._Order\n    function abi_decode_t_struct$__Order_$1629_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0160) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0160)\n\n        {\n            // id\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // side\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_enum$_Side_$1661_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // user\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // tokenA\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // amountA\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // tokenB\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // amountB\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // rate\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // originalAmountA\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // originalAmountB\n\n            let offset := 288\n\n            mstore(add(value, 0x0120), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // waiveFees\n\n            let offset := 320\n\n            mstore(add(value, 0x0140), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$__Order_$1629_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 384) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$__Order_$1629_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 352\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_Side_$1661_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$1661_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$1661_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88(pos)\n        end := add(pos, 32)\n    }\n\n    // struct Exchange._Order -> struct Exchange._Order\n    function abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_Side_$1661_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tokenA\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountA\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tokenB\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountB\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // rate\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // originalAmountA\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // originalAmountB\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // waiveFees\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n    }\n\n    // struct Exchange._filledOrder -> struct Exchange._filledOrder\n    function abi_encode_t_struct$__filledOrder_$1658_memory_ptr_to_t_struct$__filledOrder_$1658_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0180)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_Side_$1661_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tokenA\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tokenB\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountFilled\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // fillRate\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // originalRate\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // originalAmountA\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // originalAmountB\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // feesWaived\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n        {\n            // feesPaid\n\n            let memberValue0 := mload(add(value, 0x0160))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0160))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_Side_$1661_t_uint256_t_address_t_address__to_t_uint8_t_uint256_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_enum$_Side_$1661_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__to_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 480)\n\n        abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 352))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 384))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 416))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 448))\n\n    }\n\n    function abi_encode_tuple_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_struct$__Order_$1629_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 448)\n\n        abi_encode_t_struct$__Order_$1629_memory_ptr_to_t_struct$__Order_$1629_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 352))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 384))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 416))\n\n    }\n\n    function abi_encode_tuple_t_struct$__filledOrder_$1658_memory_ptr_t_uint256__to_t_struct$__filledOrder_$1658_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 416)\n\n        abi_encode_t_struct$__filledOrder_$1658_memory_ptr_to_t_struct$__filledOrder_$1658_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 384))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Side_$1661(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Side_$1661(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Side_$1661_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Side_$1661(value)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_21c6c7ace37d332ee5ef2af6618fefa0228c1a88013133876fd147d8ae8963a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Order values error\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_d41a3a5f0ab031d90683d980d87501822dae6ab34f78e572a43fcb8fd0d39073(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Order Amount\")\n\n    }\n\n    function store_literal_in_memory_e15908f34fb43556ae0561fc57f6babade888d6e3723a4bc492eb04a89c2ea88(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fees cannot be 0\")\n\n    }\n\n    function validator_assert_t_enum$_Side_$1661(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Side_$1661(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c80639df4d1861161005b5780639df4d186146100c6578063ac1a386a146100e2578063d082ea8c146100fe578063f2fde38b1461011a5761007d565b8063715018a614610082578063857ba6501461008c5780638da5cb5b146100a8575b600080fd5b61008a610136565b005b6100a660048036038101906100a19190612706565b61014a565b005b6100b0610c1b565b6040516100bd9190612b0f565b60405180910390f35b6100e060048036038101906100db91906126ac565b610c44565b005b6100fc60048036038101906100f791906126ac565b610c90565b005b610118600480360381019061011391906126ac565b610cdc565b005b610134600480360381019061012f91906126ac565b610d28565b005b61013e610dac565b6101486000610e2a565b565b610152612318565b600080600090505b8351811015610c13576000848281518110610178576101776130e5565b5b6020026020010151600281518110610193576101926130e5565b5b6020026020010151141580156101df575060008482815181106101b9576101b86130e5565b5b60200260200101516003815181106101d4576101d36130e5565b5b602002602001015114155b61021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021590612c3d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166392e43d3a8787878581518110610271576102706130e5565b5b602002602001015160018151811061028c5761028b6130e5565b5b60200260200101518886815181106102a7576102a66130e5565b5b60200260200101516000815181106102c2576102c16130e5565b5b60200260200101516040518563ffffffff1660e01b81526004016102e99493929190612b6f565b6101806040518083038186803b15801561030257600080fd5b505afa158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a91906127a2565b8093508194505050600083608001511415801561035c575060008360c0015114155b61039b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039290612c9d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb310c9b846104268785815181106103f0576103ef6130e5565b5b602002602001015160028151811061040b5761040a6130e5565b5b60200260200101518760800151610eee90919063ffffffff16565b61049c61048960045461047b8b8981518110610445576104446130e5565b5b60200260200101516002815181106104605761045f6130e5565b5b60200260200101518b60e00151610f0490919063ffffffff16565b610f1a90919063ffffffff16565b8860c00151610eee90919063ffffffff16565b866040518563ffffffff1660e01b81526004016104bc9493929190612d35565b600060405180830381600087803b1580156104d657600080fd5b505af11580156104ea573d6000803e3d6000fd5b5050505061053a848281518110610504576105036130e5565b5b602002602001015160028151811061051f5761051e6130e5565b5b60200260200101518460800151610eee90919063ffffffff16565b8360800181815250506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663513ffedd868481518110610596576105956130e5565b5b60200260200101516002815181106105b1576105b06130e5565b5b60200260200101518785815181106105cc576105cb6130e5565b5b60200260200101516003815181106105e7576105e66130e5565b5b60200260200101518760a001516040518463ffffffff1660e01b815260040161061293929190612ded565b60206040518083038186803b15801561062a57600080fd5b505afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066291906127e4565b905060008114156106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90612cbd565b60405180910390fd5b600084610140015180156107695750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca8963f18387604001516040518363ffffffff1660e01b8152600401610718929190612dc4565b60206040518083038186803b15801561073057600080fd5b505afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190612775565b5b905060008684815181106107805761077f6130e5565b5b602002602001015160018151811061079b5761079a6130e5565b5b602002602001015114156108ce57610820858785815181106107c0576107bf6130e5565b5b60200260200101516002815181106107db576107da6130e5565b5b60200260200101518886815181106107f6576107f56130e5565b5b6020026020010151600381518110610811576108106130e5565b5b60200260200101518486610f30565b7f3b9846c737e068d8f2cef4f3047025f465c9bc72bb212e31e6ce53ad6b6a894b85878581518110610855576108546130e5565b5b60200260200101516002815181106108705761086f6130e5565b5b602002602001015188868151811061088b5761088a6130e5565b5b60200260200101516003815181106108a6576108a56130e5565b5b602002602001015184866040516108c1959493929190612cdd565b60405180910390a16109ef565b610945858785815181106108e5576108e46130e5565b5b6020026020010151600281518110610900576108ff6130e5565b5b602002602001015188868151811061091b5761091a6130e5565b5b6020026020010151600381518110610936576109356130e5565b5b60200260200101518486611923565b7fd6c6c0a27de1c0f74adbc5d0061e767a3fc239e8a9d70cf49eba77fc944eb7fb8587858151811061097a576109796130e5565b5b6020026020010151600281518110610995576109946130e5565b5b60200260200101518886815181106109b0576109af6130e5565b5b60200260200101516003815181106109cb576109ca6130e5565b5b602002602001015184866040516109e6959493929190612cdd565b60405180910390a15b600085608001511415610bfe57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff09cdfa60006040518263ffffffff1660e01b8152600401610a589190612bdd565b600060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f90ef4f26000888681518110610add57610adc6130e5565b5b6020026020010151600181518110610af857610af76130e5565b5b602002602001015114610b0c576001610b0f565b60005b876000015188606001518960a001516040518563ffffffff1660e01b8152600401610b3d9493929190612bf8565b600060405180830381600087803b158015610b5757600080fd5b505af1158015610b6b573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff09cdfa60016040518263ffffffff1660e01b8152600401610bcb9190612bdd565b600060405180830381600087803b158015610be557600080fd5b505af1158015610bf9573d6000803e3d6000fd5b505050505b50508080610c0b9061300f565b91505061015a565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c4c610dac565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610c98610dac565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ce4610dac565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610d30610dac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610da0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9790612c5d565b60405180910390fd5b610da981610e2a565b50565b610db4612310565b73ffffffffffffffffffffffffffffffffffffffff16610dd2610c1b565b73ffffffffffffffffffffffffffffffffffffffff1614610e28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1f90612c7d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610efc9190612f3d565b905092915050565b60008183610f129190612ee3565b905092915050565b60008183610f289190612eb2565b905092915050565b8115611390576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a42963e9836040518263ffffffff1660e01b8152600401610f939190612da9565b60206040518083038186803b158015610fab57600080fd5b505afa158015610fbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe391906127e4565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631a38a4fb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561108b57600080fd5b505afa15801561109f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c391906126d9565b88604001518460006040518563ffffffff1660e01b81526004016110ea9493929190612b2a565b600060405180830381600087803b15801561110457600080fd5b505af1158015611118573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631a38a4fb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111c257600080fd5b505afa1580156111d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fa91906126d9565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663664a1ad66040518163ffffffff1660e01b815260040160206040518083038186803b15801561126257600080fd5b505afa158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a91906126d9565b8460016040518563ffffffff1660e01b81526004016112bc9493929190612b2a565b600060405180830381600087803b1580156112d657600080fd5b505af11580156112ea573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d876060015188604001518860016040518563ffffffff1660e01b81526004016113589493929190612b2a565b600060405180830381600087803b15801561137257600080fd5b505af1158015611386573d6000803e3d6000fd5b505050505061162c565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b98ee4198760600151846040518363ffffffff1660e01b81526004016113f3929190612bb4565b60206040518083038186803b15801561140b57600080fd5b505afa15801561141f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144391906127e4565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d876060015188604001516114a0858a610eee90919063ffffffff16565b60016040518563ffffffff1660e01b81526004016114c19493929190612b2a565b600060405180830381600087803b1580156114db57600080fd5b505af11580156114ef573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d8760600151600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663664a1ad66040518163ffffffff1660e01b815260040160206040518083038186803b15801561159e57600080fd5b505afa1580156115b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d691906126d9565b8460016040518563ffffffff1660e01b81526004016115f89493929190612b2a565b600060405180830381600087803b15801561161257600080fd5b505af1158015611626573d6000803e3d6000fd5b50505050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d686604001518760a0015161169f6004546116918a8c60e00151610f0490919063ffffffff16565b610f1a90919063ffffffff16565b60006040518563ffffffff1660e01b81526004016116c09493929190612b2a565b600060405180830381600087803b1580156116da57600080fd5b505af11580156116ee573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d8660a0015187604001516117616004546117538a8a610f0490919063ffffffff16565b610f1a90919063ffffffff16565b60006040518563ffffffff1660e01b81526004016117829493929190612b2a565b600060405180830381600087803b15801561179c57600080fd5b505af11580156117b0573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630af4e4f0604051806101800160405280886000015181526020016000600181111561181c5761181b6130b6565b5b8152602001886040015173ffffffffffffffffffffffffffffffffffffffff168152602001886060015173ffffffffffffffffffffffffffffffffffffffff1681526020018860a0015173ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018860e00151815260200188610100015181526020018861012001518152602001851515815260200184815250600060018111156118cd576118cc6130b6565b5b6040518363ffffffff1660e01b81526004016118ea929190612d7e565b600060405180830381600087803b15801561190457600080fd5b505af1158015611918573d6000803e3d6000fd5b505050505050505050565b8115611da9576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a42963e9836040518263ffffffff1660e01b81526004016119869190612da9565b60206040518083038186803b15801561199e57600080fd5b505afa1580156119b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d691906127e4565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631a38a4fb6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a7e57600080fd5b505afa158015611a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab691906126d9565b88604001518460006040518563ffffffff1660e01b8152600401611add9493929190612b2a565b600060405180830381600087803b158015611af757600080fd5b505af1158015611b0b573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631a38a4fb6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bb557600080fd5b505afa158015611bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bed91906126d9565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663664a1ad66040518163ffffffff1660e01b815260040160206040518083038186803b158015611c5557600080fd5b505afa158015611c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8d91906126d9565b8460016040518563ffffffff1660e01b8152600401611caf9493929190612b2a565b600060405180830381600087803b158015611cc957600080fd5b505af1158015611cdd573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d8760a001518860400151611d50600454611d428b8b610f0490919063ffffffff16565b610f1a90919063ffffffff16565b60016040518563ffffffff1660e01b8152600401611d719493929190612b2a565b600060405180830381600087803b158015611d8b57600080fd5b505af1158015611d9f573d6000803e3d6000fd5b505050505061206b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b98ee4198760a00151846040518363ffffffff1660e01b8152600401611e0c929190612bb4565b60206040518083038186803b158015611e2457600080fd5b505afa158015611e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5c91906127e4565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d8760a00151600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663664a1ad66040518163ffffffff1660e01b815260040160206040518083038186803b158015611f0957600080fd5b505afa158015611f1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4191906126d9565b8460016040518563ffffffff1660e01b8152600401611f639493929190612b2a565b600060405180830381600087803b158015611f7d57600080fd5b505af1158015611f91573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d8760a00151886040015161201685612008600454611ffa8d8d610f0490919063ffffffff16565b610f1a90919063ffffffff16565b610eee90919063ffffffff16565b60016040518563ffffffff1660e01b81526004016120379493929190612b2a565b600060405180830381600087803b15801561205157600080fd5b505af1158015612065573d6000803e3d6000fd5b50505050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6866040015187606001518760006040518563ffffffff1660e01b81526004016120d59493929190612b2a565b600060405180830381600087803b1580156120ef57600080fd5b505af1158015612103573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663126b9c5d866060015187604001518760006040518563ffffffff1660e01b81526004016121719493929190612b2a565b600060405180830381600087803b15801561218b57600080fd5b505af115801561219f573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630af4e4f06040518061018001604052808860000151815260200160018081111561220a576122096130b6565b5b8152602001886040015173ffffffffffffffffffffffffffffffffffffffff168152602001886060015173ffffffffffffffffffffffffffffffffffffffff1681526020018860a0015173ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018860e001518152602001886101000151815260200188610120015181526020018515158152602001848152506001808111156122ba576122b96130b6565b5b6040518363ffffffff1660e01b81526004016122d7929190612d7e565b600060405180830381600087803b1580156122f157600080fd5b505af1158015612305573d6000803e3d6000fd5b505050505050505050565b600033905090565b604051806101600160405280600081526020016000600181111561233f5761233e6130b6565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b60006123db6123d684612e49565b612e24565b905080838252602082019050828560208602820111156123fe576123fd61314d565b5b60005b8581101561244c57813567ffffffffffffffff81111561242457612423613143565b5b808601612431898261251e565b85526020850194506020840193505050600181019050612401565b5050509392505050565b600061246961246484612e75565b612e24565b9050808382526020820190508285602086028201111561248c5761248b61314d565b5b60005b858110156124bc57816124a28882612682565b84526020840193506020830192505060018101905061248f565b5050509392505050565b6000813590506124d581613274565b92915050565b6000815190506124ea81613274565b92915050565b600082601f83011261250557612504613143565b5b81356125158482602086016123c8565b91505092915050565b600082601f83011261253357612532613143565b5b8135612543848260208601612456565b91505092915050565b60008151905061255b8161328b565b92915050565b600081519050612570816132a2565b92915050565b6000610160828403121561258d5761258c613148565b5b612598610160612e24565b905060006125a884828501612697565b60008301525060206125bc84828501612561565b60208301525060406125d0848285016124db565b60408301525060606125e4848285016124db565b60608301525060806125f884828501612697565b60808301525060a061260c848285016124db565b60a08301525060c061262084828501612697565b60c08301525060e061263484828501612697565b60e08301525061010061264984828501612697565b6101008301525061012061265f84828501612697565b610120830152506101406126758482850161254c565b6101408301525092915050565b600081359050612691816132b2565b92915050565b6000815190506126a6816132b2565b92915050565b6000602082840312156126c2576126c1613157565b5b60006126d0848285016124c6565b91505092915050565b6000602082840312156126ef576126ee613157565b5b60006126fd848285016124db565b91505092915050565b60008060006060848603121561271f5761271e613157565b5b600061272d868287016124c6565b935050602061273e868287016124c6565b925050604084013567ffffffffffffffff81111561275f5761275e613152565b5b61276b868287016124f0565b9150509250925092565b60006020828403121561278b5761278a613157565b5b60006127998482850161254c565b91505092915050565b60008061018083850312156127ba576127b9613157565b5b60006127c885828601612576565b9250506101606127da85828601612697565b9150509250929050565b6000602082840312156127fa576127f9613157565b5b600061280884828501612697565b91505092915050565b61281a81612f71565b82525050565b61282981612f71565b82525050565b61283881612f83565b82525050565b61284781612f83565b82525050565b61285681612fcc565b82525050565b61286581612fcc565b82525050565b6000612878601283612ea1565b91506128838261316d565b602082019050919050565b600061289b602683612ea1565b91506128a682613196565b604082019050919050565b60006128be602083612ea1565b91506128c9826131e5565b602082019050919050565b60006128e1601483612ea1565b91506128ec8261320e565b602082019050919050565b6000612904601083612ea1565b915061290f82613237565b602082019050919050565b610160820160008201516129316000850182612af1565b506020820151612944602085018261284d565b5060408201516129576040850182612811565b50606082015161296a6060850182612811565b50608082015161297d6080850182612af1565b5060a082015161299060a0850182612811565b5060c08201516129a360c0850182612af1565b5060e08201516129b660e0850182612af1565b506101008201516129cb610100850182612af1565b506101208201516129e0610120850182612af1565b506101408201516129f561014085018261282f565b50505050565b61018082016000820151612a126000850182612af1565b506020820151612a25602085018261284d565b506040820151612a386040850182612811565b506060820151612a4b6060850182612811565b506080820151612a5e6080850182612811565b5060a0820151612a7160a0850182612af1565b5060c0820151612a8460c0850182612af1565b5060e0820151612a9760e0850182612af1565b50610100820151612aac610100850182612af1565b50610120820151612ac1610120850182612af1565b50610140820151612ad661014085018261282f565b50610160820151612aeb610160850182612af1565b50505050565b612afa81612fc2565b82525050565b612b0981612fc2565b82525050565b6000602082019050612b246000830184612820565b92915050565b6000608082019050612b3f6000830187612820565b612b4c6020830186612820565b612b596040830185612b00565b612b66606083018461283e565b95945050505050565b6000608082019050612b846000830187612820565b612b916020830186612820565b612b9e6040830185612b00565b612bab6060830184612b00565b95945050505050565b6000604082019050612bc96000830185612820565b612bd66020830184612b00565b9392505050565b6000602082019050612bf2600083018461283e565b92915050565b6000608082019050612c0d600083018761285c565b612c1a6020830186612b00565b612c276040830185612820565b612c346060830184612820565b95945050505050565b60006020820190508181036000830152612c568161286b565b9050919050565b60006020820190508181036000830152612c768161288e565b9050919050565b60006020820190508181036000830152612c96816128b1565b9050919050565b60006020820190508181036000830152612cb6816128d4565b9050919050565b60006020820190508181036000830152612cd6816128f7565b9050919050565b60006101e082019050612cf3600083018861291a565b612d01610160830187612b00565b612d0f610180830186612b00565b612d1d6101a083018561283e565b612d2b6101c0830184612b00565b9695505050505050565b60006101c082019050612d4b600083018761291a565b612d59610160830186612b00565b612d67610180830185612b00565b612d756101a0830184612b00565b95945050505050565b60006101a082019050612d9460008301856129fb565b612da2610180830184612b00565b9392505050565b6000602082019050612dbe6000830184612b00565b92915050565b6000604082019050612dd96000830185612b00565b612de66020830184612820565b9392505050565b6000606082019050612e026000830186612b00565b612e0f6020830185612b00565b612e1c6040830184612820565b949350505050565b6000612e2e612e3f565b9050612e3a8282612fde565b919050565b6000604051905090565b600067ffffffffffffffff821115612e6457612e63613114565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612e9057612e8f613114565b5b602082029050602081019050919050565b600082825260208201905092915050565b6000612ebd82612fc2565b9150612ec883612fc2565b925082612ed857612ed7613087565b5b828204905092915050565b6000612eee82612fc2565b9150612ef983612fc2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612f3257612f31613058565b5b828202905092915050565b6000612f4882612fc2565b9150612f5383612fc2565b925082821015612f6657612f65613058565b5b828203905092915050565b6000612f7c82612fa2565b9050919050565b60008115159050919050565b6000819050612f9d82613260565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612fd782612f8f565b9050919050565b612fe78261315c565b810181811067ffffffffffffffff8211171561300657613005613114565b5b80604052505050565b600061301a82612fc2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561304d5761304c613058565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f726465722076616c756573206572726f720000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c6964204f7264657220416d6f756e74000000000000000000000000600082015250565b7f466565732063616e6e6f74206265203000000000000000000000000000000000600082015250565b60028110613271576132706130b6565b5b50565b61327d81612f71565b811461328857600080fd5b50565b61329481612f83565b811461329f57600080fd5b50565b600281106132af57600080fd5b50565b6132bb81612fc2565b81146132c657600080fd5b5056fea264697066735822122093ee57015b30482edeee151b7145946bb9a155fbfbf5a6ce293c4d2623ca3b9f64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DF4D186 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9DF4D186 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xD082EA8C EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x857BA650 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x136 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x2706 JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x2B0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH2 0xCDC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH2 0xDAC JUMP JUMPDEST PUSH2 0x148 PUSH1 0x0 PUSH2 0xE2A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x152 PUSH2 0x2318 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC13 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x193 JUMPI PUSH2 0x192 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI POP PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1D4 JUMPI PUSH2 0x1D3 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ ISZERO JUMPDEST PUSH2 0x21E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP1 PUSH2 0x2C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x92E43D3A DUP8 DUP8 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x28C JUMPI PUSH2 0x28B PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C2 JUMPI PUSH2 0x2C1 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x27A2 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x35C JUMPI POP PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD EQ ISZERO JUMPDEST PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392 SWAP1 PUSH2 0x2C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB310C9B DUP5 PUSH2 0x426 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3F0 JUMPI PUSH2 0x3EF PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x40B JUMPI PUSH2 0x40A PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD PUSH2 0xEEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x49C PUSH2 0x489 PUSH1 0x4 SLOAD PUSH2 0x47B DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x445 JUMPI PUSH2 0x444 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x460 JUMPI PUSH2 0x45F PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0xE0 ADD MLOAD PUSH2 0xF04 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP9 PUSH1 0xC0 ADD MLOAD PUSH2 0xEEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x53A DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x504 JUMPI PUSH2 0x503 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0xEEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x80 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x513FFEDD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x596 JUMPI PUSH2 0x595 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5CC JUMPI PUSH2 0x5CB PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x5E7 JUMPI PUSH2 0x5E6 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x612 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x140 ADD MLOAD DUP1 ISZERO PUSH2 0x769 JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCA8963F1 DUP4 DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x744 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x2775 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x780 JUMPI PUSH2 0x77F PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x79B JUMPI PUSH2 0x79A PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ ISZERO PUSH2 0x8CE JUMPI PUSH2 0x820 DUP6 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x7C0 JUMPI PUSH2 0x7BF PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x7DB JUMPI PUSH2 0x7DA PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x7F6 JUMPI PUSH2 0x7F5 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x811 JUMPI PUSH2 0x810 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH2 0xF30 JUMP JUMPDEST PUSH32 0x3B9846C737E068D8F2CEF4F3047025F465C9BC72BB212E31E6CE53AD6B6A894B DUP6 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x855 JUMPI PUSH2 0x854 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x870 JUMPI PUSH2 0x86F PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x8A6 JUMPI PUSH2 0x8A5 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8C1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9EF JUMP JUMPDEST PUSH2 0x945 DUP6 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x8E5 JUMPI PUSH2 0x8E4 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x900 JUMPI PUSH2 0x8FF PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x91B JUMPI PUSH2 0x91A PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x936 JUMPI PUSH2 0x935 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH2 0x1923 JUMP JUMPDEST PUSH32 0xD6C6C0A27DE1C0F74ADBC5D0061E767A3FC239E8A9D70CF49EBA77FC944EB7FB DUP6 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x97A JUMPI PUSH2 0x979 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x995 JUMPI PUSH2 0x994 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x9B0 JUMPI PUSH2 0x9AF PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x9CB JUMPI PUSH2 0x9CA PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9E6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x80 ADD MLOAD EQ ISZERO PUSH2 0xBFE JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF09CDFA PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF90EF4F2 PUSH1 0x0 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xADD JUMPI PUSH2 0xADC PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF7 PUSH2 0x30E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD EQ PUSH2 0xB0C JUMPI PUSH1 0x1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x60 ADD MLOAD DUP10 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF09CDFA PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP2 SWAP1 PUSH2 0x2BDD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xC0B SWAP1 PUSH2 0x300F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC4C PUSH2 0xDAC JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC98 PUSH2 0xDAC JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xCE4 PUSH2 0xDAC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD30 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD97 SWAP1 PUSH2 0x2C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA9 DUP2 PUSH2 0xE2A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDB4 PUSH2 0x2310 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDD2 PUSH2 0xC1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1F SWAP1 PUSH2 0x2C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xEFC SWAP2 SWAP1 PUSH2 0x2F3D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF12 SWAP2 SWAP1 PUSH2 0x2EE3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x2EB2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1390 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA42963E9 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A38A4FB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x109F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1118 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A38A4FB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x664A1AD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1276 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1358 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1386 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x162C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB98EE419 DUP8 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F3 SWAP3 SWAP2 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1443 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x14A0 DUP6 DUP11 PUSH2 0xEEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x664A1AD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15D6 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1626 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD PUSH2 0x169F PUSH1 0x4 SLOAD PUSH2 0x1691 DUP11 DUP13 PUSH1 0xE0 ADD MLOAD PUSH2 0xF04 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x1761 PUSH1 0x4 SLOAD PUSH2 0x1753 DUP11 DUP11 PUSH2 0xF04 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1782 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAF4E4F0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0xE0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH2 0x100 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH2 0x120 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18CD JUMPI PUSH2 0x18CC PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18EA SWAP3 SWAP2 SWAP1 PUSH2 0x2D7E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1918 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1DA9 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA42963E9 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1986 SWAP2 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x199E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A38A4FB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AB6 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1A38A4FB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BED SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x664A1AD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8D SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CAF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x1D50 PUSH1 0x4 SLOAD PUSH2 0x1D42 DUP12 DUP12 PUSH2 0xF04 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D71 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x206B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB98EE419 DUP8 PUSH1 0xA0 ADD MLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0C SWAP3 SWAP2 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E5C SWAP2 SWAP1 PUSH2 0x27E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x664A1AD6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F41 SWAP2 SWAP1 PUSH2 0x26D9 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F63 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x2016 DUP6 PUSH2 0x2008 PUSH1 0x4 SLOAD PUSH2 0x1FFA DUP14 DUP14 PUSH2 0xF04 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEEE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2037 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2065 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20D5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2103 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x126B9C5D DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2171 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x218B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x219F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAF4E4F0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x220A JUMPI PUSH2 0x2209 PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0xA0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0xE0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH2 0x100 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH2 0x120 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x22BA JUMPI PUSH2 0x22B9 PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D7 SWAP3 SWAP2 SWAP1 PUSH2 0x2D7E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2305 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x233F JUMPI PUSH2 0x233E PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DB PUSH2 0x23D6 DUP5 PUSH2 0x2E49 JUMP JUMPDEST PUSH2 0x2E24 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x23FE JUMPI PUSH2 0x23FD PUSH2 0x314D JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x244C JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2424 JUMPI PUSH2 0x2423 PUSH2 0x3143 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x2431 DUP10 DUP3 PUSH2 0x251E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD SWAP4 POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2401 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2469 PUSH2 0x2464 DUP5 PUSH2 0x2E75 JUMP JUMPDEST PUSH2 0x2E24 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x248C JUMPI PUSH2 0x248B PUSH2 0x314D JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24BC JUMPI DUP2 PUSH2 0x24A2 DUP9 DUP3 PUSH2 0x2682 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x248F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24D5 DUP2 PUSH2 0x3274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24EA DUP2 PUSH2 0x3274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2505 JUMPI PUSH2 0x2504 PUSH2 0x3143 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2515 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x23C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2533 JUMPI PUSH2 0x2532 PUSH2 0x3143 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2543 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2456 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x255B DUP2 PUSH2 0x328B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2570 DUP2 PUSH2 0x32A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x258D JUMPI PUSH2 0x258C PUSH2 0x3148 JUMP JUMPDEST JUMPDEST PUSH2 0x2598 PUSH2 0x160 PUSH2 0x2E24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25A8 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x25BC DUP5 DUP3 DUP6 ADD PUSH2 0x2561 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x25D0 DUP5 DUP3 DUP6 ADD PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x25E4 DUP5 DUP3 DUP6 ADD PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x25F8 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x260C DUP5 DUP3 DUP6 ADD PUSH2 0x24DB JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x2620 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x2634 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x2649 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 PUSH2 0x265F DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x2675 DUP5 DUP3 DUP6 ADD PUSH2 0x254C JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2691 DUP2 PUSH2 0x32B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26A6 DUP2 PUSH2 0x32B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C2 JUMPI PUSH2 0x26C1 PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26D0 DUP5 DUP3 DUP6 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26EF JUMPI PUSH2 0x26EE PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26FD DUP5 DUP3 DUP6 ADD PUSH2 0x24DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x271F JUMPI PUSH2 0x271E PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x272D DUP7 DUP3 DUP8 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x273E DUP7 DUP3 DUP8 ADD PUSH2 0x24C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x275F JUMPI PUSH2 0x275E PUSH2 0x3152 JUMP JUMPDEST JUMPDEST PUSH2 0x276B DUP7 DUP3 DUP8 ADD PUSH2 0x24F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x278B JUMPI PUSH2 0x278A PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2799 DUP5 DUP3 DUP6 ADD PUSH2 0x254C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x180 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BA JUMPI PUSH2 0x27B9 PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27C8 DUP6 DUP3 DUP7 ADD PUSH2 0x2576 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x160 PUSH2 0x27DA DUP6 DUP3 DUP7 ADD PUSH2 0x2697 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27FA JUMPI PUSH2 0x27F9 PUSH2 0x3157 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2808 DUP5 DUP3 DUP6 ADD PUSH2 0x2697 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x281A DUP2 PUSH2 0x2F71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2829 DUP2 PUSH2 0x2F71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2838 DUP2 PUSH2 0x2F83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2847 DUP2 PUSH2 0x2F83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2856 DUP2 PUSH2 0x2FCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2865 DUP2 PUSH2 0x2FCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2878 PUSH1 0x12 DUP4 PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2883 DUP3 PUSH2 0x316D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289B PUSH1 0x26 DUP4 PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x28A6 DUP3 PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28BE PUSH1 0x20 DUP4 PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x28C9 DUP3 PUSH2 0x31E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E1 PUSH1 0x14 DUP4 PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x28EC DUP3 PUSH2 0x320E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2904 PUSH1 0x10 DUP4 PUSH2 0x2EA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x290F DUP3 PUSH2 0x3237 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2931 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2944 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x284D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2957 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x296A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x297D PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2990 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x29A3 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x29B6 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x29CB PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x29E0 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x29F5 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x282F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x180 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2A12 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2A25 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x284D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2A38 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2A4B PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2A5E PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2811 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2A71 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2A84 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2A97 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2AAC PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x2AC1 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x2AD6 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x282F JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x2AEB PUSH2 0x160 DUP6 ADD DUP3 PUSH2 0x2AF1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2AFA DUP2 PUSH2 0x2FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2B09 DUP2 PUSH2 0x2FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B24 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B3F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2B4C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2B59 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2B66 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x283E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B84 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2B91 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2B9E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2BAB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BC9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2BD6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x283E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C0D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x285C JUMP JUMPDEST PUSH2 0x2C1A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2C27 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2820 JUMP JUMPDEST PUSH2 0x2C34 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2820 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C56 DUP2 PUSH2 0x286B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C76 DUP2 PUSH2 0x288E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C96 DUP2 PUSH2 0x28B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CB6 DUP2 PUSH2 0x28D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CD6 DUP2 PUSH2 0x28F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 ADD SWAP1 POP PUSH2 0x2CF3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x291A JUMP JUMPDEST PUSH2 0x2D01 PUSH2 0x160 DUP4 ADD DUP8 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2D0F PUSH2 0x180 DUP4 ADD DUP7 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2D1D PUSH2 0x1A0 DUP4 ADD DUP6 PUSH2 0x283E JUMP JUMPDEST PUSH2 0x2D2B PUSH2 0x1C0 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP PUSH2 0x2D4B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x291A JUMP JUMPDEST PUSH2 0x2D59 PUSH2 0x160 DUP4 ADD DUP7 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2D67 PUSH2 0x180 DUP4 ADD DUP6 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2D75 PUSH2 0x1A0 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 ADD SWAP1 POP PUSH2 0x2D94 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x29FB JUMP JUMPDEST PUSH2 0x2DA2 PUSH2 0x180 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DBE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DD9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2DE6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2820 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E02 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2E0F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B00 JUMP JUMPDEST PUSH2 0x2E1C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2820 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2E PUSH2 0x2E3F JUMP JUMPDEST SWAP1 POP PUSH2 0x2E3A DUP3 DUP3 PUSH2 0x2FDE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E64 JUMPI PUSH2 0x2E63 PUSH2 0x3114 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E90 JUMPI PUSH2 0x2E8F PUSH2 0x3114 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EBD DUP3 PUSH2 0x2FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC8 DUP4 PUSH2 0x2FC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2ED8 JUMPI PUSH2 0x2ED7 PUSH2 0x3087 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EEE DUP3 PUSH2 0x2FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF9 DUP4 PUSH2 0x2FC2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2F32 JUMPI PUSH2 0x2F31 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F48 DUP3 PUSH2 0x2FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F53 DUP4 PUSH2 0x2FC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2F66 JUMPI PUSH2 0x2F65 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7C DUP3 PUSH2 0x2FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2F9D DUP3 PUSH2 0x3260 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD7 DUP3 PUSH2 0x2F8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FE7 DUP3 PUSH2 0x315C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3006 JUMPI PUSH2 0x3005 PUSH2 0x3114 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301A DUP3 PUSH2 0x2FC2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x304D JUMPI PUSH2 0x304C PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465722076616C756573206572726F720000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204F7264657220416D6F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x466565732063616E6E6F74206265203000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x3271 JUMPI PUSH2 0x3270 PUSH2 0x30B6 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x327D DUP2 PUSH2 0x2F71 JUMP JUMPDEST DUP2 EQ PUSH2 0x3288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3294 DUP2 PUSH2 0x2F83 JUMP JUMPDEST DUP2 EQ PUSH2 0x329F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x32AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32BB DUP2 PUSH2 0x2FC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x32C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xEE JUMPI ADD JUMPDEST ADDRESS BASEFEE 0x2E 0xDE 0xEE ISZERO SHL PUSH18 0x45946BB9A155FBFBF5A6CE293C4D2623CA3B SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"256:8973:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:2;;;:::i;:::-;;1093:2954:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9112:114:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8866:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8991:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1093:2954:12:-;1234:28;;:::i;:::-;1273:13;1304:9;1316:1;1304:13;;1299:2741;1323:13;:20;1319:1;:24;1299:2741;;;1414:1;1391:13;1405:1;1391:16;;;;;;;;:::i;:::-;;;;;;;;1408:1;1391:19;;;;;;;;:::i;:::-;;;;;;;;:24;;:52;;;;;1442:1;1419:13;1433:1;1419:16;;;;;;;;:::i;:::-;;;;;;;;1436:1;1419:19;;;;;;;;:::i;:::-;;;;;;;;:24;;1391:52;1365:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;1531:8;;;;;;;;;;;:26;;;1576:7;1602;1628:13;1642:1;1628:16;;;;;;;;:::i;:::-;;;;;;;;1645:1;1628:19;;;;;;;;:::i;:::-;;;;;;;;1666:13;1680:1;1666:16;;;;;;;;:::i;:::-;;;;;;;;1683:1;1666:19;;;;;;;;:::i;:::-;;;;;;;;1531:169;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1514:186;;;;;;;;1760:1;1743:5;:13;;;:18;;:40;;;;;1782:1;1765:5;:13;;;:18;;1743:40;1717:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;1854:8;;;;;;;;;;;:20;;;1893:5;1917:38;1935:13;1949:1;1935:16;;;;;;;;:::i;:::-;;;;;;;;1952:1;1935:19;;;;;;;;:::i;:::-;;;;;;;;1917:5;:13;;;:17;;:38;;;;:::i;:::-;1974:108;2014:49;2054:8;;2014:35;2029:13;2043:1;2029:16;;;;;;;;:::i;:::-;;;;;;;;2046:1;2029:19;;;;;;;;:::i;:::-;;;;;;;;2014:5;:10;;;:14;;:35;;;;:::i;:::-;:39;;:49;;;;:::i;:::-;1974:5;:13;;;:17;;:108;;;;:::i;:::-;2101:5;1854:267;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:38;2172:13;2186:1;2172:16;;;;;;;;:::i;:::-;;;;;;;;2189:1;2172:19;;;;;;;;:::i;:::-;;;;;;;;2154:5;:13;;;:17;;:38;;;;:::i;:::-;2138:5;:13;;:54;;;;;2209:12;2224:11;;;;;;;;;;;:25;;;2268:13;2282:1;2268:16;;;;;;;;:::i;:::-;;;;;;;;2285:1;2268:19;;;;;;;;:::i;:::-;;;;;;;;2306:13;2320:1;2306:16;;;;;;;;:::i;:::-;;;;;;;;2323:1;2306:19;;;;;;;;:::i;:::-;;;;;;;;2344:5;:12;;;2224:147;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2209:162;;2402:1;2394:4;:9;;2386:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2441:15;2459:5;:15;;;:85;;;;;2495:11;;;;;;;;;;;:31;;;2527:4;2533:5;:10;;;2495:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2459:85;2441:103;;2588:1;2565:13;2579:1;2565:16;;;;;;;;:::i;:::-;;;;;;;;2582:1;2565:19;;;;;;;;:::i;:::-;;;;;;;;:24;2561:970;;;2610:204;2646:5;2674:13;2688:1;2674:16;;;;;;;;:::i;:::-;;;;;;;;2691:1;2674:19;;;;;;;;:::i;:::-;;;;;;;;2716:13;2730:1;2716:16;;;;;;;;:::i;:::-;;;;;;;;2733:1;2716:19;;;;;;;;:::i;:::-;;;;;;;;2758:10;2791:4;2610:13;:204::i;:::-;2838:203;2873:5;2901:13;2915:1;2901:16;;;;;;;;:::i;:::-;;;;;;;;2918:1;2901:19;;;;;;;;:::i;:::-;;;;;;;;2943:13;2957:1;2943:16;;;;;;;;:::i;:::-;;;;;;;;2960:1;2943:19;;;;;;;;:::i;:::-;;;;;;;;2985:10;3018:4;2838:203;;;;;;;;;;:::i;:::-;;;;;;;;2561:970;;;3082:205;3119:5;3147:13;3161:1;3147:16;;;;;;;;:::i;:::-;;;;;;;;3164:1;3147:19;;;;;;;;:::i;:::-;;;;;;;;3189:13;3203:1;3189:16;;;;;;;;:::i;:::-;;;;;;;;3206:1;3189:19;;;;;;;;:::i;:::-;;;;;;;;3231:10;3264:4;3082:14;:205::i;:::-;3311:204;3347:5;3375:13;3389:1;3375:16;;;;;;;;:::i;:::-;;;;;;;;3392:1;3375:19;;;;;;;;:::i;:::-;;;;;;;;3417:13;3431:1;3417:16;;;;;;;;:::i;:::-;;;;;;;;3434:1;3417:19;;;;;;;;:::i;:::-;;;;;;;;3459:10;3492:4;3311:204;;;;;;;;;;:::i;:::-;;;;;;;;2561:970;3568:1;3551:5;:13;;;:18;3547:482;;;3590:8;;;;;;;;;;;:18;;;3609:5;3590:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3634:8;;;;;;;;;;;:20;;;3727:1;3704:13;3718:1;3704:16;;;;;;;;:::i;:::-;;;;;;;;3721:1;3704:19;;;;;;;;:::i;:::-;;;;;;;;:24;:123;;3809:18;3704:123;;;3760:17;3704:123;3873:5;:8;;;3904:5;:12;;;3939:5;:12;;;3634:336;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3989:8;;;;;;;;;;;:18;;;4008:4;3989:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3547:482;1350:2690;;1345:3;;;;;:::i;:::-;;;;1299:2741;;;;1223:2824;;1093:2954;;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;9112:114:12:-;1094:13:2;:11;:13::i;:::-;9212:5:12::1;9186:11;;:32;;;;;;;;;;;;;;;;;;9112:114:::0;:::o;8866:117::-;1094:13:2;:11;:13::i;:::-;8960:14:12::1;8944:6;;:31;;;;;;;;;;;;;;;;;;8866:117:::0;:::o;8991:113::-;1094:13:2;:11;:13::i;:::-;9086:9:12::1;9066:8;;:30;;;;;;;;;;;;;;;;;;8991:113:::0;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3122:96:6:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;4055:2476:12:-;4247:10;4243:1302;;;4301:20;4324:11;;;;;;;;;;;:30;;;4355:4;4324:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4301:59;;4375:6;;;;;;;;;;;:28;;;4422:11;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4459:5;:10;;;4488:12;4519:5;4375:164;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4554:6;;;;;;;;;;;:28;;;4601:11;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4638:6;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4676:12;4707:4;4554:172;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4779:6;;;;;;;;;;;:28;;;4826:5;:12;;;4857:5;:10;;;4886:7;4912:4;4779:152;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4259:684;4243:1302;;;4964:27;4994:11;;;;;;;;;;;:32;;;5045:5;:12;;;5076:4;4994:101;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4964:131;;5166:6;;;;;;;;;;;:28;;;5213:5;:12;;;5244:5;:10;;;5273:32;5285:19;5273:7;:11;;:32;;;;:::i;:::-;5324:4;5166:177;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5360:6;;;;;;;;;;;:28;;;5407:5;:12;;;5438:6;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5476;5514:4;5360:173;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4949:596;4243:1302;5599:6;;;;;;;;;;;:32;;;5646:5;:10;;;5671:5;:12;;;5698:39;5728:8;;5699:23;5714:7;5699:5;:10;;;:14;;:23;;;;:::i;:::-;5698:29;;:39;;;;:::i;:::-;5752:5;5599:169;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5857:6;;;;;;;;;;;:28;;;5900:5;:12;;;5927:5;:10;;;5952:34;5977:8;;5953:18;5963:7;5953:5;:9;;:18;;;;:::i;:::-;5952:24;;:34;;;;:::i;:::-;6001:5;5857:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6028:8;;;;;;;;;;;:27;;;6070:401;;;;;;;;6110:5;:8;;;6070:401;;;;6137:17;6070:401;;;;;;;;:::i;:::-;;;;;;6173:5;:10;;;6070:401;;;;;;6202:5;:12;;;6070:401;;;;;;6233:5;:12;;;6070:401;;;;;;6264:7;6070:401;;;;6290:5;6070:401;;;;6314:5;:10;;;6070:401;;;;6343:5;:21;;;6070:401;;;;6383:5;:21;;;6070:401;;;;6423:10;6070:401;;;;;;6452:4;6070:401;;;6494:17;6486:26;;;;;;;;:::i;:::-;;6028:495;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4055:2476;;;;;:::o;6539:2319::-;6732:10;6728:1357;;;6786:20;6809:11;;;;;;;;;;;:30;;;6840:4;6809:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6786:59;;6860:6;;;;;;;;;;;:28;;;6907:11;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6944:5;:10;;;6973:12;7004:5;6860:164;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7039:6;;;;;;;;;;;:28;;;7086:11;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7123:6;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7161:12;7192:4;7039:172;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7264:6;;;;;;;;;;;:28;;;7311:5;:12;;;7342:5;:10;;;7371:34;7396:8;;7372:18;7382:7;7372:5;:9;;:18;;;;:::i;:::-;7371:24;;:34;;;;:::i;:::-;7424:4;7264:179;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6744:711;6728:1357;;;7476:28;7507:11;;;;;;;;;;;:32;;;7558:5;:12;;;7589:4;7507:101;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7476:132;;7623:6;;;;;;;;;;;:28;;;7670:5;:12;;;7701:6;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7739:20;7778:4;7623:174;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7868:6;;;;;;;;;;;:28;;;7915:5;:12;;;7946:5;:10;;;7975:60;8014:20;7975:34;8000:8;;7976:18;7986:7;7976:5;:9;;:18;;;;:::i;:::-;7975:24;;:34;;;;:::i;:::-;:38;;:60;;;;:::i;:::-;8054:4;7868:205;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7461:624;6728:1357;8097:6;;;;;;;;;;;:32;;;8144:5;:10;;;8169:5;:12;;;8196:7;8218:5;8097:137;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8270:6;;;;;;;;;;;:28;;;8299:5;:12;;;8313:5;:10;;;8325:7;8334:5;8270:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8353:8;;;;;;;;;;;:27;;;8395:402;;;;;;;;8435:5;:8;;;8395:402;;;;8462:18;8395:402;;;;;;;;:::i;:::-;;;;;;8499:5;:10;;;8395:402;;;;;;8528:5;:12;;;8395:402;;;;;;8559:5;:12;;;8395:402;;;;;;8590:7;8395:402;;;;8616:5;8395:402;;;;8640:5;:10;;;8395:402;;;;8669:5;:21;;;8395:402;;;;8709:5;:21;;;8395:402;;;;8749:10;8395:402;;;;;;8778:4;8395:402;;;8820:18;8812:27;;;;;;;;:::i;:::-;;8353:497;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6539:2319;;;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;26:1002:17:-;147:5;172:106;188:89;270:6;188:89;:::i;:::-;172:106;:::i;:::-;163:115;;298:5;327:6;320:5;313:21;361:4;354:5;350:16;343:23;;387:6;437:3;429:4;421:6;417:17;412:3;408:27;405:36;402:143;;;456:79;;:::i;:::-;402:143;569:1;554:468;579:6;576:1;573:13;554:468;;;661:3;648:17;697:18;684:11;681:35;678:122;;;719:79;;:::i;:::-;678:122;843:11;835:6;831:24;881:62;939:3;927:10;881:62;:::i;:::-;876:3;869:75;973:4;968:3;964:14;957:21;;1007:4;1002:3;998:14;991:21;;614:408;;601:1;598;594:9;589:14;;554:468;;;558:14;153:875;;26:1002;;;;;:::o;1051:722::-;1147:5;1172:81;1188:64;1245:6;1188:64;:::i;:::-;1172:81;:::i;:::-;1163:90;;1273:5;1302:6;1295:5;1288:21;1336:4;1329:5;1325:16;1318:23;;1362:6;1412:3;1404:4;1396:6;1392:17;1387:3;1383:27;1380:36;1377:143;;;1431:79;;:::i;:::-;1377:143;1544:1;1529:238;1554:6;1551:1;1548:13;1529:238;;;1622:3;1651:37;1684:3;1672:10;1651:37;:::i;:::-;1646:3;1639:50;1718:4;1713:3;1709:14;1702:21;;1752:4;1747:3;1743:14;1736:21;;1589:178;1576:1;1573;1569:9;1564:14;;1529:238;;;1533:14;1153:620;;1051:722;;;;;:::o;1779:139::-;1825:5;1863:6;1850:20;1841:29;;1879:33;1906:5;1879:33;:::i;:::-;1779:139;;;;:::o;1924:143::-;1981:5;2012:6;2006:13;1997:22;;2028:33;2055:5;2028:33;:::i;:::-;1924:143;;;;:::o;2092:420::-;2188:5;2237:3;2230:4;2222:6;2218:17;2214:27;2204:122;;2245:79;;:::i;:::-;2204:122;2362:6;2349:20;2387:119;2502:3;2494:6;2487:4;2479:6;2475:17;2387:119;:::i;:::-;2378:128;;2194:318;2092:420;;;;:::o;2535:370::-;2606:5;2655:3;2648:4;2640:6;2636:17;2632:27;2622:122;;2663:79;;:::i;:::-;2622:122;2780:6;2767:20;2805:94;2895:3;2887:6;2880:4;2872:6;2868:17;2805:94;:::i;:::-;2796:103;;2612:293;2535:370;;;;:::o;2911:137::-;2965:5;2996:6;2990:13;2981:22;;3012:30;3036:5;3012:30;:::i;:::-;2911:137;;;;:::o;3054:161::-;3120:5;3151:6;3145:13;3136:22;;3167:42;3203:5;3167:42;:::i;:::-;3054:161;;;;:::o;3251:2212::-;3335:5;3379:6;3367:9;3362:3;3358:19;3354:32;3351:119;;;3389:79;;:::i;:::-;3351:119;3488:23;3504:6;3488:23;:::i;:::-;3479:32;;3568:1;3608:60;3664:3;3655:6;3644:9;3640:22;3608:60;:::i;:::-;3601:4;3594:5;3590:16;3583:86;3521:159;3739:2;3780:69;3845:3;3836:6;3825:9;3821:22;3780:69;:::i;:::-;3773:4;3766:5;3762:16;3755:95;3690:171;3920:2;3961:60;4017:3;4008:6;3997:9;3993:22;3961:60;:::i;:::-;3954:4;3947:5;3943:16;3936:86;3871:162;4094:2;4135:60;4191:3;4182:6;4171:9;4167:22;4135:60;:::i;:::-;4128:4;4121:5;4117:16;4110:86;4043:164;4269:3;4311:60;4367:3;4358:6;4347:9;4343:22;4311:60;:::i;:::-;4304:4;4297:5;4293:16;4286:86;4217:166;4444:3;4486:60;4542:3;4533:6;4522:9;4518:22;4486:60;:::i;:::-;4479:4;4472:5;4468:16;4461:86;4393:165;4620:3;4662:60;4718:3;4709:6;4698:9;4694:22;4662:60;:::i;:::-;4655:4;4648:5;4644:16;4637:86;4568:166;4793:3;4835:60;4891:3;4882:6;4871:9;4867:22;4835:60;:::i;:::-;4828:4;4821:5;4817:16;4810:86;4744:163;4977:3;5021:60;5077:3;5068:6;5057:9;5053:22;5021:60;:::i;:::-;5012:6;5005:5;5001:18;4994:88;4917:176;5163:3;5207:60;5263:3;5254:6;5243:9;5239:22;5207:60;:::i;:::-;5198:6;5191:5;5187:18;5180:88;5103:176;5343:3;5387:57;5440:3;5431:6;5420:9;5416:22;5387:57;:::i;:::-;5378:6;5371:5;5367:18;5360:85;5289:167;3251:2212;;;;:::o;5469:139::-;5515:5;5553:6;5540:20;5531:29;;5569:33;5596:5;5569:33;:::i;:::-;5469:139;;;;:::o;5614:143::-;5671:5;5702:6;5696:13;5687:22;;5718:33;5745:5;5718:33;:::i;:::-;5614:143;;;;:::o;5763:329::-;5822:6;5871:2;5859:9;5850:7;5846:23;5842:32;5839:119;;;5877:79;;:::i;:::-;5839:119;5997:1;6022:53;6067:7;6058:6;6047:9;6043:22;6022:53;:::i;:::-;6012:63;;5968:117;5763:329;;;;:::o;6098:351::-;6168:6;6217:2;6205:9;6196:7;6192:23;6188:32;6185:119;;;6223:79;;:::i;:::-;6185:119;6343:1;6368:64;6424:7;6415:6;6404:9;6400:22;6368:64;:::i;:::-;6358:74;;6314:128;6098:351;;;;:::o;6455:879::-;6582:6;6590;6598;6647:2;6635:9;6626:7;6622:23;6618:32;6615:119;;;6653:79;;:::i;:::-;6615:119;6773:1;6798:53;6843:7;6834:6;6823:9;6819:22;6798:53;:::i;:::-;6788:63;;6744:117;6900:2;6926:53;6971:7;6962:6;6951:9;6947:22;6926:53;:::i;:::-;6916:63;;6871:118;7056:2;7045:9;7041:18;7028:32;7087:18;7079:6;7076:30;7073:117;;;7109:79;;:::i;:::-;7073:117;7214:103;7309:7;7300:6;7289:9;7285:22;7214:103;:::i;:::-;7204:113;;6999:328;6455:879;;;;;:::o;7340:345::-;7407:6;7456:2;7444:9;7435:7;7431:23;7427:32;7424:119;;;7462:79;;:::i;:::-;7424:119;7582:1;7607:61;7660:7;7651:6;7640:9;7636:22;7607:61;:::i;:::-;7597:71;;7553:125;7340:345;;;;:::o;7691:557::-;7794:6;7802;7851:3;7839:9;7830:7;7826:23;7822:33;7819:120;;;7858:79;;:::i;:::-;7819:120;7978:1;8003:88;8083:7;8074:6;8063:9;8059:22;8003:88;:::i;:::-;7993:98;;7949:152;8140:3;8167:64;8223:7;8214:6;8203:9;8199:22;8167:64;:::i;:::-;8157:74;;8111:130;7691:557;;;;;:::o;8254:351::-;8324:6;8373:2;8361:9;8352:7;8348:23;8344:32;8341:119;;;8379:79;;:::i;:::-;8341:119;8499:1;8524:64;8580:7;8571:6;8560:9;8556:22;8524:64;:::i;:::-;8514:74;;8470:128;8254:351;;;;:::o;8611:108::-;8688:24;8706:5;8688:24;:::i;:::-;8683:3;8676:37;8611:108;;:::o;8725:118::-;8812:24;8830:5;8812:24;:::i;:::-;8807:3;8800:37;8725:118;;:::o;8849:99::-;8920:21;8935:5;8920:21;:::i;:::-;8915:3;8908:34;8849:99;;:::o;8954:109::-;9035:21;9050:5;9035:21;:::i;:::-;9030:3;9023:34;8954:109;;:::o;9069:135::-;9153:44;9191:5;9153:44;:::i;:::-;9148:3;9141:57;9069:135;;:::o;9210:145::-;9304:44;9342:5;9304:44;:::i;:::-;9299:3;9292:57;9210:145;;:::o;9361:366::-;9503:3;9524:67;9588:2;9583:3;9524:67;:::i;:::-;9517:74;;9600:93;9689:3;9600:93;:::i;:::-;9718:2;9713:3;9709:12;9702:19;;9361:366;;;:::o;9733:::-;9875:3;9896:67;9960:2;9955:3;9896:67;:::i;:::-;9889:74;;9972:93;10061:3;9972:93;:::i;:::-;10090:2;10085:3;10081:12;10074:19;;9733:366;;;:::o;10105:::-;10247:3;10268:67;10332:2;10327:3;10268:67;:::i;:::-;10261:74;;10344:93;10433:3;10344:93;:::i;:::-;10462:2;10457:3;10453:12;10446:19;;10105:366;;;:::o;10477:::-;10619:3;10640:67;10704:2;10699:3;10640:67;:::i;:::-;10633:74;;10716:93;10805:3;10716:93;:::i;:::-;10834:2;10829:3;10825:12;10818:19;;10477:366;;;:::o;10849:::-;10991:3;11012:67;11076:2;11071:3;11012:67;:::i;:::-;11005:74;;11088:93;11177:3;11088:93;:::i;:::-;11206:2;11201:3;11197:12;11190:19;;10849:366;;;:::o;11277:2121::-;11422:6;11417:3;11413:16;11509:4;11502:5;11498:16;11492:23;11528:63;11585:4;11580:3;11576:14;11562:12;11528:63;:::i;:::-;11439:162;11683:4;11676:5;11672:16;11666:23;11702:70;11766:4;11761:3;11757:14;11743:12;11702:70;:::i;:::-;11611:171;11864:4;11857:5;11853:16;11847:23;11883:63;11940:4;11935:3;11931:14;11917:12;11883:63;:::i;:::-;11792:164;12040:4;12033:5;12029:16;12023:23;12059:63;12116:4;12111:3;12107:14;12093:12;12059:63;:::i;:::-;11966:166;12217:4;12210:5;12206:16;12200:23;12236:63;12293:4;12288:3;12284:14;12270:12;12236:63;:::i;:::-;12142:167;12393:4;12386:5;12382:16;12376:23;12412:63;12469:4;12464:3;12460:14;12446:12;12412:63;:::i;:::-;12319:166;12570:4;12563:5;12559:16;12553:23;12589:63;12646:4;12641:3;12637:14;12623:12;12589:63;:::i;:::-;12495:167;12744:4;12737:5;12733:16;12727:23;12763:63;12820:4;12815:3;12811:14;12797:12;12763:63;:::i;:::-;12672:164;12929:6;12922:5;12918:18;12912:25;12950:65;13007:6;13002:3;12998:16;12984:12;12950:65;:::i;:::-;12846:179;13118:6;13111:5;13107:18;13101:25;13139:65;13196:6;13191:3;13187:16;13173:12;13139:65;:::i;:::-;13035:179;13301:6;13294:5;13290:18;13284:25;13322:59;13373:6;13368:3;13364:16;13350:12;13322:59;:::i;:::-;13224:167;11391:2007;11277:2121;;:::o;13472:2330::-;13629:6;13624:3;13620:16;13716:4;13709:5;13705:16;13699:23;13735:63;13792:4;13787:3;13783:14;13769:12;13735:63;:::i;:::-;13646:162;13890:4;13883:5;13879:16;13873:23;13909:70;13973:4;13968:3;13964:14;13950:12;13909:70;:::i;:::-;13818:171;14071:4;14064:5;14060:16;14054:23;14090:63;14147:4;14142:3;14138:14;14124:12;14090:63;:::i;:::-;13999:164;14247:4;14240:5;14236:16;14230:23;14266:63;14323:4;14318:3;14314:14;14300:12;14266:63;:::i;:::-;14173:166;14423:4;14416:5;14412:16;14406:23;14442:63;14499:4;14494:3;14490:14;14476:12;14442:63;:::i;:::-;14349:166;14605:4;14598:5;14594:16;14588:23;14624:63;14681:4;14676:3;14672:14;14658:12;14624:63;:::i;:::-;14525:172;14783:4;14776:5;14772:16;14766:23;14802:63;14859:4;14854:3;14850:14;14836:12;14802:63;:::i;:::-;14707:168;14965:4;14958:5;14954:16;14948:23;14984:63;15041:4;15036:3;15032:14;15018:12;14984:63;:::i;:::-;14885:172;15150:6;15143:5;15139:18;15133:25;15171:65;15228:6;15223:3;15219:16;15205:12;15171:65;:::i;:::-;15067:179;15339:6;15332:5;15328:18;15322:25;15360:65;15417:6;15412:3;15408:16;15394:12;15360:65;:::i;:::-;15256:179;15523:6;15516:5;15512:18;15506:25;15544:59;15595:6;15590:3;15586:16;15572:12;15544:59;:::i;:::-;15445:168;15699:6;15692:5;15688:18;15682:25;15720:65;15777:6;15772:3;15768:16;15754:12;15720:65;:::i;:::-;15623:172;13598:2204;13472:2330;;:::o;15808:108::-;15885:24;15903:5;15885:24;:::i;:::-;15880:3;15873:37;15808:108;;:::o;15922:118::-;16009:24;16027:5;16009:24;:::i;:::-;16004:3;15997:37;15922:118;;:::o;16046:222::-;16139:4;16177:2;16166:9;16162:18;16154:26;;16190:71;16258:1;16247:9;16243:17;16234:6;16190:71;:::i;:::-;16046:222;;;;:::o;16274:541::-;16445:4;16483:3;16472:9;16468:19;16460:27;;16497:71;16565:1;16554:9;16550:17;16541:6;16497:71;:::i;:::-;16578:72;16646:2;16635:9;16631:18;16622:6;16578:72;:::i;:::-;16660;16728:2;16717:9;16713:18;16704:6;16660:72;:::i;:::-;16742:66;16804:2;16793:9;16789:18;16780:6;16742:66;:::i;:::-;16274:541;;;;;;;:::o;16821:553::-;16998:4;17036:3;17025:9;17021:19;17013:27;;17050:71;17118:1;17107:9;17103:17;17094:6;17050:71;:::i;:::-;17131:72;17199:2;17188:9;17184:18;17175:6;17131:72;:::i;:::-;17213;17281:2;17270:9;17266:18;17257:6;17213:72;:::i;:::-;17295;17363:2;17352:9;17348:18;17339:6;17295:72;:::i;:::-;16821:553;;;;;;;:::o;17380:332::-;17501:4;17539:2;17528:9;17524:18;17516:26;;17552:71;17620:1;17609:9;17605:17;17596:6;17552:71;:::i;:::-;17633:72;17701:2;17690:9;17686:18;17677:6;17633:72;:::i;:::-;17380:332;;;;;:::o;17718:210::-;17805:4;17843:2;17832:9;17828:18;17820:26;;17856:65;17918:1;17907:9;17903:17;17894:6;17856:65;:::i;:::-;17718:210;;;;:::o;17934:567::-;18118:4;18156:3;18145:9;18141:19;18133:27;;18170:78;18245:1;18234:9;18230:17;18221:6;18170:78;:::i;:::-;18258:72;18326:2;18315:9;18311:18;18302:6;18258:72;:::i;:::-;18340;18408:2;18397:9;18393:18;18384:6;18340:72;:::i;:::-;18422;18490:2;18479:9;18475:18;18466:6;18422:72;:::i;:::-;17934:567;;;;;;;:::o;18507:419::-;18673:4;18711:2;18700:9;18696:18;18688:26;;18760:9;18754:4;18750:20;18746:1;18735:9;18731:17;18724:47;18788:131;18914:4;18788:131;:::i;:::-;18780:139;;18507:419;;;:::o;18932:::-;19098:4;19136:2;19125:9;19121:18;19113:26;;19185:9;19179:4;19175:20;19171:1;19160:9;19156:17;19149:47;19213:131;19339:4;19213:131;:::i;:::-;19205:139;;18932:419;;;:::o;19357:::-;19523:4;19561:2;19550:9;19546:18;19538:26;;19610:9;19604:4;19600:20;19596:1;19585:9;19581:17;19574:47;19638:131;19764:4;19638:131;:::i;:::-;19630:139;;19357:419;;;:::o;19782:::-;19948:4;19986:2;19975:9;19971:18;19963:26;;20035:9;20029:4;20025:20;20021:1;20010:9;20006:17;19999:47;20063:131;20189:4;20063:131;:::i;:::-;20055:139;;19782:419;;;:::o;20207:::-;20373:4;20411:2;20400:9;20396:18;20388:26;;20460:9;20454:4;20450:20;20446:1;20435:9;20431:17;20424:47;20488:131;20614:4;20488:131;:::i;:::-;20480:139;;20207:419;;;:::o;20632:751::-;20879:4;20917:3;20906:9;20902:19;20894:27;;20931:119;21047:1;21036:9;21032:17;21023:6;20931:119;:::i;:::-;21060:73;21128:3;21117:9;21113:19;21104:6;21060:73;:::i;:::-;21143;21211:3;21200:9;21196:19;21187:6;21143:73;:::i;:::-;21226:67;21288:3;21277:9;21273:19;21264:6;21226:67;:::i;:::-;21303:73;21371:3;21360:9;21356:19;21347:6;21303:73;:::i;:::-;20632:751;;;;;;;;:::o;21389:652::-;21614:4;21652:3;21641:9;21637:19;21629:27;;21666:119;21782:1;21771:9;21767:17;21758:6;21666:119;:::i;:::-;21795:73;21863:3;21852:9;21848:19;21839:6;21795:73;:::i;:::-;21878;21946:3;21935:9;21931:19;21922:6;21878:73;:::i;:::-;21961;22029:3;22018:9;22014:19;22005:6;21961:73;:::i;:::-;21389:652;;;;;;;:::o;22047:454::-;22228:4;22266:3;22255:9;22251:19;22243:27;;22280:131;22408:1;22397:9;22393:17;22384:6;22280:131;:::i;:::-;22421:73;22489:3;22478:9;22474:19;22465:6;22421:73;:::i;:::-;22047:454;;;;;:::o;22507:222::-;22600:4;22638:2;22627:9;22623:18;22615:26;;22651:71;22719:1;22708:9;22704:17;22695:6;22651:71;:::i;:::-;22507:222;;;;:::o;22735:332::-;22856:4;22894:2;22883:9;22879:18;22871:26;;22907:71;22975:1;22964:9;22960:17;22951:6;22907:71;:::i;:::-;22988:72;23056:2;23045:9;23041:18;23032:6;22988:72;:::i;:::-;22735:332;;;;;:::o;23073:442::-;23222:4;23260:2;23249:9;23245:18;23237:26;;23273:71;23341:1;23330:9;23326:17;23317:6;23273:71;:::i;:::-;23354:72;23422:2;23411:9;23407:18;23398:6;23354:72;:::i;:::-;23436;23504:2;23493:9;23489:18;23480:6;23436:72;:::i;:::-;23073:442;;;;;;:::o;23521:129::-;23555:6;23582:20;;:::i;:::-;23572:30;;23611:33;23639:4;23631:6;23611:33;:::i;:::-;23521:129;;;:::o;23656:75::-;23689:6;23722:2;23716:9;23706:19;;23656:75;:::o;23737:336::-;23839:4;23929:18;23921:6;23918:30;23915:56;;;23951:18;;:::i;:::-;23915:56;24001:4;23993:6;23989:17;23981:25;;24061:4;24055;24051:15;24043:23;;23737:336;;;:::o;24079:311::-;24156:4;24246:18;24238:6;24235:30;24232:56;;;24268:18;;:::i;:::-;24232:56;24318:4;24310:6;24306:17;24298:25;;24378:4;24372;24368:15;24360:23;;24079:311;;;:::o;24396:169::-;24480:11;24514:6;24509:3;24502:19;24554:4;24549:3;24545:14;24530:29;;24396:169;;;;:::o;24571:185::-;24611:1;24628:20;24646:1;24628:20;:::i;:::-;24623:25;;24662:20;24680:1;24662:20;:::i;:::-;24657:25;;24701:1;24691:35;;24706:18;;:::i;:::-;24691:35;24748:1;24745;24741:9;24736:14;;24571:185;;;;:::o;24762:348::-;24802:7;24825:20;24843:1;24825:20;:::i;:::-;24820:25;;24859:20;24877:1;24859:20;:::i;:::-;24854:25;;25047:1;24979:66;24975:74;24972:1;24969:81;24964:1;24957:9;24950:17;24946:105;24943:131;;;25054:18;;:::i;:::-;24943:131;25102:1;25099;25095:9;25084:20;;24762:348;;;;:::o;25116:191::-;25156:4;25176:20;25194:1;25176:20;:::i;:::-;25171:25;;25210:20;25228:1;25210:20;:::i;:::-;25205:25;;25249:1;25246;25243:8;25240:34;;;25254:18;;:::i;:::-;25240:34;25299:1;25296;25292:9;25284:17;;25116:191;;;;:::o;25313:96::-;25350:7;25379:24;25397:5;25379:24;:::i;:::-;25368:35;;25313:96;;;:::o;25415:90::-;25449:7;25492:5;25485:13;25478:21;25467:32;;25415:90;;;:::o;25511:129::-;25557:7;25586:5;25575:16;;25592:42;25628:5;25592:42;:::i;:::-;25511:129;;;:::o;25646:126::-;25683:7;25723:42;25716:5;25712:54;25701:65;;25646:126;;;:::o;25778:77::-;25815:7;25844:5;25833:16;;25778:77;;;:::o;25861:129::-;25918:9;25951:33;25978:5;25951:33;:::i;:::-;25938:46;;25861:129;;;:::o;25996:281::-;26079:27;26101:4;26079:27;:::i;:::-;26071:6;26067:40;26209:6;26197:10;26194:22;26173:18;26161:10;26158:34;26155:62;26152:88;;;26220:18;;:::i;:::-;26152:88;26260:10;26256:2;26249:22;26039:238;25996:281;;:::o;26283:233::-;26322:3;26345:24;26363:5;26345:24;:::i;:::-;26336:33;;26391:66;26384:5;26381:77;26378:103;;;26461:18;;:::i;:::-;26378:103;26508:1;26501:5;26497:13;26490:20;;26283:233;;;:::o;26522:180::-;26570:77;26567:1;26560:88;26667:4;26664:1;26657:15;26691:4;26688:1;26681:15;26708:180;26756:77;26753:1;26746:88;26853:4;26850:1;26843:15;26877:4;26874:1;26867:15;26894:180;26942:77;26939:1;26932:88;27039:4;27036:1;27029:15;27063:4;27060:1;27053:15;27080:180;27128:77;27125:1;27118:88;27225:4;27222:1;27215:15;27249:4;27246:1;27239:15;27266:180;27314:77;27311:1;27304:88;27411:4;27408:1;27401:15;27435:4;27432:1;27425:15;27452:117;27561:1;27558;27551:12;27575:117;27684:1;27681;27674:12;27821:117;27930:1;27927;27920:12;27944:117;28053:1;28050;28043:12;28067:117;28176:1;28173;28166:12;28190:102;28231:6;28282:2;28278:7;28273:2;28266:5;28262:14;28258:28;28248:38;;28190:102;;;:::o;28298:168::-;28438:20;28434:1;28426:6;28422:14;28415:44;28298:168;:::o;28472:225::-;28612:34;28608:1;28600:6;28596:14;28589:58;28681:8;28676:2;28668:6;28664:15;28657:33;28472:225;:::o;28703:182::-;28843:34;28839:1;28831:6;28827:14;28820:58;28703:182;:::o;28891:170::-;29031:22;29027:1;29019:6;29015:14;29008:46;28891:170;:::o;29067:166::-;29207:18;29203:1;29195:6;29191:14;29184:42;29067:166;:::o;29239:114::-;29321:1;29314:5;29311:12;29301:46;;29327:18;;:::i;:::-;29301:46;29239:114;:::o;29359:122::-;29432:24;29450:5;29432:24;:::i;:::-;29425:5;29422:35;29412:63;;29471:1;29468;29461:12;29412:63;29359:122;:::o;29487:116::-;29557:21;29572:5;29557:21;:::i;:::-;29550:5;29547:32;29537:60;;29593:1;29590;29583:12;29537:60;29487:116;:::o;29609:108::-;29691:1;29684:5;29681:12;29671:40;;29707:1;29704;29697:12;29671:40;29609:108;:::o;29723:122::-;29796:24;29814:5;29796:24;:::i;:::-;29789:5;29786:35;29776:63;;29835:1;29832;29825:12;29776:63;29723:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2611000","executionCost":"infinite","totalCost":"infinite"},"external":{"fillOrder(address,address,uint256[][])":"infinite","owner()":"2567","renounceOwnership()":"30399","setExchangeAddress(address)":"27030","setTradingFeesAddress(address)":"26986","setWalletAddress(address)":"27008","transferOwnership(address)":"30813"},"internal":{"fillBuyOrders(struct Exchange._Order memory,uint256,uint256,bool,uint256)":"infinite","fillSellOrders(struct Exchange._Order memory,uint256,uint256,bool,uint256)":"infinite"}},"methodIdentifiers":{"fillOrder(address,address,uint256[][])":"857ba650","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setExchangeAddress(address)":"d082ea8c","setTradingFeesAddress(address)":"9df4d186","setWalletAddress(address)":"ac1a386a","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Exchange\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fees\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_Wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Exchange._Order\",\"name\":\"remainingOrder\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillBuyRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"fillBuyOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Exchange._Order\",\"name\":\"remainingOrder\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillSellRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"fillSellOrder\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"_ordersToFill\",\"type\":\"uint256[][]\"}],\"name\":\"fillOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchange\",\"type\":\"address\"}],\"name\":\"setExchangeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fees\",\"type\":\"address\"}],\"name\":\"setTradingFeesAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Walletaddress\",\"type\":\"address\"}],\"name\":\"setWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fillLogic.sol\":\"fillLogic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(\\r\\n        address account\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(\\r\\n            currentAllowance >= subtractedValue,\\r\\n            \\\"ERC20: decreased allowance below zero\\\"\\r\\n        );\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(\\r\\n            fromBalance >= amount,\\r\\n            \\\"ERC20: transfer amount exceeds balance\\\"\\r\\n        );\\r\\n        unchecked {\\r\\n            _balances[from] = fromBalance - amount;\\r\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\r\\n            // decrementing then incrementing.\\r\\n            _balances[to] += amount;\\r\\n        }\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply += amount;\\r\\n        unchecked {\\r\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\r\\n            _balances[account] += amount;\\r\\n        }\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = accountBalance - amount;\\r\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\r\\n            _totalSupply -= amount;\\r\\n        }\\r\\n\\r\\n        emit Transfer(account, address(0), amount);\\r\\n\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(\\r\\n                currentAllowance >= amount,\\r\\n                \\\"ERC20: insufficient allowance\\\"\\r\\n            );\\r\\n            unchecked {\\r\\n                _approve(owner, spender, currentAllowance - amount);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0x98cae7e35c3cb1f12ab2eeee2506facde33e4ee4292ca6d6ebdc93a62523c256\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Exchange is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    PriceChecker priceChecker;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    //Token Address List available in DEX\\r\\n    _tokenInfo[] public tokenList;\\r\\n\\r\\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\\r\\n    mapping(address => mapping(address => mapping(uint256 => _Order[])))\\r\\n        public s_orderBook;\\r\\n\\r\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\r\\n        public s_filledOrders;\\r\\n\\r\\n    uint256 public s_orderId = 0;\\r\\n    bool private s_isManual = true;\\r\\n\\r\\n    struct _tokenInfo {\\r\\n        address add;\\r\\n        uint256 decimals;\\r\\n    }\\r\\n\\r\\n    struct _fillOrderValues {\\r\\n        uint256 rate;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\r\\n    struct _Order {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        uint256 amountA;\\r\\n        address tokenB;\\r\\n        uint256 amountB;\\r\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool waiveFees;\\r\\n    }\\r\\n\\r\\n    _Order public orderStruct;\\r\\n\\r\\n    //For any order that is filled even if it is partially filled or fully filled\\r\\n    struct _filledOrder {\\r\\n        uint256 id;\\r\\n        Side side;\\r\\n        address user;\\r\\n        address tokenA;\\r\\n        address tokenB;\\r\\n        uint256 amountFilled;\\r\\n        uint256 fillRate;\\r\\n        uint256 originalRate;\\r\\n        uint256 originalAmountA;\\r\\n        uint256 originalAmountB;\\r\\n        bool feesWaived;\\r\\n        uint256 feesPaid; //in terms of USD\\r\\n    }\\r\\n\\r\\n    enum Side {\\r\\n        BUY,\\r\\n        SELL\\r\\n    }\\r\\n\\r\\n    //add events\\r\\n    /// @notice Event when an order is placed on an exchange\\r\\n    event Order(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    /// @notice Event when an order is cancelled\\r\\n    event Cancel(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        uint256 amountA,\\r\\n        address tokenB,\\r\\n        uint256 amountB,\\r\\n        uint256 rate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool waiveFees\\r\\n    );\\r\\n\\r\\n    event filledOrder(\\r\\n        uint256 id,\\r\\n        Side side,\\r\\n        address user,\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 amountFilled,\\r\\n        uint256 fillRate,\\r\\n        uint256 originalRate,\\r\\n        uint256 originalAmountA,\\r\\n        uint256 originalAmountB,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\r\\n        wallet = Wallet(_wallet);\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        priceChecker = PriceChecker(_priceChecker);\\r\\n    }\\r\\n\\r\\n    function createLimitBuyOrder(\\r\\n        // TokenA/TokenB\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\r\\n            ) >= _amountB,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenB, _amountB, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.BUY,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.BUY,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function createLimitSellOrder(\\r\\n        address _tokenA,\\r\\n        uint256 _amountA,\\r\\n        address _tokenB,\\r\\n        uint256 _amountB,\\r\\n        uint256 _rate,\\r\\n        bool _waiveFees\\r\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\r\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\r\\n        require(\\r\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\r\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\r\\n            ) >= _amountA,\\r\\n            \\\"Insufficient Funds\\\"\\r\\n        );\\r\\n\\r\\n        //Lock the funds (tokens) in the wallet\\r\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenA, _amountA, true);\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\\r\\n            _Order(\\r\\n                s_orderId,\\r\\n                Side.SELL,\\r\\n                msg.sender,\\r\\n                _tokenA,\\r\\n                _amountA,\\r\\n                _tokenB,\\r\\n                _amountB,\\r\\n                _rate,\\r\\n                _amountA,\\r\\n                _amountB,\\r\\n                _waiveFees\\r\\n            )\\r\\n        );\\r\\n\\r\\n        emit Order(\\r\\n            s_orderId,\\r\\n            Side.SELL,\\r\\n            msg.sender,\\r\\n            _tokenA,\\r\\n            _amountA,\\r\\n            _tokenB,\\r\\n            _amountB,\\r\\n            _rate,\\r\\n            _amountA,\\r\\n            _amountB,\\r\\n            _waiveFees\\r\\n        );\\r\\n\\r\\n        s_orderId = s_orderId.add(1);\\r\\n    }\\r\\n\\r\\n    function cancelOrder(\\r\\n        Side side,\\r\\n        uint256 _id,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    )\\r\\n        public\\r\\n        validOrder(_id, side, _tokenA, _tokenB)\\r\\n        validToken(_tokenA)\\r\\n        validToken(_tokenB)\\r\\n    {\\r\\n        uint256 _side = uint256(side);\\r\\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\\r\\n        uint256 size = _order.length;\\r\\n        _Order memory order;\\r\\n\\r\\n        uint256 index;\\r\\n        for (uint256 i = 0; i < size; i++) {\\r\\n            if (_order[i].id == _id) {\\r\\n                index = i;\\r\\n                order = _order[i];\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //Manual cancellation of orders\\r\\n        if (s_isManual) {\\r\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\r\\n\\r\\n            //Unlock funds\\r\\n            if (side == Side.BUY) {\\r\\n                wallet.exchangeUpdateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenB,\\r\\n                    order.amountB,\\r\\n                    false\\r\\n                );\\r\\n            } else if (side == Side.SELL) {\\r\\n                wallet.exchangeUpdateLockedFunds(\\r\\n                    msg.sender,\\r\\n                    order.tokenA,\\r\\n                    order.amountA,\\r\\n                    false\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n        for (uint256 j = index; j < size - 1; j++) {\\r\\n            _order[j] = _order[j.add(1)];\\r\\n        }\\r\\n\\r\\n        _order.pop();\\r\\n\\r\\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\\r\\n\\r\\n        emit Cancel(\\r\\n            _id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.amountA,\\r\\n            order.tokenB,\\r\\n            order.amountB,\\r\\n            order.rate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.waiveFees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateFilledOrders(\\r\\n        _filledOrder memory order,\\r\\n        uint256 _side\\r\\n    ) external {\\r\\n        s_filledOrders[order.user][_side].push(order);\\r\\n\\r\\n        emit filledOrder(\\r\\n            order.id,\\r\\n            order.side,\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            order.tokenB,\\r\\n            order.amountFilled,\\r\\n            order.fillRate,\\r\\n            order.originalRate,\\r\\n            order.originalAmountA,\\r\\n            order.originalAmountB,\\r\\n            order.feesWaived,\\r\\n            order.feesPaid\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateOrder(\\r\\n        _Order memory order,\\r\\n        uint256 _amountA,\\r\\n        uint256 _amountB,\\r\\n        uint256 _index\\r\\n    ) external validOrder(order.id, order.side, order.tokenA, order.tokenB) {\\r\\n        uint256 a = s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n            _index\\r\\n        ].amountA;\\r\\n        uint256 b = s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n            _index\\r\\n        ].amountB;\\r\\n        s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n            .amountA = _amountA;\\r\\n        s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n            .amountB = _amountB;\\r\\n\\r\\n        require(\\r\\n            s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][_index]\\r\\n                .amountA <\\r\\n                a &&\\r\\n                s_orderBook[order.tokenA][order.tokenB][uint8(order.side)][\\r\\n                    _index\\r\\n                ].amountB <\\r\\n                b,\\r\\n            \\\"Order not updated properly\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function setManual(bool _isManual) external {\\r\\n        s_isManual = _isManual;\\r\\n        require(s_isManual == _isManual, \\\"Invalid s_isManual bool\\\");\\r\\n    }\\r\\n\\r\\n    function getOrderLength(\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (uint256) {\\r\\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 index,\\r\\n        Side side\\r\\n    ) public view returns (_Order memory) {\\r\\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][\\r\\n            index\\r\\n        ];\\r\\n        return (order);\\r\\n    }\\r\\n\\r\\n    function getFilledOrderLength(\\r\\n        address _user,\\r\\n        Side side\\r\\n    ) public view returns (uint256) {\\r\\n        return s_filledOrders[_user][uint256(side)].length;\\r\\n    }\\r\\n\\r\\n    function getFilledOrder(\\r\\n        address _user,\\r\\n        Side side,\\r\\n        uint256 index\\r\\n    ) public view returns (_filledOrder memory) {\\r\\n        return s_filledOrders[_user][uint256(side)][index];\\r\\n    }\\r\\n\\r\\n    function getOrderFromArray(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256 side,\\r\\n        uint256 _id\\r\\n    ) public view returns (_Order memory, uint256) {\\r\\n        uint256 i = 0;\\r\\n        for (i; i < s_orderBook[_tokenA][_tokenB][side].length; i++) {\\r\\n            if (s_orderBook[_tokenA][_tokenB][side][i].id == _id) {\\r\\n                return (s_orderBook[_tokenA][_tokenB][side][i], i);\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Order not Found\\\");\\r\\n    }\\r\\n\\r\\n    function orderExists(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) public view returns (bool) {\\r\\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\\r\\n\\r\\n        for (uint256 i = 0; i < orders.length; i++) {\\r\\n            if (orders[i].id == _id) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\r\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\r\\n        tokenList.push(_tokenInfo(_token, _decimals));\\r\\n    }\\r\\n\\r\\n    function isVerifiedToken(address _token) public view returns (bool) {\\r\\n        //uint256 size = tokenList.length;\\r\\n\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenInfo(address _token) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\r\\n            if (tokenList[i].add == _token) {\\r\\n                return tokenList[i].decimals;\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"Token not available\\\");\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n\\r\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_tradingFees);\\r\\n    }\\r\\n\\r\\n    modifier validOrder(\\r\\n        uint256 _id,\\r\\n        Side side,\\r\\n        address _tokenA,\\r\\n        address _tokenB\\r\\n    ) {\\r\\n        require(orderExists(_id, side, _tokenA, _tokenB), \\\"Invalid Order ID\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validToken(address _token) {\\r\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4da7ab34528a6ddc8a19d8b7030ecf57023a2985361f1875b527d0a269d0e811\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract PriceChecker is Ownable {\\r\\n    _priceFeed[] public priceFeeds;\\r\\n\\r\\n    struct _priceFeed {\\r\\n        string name;\\r\\n        address token;\\r\\n        AggregatorV3Interface priceFeed;\\r\\n    }\\r\\n\\r\\n    //only using PriceFeeds pegged to USD\\r\\n    function addPriceFeed(\\r\\n        string memory _name,\\r\\n        address _token,\\r\\n        address _address\\r\\n    ) external onlyOwner {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n        bool isAdded = false;\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(_name)) ==\\r\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\r\\n            ) {\\r\\n                isAdded = true;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        require(!isAdded, \\\"Price Feed already added\\\");\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\r\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\r\\n    }\\r\\n\\r\\n    function getPriceFeed(\\r\\n        address _token\\r\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\r\\n        _priceFeed[] memory pricefeed = priceFeeds;\\r\\n\\r\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\r\\n            if (_token == pricefeed[i].token) {\\r\\n                return pricefeed[i].priceFeed;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getPrice(address _address) external view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1e1d97a9c555133c6a90fdc333e79e819ffaffd68d9c9579684b49413dda07c\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./PriceChecker.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract TradingFees is Ownable {\\r\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\r\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\r\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\r\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\r\\n    //and waive trading fees\\r\\n\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    uint256 decimals = 10 ** 18;\\r\\n    address public daiToken =\\r\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\r\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\r\\n    PriceChecker private priceFeed;\\r\\n    Wallet wallet;\\r\\n\\r\\n    constructor(address _priceCheckerAddress) {\\r\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\r\\n    }\\r\\n\\r\\n    function calculateFees(\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        address _refToken\\r\\n    ) public view returns (uint256) {\\r\\n        //Calculated based on TokenB price, require actual price in 18dp\\r\\n        //trading fees is 0.1% of trade = 0.001\\r\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\r\\n        //have to fetch tokenPrice from PriceFeed\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\r\\n        uint256 value = (\\r\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\r\\n        ).div(decimals);\\r\\n        uint256 fees = value.div(10 ** 4);\\r\\n\\r\\n        return fees; //based on USD value\\r\\n    }\\r\\n\\r\\n    //Amount of DAI to deduct from fees\\r\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\r\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\r\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    //Amount of Tokens to deduct from fees\\r\\n    function amountTokensToDeduct(\\r\\n        address _refToken,\\r\\n        uint256 _fees\\r\\n    ) public view returns (uint256) {\\r\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\r\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\r\\n        return uint256(amt);\\r\\n    }\\r\\n\\r\\n    function checkSufficientaDAI(\\r\\n        uint256 _fees,\\r\\n        address _user\\r\\n    ) public view returns (bool) {\\r\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\r\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\r\\n\\r\\n        return balance >= amtDAI;\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setPriceCheckerAddress(\\r\\n        address _PriceCheckeraddress\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7891dc27d893e5a01614511576fb8e0477a7ace177b52492e745cb0c38464677\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./ERC20.sol\\\";\\r\\nimport \\\"./Exchange.sol\\\";\\r\\nimport \\\"./fillLogic.sol\\\";\\r\\n\\r\\n/// @notice Library SafeMath used to prevent overflows and underflows\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Wallet is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n\\r\\n    address public fundWallet;\\r\\n    uint256 decimals = 18;\\r\\n    address public aDAI;\\r\\n\\r\\n    //For prevention of reentrancy\\r\\n    bool private locked;\\r\\n\\r\\n    address public ethToken = address(0);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\r\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\r\\n\\r\\n    Exchange exchange;\\r\\n    fillLogic fillContract;\\r\\n    IERC20 token;\\r\\n\\r\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\r\\n\\r\\n    /// @notice Event when amount withdrawn exchange\\r\\n    event Withdraw(\\r\\n        address token,\\r\\n        address user,\\r\\n        uint256 amount,\\r\\n        uint256 balance\\r\\n    );\\r\\n\\r\\n    function depositETH() external payable {\\r\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\r\\n\\r\\n        emit Deposit(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            msg.value,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawETH(uint256 _amount) external {\\r\\n        require(\\r\\n            balanceOf(ethToken, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, ethToken)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient balance ETH to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(ethToken, msg.sender, _amount, false);\\r\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\r\\n        require(success, \\\"failed to send amount\\\");\\r\\n        locked = false;\\r\\n\\r\\n        emit Withdraw(\\r\\n            ethToken,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(ethToken, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //from and transferFrom is from ERC20 contract\\r\\n    //_token should be an ERC20 token\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken, \\\"Invalid Token Type\\\");\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token) || _token == aDAI,\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n        //need to add a check to prove that it is an ERC20 token\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        //Requires approval first\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"No Approval yet\\\"\\r\\n        );\\r\\n\\r\\n        updateBalance(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n            true\\r\\n        );\\r\\n\\r\\n        emit Deposit(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        uint256 _decimals\\r\\n    ) external {\\r\\n        require(_token != ethToken);\\r\\n        require(\\r\\n            exchange.isVerifiedToken(_token),\\r\\n            \\\"Token not verified on Exchange\\\"\\r\\n        );\\r\\n\\r\\n        require(\\r\\n            balanceOf(_token, msg.sender).sub(\\r\\n                getlockedFunds(msg.sender, _token)\\r\\n            ) >= _amount,\\r\\n            \\\"Insufficient Tokens to withdraw\\\"\\r\\n        );\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n\\r\\n        token = IERC20(_token);\\r\\n        updateBalance(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\r\\n            false\\r\\n        );\\r\\n        require(\\r\\n            token.transfer(\\r\\n                msg.sender,\\r\\n                _amount.div(10 ** decimals.sub(_decimals))\\r\\n            )\\r\\n        );\\r\\n\\r\\n        locked = false;\\r\\n        emit Withdraw(\\r\\n            _token,\\r\\n            msg.sender,\\r\\n            _amount,\\r\\n            balanceOf(_token, msg.sender)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlockedFunds(\\r\\n        address _user,\\r\\n        address _token\\r\\n    ) public view returns (uint256) {\\r\\n        return lockedFunds[_user][_token];\\r\\n    }\\r\\n\\r\\n    function exchangeUpdateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) external isExchange {\\r\\n        updateLockedFunds(_user, _token, _amount, isAdd);\\r\\n    }\\r\\n\\r\\n    function updateLockedFunds(\\r\\n        address _user,\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) internal {\\r\\n        if (isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\r\\n                _amount\\r\\n            );\\r\\n        } else if (!isAdd) {\\r\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\r\\n                _amount\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //balance of specific tokens in the dex owned by specific user\\r\\n    function balanceOf(\\r\\n        address _token,\\r\\n        address _user\\r\\n    ) public view returns (uint256) {\\r\\n        return s_tokens[_token][_user];\\r\\n    }\\r\\n\\r\\n    function exchangeUpdateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) external isExchange {\\r\\n        updateBalance(_token, _user, _amount, isAdd);\\r\\n    }\\r\\n\\r\\n    function updateBalance(\\r\\n        address _token,\\r\\n        address _user,\\r\\n        uint256 _amount,\\r\\n        bool isAdd\\r\\n    ) internal {\\r\\n        if (isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\r\\n        } else if (!isAdd) {\\r\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateFundWallet(address _fundwallet) public onlyOwner {\\r\\n        fundWallet = _fundwallet;\\r\\n    }\\r\\n\\r\\n    function withdrawToFundWallet(address _token, uint256 _decimals) external {\\r\\n        //Only allow fundWallet address to make the call\\r\\n        require(\\r\\n            msg.sender == fundWallet,\\r\\n            \\\"Invalid FundWallet address to withdraw\\\"\\r\\n        );\\r\\n        uint256 totalAmount = s_tokens[_token][fundWallet];\\r\\n        uint256 actualAmount = totalAmount.div(10 ** decimals.sub(_decimals));\\r\\n        token = IERC20(_token);\\r\\n\\r\\n        require(!locked, \\\"Reentrant call detected!\\\");\\r\\n        locked = true;\\r\\n        updateBalance(_token, fundWallet, totalAmount, false);\\r\\n        require(token.transfer(fundWallet, actualAmount));\\r\\n        locked = false;\\r\\n    }\\r\\n\\r\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\r\\n        exchange = Exchange(_exchangeAddress);\\r\\n    }\\r\\n\\r\\n    function updateFillLogicAddress(address _contract) public onlyOwner {\\r\\n        fillContract = fillLogic(_contract);\\r\\n    }\\r\\n\\r\\n    function updateaDaiAddress(address _address) public onlyOwner {\\r\\n        aDAI = address(_address);\\r\\n    }\\r\\n\\r\\n    modifier isExchange() {\\r\\n        require(\\r\\n            msg.sender == address(exchange) ||\\r\\n                msg.sender == address(fillContract),\\r\\n            \\\"Not Exchange or fillOrder contract\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc5b3f8146a024262e00685d84250a606e4608fb1f055d13dcde43072f7120652\",\"license\":\"MIT\"},\"contracts/fillLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./Exchange.sol\\\";\\r\\nimport \\\"./TradingFees.sol\\\";\\r\\nimport \\\"./Wallet.sol\\\";\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\n\\r\\ncontract fillLogic is Ownable {\\r\\n    using SafeMath for uint256; //for prevention of integer overflow\\r\\n    Exchange exchange;\\r\\n    TradingFees tradingFees;\\r\\n    Wallet wallet;\\r\\n    uint256 decimals = 10 ** 18;\\r\\n\\r\\n    event fillBuyOrder(\\r\\n        Exchange._Order remainingOrder,\\r\\n        uint256 amountBought,\\r\\n        uint256 fillBuyRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    event fillSellOrder(\\r\\n        Exchange._Order remainingOrder,\\r\\n        uint256 amountSold,\\r\\n        uint256 fillSellRate,\\r\\n        bool feesWaived,\\r\\n        uint256 feesPaid\\r\\n    );\\r\\n\\r\\n    constructor(address _Exchange, address _fees, address _Wallet) {\\r\\n        exchange = Exchange(_Exchange); // Set the address of the Exchange contract\\r\\n        tradingFees = TradingFees(_fees);\\r\\n        wallet = Wallet(_Wallet);\\r\\n    }\\r\\n\\r\\n    function fillOrder(\\r\\n        address _tokenA,\\r\\n        address _tokenB,\\r\\n        uint256[][] memory _ordersToFill\\r\\n    ) external {\\r\\n        Exchange._Order memory order;\\r\\n        uint256 index;\\r\\n\\r\\n        for (uint256 i = 0; i < _ordersToFill.length; i++) {\\r\\n            require(\\r\\n                _ordersToFill[i][2] != 0 && _ordersToFill[i][3] != 0,\\r\\n                \\\"Order values error\\\"\\r\\n            );\\r\\n\\r\\n            (order, index) = exchange.getOrderFromArray(\\r\\n                _tokenA,\\r\\n                _tokenB,\\r\\n                _ordersToFill[i][1],\\r\\n                _ordersToFill[i][0]\\r\\n            );\\r\\n\\r\\n            require(\\r\\n                order.amountA != 0 && order.amountB != 0,\\r\\n                \\\"Invalid Order Amount\\\"\\r\\n            );\\r\\n            exchange.updateOrder(\\r\\n                order,\\r\\n                order.amountA.sub(_ordersToFill[i][2]),\\r\\n                order.amountB.sub(\\r\\n                    order.rate.mul(_ordersToFill[i][2]).div(decimals)\\r\\n                ),\\r\\n                index\\r\\n            );\\r\\n\\r\\n            order.amountA = order.amountA.sub(_ordersToFill[i][2]);\\r\\n\\r\\n            uint256 fees = tradingFees.calculateFees(\\r\\n                _ordersToFill[i][2],\\r\\n                _ordersToFill[i][3],\\r\\n                order.tokenB\\r\\n            );\\r\\n            require(fees != 0, \\\"Fees cannot be 0\\\");\\r\\n\\r\\n            bool feesWaived = order.waiveFees &&\\r\\n                tradingFees.checkSufficientaDAI(fees, order.user);\\r\\n\\r\\n            if (_ordersToFill[i][1] == 0) {\\r\\n                fillBuyOrders(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n                emit fillBuyOrder(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n            } else {\\r\\n                fillSellOrders(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n                emit fillSellOrder(\\r\\n                    order,\\r\\n                    _ordersToFill[i][2],\\r\\n                    _ordersToFill[i][3],\\r\\n                    feesWaived,\\r\\n                    fees\\r\\n                );\\r\\n            }\\r\\n\\r\\n            if (order.amountA == 0) {\\r\\n                exchange.setManual(false);\\r\\n                exchange.cancelOrder(\\r\\n                    (\\r\\n                        _ordersToFill[i][1] == 0\\r\\n                            ? Exchange.Side.BUY\\r\\n                            : Exchange.Side.SELL\\r\\n                    ),\\r\\n                    order.id,\\r\\n                    order.tokenA,\\r\\n                    order.tokenB\\r\\n                );\\r\\n                exchange.setManual(true);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function fillBuyOrders(\\r\\n        Exchange._Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                wallet.fundWallet(),\\r\\n                aDAIToDeduct,\\r\\n                true\\r\\n            );\\r\\n\\r\\n            //Credit Bought tokens\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount,\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenA,\\r\\n                fees\\r\\n            );\\r\\n            //Credit Bought tokens after minusing fees\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                order.user,\\r\\n                _amount.sub(amountTokenToDeduct),\\r\\n                true\\r\\n            );\\r\\n\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenA,\\r\\n                wallet.fundWallet(),\\r\\n                amountTokenToDeduct,\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        //Original Locked Funds unlocked\\r\\n        wallet.exchangeUpdateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenB,\\r\\n            (order.rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n\\r\\n        //buyer update\\r\\n        //Buyer balance deducted from what he paid\\r\\n        wallet.exchangeUpdateBalance(\\r\\n            order.tokenB,\\r\\n            order.user,\\r\\n            (_rate.mul(_amount)).div(decimals),\\r\\n            false\\r\\n        );\\r\\n        exchange.updateFilledOrders(\\r\\n            Exchange._filledOrder(\\r\\n                order.id,\\r\\n                Exchange.Side.BUY,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            ),\\r\\n            uint256(Exchange.Side.BUY)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function fillSellOrders(\\r\\n        Exchange._Order memory order,\\r\\n        uint256 _amount,\\r\\n        uint256 _rate,\\r\\n        bool feesWaived,\\r\\n        uint256 fees\\r\\n    ) internal {\\r\\n        if (feesWaived) {\\r\\n            //Deduct aDAI\\r\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                order.user,\\r\\n                aDAIToDeduct,\\r\\n                false\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                tradingFees.aDAI(),\\r\\n                wallet.fundWallet(),\\r\\n                aDAIToDeduct,\\r\\n                true\\r\\n            );\\r\\n\\r\\n            //Credit Earned tokens\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals),\\r\\n                true\\r\\n            );\\r\\n        } else {\\r\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\r\\n                order.tokenB,\\r\\n                fees\\r\\n            );\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                wallet.fundWallet(),\\r\\n                amountTokensToDeduct,\\r\\n                true\\r\\n            );\\r\\n            //Credit Earned tokens after minusing fees\\r\\n            wallet.exchangeUpdateBalance(\\r\\n                order.tokenB,\\r\\n                order.user,\\r\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n\\r\\n        wallet.exchangeUpdateLockedFunds(\\r\\n            order.user,\\r\\n            order.tokenA,\\r\\n            _amount,\\r\\n            false\\r\\n        );\\r\\n        //seller update\\r\\n        wallet.exchangeUpdateBalance(order.tokenA, order.user, _amount, false);\\r\\n\\r\\n        exchange.updateFilledOrders(\\r\\n            Exchange._filledOrder(\\r\\n                order.id,\\r\\n                Exchange.Side.SELL,\\r\\n                order.user,\\r\\n                order.tokenA,\\r\\n                order.tokenB,\\r\\n                _amount,\\r\\n                _rate,\\r\\n                order.rate,\\r\\n                order.originalAmountA,\\r\\n                order.originalAmountB,\\r\\n                feesWaived,\\r\\n                fees\\r\\n            ),\\r\\n            uint256(Exchange.Side.SELL)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\r\\n        wallet = Wallet(_Walletaddress);\\r\\n    }\\r\\n\\r\\n    function setExchangeAddress(address _exchange) public onlyOwner {\\r\\n        exchange = Exchange(_exchange);\\r\\n    }\\r\\n\\r\\n    function setTradingFeesAddress(address _fees) public onlyOwner {\\r\\n        tradingFees = TradingFees(_fees);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa7f41526cf6c281440ecf90511b108c78d81614c70fe71602330645ce388f180\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":405,"contract":"contracts/fillLogic.sol:fillLogic","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":3874,"contract":"contracts/fillLogic.sol:fillLogic","label":"exchange","offset":0,"slot":"1","type":"t_contract(Exchange)2785"},{"astId":3877,"contract":"contracts/fillLogic.sol:fillLogic","label":"tradingFees","offset":0,"slot":"2","type":"t_contract(TradingFees)3184"},{"astId":3880,"contract":"contracts/fillLogic.sol:fillLogic","label":"wallet","offset":0,"slot":"3","type":"t_contract(Wallet)3859"},{"astId":3885,"contract":"contracts/fillLogic.sol:fillLogic","label":"decimals","offset":0,"slot":"4","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(Exchange)2785":{"encoding":"inplace","label":"contract Exchange","numberOfBytes":"20"},"t_contract(TradingFees)3184":{"encoding":"inplace","label":"contract TradingFees","numberOfBytes":"20"},"t_contract(Wallet)3859":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interface/IERC20.sol":{"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) external view returns (uint256 remaining);\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    function decimals() external view returns (uint8 decimalPlaces);\\r\\n\\r\\n    function decreaseApproval(\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function increaseApproval(\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function name() external view returns (string memory tokenName);\\r\\n\\r\\n    function symbol() external view returns (string memory tokenSymbol);\\r\\n\\r\\n    function totalSupply() external view returns (uint256 totalTokensIssued);\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0xef48d46afc4efefcd6d7f1799f25aee5d8fcd588e2aaa80a84af726128194326\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interface/IPool.sol":{"IPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"backer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"BackUnbacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"borrowRate","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"address","name":"initiator","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDebt","type":"uint256"}],"name":"IsolationModeTotalDebtUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collateralAsset","type":"address"},{"indexed":true,"internalType":"address","name":"debtAsset","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"debtToCover","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidatedCollateralAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"LiquidationCall","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"MintUnbacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountMinted","type":"uint256"}],"name":"MintedToTreasury","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"RebalanceStableBorrowRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"repayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"useATokens","type":"bool"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidityRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidityIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowIndex","type":"uint256"}],"name":"ReserveDataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralDisabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"Supply","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"}],"name":"SwapBorrowRateMode","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint8","name":"categoryId","type":"uint8"}],"name":"UserEModeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ADDRESSES_PROVIDER","outputs":[{"internalType":"contract IPoolAddressesProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BRIDGE_PROTOCOL_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLASHLOAN_PREMIUM_TOTAL","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLASHLOAN_PREMIUM_TO_PROTOCOL","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_NUMBER_RESERVES","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_STABLE_RATE_BORROW_SIZE_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}],"name":"backUnbacked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"id","type":"uint8"},{"components":[{"internalType":"uint16","name":"ltv","type":"uint16"},{"internalType":"uint16","name":"liquidationThreshold","type":"uint16"},{"internalType":"uint16","name":"liquidationBonus","type":"uint16"},{"internalType":"address","name":"priceSource","type":"address"},{"internalType":"string","name":"label","type":"string"}],"internalType":"struct DataTypes.EModeCategory","name":"config","type":"tuple"}],"name":"configureEModeCategory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"dropReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"balanceFromBefore","type":"uint256"},{"internalType":"uint256","name":"balanceToBefore","type":"uint256"}],"name":"finalizeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"interestRateModes","type":"uint256[]"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoanSimple","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"id","type":"uint8"}],"name":"getEModeCategoryData","outputs":[{"components":[{"internalType":"uint16","name":"ltv","type":"uint16"},{"internalType":"uint16","name":"liquidationThreshold","type":"uint16"},{"internalType":"uint16","name":"liquidationBonus","type":"uint16"},{"internalType":"address","name":"priceSource","type":"address"},{"internalType":"string","name":"label","type":"string"}],"internalType":"struct DataTypes.EModeCategory","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"id","type":"uint16"}],"name":"getReserveAddressById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveData","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"},{"internalType":"uint128","name":"liquidityIndex","type":"uint128"},{"internalType":"uint128","name":"currentLiquidityRate","type":"uint128"},{"internalType":"uint128","name":"variableBorrowIndex","type":"uint128"},{"internalType":"uint128","name":"currentVariableBorrowRate","type":"uint128"},{"internalType":"uint128","name":"currentStableBorrowRate","type":"uint128"},{"internalType":"uint40","name":"lastUpdateTimestamp","type":"uint40"},{"internalType":"uint16","name":"id","type":"uint16"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtTokenAddress","type":"address"},{"internalType":"address","name":"variableDebtTokenAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint128","name":"accruedToTreasury","type":"uint128"},{"internalType":"uint128","name":"unbacked","type":"uint128"},{"internalType":"uint128","name":"isolationModeTotalDebt","type":"uint128"}],"internalType":"struct DataTypes.ReserveData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedIncome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedVariableDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReservesList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserAccountData","outputs":[{"internalType":"uint256","name":"totalCollateralBase","type":"uint256"},{"internalType":"uint256","name":"totalDebtBase","type":"uint256"},{"internalType":"uint256","name":"availableBorrowsBase","type":"uint256"},{"internalType":"uint256","name":"currentLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"healthFactor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.UserConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserEMode","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtAddress","type":"address"},{"internalType":"address","name":"variableDebtAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"}],"name":"initReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"collateralAsset","type":"address"},{"internalType":"address","name":"debtAsset","type":"address"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"debtToCover","type":"uint256"},{"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"liquidationCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"name":"mintToTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"mintUnbacked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"user","type":"address"}],"name":"rebalanceStableBorrowRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"repay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"}],"name":"repayWithATokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"permitV","type":"uint8"},{"internalType":"bytes32","name":"permitR","type":"bytes32"},{"internalType":"bytes32","name":"permitS","type":"bytes32"}],"name":"repayWithPermit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rescueTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"resetIsolationModeTotalDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"}],"name":"setConfiguration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"rateStrategyAddress","type":"address"}],"name":"setReserveInterestRateStrategyAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"categoryId","type":"uint8"}],"name":"setUserEMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"bool","name":"useAsCollateral","type":"bool"}],"name":"setUserUseReserveAsCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"supply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"permitV","type":"uint8"},{"internalType":"bytes32","name":"permitR","type":"bytes32"},{"internalType":"bytes32","name":"permitS","type":"bytes32"}],"name":"supplyWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"}],"name":"swapBorrowRateMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"bridgeProtocolFee","type":"uint256"}],"name":"updateBridgeProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"flashLoanPremiumTotal","type":"uint128"},{"internalType":"uint128","name":"flashLoanPremiumToProtocol","type":"uint128"}],"name":"updateFlashloanPremiums","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","events":{"BackUnbacked(address,address,uint256,uint256)":{"details":"Emitted on backUnbacked()","params":{"amount":"The amount added as backing","backer":"The address paying for the backing","fee":"The amount paid in fees","reserve":"The address of the underlying asset of the reserve"}},"Borrow(address,address,address,uint256,uint8,uint256,uint16)":{"details":"Emitted on borrow() and flashLoan() when debt needs to be opened","params":{"amount":"The amount borrowed out","borrowRate":"The numeric rate at which the user has borrowed, expressed in ray","interestRateMode":"The rate mode: 1 for Stable, 2 for Variable","onBehalfOf":"The address that will be getting the debt","referralCode":"The referral code used","reserve":"The address of the underlying asset being borrowed","user":"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"}},"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)":{"details":"Emitted on flashLoan()","params":{"amount":"The amount flash borrowed","asset":"The address of the asset being flash borrowed","initiator":"The address initiating the flash loan","interestRateMode":"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt","premium":"The fee flash borrowed","referralCode":"The referral code used","target":"The address of the flash loan receiver contract"}},"IsolationModeTotalDebtUpdated(address,uint256)":{"details":"Emitted on borrow(), repay() and liquidationCall() when using isolated assets","params":{"asset":"The address of the underlying asset of the reserve","totalDebt":"The total isolation mode debt for the reserve"}},"LiquidationCall(address,address,address,uint256,uint256,address,bool)":{"details":"Emitted when a borrower is liquidated.","params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","liquidatedCollateralAmount":"The amount of collateral received by the liquidator","liquidator":"The address of the liquidator","receiveAToken":"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly","user":"The address of the borrower getting liquidated"}},"MintUnbacked(address,address,address,uint256,uint16)":{"details":"Emitted on mintUnbacked()","params":{"amount":"The amount of supplied assets","onBehalfOf":"The beneficiary of the supplied assets, receiving the aTokens","referralCode":"The referral code used","reserve":"The address of the underlying asset of the reserve","user":"The address initiating the supply"}},"MintedToTreasury(address,uint256)":{"details":"Emitted when the protocol treasury receives minted aTokens from the accrued interest.","params":{"amountMinted":"The amount minted to the treasury","reserve":"The address of the reserve"}},"RebalanceStableBorrowRate(address,address)":{"details":"Emitted on rebalanceStableBorrowRate()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user for which the rebalance has been executed"}},"Repay(address,address,address,uint256,bool)":{"details":"Emitted on repay()","params":{"amount":"The amount repaid","repayer":"The address of the user initiating the repay(), providing the funds","reserve":"The address of the underlying asset of the reserve","useATokens":"True if the repayment is done using aTokens, `false` if done with underlying asset directly","user":"The beneficiary of the repayment, getting his debt reduced"}},"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when the state of a reserve is updated.","params":{"liquidityIndex":"The next liquidity index","liquidityRate":"The next liquidity rate","reserve":"The address of the underlying asset of the reserve","stableBorrowRate":"The next stable borrow rate","variableBorrowIndex":"The next variable borrow index","variableBorrowRate":"The next variable borrow rate"}},"ReserveUsedAsCollateralDisabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral"}},"ReserveUsedAsCollateralEnabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral"}},"Supply(address,address,address,uint256,uint16)":{"details":"Emitted on supply()","params":{"amount":"The amount supplied","onBehalfOf":"The beneficiary of the supply, receiving the aTokens","referralCode":"The referral code used","reserve":"The address of the underlying asset of the reserve","user":"The address initiating the supply"}},"SwapBorrowRateMode(address,address,uint8)":{"details":"Emitted on swapBorrowRateMode()","params":{"interestRateMode":"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable","reserve":"The address of the underlying asset of the reserve","user":"The address of the user swapping his rate mode"}},"UserEModeSet(address,uint8)":{"details":"Emitted when the user selects a certain asset category for eMode","params":{"categoryId":"The category id","user":"The address of the user"}},"Withdraw(address,address,address,uint256)":{"details":"Emitted on withdraw()","params":{"amount":"The amount to be withdrawn","reserve":"The address of the underlying asset being withdrawn","to":"The address that will receive the underlying","user":"The address initiating the withdrawal, owner of aTokens"}}},"kind":"dev","methods":{"ADDRESSES_PROVIDER()":{"returns":{"_0":"The address of the PoolAddressesProvider"}},"BRIDGE_PROTOCOL_FEE()":{"returns":{"_0":"The bridge fee sent to the protocol treasury"}},"FLASHLOAN_PREMIUM_TOTAL()":{"returns":{"_0":"The total fee on flashloans"}},"FLASHLOAN_PREMIUM_TO_PROTOCOL()":{"returns":{"_0":"The flashloan fee sent to the protocol treasury"}},"MAX_NUMBER_RESERVES()":{"returns":{"_0":"The maximum number of reserves supported"}},"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":{"returns":{"_0":"The percentage of available liquidity to borrow, expressed in bps"}},"backUnbacked(address,uint256,uint256)":{"params":{"amount":"The amount to back","asset":"The address of the underlying asset to back","fee":"The amount paid in fees"},"returns":{"_0":"The backed amount"}},"borrow(address,uint256,uint256,uint16,address)":{"params":{"amount":"The amount to be borrowed","asset":"The address of the underlying asset to borrow","interestRateMode":"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable","onBehalfOf":"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance","referralCode":"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":{"details":"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets","params":{"config":"The configuration of the category","id":"The id of the category"}},"deposit(address,uint256,address,uint16)":{"details":"Deprecated: Use the `supply` function instead","params":{"amount":"The amount to be supplied","asset":"The address of the underlying asset to supply","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"dropReserve(address)":{"details":"Only callable by the PoolConfigurator contract","params":{"asset":"The address of the underlying asset of the reserve"}},"finalizeTransfer(address,address,address,uint256,uint256,uint256)":{"details":"Only callable by the overlying aToken of the `asset`","params":{"amount":"The amount being transferred/withdrawn","asset":"The address of the underlying asset of the aToken","balanceFromBefore":"The aToken balance of the `from` user before the transfer","balanceToBefore":"The aToken balance of the `to` user before the transfer","from":"The user from which the aTokens are transferred","to":"The user receiving the aTokens"}},"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":{"details":"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/","params":{"amounts":"The amounts of the assets being flash-borrowed","assets":"The addresses of the assets being flash-borrowed","interestRateModes":"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address","onBehalfOf":"The address  that will receive the debt in the case of using on `modes` 1 or 2","params":"Variadic packed params to pass to the receiver as extra information","receiverAddress":"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface","referralCode":"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"flashLoanSimple(address,address,uint256,bytes,uint16)":{"details":"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/","params":{"amount":"The amount of the asset being flash-borrowed","asset":"The address of the asset being flash-borrowed","params":"Variadic packed params to pass to the receiver as extra information","receiverAddress":"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface","referralCode":"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"getConfiguration(address)":{"params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The configuration of the reserve"}},"getEModeCategoryData(uint8)":{"params":{"id":"The id of the category"},"returns":{"_0":"The configuration data of the category"}},"getReserveAddressById(uint16)":{"params":{"id":"The id of the reserve as stored in the DataTypes.ReserveData struct"},"returns":{"_0":"The address of the reserve associated with id"}},"getReserveData(address)":{"params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The state and configuration data of the reserve"}},"getReserveNormalizedIncome(address)":{"params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve's normalized income"}},"getReserveNormalizedVariableDebt(address)":{"details":"WARNING: This function is intended to be used primarily by the protocol itself to get a \"dynamic\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve normalized variable debt"}},"getReservesList()":{"details":"It does not include dropped reserves","returns":{"_0":"The addresses of the underlying assets of the initialized reserves"}},"getUserAccountData(address)":{"params":{"user":"The address of the user"},"returns":{"availableBorrowsBase":"The borrowing power left of the user in the base currency used by the price feed","currentLiquidationThreshold":"The liquidation threshold of the user","healthFactor":"The current health factor of the user","ltv":"The loan to value of The user","totalCollateralBase":"The total collateral of the user in the base currency used by the price feed","totalDebtBase":"The total debt of the user in the base currency used by the price feed"}},"getUserConfiguration(address)":{"params":{"user":"The user address"},"returns":{"_0":"The configuration of the user"}},"getUserEMode(address)":{"params":{"user":"The address of the user"},"returns":{"_0":"The eMode id"}},"initReserve(address,address,address,address,address)":{"details":"Only callable by the PoolConfigurator contract","params":{"aTokenAddress":"The address of the aToken that will be assigned to the reserve","asset":"The address of the underlying asset of the reserve","interestRateStrategyAddress":"The address of the interest rate strategy contract","stableDebtAddress":"The address of the StableDebtToken that will be assigned to the reserve","variableDebtAddress":"The address of the VariableDebtToken that will be assigned to the reserve"}},"liquidationCall(address,address,address,uint256,bool)":{"params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","receiveAToken":"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly","user":"The address of the borrower getting liquidated"}},"mintToTreasury(address[])":{"params":{"assets":"The list of reserves for which the minting needs to be executed"}},"mintUnbacked(address,uint256,address,uint16)":{"params":{"amount":"The amount to mint","asset":"The address of the underlying asset to mint","onBehalfOf":"The address that will receive the aTokens","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"rebalanceStableBorrowRate(address,address)":{"params":{"asset":"The address of the underlying asset borrowed","user":"The address of the user to be rebalanced"}},"repay(address,uint256,uint256,address)":{"params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","interestRateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable","onBehalfOf":"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed"},"returns":{"_0":"The final amount repaid"}},"repayWithATokens(address,uint256,uint256)":{"details":"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt","params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","interestRateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"},"returns":{"_0":"The final amount repaid"}},"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":{"params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","deadline":"The deadline timestamp that the permit is valid","interestRateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable","onBehalfOf":"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed","permitR":"The R parameter of ERC712 permit sig","permitS":"The S parameter of ERC712 permit sig","permitV":"The V parameter of ERC712 permit sig"},"returns":{"_0":"The final amount repaid"}},"rescueTokens(address,address,uint256)":{"params":{"amount":"The amount of token to transfer","to":"The address of the recipient","token":"The address of the token"}},"resetIsolationModeTotalDebt(address)":{"details":"It requires the given asset has zero debt ceiling","params":{"asset":"The address of the underlying asset to reset the isolationModeTotalDebt"}},"setConfiguration(address,(uint256))":{"details":"Only callable by the PoolConfigurator contract","params":{"asset":"The address of the underlying asset of the reserve","configuration":"The new configuration bitmap"}},"setReserveInterestRateStrategyAddress(address,address)":{"details":"Only callable by the PoolConfigurator contract","params":{"asset":"The address of the underlying asset of the reserve","rateStrategyAddress":"The address of the interest rate strategy contract"}},"setUserEMode(uint8)":{"params":{"categoryId":"The id of the category"}},"setUserUseReserveAsCollateral(address,bool)":{"params":{"asset":"The address of the underlying asset supplied","useAsCollateral":"True if the user wants to use the supply as collateral, false otherwise"}},"supply(address,uint256,address,uint16)":{"params":{"amount":"The amount to be supplied","asset":"The address of the underlying asset to supply","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":{"params":{"amount":"The amount to be supplied","asset":"The address of the underlying asset to supply","deadline":"The deadline timestamp that the permit is valid","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","permitR":"The R parameter of ERC712 permit sig","permitS":"The S parameter of ERC712 permit sig","permitV":"The V parameter of ERC712 permit sig","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"swapBorrowRateMode(address,uint256)":{"params":{"asset":"The address of the underlying asset borrowed","interestRateMode":"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"}},"updateBridgeProtocolFee(uint256)":{"params":{"bridgeProtocolFee":"The part of the premium sent to the protocol treasury"}},"updateFlashloanPremiums(uint128,uint128)":{"details":"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract","params":{"flashLoanPremiumToProtocol":"The part of the premium sent to the protocol treasury, expressed in bps","flashLoanPremiumTotal":"The total premium, expressed in bps"}},"withdraw(address,uint256,address)":{"params":{"amount":"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance","asset":"The address of the underlying asset to withdraw","to":"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"},"returns":{"_0":"The final amount withdrawn"}}},"title":"IPool","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ADDRESSES_PROVIDER()":"0542975c","BRIDGE_PROTOCOL_FEE()":"272d9072","FLASHLOAN_PREMIUM_TOTAL()":"074b2e43","FLASHLOAN_PREMIUM_TO_PROTOCOL()":"6a99c036","MAX_NUMBER_RESERVES()":"f8119d51","MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":"e82fec2f","backUnbacked(address,uint256,uint256)":"d65dc7a1","borrow(address,uint256,uint256,uint16,address)":"a415bcad","configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":"d579ea7d","deposit(address,uint256,address,uint16)":"e8eda9df","dropReserve(address)":"63c9b860","finalizeTransfer(address,address,address,uint256,uint256,uint256)":"d5ed3933","flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":"ab9c4b5d","flashLoanSimple(address,address,uint256,bytes,uint16)":"42b0b77c","getConfiguration(address)":"c44b11f7","getEModeCategoryData(uint8)":"6c6f6ae1","getReserveAddressById(uint16)":"52751797","getReserveData(address)":"35ea6a75","getReserveNormalizedIncome(address)":"d15e0053","getReserveNormalizedVariableDebt(address)":"386497fd","getReservesList()":"d1946dbc","getUserAccountData(address)":"bf92857c","getUserConfiguration(address)":"4417a583","getUserEMode(address)":"eddf1b79","initReserve(address,address,address,address,address)":"7a708e92","liquidationCall(address,address,address,uint256,bool)":"00a718a9","mintToTreasury(address[])":"9cd19996","mintUnbacked(address,uint256,address,uint16)":"69a933a5","rebalanceStableBorrowRate(address,address)":"cd112382","repay(address,uint256,uint256,address)":"573ade81","repayWithATokens(address,uint256,uint256)":"2dad97d4","repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":"ee3e210b","rescueTokens(address,address,uint256)":"cea9d26f","resetIsolationModeTotalDebt(address)":"e43e88a1","setConfiguration(address,(uint256))":"f51e435b","setReserveInterestRateStrategyAddress(address,address)":"1d2118f9","setUserEMode(uint8)":"28530a47","setUserUseReserveAsCollateral(address,bool)":"5a3b74b9","supply(address,uint256,address,uint16)":"617ba037","supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":"02c205f0","swapBorrowRateMode(address,uint256)":"94ba89a2","updateBridgeProtocolFee(uint256)":"3036b439","updateFlashloanPremiums(uint128,uint128)":"bcb6e522","withdraw(address,uint256,address)":"69328dec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"BackUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"IsolationModeTotalDebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"MintUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"MintedToTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useATokens\",\"type\":\"bool\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"}],\"name\":\"SwapBorrowRateMode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"UserEModeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRIDGE_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TOTAL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TO_PROTOCOL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUMBER_RESERVES\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"backUnbacked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"configureEModeCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"dropReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"interestRateModes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoanSimple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getEModeCategoryData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"getReserveAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"accruedToTreasury\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"unbacked\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"isolationModeTotalDebt\",\"type\":\"uint128\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"mintUnbacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repayWithATokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"resetIsolationModeTotalDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"setUserEMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bridgeProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateBridgeProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumToProtocol\",\"type\":\"uint128\"}],\"name\":\"updateFlashloanPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"BackUnbacked(address,address,uint256,uint256)\":{\"details\":\"Emitted on backUnbacked()\",\"params\":{\"amount\":\"The amount added as backing\",\"backer\":\"The address paying for the backing\",\"fee\":\"The amount paid in fees\",\"reserve\":\"The address of the underlying asset of the reserve\"}},\"Borrow(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed, expressed in ray\",\"interestRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"interestRateMode\":\"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used\",\"target\":\"The address of the flash loan receiver contract\"}},\"IsolationModeTotalDebtUpdated(address,uint256)\":{\"details\":\"Emitted on borrow(), repay() and liquidationCall() when using isolated assets\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"totalDebt\":\"The total isolation mode debt for the reserve\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"MintUnbacked(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on mintUnbacked()\",\"params\":{\"amount\":\"The amount of supplied assets\",\"onBehalfOf\":\"The beneficiary of the supplied assets, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"MintedToTreasury(address,uint256)\":{\"details\":\"Emitted when the protocol treasury receives minted aTokens from the accrued interest.\",\"params\":{\"amountMinted\":\"The amount minted to the treasury\",\"reserve\":\"The address of the reserve\"}},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed\"}},\"Repay(address,address,address,uint256,bool)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"useATokens\":\"True if the repayment is done using aTokens, `false` if done with underlying asset directly\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated.\",\"params\":{\"liquidityIndex\":\"The next liquidity index\",\"liquidityRate\":\"The next liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The next stable borrow rate\",\"variableBorrowIndex\":\"The next variable borrow index\",\"variableBorrowRate\":\"The next variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"Supply(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on supply()\",\"params\":{\"amount\":\"The amount supplied\",\"onBehalfOf\":\"The beneficiary of the supply, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"SwapBorrowRateMode(address,address,uint8)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"UserEModeSet(address,uint8)\":{\"details\":\"Emitted when the user selects a certain asset category for eMode\",\"params\":{\"categoryId\":\"The category id\",\"user\":\"The address of the user\"}},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn\",\"reserve\":\"The address of the underlying asset being withdrawn\",\"to\":\"The address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"returns\":{\"_0\":\"The address of the PoolAddressesProvider\"}},\"BRIDGE_PROTOCOL_FEE()\":{\"returns\":{\"_0\":\"The bridge fee sent to the protocol treasury\"}},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"returns\":{\"_0\":\"The total fee on flashloans\"}},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"returns\":{\"_0\":\"The flashloan fee sent to the protocol treasury\"}},\"MAX_NUMBER_RESERVES()\":{\"returns\":{\"_0\":\"The maximum number of reserves supported\"}},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"returns\":{\"_0\":\"The percentage of available liquidity to borrow, expressed in bps\"}},\"backUnbacked(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to back\",\"asset\":\"The address of the underlying asset to back\",\"fee\":\"The amount paid in fees\"},\"returns\":{\"_0\":\"The backed amount\"}},\"borrow(address,uint256,uint256,uint16,address)\":{\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"details\":\"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets\",\"params\":{\"config\":\"The configuration of the category\",\"id\":\"The id of the category\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deprecated: Use the `supply` function instead\",\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"dropReserve(address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"}},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"details\":\"Only callable by the overlying aToken of the `asset`\",\"params\":{\"amount\":\"The amount being transferred/withdrawn\",\"asset\":\"The address of the underlying asset of the aToken\",\"balanceFromBefore\":\"The aToken balance of the `from` user before the transfer\",\"balanceToBefore\":\"The aToken balance of the `to` user before the transfer\",\"from\":\"The user from which the aTokens are transferred\",\"to\":\"The user receiving the aTokens\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amounts\":\"The amounts of the assets being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"interestRateModes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amount\":\"The amount of the asset being flash-borrowed\",\"asset\":\"The address of the asset being flash-borrowed\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"getConfiguration(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve\"}},\"getEModeCategoryData(uint8)\":{\"params\":{\"id\":\"The id of the category\"},\"returns\":{\"_0\":\"The configuration data of the category\"}},\"getReserveAddressById(uint16)\":{\"params\":{\"id\":\"The id of the reserve as stored in the DataTypes.ReserveData struct\"},\"returns\":{\"_0\":\"The address of the reserve associated with id\"}},\"getReserveData(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state and configuration data of the reserve\"}},\"getReserveNormalizedIncome(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"WARNING: This function is intended to be used primarily by the protocol itself to get a \\\"dynamic\\\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getReservesList()\":{\"details\":\"It does not include dropped reserves\",\"returns\":{\"_0\":\"The addresses of the underlying assets of the initialized reserves\"}},\"getUserAccountData(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsBase\":\"The borrowing power left of the user in the base currency used by the price feed\",\"currentLiquidationThreshold\":\"The liquidation threshold of the user\",\"healthFactor\":\"The current health factor of the user\",\"ltv\":\"The loan to value of The user\",\"totalCollateralBase\":\"The total collateral of the user in the base currency used by the price feed\",\"totalDebtBase\":\"The total debt of the user in the base currency used by the price feed\"}},\"getUserConfiguration(address)\":{\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user\"}},\"getUserEMode(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The eMode id\"}},\"initReserve(address,address,address,address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"aTokenAddress\":\"The address of the aToken that will be assigned to the reserve\",\"asset\":\"The address of the underlying asset of the reserve\",\"interestRateStrategyAddress\":\"The address of the interest rate strategy contract\",\"stableDebtAddress\":\"The address of the StableDebtToken that will be assigned to the reserve\",\"variableDebtAddress\":\"The address of the VariableDebtToken that will be assigned to the reserve\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"mintToTreasury(address[])\":{\"params\":{\"assets\":\"The list of reserves for which the minting needs to be executed\"}},\"mintUnbacked(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to mint\",\"asset\":\"The address of the underlying asset to mint\",\"onBehalfOf\":\"The address that will receive the aTokens\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"rebalanceStableBorrowRate(address,address)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithATokens(address,uint256,uint256)\":{\"details\":\"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt\",\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"rescueTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to transfer\",\"to\":\"The address of the recipient\",\"token\":\"The address of the token\"}},\"resetIsolationModeTotalDebt(address)\":{\"details\":\"It requires the given asset has zero debt ceiling\",\"params\":{\"asset\":\"The address of the underlying asset to reset the isolationModeTotalDebt\"}},\"setConfiguration(address,(uint256))\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"configuration\":\"The new configuration bitmap\"}},\"setReserveInterestRateStrategyAddress(address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"rateStrategyAddress\":\"The address of the interest rate strategy contract\"}},\"setUserEMode(uint8)\":{\"params\":{\"categoryId\":\"The id of the category\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"params\":{\"asset\":\"The address of the underlying asset supplied\",\"useAsCollateral\":\"True if the user wants to use the supply as collateral, false otherwise\"}},\"supply(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"swapBorrowRateMode(address,uint256)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\"}},\"updateBridgeProtocolFee(uint256)\":{\"params\":{\"bridgeProtocolFee\":\"The part of the premium sent to the protocol treasury\"}},\"updateFlashloanPremiums(uint128,uint128)\":{\"details\":\"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract\",\"params\":{\"flashLoanPremiumToProtocol\":\"The part of the premium sent to the protocol treasury, expressed in bps\",\"flashLoanPremiumTotal\":\"The total premium, expressed in bps\"}},\"withdraw(address,uint256,address)\":{\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn\"}}},\"title\":\"IPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider connected to this contract\"},\"BRIDGE_PROTOCOL_FEE()\":{\"notice\":\"Returns the part of the bridge fees sent to protocol\"},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"notice\":\"Returns the total fee on flash loans\"},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"notice\":\"Returns the part of the flashloan fees sent to protocol\"},\"MAX_NUMBER_RESERVES()\":{\"notice\":\"Returns the maximum number of reserves supported to be listed in this Pool\"},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"notice\":\"Returns the percentage of available liquidity that can be borrowed at once at stable rate\"},\"backUnbacked(address,uint256,uint256)\":{\"notice\":\"Back the current unbacked underlying with `amount` and pay `fee`.\"},\"borrow(address,uint256,uint256,uint16,address)\":{\"notice\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\"},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"notice\":\"Configures a new category for the eMode.\"},\"deposit(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"dropReserve(address)\":{\"notice\":\"Drop a reserve\"},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Validates and finalizes an aToken transfer\"},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"getConfiguration(address)\":{\"notice\":\"Returns the configuration of the reserve\"},\"getEModeCategoryData(uint8)\":{\"notice\":\"Returns the data of an eMode category\"},\"getReserveAddressById(uint16)\":{\"notice\":\"Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\"},\"getReserveData(address)\":{\"notice\":\"Returns the state and configuration of the reserve\"},\"getReserveNormalizedIncome(address)\":{\"notice\":\"Returns the normalized income of the reserve\"},\"getReserveNormalizedVariableDebt(address)\":{\"notice\":\"Returns the normalized variable debt per unit of asset\"},\"getReservesList()\":{\"notice\":\"Returns the list of the underlying assets of all the initialized reserves\"},\"getUserAccountData(address)\":{\"notice\":\"Returns the user account data across all the reserves\"},\"getUserConfiguration(address)\":{\"notice\":\"Returns the configuration of the user across all the reserves\"},\"getUserEMode(address)\":{\"notice\":\"Returns the eMode the user is using\"},\"initReserve(address,address,address,address,address)\":{\"notice\":\"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy\"},\"liquidationCall(address,address,address,uint256,bool)\":{\"notice\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\"},\"mintToTreasury(address[])\":{\"notice\":\"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\"},\"mintUnbacked(address,uint256,address,uint16)\":{\"notice\":\"Mints an `amount` of aTokens to the `onBehalfOf`\"},\"rebalanceStableBorrowRate(address,address)\":{\"notice\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough\"},\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"},\"repayWithATokens(address,uint256,uint256)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\"},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"rescueTokens(address,address,uint256)\":{\"notice\":\"Rescue and transfer tokens locked in this contract\"},\"resetIsolationModeTotalDebt(address)\":{\"notice\":\"Resets the isolation mode total debt of the given asset to zero\"},\"setConfiguration(address,(uint256))\":{\"notice\":\"Sets the configuration bitmap of the reserve as a whole\"},\"setReserveInterestRateStrategyAddress(address,address)\":{\"notice\":\"Updates the address of the interest rate strategy contract\"},\"setUserEMode(uint8)\":{\"notice\":\"Allows a user to use the protocol in eMode\"},\"setUserUseReserveAsCollateral(address,bool)\":{\"notice\":\"Allows suppliers to enable/disable a specific supplied asset as collateral\"},\"supply(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"swapBorrowRateMode(address,uint256)\":{\"notice\":\"Allows a borrower to swap his debt between stable and variable mode, or vice versa\"},\"updateBridgeProtocolFee(uint256)\":{\"notice\":\"Updates the protocol fee on the bridging\"},\"updateFlashloanPremiums(uint128,uint128)\":{\"notice\":\"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury\"},\"withdraw(address,uint256,address)\":{\"notice\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\"}},\"notice\":\"Defines the basic interface for an Aave Pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IPool.sol\":\"IPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nlibrary DataTypes {\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    //timestamp of last update\\n    uint40 lastUpdateTimestamp;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint16 id;\\n    //aToken address\\n    address aTokenAddress;\\n    //stableDebtToken address\\n    address stableDebtTokenAddress;\\n    //variableDebtToken address\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the current treasury balance, scaled\\n    uint128 accruedToTreasury;\\n    //the outstanding unbacked aTokens minted through the bridging feature\\n    uint128 unbacked;\\n    //the outstanding debt borrowed against this asset in isolation mode\\n    uint128 isolationModeTotalDebt;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60: asset is paused\\n    //bit 61: borrowing in isolation mode is enabled\\n    //bit 62-63: reserved\\n    //bit 64-79: reserve factor\\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\\n    //bit 152-167 liquidation protocol fee\\n    //bit 168-175 eMode category\\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\\n    //bit 252-255 unused\\n\\n    uint256 data;\\n  }\\n\\n  struct UserConfigurationMap {\\n    /**\\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\\n     * asset is borrowed by the user.\\n     */\\n    uint256 data;\\n  }\\n\\n  struct EModeCategory {\\n    // each eMode category has a custom ltv and liquidation threshold\\n    uint16 ltv;\\n    uint16 liquidationThreshold;\\n    uint16 liquidationBonus;\\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\\n    address priceSource;\\n    string label;\\n  }\\n\\n  enum InterestRateMode {\\n    NONE,\\n    STABLE,\\n    VARIABLE\\n  }\\n\\n  struct ReserveCache {\\n    uint256 currScaledVariableDebt;\\n    uint256 nextScaledVariableDebt;\\n    uint256 currPrincipalStableDebt;\\n    uint256 currAvgStableBorrowRate;\\n    uint256 currTotalStableDebt;\\n    uint256 nextAvgStableBorrowRate;\\n    uint256 nextTotalStableDebt;\\n    uint256 currLiquidityIndex;\\n    uint256 nextLiquidityIndex;\\n    uint256 currVariableBorrowIndex;\\n    uint256 nextVariableBorrowIndex;\\n    uint256 currLiquidityRate;\\n    uint256 currVariableBorrowRate;\\n    uint256 reserveFactor;\\n    ReserveConfigurationMap reserveConfiguration;\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    uint40 reserveLastUpdateTimestamp;\\n    uint40 stableDebtLastUpdateTimestamp;\\n  }\\n\\n  struct ExecuteLiquidationCallParams {\\n    uint256 reservesCount;\\n    uint256 debtToCover;\\n    address collateralAsset;\\n    address debtAsset;\\n    address user;\\n    bool receiveAToken;\\n    address priceOracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteSupplyParams {\\n    address asset;\\n    uint256 amount;\\n    address onBehalfOf;\\n    uint16 referralCode;\\n  }\\n\\n  struct ExecuteBorrowParams {\\n    address asset;\\n    address user;\\n    address onBehalfOf;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint16 referralCode;\\n    bool releaseUnderlying;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteRepayParams {\\n    address asset;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    address onBehalfOf;\\n    bool useATokens;\\n  }\\n\\n  struct ExecuteWithdrawParams {\\n    address asset;\\n    uint256 amount;\\n    address to;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ExecuteSetUserEModeParams {\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 categoryId;\\n  }\\n\\n  struct FinalizeTransferParams {\\n    address asset;\\n    address from;\\n    address to;\\n    uint256 amount;\\n    uint256 balanceFromBefore;\\n    uint256 balanceToBefore;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 fromEModeCategory;\\n  }\\n\\n  struct FlashloanParams {\\n    address receiverAddress;\\n    address[] assets;\\n    uint256[] amounts;\\n    uint256[] interestRateModes;\\n    address onBehalfOf;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address addressesProvider;\\n    uint8 userEModeCategory;\\n    bool isAuthorizedFlashBorrower;\\n  }\\n\\n  struct FlashloanSimpleParams {\\n    address receiverAddress;\\n    address asset;\\n    uint256 amount;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n  }\\n\\n  struct FlashLoanRepaymentParams {\\n    uint256 amount;\\n    uint256 totalPremium;\\n    uint256 flashLoanPremiumToProtocol;\\n    address asset;\\n    address receiverAddress;\\n    uint16 referralCode;\\n  }\\n\\n  struct CalculateUserAccountDataParams {\\n    UserConfigurationMap userConfig;\\n    uint256 reservesCount;\\n    address user;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ValidateBorrowParams {\\n    ReserveCache reserveCache;\\n    UserConfigurationMap userConfig;\\n    address asset;\\n    address userAddress;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint256 maxStableLoanPercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n    bool isolationModeActive;\\n    address isolationModeCollateralAddress;\\n    uint256 isolationModeDebtCeiling;\\n  }\\n\\n  struct ValidateLiquidationCallParams {\\n    ReserveCache debtReserveCache;\\n    uint256 totalDebt;\\n    uint256 healthFactor;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct CalculateInterestRatesParams {\\n    uint256 unbacked;\\n    uint256 liquidityAdded;\\n    uint256 liquidityTaken;\\n    uint256 totalStableDebt;\\n    uint256 totalVariableDebt;\\n    uint256 averageStableBorrowRate;\\n    uint256 reserveFactor;\\n    address reserve;\\n    address aToken;\\n  }\\n\\n  struct InitReserveParams {\\n    address asset;\\n    address aTokenAddress;\\n    address stableDebtAddress;\\n    address variableDebtAddress;\\n    address interestRateStrategyAddress;\\n    uint16 reservesCount;\\n    uint16 maxNumberReserves;\\n  }\\n}\\n\",\"keccak256\":\"0xe5c6db4edc44768b334b6f9271e1ae21c81d6ab0692c2740cce0c56c4ac433dd\",\"license\":\"BUSL-1.1\"},\"contracts/interface/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport {IPoolAddressesProvider} from \\\"./IPoolAddressesProvider.sol\\\";\\r\\nimport {DataTypes} from \\\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title IPool\\r\\n * @author Aave\\r\\n * @notice Defines the basic interface for an Aave Pool.\\r\\n */\\r\\ninterface IPool {\\r\\n    /**\\r\\n     * @dev Emitted on mintUnbacked()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address initiating the supply\\r\\n     * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\\r\\n     * @param amount The amount of supplied assets\\r\\n     * @param referralCode The referral code used\\r\\n     */\\r\\n    event MintUnbacked(\\r\\n        address indexed reserve,\\r\\n        address user,\\r\\n        address indexed onBehalfOf,\\r\\n        uint256 amount,\\r\\n        uint16 indexed referralCode\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on backUnbacked()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param backer The address paying for the backing\\r\\n     * @param amount The amount added as backing\\r\\n     * @param fee The amount paid in fees\\r\\n     */\\r\\n    event BackUnbacked(\\r\\n        address indexed reserve,\\r\\n        address indexed backer,\\r\\n        uint256 amount,\\r\\n        uint256 fee\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on supply()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address initiating the supply\\r\\n     * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\\r\\n     * @param amount The amount supplied\\r\\n     * @param referralCode The referral code used\\r\\n     */\\r\\n    event Supply(\\r\\n        address indexed reserve,\\r\\n        address user,\\r\\n        address indexed onBehalfOf,\\r\\n        uint256 amount,\\r\\n        uint16 indexed referralCode\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on withdraw()\\r\\n     * @param reserve The address of the underlying asset being withdrawn\\r\\n     * @param user The address initiating the withdrawal, owner of aTokens\\r\\n     * @param to The address that will receive the underlying\\r\\n     * @param amount The amount to be withdrawn\\r\\n     */\\r\\n    event Withdraw(\\r\\n        address indexed reserve,\\r\\n        address indexed user,\\r\\n        address indexed to,\\r\\n        uint256 amount\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\\r\\n     * @param reserve The address of the underlying asset being borrowed\\r\\n     * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\\r\\n     * initiator of the transaction on flashLoan()\\r\\n     * @param onBehalfOf The address that will be getting the debt\\r\\n     * @param amount The amount borrowed out\\r\\n     * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\\r\\n     * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\\r\\n     * @param referralCode The referral code used\\r\\n     */\\r\\n    event Borrow(\\r\\n        address indexed reserve,\\r\\n        address user,\\r\\n        address indexed onBehalfOf,\\r\\n        uint256 amount,\\r\\n        DataTypes.InterestRateMode interestRateMode,\\r\\n        uint256 borrowRate,\\r\\n        uint16 indexed referralCode\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on repay()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The beneficiary of the repayment, getting his debt reduced\\r\\n     * @param repayer The address of the user initiating the repay(), providing the funds\\r\\n     * @param amount The amount repaid\\r\\n     * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\\r\\n     */\\r\\n    event Repay(\\r\\n        address indexed reserve,\\r\\n        address indexed user,\\r\\n        address indexed repayer,\\r\\n        uint256 amount,\\r\\n        bool useATokens\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on swapBorrowRateMode()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address of the user swapping his rate mode\\r\\n     * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\\r\\n     */\\r\\n    event SwapBorrowRateMode(\\r\\n        address indexed reserve,\\r\\n        address indexed user,\\r\\n        DataTypes.InterestRateMode interestRateMode\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @param totalDebt The total isolation mode debt for the reserve\\r\\n     */\\r\\n    event IsolationModeTotalDebtUpdated(\\r\\n        address indexed asset,\\r\\n        uint256 totalDebt\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the user selects a certain asset category for eMode\\r\\n     * @param user The address of the user\\r\\n     * @param categoryId The category id\\r\\n     */\\r\\n    event UserEModeSet(address indexed user, uint8 categoryId);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address of the user enabling the usage as collateral\\r\\n     */\\r\\n    event ReserveUsedAsCollateralEnabled(\\r\\n        address indexed reserve,\\r\\n        address indexed user\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on setUserUseReserveAsCollateral()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address of the user enabling the usage as collateral\\r\\n     */\\r\\n    event ReserveUsedAsCollateralDisabled(\\r\\n        address indexed reserve,\\r\\n        address indexed user\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on rebalanceStableBorrowRate()\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param user The address of the user for which the rebalance has been executed\\r\\n     */\\r\\n    event RebalanceStableBorrowRate(\\r\\n        address indexed reserve,\\r\\n        address indexed user\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted on flashLoan()\\r\\n     * @param target The address of the flash loan receiver contract\\r\\n     * @param initiator The address initiating the flash loan\\r\\n     * @param asset The address of the asset being flash borrowed\\r\\n     * @param amount The amount flash borrowed\\r\\n     * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\\r\\n     * @param premium The fee flash borrowed\\r\\n     * @param referralCode The referral code used\\r\\n     */\\r\\n    event FlashLoan(\\r\\n        address indexed target,\\r\\n        address initiator,\\r\\n        address indexed asset,\\r\\n        uint256 amount,\\r\\n        DataTypes.InterestRateMode interestRateMode,\\r\\n        uint256 premium,\\r\\n        uint16 indexed referralCode\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when a borrower is liquidated.\\r\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\r\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\r\\n     * @param user The address of the borrower getting liquidated\\r\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\r\\n     * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\\r\\n     * @param liquidator The address of the liquidator\\r\\n     * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\\r\\n     * to receive the underlying collateral asset directly\\r\\n     */\\r\\n    event LiquidationCall(\\r\\n        address indexed collateralAsset,\\r\\n        address indexed debtAsset,\\r\\n        address indexed user,\\r\\n        uint256 debtToCover,\\r\\n        uint256 liquidatedCollateralAmount,\\r\\n        address liquidator,\\r\\n        bool receiveAToken\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the state of a reserve is updated.\\r\\n     * @param reserve The address of the underlying asset of the reserve\\r\\n     * @param liquidityRate The next liquidity rate\\r\\n     * @param stableBorrowRate The next stable borrow rate\\r\\n     * @param variableBorrowRate The next variable borrow rate\\r\\n     * @param liquidityIndex The next liquidity index\\r\\n     * @param variableBorrowIndex The next variable borrow index\\r\\n     */\\r\\n    event ReserveDataUpdated(\\r\\n        address indexed reserve,\\r\\n        uint256 liquidityRate,\\r\\n        uint256 stableBorrowRate,\\r\\n        uint256 variableBorrowRate,\\r\\n        uint256 liquidityIndex,\\r\\n        uint256 variableBorrowIndex\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\\r\\n     * @param reserve The address of the reserve\\r\\n     * @param amountMinted The amount minted to the treasury\\r\\n     */\\r\\n    event MintedToTreasury(address indexed reserve, uint256 amountMinted);\\r\\n\\r\\n    /**\\r\\n     * @notice Mints an `amount` of aTokens to the `onBehalfOf`\\r\\n     * @param asset The address of the underlying asset to mint\\r\\n     * @param amount The amount to mint\\r\\n     * @param onBehalfOf The address that will receive the aTokens\\r\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     */\\r\\n    function mintUnbacked(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        address onBehalfOf,\\r\\n        uint16 referralCode\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Back the current unbacked underlying with `amount` and pay `fee`.\\r\\n     * @param asset The address of the underlying asset to back\\r\\n     * @param amount The amount to back\\r\\n     * @param fee The amount paid in fees\\r\\n     * @return The backed amount\\r\\n     */\\r\\n    function backUnbacked(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        uint256 fee\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\r\\n     * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\\r\\n     * @param asset The address of the underlying asset to supply\\r\\n     * @param amount The amount to be supplied\\r\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\r\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\r\\n     *   is a different wallet\\r\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     */\\r\\n    function supply(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        address onBehalfOf,\\r\\n        uint16 referralCode\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Supply with transfer approval of asset to be supplied done via permit function\\r\\n     * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\\r\\n     * @param asset The address of the underlying asset to supply\\r\\n     * @param amount The amount to be supplied\\r\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\r\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\r\\n     *   is a different wallet\\r\\n     * @param deadline The deadline timestamp that the permit is valid\\r\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     * @param permitV The V parameter of ERC712 permit sig\\r\\n     * @param permitR The R parameter of ERC712 permit sig\\r\\n     * @param permitS The S parameter of ERC712 permit sig\\r\\n     */\\r\\n    function supplyWithPermit(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        address onBehalfOf,\\r\\n        uint16 referralCode,\\r\\n        uint256 deadline,\\r\\n        uint8 permitV,\\r\\n        bytes32 permitR,\\r\\n        bytes32 permitS\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\r\\n     * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\r\\n     * @param asset The address of the underlying asset to withdraw\\r\\n     * @param amount The underlying amount to be withdrawn\\r\\n     *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\r\\n     * @param to The address that will receive the underlying, same as msg.sender if the user\\r\\n     *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\r\\n     *   different wallet\\r\\n     * @return The final amount withdrawn\\r\\n     */\\r\\n    function withdraw(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        address to\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\r\\n     * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\\r\\n     * corresponding debt token (StableDebtToken or VariableDebtToken)\\r\\n     * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\r\\n     *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\r\\n     * @param asset The address of the underlying asset to borrow\\r\\n     * @param amount The amount to be borrowed\\r\\n     * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\r\\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\\r\\n     * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\r\\n     * if he has been given credit delegation allowance\\r\\n     */\\r\\n    function borrow(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        uint256 interestRateMode,\\r\\n        uint16 referralCode,\\r\\n        address onBehalfOf\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\r\\n     * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\r\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\r\\n     * @param amount The amount to repay\\r\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\r\\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\r\\n     * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\\r\\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\r\\n     * other borrower whose debt should be removed\\r\\n     * @return The final amount repaid\\r\\n     */\\r\\n    function repay(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        uint256 interestRateMode,\\r\\n        address onBehalfOf\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Repay with transfer approval of asset to be repaid done via permit function\\r\\n     * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\\r\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\r\\n     * @param amount The amount to repay\\r\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\r\\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\r\\n     * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\r\\n     * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\r\\n     * other borrower whose debt should be removed\\r\\n     * @param deadline The deadline timestamp that the permit is valid\\r\\n     * @param permitV The V parameter of ERC712 permit sig\\r\\n     * @param permitR The R parameter of ERC712 permit sig\\r\\n     * @param permitS The S parameter of ERC712 permit sig\\r\\n     * @return The final amount repaid\\r\\n     */\\r\\n    function repayWithPermit(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        uint256 interestRateMode,\\r\\n        address onBehalfOf,\\r\\n        uint256 deadline,\\r\\n        uint8 permitV,\\r\\n        bytes32 permitR,\\r\\n        bytes32 permitS\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\\r\\n     * equivalent debt tokens\\r\\n     * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\\r\\n     * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\\r\\n     * balance is not enough to cover the whole debt\\r\\n     * @param asset The address of the borrowed underlying asset previously borrowed\\r\\n     * @param amount The amount to repay\\r\\n     * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\r\\n     * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\r\\n     * @return The final amount repaid\\r\\n     */\\r\\n    function repayWithATokens(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        uint256 interestRateMode\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\\r\\n     * @param asset The address of the underlying asset borrowed\\r\\n     * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\\r\\n     */\\r\\n    function swapBorrowRateMode(\\r\\n        address asset,\\r\\n        uint256 interestRateMode\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\r\\n     * - Users can be rebalanced if the following conditions are satisfied:\\r\\n     *     1. Usage ratio is above 95%\\r\\n     *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\\r\\n     *        much has been borrowed at a stable rate and suppliers are not earning enough\\r\\n     * @param asset The address of the underlying asset borrowed\\r\\n     * @param user The address of the user to be rebalanced\\r\\n     */\\r\\n    function rebalanceStableBorrowRate(address asset, address user) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\\r\\n     * @param asset The address of the underlying asset supplied\\r\\n     * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\\r\\n     */\\r\\n    function setUserUseReserveAsCollateral(\\r\\n        address asset,\\r\\n        bool useAsCollateral\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\r\\n     * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\r\\n     *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\r\\n     * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\r\\n     * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\r\\n     * @param user The address of the borrower getting liquidated\\r\\n     * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\r\\n     * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\\r\\n     * to receive the underlying collateral asset directly\\r\\n     */\\r\\n    function liquidationCall(\\r\\n        address collateralAsset,\\r\\n        address debtAsset,\\r\\n        address user,\\r\\n        uint256 debtToCover,\\r\\n        bool receiveAToken\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\\r\\n     * as long as the amount taken plus a fee is returned.\\r\\n     * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\\r\\n     * into consideration. For further details please visit https://docs.aave.com/developers/\\r\\n     * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\\r\\n     * @param assets The addresses of the assets being flash-borrowed\\r\\n     * @param amounts The amounts of the assets being flash-borrowed\\r\\n     * @param interestRateModes Types of the debt to open if the flash loan is not returned:\\r\\n     *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\r\\n     *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\r\\n     *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\r\\n     * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\r\\n     * @param params Variadic packed params to pass to the receiver as extra information\\r\\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     */\\r\\n    function flashLoan(\\r\\n        address receiverAddress,\\r\\n        address[] calldata assets,\\r\\n        uint256[] calldata amounts,\\r\\n        uint256[] calldata interestRateModes,\\r\\n        address onBehalfOf,\\r\\n        bytes calldata params,\\r\\n        uint16 referralCode\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\\r\\n     * as long as the amount taken plus a fee is returned.\\r\\n     * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\\r\\n     * into consideration. For further details please visit https://docs.aave.com/developers/\\r\\n     * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\\r\\n     * @param asset The address of the asset being flash-borrowed\\r\\n     * @param amount The amount of the asset being flash-borrowed\\r\\n     * @param params Variadic packed params to pass to the receiver as extra information\\r\\n     * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     */\\r\\n    function flashLoanSimple(\\r\\n        address receiverAddress,\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        bytes calldata params,\\r\\n        uint16 referralCode\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the user account data across all the reserves\\r\\n     * @param user The address of the user\\r\\n     * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\\r\\n     * @return totalDebtBase The total debt of the user in the base currency used by the price feed\\r\\n     * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\\r\\n     * @return currentLiquidationThreshold The liquidation threshold of the user\\r\\n     * @return ltv The loan to value of The user\\r\\n     * @return healthFactor The current health factor of the user\\r\\n     */\\r\\n    function getUserAccountData(\\r\\n        address user\\r\\n    )\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256 totalCollateralBase,\\r\\n            uint256 totalDebtBase,\\r\\n            uint256 availableBorrowsBase,\\r\\n            uint256 currentLiquidationThreshold,\\r\\n            uint256 ltv,\\r\\n            uint256 healthFactor\\r\\n        );\\r\\n\\r\\n    /**\\r\\n     * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\\r\\n     * interest rate strategy\\r\\n     * @dev Only callable by the PoolConfigurator contract\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @param aTokenAddress The address of the aToken that will be assigned to the reserve\\r\\n     * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\\r\\n     * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\\r\\n     * @param interestRateStrategyAddress The address of the interest rate strategy contract\\r\\n     */\\r\\n    function initReserve(\\r\\n        address asset,\\r\\n        address aTokenAddress,\\r\\n        address stableDebtAddress,\\r\\n        address variableDebtAddress,\\r\\n        address interestRateStrategyAddress\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Drop a reserve\\r\\n     * @dev Only callable by the PoolConfigurator contract\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     */\\r\\n    function dropReserve(address asset) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the interest rate strategy contract\\r\\n     * @dev Only callable by the PoolConfigurator contract\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @param rateStrategyAddress The address of the interest rate strategy contract\\r\\n     */\\r\\n    function setReserveInterestRateStrategyAddress(\\r\\n        address asset,\\r\\n        address rateStrategyAddress\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Sets the configuration bitmap of the reserve as a whole\\r\\n     * @dev Only callable by the PoolConfigurator contract\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @param configuration The new configuration bitmap\\r\\n     */\\r\\n    function setConfiguration(\\r\\n        address asset,\\r\\n        DataTypes.ReserveConfigurationMap calldata configuration\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the configuration of the reserve\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @return The configuration of the reserve\\r\\n     */\\r\\n    function getConfiguration(\\r\\n        address asset\\r\\n    ) external view returns (DataTypes.ReserveConfigurationMap memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the configuration of the user across all the reserves\\r\\n     * @param user The user address\\r\\n     * @return The configuration of the user\\r\\n     */\\r\\n    function getUserConfiguration(\\r\\n        address user\\r\\n    ) external view returns (DataTypes.UserConfigurationMap memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the normalized income of the reserve\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @return The reserve's normalized income\\r\\n     */\\r\\n    function getReserveNormalizedIncome(\\r\\n        address asset\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the normalized variable debt per unit of asset\\r\\n     * @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\\r\\n     * \\\"dynamic\\\" variable index based on time, current stored index and virtual rate at the current\\r\\n     * moment (approx. a borrower would get if opening a position). This means that is always used in\\r\\n     * combination with variable debt supply/balances.\\r\\n     * If using this function externally, consider that is possible to have an increasing normalized\\r\\n     * variable debt that is not equivalent to how the variable debt index would be updated in storage\\r\\n     * (e.g. only updates with non-zero variable debt supply)\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @return The reserve normalized variable debt\\r\\n     */\\r\\n    function getReserveNormalizedVariableDebt(\\r\\n        address asset\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the state and configuration of the reserve\\r\\n     * @param asset The address of the underlying asset of the reserve\\r\\n     * @return The state and configuration data of the reserve\\r\\n     */\\r\\n    function getReserveData(\\r\\n        address asset\\r\\n    ) external view returns (DataTypes.ReserveData memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Validates and finalizes an aToken transfer\\r\\n     * @dev Only callable by the overlying aToken of the `asset`\\r\\n     * @param asset The address of the underlying asset of the aToken\\r\\n     * @param from The user from which the aTokens are transferred\\r\\n     * @param to The user receiving the aTokens\\r\\n     * @param amount The amount being transferred/withdrawn\\r\\n     * @param balanceFromBefore The aToken balance of the `from` user before the transfer\\r\\n     * @param balanceToBefore The aToken balance of the `to` user before the transfer\\r\\n     */\\r\\n    function finalizeTransfer(\\r\\n        address asset,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 balanceFromBefore,\\r\\n        uint256 balanceToBefore\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the list of the underlying assets of all the initialized reserves\\r\\n     * @dev It does not include dropped reserves\\r\\n     * @return The addresses of the underlying assets of the initialized reserves\\r\\n     */\\r\\n    function getReservesList() external view returns (address[] memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\\r\\n     * @param id The id of the reserve as stored in the DataTypes.ReserveData struct\\r\\n     * @return The address of the reserve associated with id\\r\\n     */\\r\\n    function getReserveAddressById(uint16 id) external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the PoolAddressesProvider connected to this contract\\r\\n     * @return The address of the PoolAddressesProvider\\r\\n     */\\r\\n    function ADDRESSES_PROVIDER()\\r\\n        external\\r\\n        view\\r\\n        returns (IPoolAddressesProvider);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the protocol fee on the bridging\\r\\n     * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\\r\\n     */\\r\\n    function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\\r\\n     * - A part is sent to aToken holders as extra, one time accumulated interest\\r\\n     * - A part is collected by the protocol treasury\\r\\n     * @dev The total premium is calculated on the total borrowed amount\\r\\n     * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\\r\\n     * @dev Only callable by the PoolConfigurator contract\\r\\n     * @param flashLoanPremiumTotal The total premium, expressed in bps\\r\\n     * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\\r\\n     */\\r\\n    function updateFlashloanPremiums(\\r\\n        uint128 flashLoanPremiumTotal,\\r\\n        uint128 flashLoanPremiumToProtocol\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Configures a new category for the eMode.\\r\\n     * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\\r\\n     * The category 0 is reserved as it's the default for volatile assets\\r\\n     * @param id The id of the category\\r\\n     * @param config The configuration of the category\\r\\n     */\\r\\n    function configureEModeCategory(\\r\\n        uint8 id,\\r\\n        DataTypes.EModeCategory memory config\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the data of an eMode category\\r\\n     * @param id The id of the category\\r\\n     * @return The configuration data of the category\\r\\n     */\\r\\n    function getEModeCategoryData(\\r\\n        uint8 id\\r\\n    ) external view returns (DataTypes.EModeCategory memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Allows a user to use the protocol in eMode\\r\\n     * @param categoryId The id of the category\\r\\n     */\\r\\n    function setUserEMode(uint8 categoryId) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the eMode the user is using\\r\\n     * @param user The address of the user\\r\\n     * @return The eMode id\\r\\n     */\\r\\n    function getUserEMode(address user) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Resets the isolation mode total debt of the given asset to zero\\r\\n     * @dev It requires the given asset has zero debt ceiling\\r\\n     * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\\r\\n     */\\r\\n    function resetIsolationModeTotalDebt(address asset) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\\r\\n     * @return The percentage of available liquidity to borrow, expressed in bps\\r\\n     */\\r\\n    function MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the total fee on flash loans\\r\\n     * @return The total fee on flashloans\\r\\n     */\\r\\n    function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the part of the bridge fees sent to protocol\\r\\n     * @return The bridge fee sent to the protocol treasury\\r\\n     */\\r\\n    function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the part of the flashloan fees sent to protocol\\r\\n     * @return The flashloan fee sent to the protocol treasury\\r\\n     */\\r\\n    function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the maximum number of reserves supported to be listed in this Pool\\r\\n     * @return The maximum number of reserves supported\\r\\n     */\\r\\n    function MAX_NUMBER_RESERVES() external view returns (uint16);\\r\\n\\r\\n    /**\\r\\n     * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\\r\\n     * @param assets The list of reserves for which the minting needs to be executed\\r\\n     */\\r\\n    function mintToTreasury(address[] calldata assets) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Rescue and transfer tokens locked in this contract\\r\\n     * @param token The address of the token\\r\\n     * @param to The address of the recipient\\r\\n     * @param amount The amount of token to transfer\\r\\n     */\\r\\n    function rescueTokens(address token, address to, uint256 amount) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\r\\n     * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\\r\\n     * @dev Deprecated: Use the `supply` function instead\\r\\n     * @param asset The address of the underlying asset to supply\\r\\n     * @param amount The amount to be supplied\\r\\n     * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\r\\n     *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\r\\n     *   is a different wallet\\r\\n     * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\r\\n     *   0 if the action is executed directly by the user, without any middle-man\\r\\n     */\\r\\n    function deposit(\\r\\n        address asset,\\r\\n        uint256 amount,\\r\\n        address onBehalfOf,\\r\\n        uint16 referralCode\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x5e51bb7e7bc50d82b2e5eec845ef6112b993c7566da80ab1b237f2d4db215bb2\",\"license\":\"AGPL-3.0\"},\"contracts/interface/IPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title IPoolAddressesProvider\\r\\n * @author Aave\\r\\n * @notice Defines the basic interface for a Pool Addresses Provider.\\r\\n */\\r\\ninterface IPoolAddressesProvider {\\r\\n    /**\\r\\n     * @dev Emitted when the market identifier is updated.\\r\\n     * @param oldMarketId The old id of the market\\r\\n     * @param newMarketId The new id of the market\\r\\n     */\\r\\n    event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool is updated.\\r\\n     * @param oldAddress The old address of the Pool\\r\\n     * @param newAddress The new address of the Pool\\r\\n     */\\r\\n    event PoolUpdated(address indexed oldAddress, address indexed newAddress);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool configurator is updated.\\r\\n     * @param oldAddress The old address of the PoolConfigurator\\r\\n     * @param newAddress The new address of the PoolConfigurator\\r\\n     */\\r\\n    event PoolConfiguratorUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the price oracle is updated.\\r\\n     * @param oldAddress The old address of the PriceOracle\\r\\n     * @param newAddress The new address of the PriceOracle\\r\\n     */\\r\\n    event PriceOracleUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the ACL manager is updated.\\r\\n     * @param oldAddress The old address of the ACLManager\\r\\n     * @param newAddress The new address of the ACLManager\\r\\n     */\\r\\n    event ACLManagerUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the ACL admin is updated.\\r\\n     * @param oldAddress The old address of the ACLAdmin\\r\\n     * @param newAddress The new address of the ACLAdmin\\r\\n     */\\r\\n    event ACLAdminUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the price oracle sentinel is updated.\\r\\n     * @param oldAddress The old address of the PriceOracleSentinel\\r\\n     * @param newAddress The new address of the PriceOracleSentinel\\r\\n     */\\r\\n    event PriceOracleSentinelUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool data provider is updated.\\r\\n     * @param oldAddress The old address of the PoolDataProvider\\r\\n     * @param newAddress The new address of the PoolDataProvider\\r\\n     */\\r\\n    event PoolDataProviderUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when a new proxy is created.\\r\\n     * @param id The identifier of the proxy\\r\\n     * @param proxyAddress The address of the created proxy contract\\r\\n     * @param implementationAddress The address of the implementation contract\\r\\n     */\\r\\n    event ProxyCreated(\\r\\n        bytes32 indexed id,\\r\\n        address indexed proxyAddress,\\r\\n        address indexed implementationAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when a new non-proxied contract address is registered.\\r\\n     * @param id The identifier of the contract\\r\\n     * @param oldAddress The address of the old contract\\r\\n     * @param newAddress The address of the new contract\\r\\n     */\\r\\n    event AddressSet(\\r\\n        bytes32 indexed id,\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the implementation of the proxy registered with id is updated\\r\\n     * @param id The identifier of the contract\\r\\n     * @param proxyAddress The address of the proxy contract\\r\\n     * @param oldImplementationAddress The address of the old implementation contract\\r\\n     * @param newImplementationAddress The address of the new implementation contract\\r\\n     */\\r\\n    event AddressSetAsProxy(\\r\\n        bytes32 indexed id,\\r\\n        address indexed proxyAddress,\\r\\n        address oldImplementationAddress,\\r\\n        address indexed newImplementationAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the id of the Aave market to which this contract points to.\\r\\n     * @return The market id\\r\\n     */\\r\\n    function getMarketId() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Associates an id with a specific PoolAddressesProvider.\\r\\n     * @dev This can be used to create an onchain registry of PoolAddressesProviders to\\r\\n     * identify and validate multiple Aave markets.\\r\\n     * @param newMarketId The market id\\r\\n     */\\r\\n    function setMarketId(string calldata newMarketId) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns an address by its identifier.\\r\\n     * @dev The returned address might be an EOA or a contract, potentially proxied\\r\\n     * @dev It returns ZERO if there is no registered address with the given id\\r\\n     * @param id The id\\r\\n     * @return The address of the registered for the specified id\\r\\n     */\\r\\n    function getAddress(bytes32 id) external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice General function to update the implementation of a proxy registered with\\r\\n     * certain `id`. If there is no proxy registered, it will instantiate one and\\r\\n     * set as implementation the `newImplementationAddress`.\\r\\n     * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\\r\\n     * setter function, in order to avoid unexpected consequences\\r\\n     * @param id The id\\r\\n     * @param newImplementationAddress The address of the new implementation\\r\\n     */\\r\\n    function setAddressAsProxy(\\r\\n        bytes32 id,\\r\\n        address newImplementationAddress\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Sets an address for an id replacing the address saved in the addresses map.\\r\\n     * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\\r\\n     * @param id The id\\r\\n     * @param newAddress The address to set\\r\\n     */\\r\\n    function setAddress(bytes32 id, address newAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the Pool proxy.\\r\\n     * @return The Pool proxy address\\r\\n     */\\r\\n    function getPool() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the implementation of the Pool, or creates a proxy\\r\\n     * setting the new `pool` implementation when the function is called for the first time.\\r\\n     * @param newPoolImpl The new Pool implementation\\r\\n     */\\r\\n    function setPoolImpl(address newPoolImpl) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the PoolConfigurator proxy.\\r\\n     * @return The PoolConfigurator proxy address\\r\\n     */\\r\\n    function getPoolConfigurator() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\\r\\n     * setting the new `PoolConfigurator` implementation when the function is called for the first time.\\r\\n     * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\\r\\n     */\\r\\n    function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the price oracle.\\r\\n     * @return The address of the PriceOracle\\r\\n     */\\r\\n    function getPriceOracle() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the price oracle.\\r\\n     * @param newPriceOracle The address of the new PriceOracle\\r\\n     */\\r\\n    function setPriceOracle(address newPriceOracle) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the ACL manager.\\r\\n     * @return The address of the ACLManager\\r\\n     */\\r\\n    function getACLManager() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the ACL manager.\\r\\n     * @param newAclManager The address of the new ACLManager\\r\\n     */\\r\\n    function setACLManager(address newAclManager) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the ACL admin.\\r\\n     * @return The address of the ACL admin\\r\\n     */\\r\\n    function getACLAdmin() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the ACL admin.\\r\\n     * @param newAclAdmin The address of the new ACL admin\\r\\n     */\\r\\n    function setACLAdmin(address newAclAdmin) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the price oracle sentinel.\\r\\n     * @return The address of the PriceOracleSentinel\\r\\n     */\\r\\n    function getPriceOracleSentinel() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the price oracle sentinel.\\r\\n     * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\\r\\n     */\\r\\n    function setPriceOracleSentinel(address newPriceOracleSentinel) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the data provider.\\r\\n     * @return The address of the DataProvider\\r\\n     */\\r\\n    function getPoolDataProvider() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the data provider.\\r\\n     * @param newDataProvider The address of the new DataProvider\\r\\n     */\\r\\n    function setPoolDataProvider(address newDataProvider) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xdae3104180b155be2cc562afce11d8cd7ba7b659d5490c4f1cbf7ece22a156c7\",\"license\":\"AGPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"ADDRESSES_PROVIDER()":{"notice":"Returns the PoolAddressesProvider connected to this contract"},"BRIDGE_PROTOCOL_FEE()":{"notice":"Returns the part of the bridge fees sent to protocol"},"FLASHLOAN_PREMIUM_TOTAL()":{"notice":"Returns the total fee on flash loans"},"FLASHLOAN_PREMIUM_TO_PROTOCOL()":{"notice":"Returns the part of the flashloan fees sent to protocol"},"MAX_NUMBER_RESERVES()":{"notice":"Returns the maximum number of reserves supported to be listed in this Pool"},"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":{"notice":"Returns the percentage of available liquidity that can be borrowed at once at stable rate"},"backUnbacked(address,uint256,uint256)":{"notice":"Back the current unbacked underlying with `amount` and pay `fee`."},"borrow(address,uint256,uint256,uint16,address)":{"notice":"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`"},"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":{"notice":"Configures a new category for the eMode."},"deposit(address,uint256,address,uint16)":{"notice":"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"},"dropReserve(address)":{"notice":"Drop a reserve"},"finalizeTransfer(address,address,address,uint256,uint256,uint256)":{"notice":"Validates and finalizes an aToken transfer"},"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":{"notice":"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."},"flashLoanSimple(address,address,uint256,bytes,uint16)":{"notice":"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."},"getConfiguration(address)":{"notice":"Returns the configuration of the reserve"},"getEModeCategoryData(uint8)":{"notice":"Returns the data of an eMode category"},"getReserveAddressById(uint16)":{"notice":"Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct"},"getReserveData(address)":{"notice":"Returns the state and configuration of the reserve"},"getReserveNormalizedIncome(address)":{"notice":"Returns the normalized income of the reserve"},"getReserveNormalizedVariableDebt(address)":{"notice":"Returns the normalized variable debt per unit of asset"},"getReservesList()":{"notice":"Returns the list of the underlying assets of all the initialized reserves"},"getUserAccountData(address)":{"notice":"Returns the user account data across all the reserves"},"getUserConfiguration(address)":{"notice":"Returns the configuration of the user across all the reserves"},"getUserEMode(address)":{"notice":"Returns the eMode the user is using"},"initReserve(address,address,address,address,address)":{"notice":"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy"},"liquidationCall(address,address,address,uint256,bool)":{"notice":"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk"},"mintToTreasury(address[])":{"notice":"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens"},"mintUnbacked(address,uint256,address,uint16)":{"notice":"Mints an `amount` of aTokens to the `onBehalfOf`"},"rebalanceStableBorrowRate(address,address)":{"notice":"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough"},"repay(address,uint256,uint256,address)":{"notice":"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"},"repayWithATokens(address,uint256,uint256)":{"notice":"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens"},"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":{"notice":"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"},"rescueTokens(address,address,uint256)":{"notice":"Rescue and transfer tokens locked in this contract"},"resetIsolationModeTotalDebt(address)":{"notice":"Resets the isolation mode total debt of the given asset to zero"},"setConfiguration(address,(uint256))":{"notice":"Sets the configuration bitmap of the reserve as a whole"},"setReserveInterestRateStrategyAddress(address,address)":{"notice":"Updates the address of the interest rate strategy contract"},"setUserEMode(uint8)":{"notice":"Allows a user to use the protocol in eMode"},"setUserUseReserveAsCollateral(address,bool)":{"notice":"Allows suppliers to enable/disable a specific supplied asset as collateral"},"supply(address,uint256,address,uint16)":{"notice":"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"},"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":{"notice":"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"},"swapBorrowRateMode(address,uint256)":{"notice":"Allows a borrower to swap his debt between stable and variable mode, or vice versa"},"updateBridgeProtocolFee(uint256)":{"notice":"Updates the protocol fee on the bridging"},"updateFlashloanPremiums(uint128,uint128)":{"notice":"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury"},"withdraw(address,uint256,address)":{"notice":"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC"}},"notice":"Defines the basic interface for an Aave Pool.","version":1}}},"contracts/interface/IPoolAddressesProvider.sol":{"IPoolAddressesProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ACLAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ACLManagerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"AddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":false,"internalType":"address","name":"oldImplementationAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"AddressSetAsProxy","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"oldMarketId","type":"string"},{"indexed":true,"internalType":"string","name":"newMarketId","type":"string"}],"name":"MarketIdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolConfiguratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolDataProviderUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleSentinelUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":true,"internalType":"address","name":"implementationAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"inputs":[],"name":"getACLAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getACLManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketId","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolConfigurator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolDataProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracleSentinel","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAclAdmin","type":"address"}],"name":"setACLAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAclManager","type":"address"}],"name":"setACLManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newAddress","type":"address"}],"name":"setAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"setAddressAsProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newMarketId","type":"string"}],"name":"setMarketId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPoolConfiguratorImpl","type":"address"}],"name":"setPoolConfiguratorImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newDataProvider","type":"address"}],"name":"setPoolDataProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPoolImpl","type":"address"}],"name":"setPoolImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPriceOracle","type":"address"}],"name":"setPriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPriceOracleSentinel","type":"address"}],"name":"setPriceOracleSentinel","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","events":{"ACLAdminUpdated(address,address)":{"details":"Emitted when the ACL admin is updated.","params":{"newAddress":"The new address of the ACLAdmin","oldAddress":"The old address of the ACLAdmin"}},"ACLManagerUpdated(address,address)":{"details":"Emitted when the ACL manager is updated.","params":{"newAddress":"The new address of the ACLManager","oldAddress":"The old address of the ACLManager"}},"AddressSet(bytes32,address,address)":{"details":"Emitted when a new non-proxied contract address is registered.","params":{"id":"The identifier of the contract","newAddress":"The address of the new contract","oldAddress":"The address of the old contract"}},"AddressSetAsProxy(bytes32,address,address,address)":{"details":"Emitted when the implementation of the proxy registered with id is updated","params":{"id":"The identifier of the contract","newImplementationAddress":"The address of the new implementation contract","oldImplementationAddress":"The address of the old implementation contract","proxyAddress":"The address of the proxy contract"}},"MarketIdSet(string,string)":{"details":"Emitted when the market identifier is updated.","params":{"newMarketId":"The new id of the market","oldMarketId":"The old id of the market"}},"PoolConfiguratorUpdated(address,address)":{"details":"Emitted when the pool configurator is updated.","params":{"newAddress":"The new address of the PoolConfigurator","oldAddress":"The old address of the PoolConfigurator"}},"PoolDataProviderUpdated(address,address)":{"details":"Emitted when the pool data provider is updated.","params":{"newAddress":"The new address of the PoolDataProvider","oldAddress":"The old address of the PoolDataProvider"}},"PoolUpdated(address,address)":{"details":"Emitted when the pool is updated.","params":{"newAddress":"The new address of the Pool","oldAddress":"The old address of the Pool"}},"PriceOracleSentinelUpdated(address,address)":{"details":"Emitted when the price oracle sentinel is updated.","params":{"newAddress":"The new address of the PriceOracleSentinel","oldAddress":"The old address of the PriceOracleSentinel"}},"PriceOracleUpdated(address,address)":{"details":"Emitted when the price oracle is updated.","params":{"newAddress":"The new address of the PriceOracle","oldAddress":"The old address of the PriceOracle"}},"ProxyCreated(bytes32,address,address)":{"details":"Emitted when a new proxy is created.","params":{"id":"The identifier of the proxy","implementationAddress":"The address of the implementation contract","proxyAddress":"The address of the created proxy contract"}}},"kind":"dev","methods":{"getACLAdmin()":{"returns":{"_0":"The address of the ACL admin"}},"getACLManager()":{"returns":{"_0":"The address of the ACLManager"}},"getAddress(bytes32)":{"details":"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id","params":{"id":"The id"},"returns":{"_0":"The address of the registered for the specified id"}},"getMarketId()":{"returns":{"_0":"The market id"}},"getPool()":{"returns":{"_0":"The Pool proxy address"}},"getPoolConfigurator()":{"returns":{"_0":"The PoolConfigurator proxy address"}},"getPoolDataProvider()":{"returns":{"_0":"The address of the DataProvider"}},"getPriceOracle()":{"returns":{"_0":"The address of the PriceOracle"}},"getPriceOracleSentinel()":{"returns":{"_0":"The address of the PriceOracleSentinel"}},"setACLAdmin(address)":{"params":{"newAclAdmin":"The address of the new ACL admin"}},"setACLManager(address)":{"params":{"newAclManager":"The address of the new ACLManager"}},"setAddress(bytes32,address)":{"details":"IMPORTANT Use this function carefully, as it will do a hard replacement","params":{"id":"The id","newAddress":"The address to set"}},"setAddressAsProxy(bytes32,address)":{"details":"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences","params":{"id":"The id","newImplementationAddress":"The address of the new implementation"}},"setMarketId(string)":{"details":"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.","params":{"newMarketId":"The market id"}},"setPoolConfiguratorImpl(address)":{"params":{"newPoolConfiguratorImpl":"The new PoolConfigurator implementation"}},"setPoolDataProvider(address)":{"params":{"newDataProvider":"The address of the new DataProvider"}},"setPoolImpl(address)":{"params":{"newPoolImpl":"The new Pool implementation"}},"setPriceOracle(address)":{"params":{"newPriceOracle":"The address of the new PriceOracle"}},"setPriceOracleSentinel(address)":{"params":{"newPriceOracleSentinel":"The address of the new PriceOracleSentinel"}}},"title":"IPoolAddressesProvider","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getACLAdmin()":"0e67178c","getACLManager()":"707cd716","getAddress(bytes32)":"21f8a721","getMarketId()":"568ef470","getPool()":"026b1d5f","getPoolConfigurator()":"631adfca","getPoolDataProvider()":"e860accb","getPriceOracle()":"fca513a8","getPriceOracleSentinel()":"5eb88d3d","setACLAdmin(address)":"76d84ffc","setACLManager(address)":"ed301ca9","setAddress(bytes32,address)":"ca446dd9","setAddressAsProxy(bytes32,address)":"5dcc528c","setMarketId(string)":"f67b1847","setPoolConfiguratorImpl(address)":"e4ca28b7","setPoolDataProvider(address)":"e44e9ed1","setPoolImpl(address)":"a1564406","setPriceOracle(address)":"530e784f","setPriceOracleSentinel(address)":"74944cec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"AddressSetAsProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldMarketId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolDataProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleSentinelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getACLAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACLManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolDataProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleSentinel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclAdmin\",\"type\":\"address\"}],\"name\":\"setACLAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclManager\",\"type\":\"address\"}],\"name\":\"setACLManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolConfiguratorImpl\",\"type\":\"address\"}],\"name\":\"setPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDataProvider\",\"type\":\"address\"}],\"name\":\"setPoolDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolImpl\",\"type\":\"address\"}],\"name\":\"setPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracleSentinel\",\"type\":\"address\"}],\"name\":\"setPriceOracleSentinel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"ACLAdminUpdated(address,address)\":{\"details\":\"Emitted when the ACL admin is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLAdmin\",\"oldAddress\":\"The old address of the ACLAdmin\"}},\"ACLManagerUpdated(address,address)\":{\"details\":\"Emitted when the ACL manager is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLManager\",\"oldAddress\":\"The old address of the ACLManager\"}},\"AddressSet(bytes32,address,address)\":{\"details\":\"Emitted when a new non-proxied contract address is registered.\",\"params\":{\"id\":\"The identifier of the contract\",\"newAddress\":\"The address of the new contract\",\"oldAddress\":\"The address of the old contract\"}},\"AddressSetAsProxy(bytes32,address,address,address)\":{\"details\":\"Emitted when the implementation of the proxy registered with id is updated\",\"params\":{\"id\":\"The identifier of the contract\",\"newImplementationAddress\":\"The address of the new implementation contract\",\"oldImplementationAddress\":\"The address of the old implementation contract\",\"proxyAddress\":\"The address of the proxy contract\"}},\"MarketIdSet(string,string)\":{\"details\":\"Emitted when the market identifier is updated.\",\"params\":{\"newMarketId\":\"The new id of the market\",\"oldMarketId\":\"The old id of the market\"}},\"PoolConfiguratorUpdated(address,address)\":{\"details\":\"Emitted when the pool configurator is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolConfigurator\",\"oldAddress\":\"The old address of the PoolConfigurator\"}},\"PoolDataProviderUpdated(address,address)\":{\"details\":\"Emitted when the pool data provider is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolDataProvider\",\"oldAddress\":\"The old address of the PoolDataProvider\"}},\"PoolUpdated(address,address)\":{\"details\":\"Emitted when the pool is updated.\",\"params\":{\"newAddress\":\"The new address of the Pool\",\"oldAddress\":\"The old address of the Pool\"}},\"PriceOracleSentinelUpdated(address,address)\":{\"details\":\"Emitted when the price oracle sentinel is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracleSentinel\",\"oldAddress\":\"The old address of the PriceOracleSentinel\"}},\"PriceOracleUpdated(address,address)\":{\"details\":\"Emitted when the price oracle is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracle\",\"oldAddress\":\"The old address of the PriceOracle\"}},\"ProxyCreated(bytes32,address,address)\":{\"details\":\"Emitted when a new proxy is created.\",\"params\":{\"id\":\"The identifier of the proxy\",\"implementationAddress\":\"The address of the implementation contract\",\"proxyAddress\":\"The address of the created proxy contract\"}}},\"kind\":\"dev\",\"methods\":{\"getACLAdmin()\":{\"returns\":{\"_0\":\"The address of the ACL admin\"}},\"getACLManager()\":{\"returns\":{\"_0\":\"The address of the ACLManager\"}},\"getAddress(bytes32)\":{\"details\":\"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id\",\"params\":{\"id\":\"The id\"},\"returns\":{\"_0\":\"The address of the registered for the specified id\"}},\"getMarketId()\":{\"returns\":{\"_0\":\"The market id\"}},\"getPool()\":{\"returns\":{\"_0\":\"The Pool proxy address\"}},\"getPoolConfigurator()\":{\"returns\":{\"_0\":\"The PoolConfigurator proxy address\"}},\"getPoolDataProvider()\":{\"returns\":{\"_0\":\"The address of the DataProvider\"}},\"getPriceOracle()\":{\"returns\":{\"_0\":\"The address of the PriceOracle\"}},\"getPriceOracleSentinel()\":{\"returns\":{\"_0\":\"The address of the PriceOracleSentinel\"}},\"setACLAdmin(address)\":{\"params\":{\"newAclAdmin\":\"The address of the new ACL admin\"}},\"setACLManager(address)\":{\"params\":{\"newAclManager\":\"The address of the new ACLManager\"}},\"setAddress(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, as it will do a hard replacement\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setAddressAsProxy(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences\",\"params\":{\"id\":\"The id\",\"newImplementationAddress\":\"The address of the new implementation\"}},\"setMarketId(string)\":{\"details\":\"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.\",\"params\":{\"newMarketId\":\"The market id\"}},\"setPoolConfiguratorImpl(address)\":{\"params\":{\"newPoolConfiguratorImpl\":\"The new PoolConfigurator implementation\"}},\"setPoolDataProvider(address)\":{\"params\":{\"newDataProvider\":\"The address of the new DataProvider\"}},\"setPoolImpl(address)\":{\"params\":{\"newPoolImpl\":\"The new Pool implementation\"}},\"setPriceOracle(address)\":{\"params\":{\"newPriceOracle\":\"The address of the new PriceOracle\"}},\"setPriceOracleSentinel(address)\":{\"params\":{\"newPriceOracleSentinel\":\"The address of the new PriceOracleSentinel\"}}},\"title\":\"IPoolAddressesProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getACLAdmin()\":{\"notice\":\"Returns the address of the ACL admin.\"},\"getACLManager()\":{\"notice\":\"Returns the address of the ACL manager.\"},\"getAddress(bytes32)\":{\"notice\":\"Returns an address by its identifier.\"},\"getMarketId()\":{\"notice\":\"Returns the id of the Aave market to which this contract points to.\"},\"getPool()\":{\"notice\":\"Returns the address of the Pool proxy.\"},\"getPoolConfigurator()\":{\"notice\":\"Returns the address of the PoolConfigurator proxy.\"},\"getPoolDataProvider()\":{\"notice\":\"Returns the address of the data provider.\"},\"getPriceOracle()\":{\"notice\":\"Returns the address of the price oracle.\"},\"getPriceOracleSentinel()\":{\"notice\":\"Returns the address of the price oracle sentinel.\"},\"setACLAdmin(address)\":{\"notice\":\"Updates the address of the ACL admin.\"},\"setACLManager(address)\":{\"notice\":\"Updates the address of the ACL manager.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Sets an address for an id replacing the address saved in the addresses map.\"},\"setAddressAsProxy(bytes32,address)\":{\"notice\":\"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`.\"},\"setMarketId(string)\":{\"notice\":\"Associates an id with a specific PoolAddressesProvider.\"},\"setPoolConfiguratorImpl(address)\":{\"notice\":\"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.\"},\"setPoolDataProvider(address)\":{\"notice\":\"Updates the address of the data provider.\"},\"setPoolImpl(address)\":{\"notice\":\"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the address of the price oracle.\"},\"setPriceOracleSentinel(address)\":{\"notice\":\"Updates the address of the price oracle sentinel.\"}},\"notice\":\"Defines the basic interface for a Pool Addresses Provider.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IPoolAddressesProvider.sol\":\"IPoolAddressesProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @title IPoolAddressesProvider\\r\\n * @author Aave\\r\\n * @notice Defines the basic interface for a Pool Addresses Provider.\\r\\n */\\r\\ninterface IPoolAddressesProvider {\\r\\n    /**\\r\\n     * @dev Emitted when the market identifier is updated.\\r\\n     * @param oldMarketId The old id of the market\\r\\n     * @param newMarketId The new id of the market\\r\\n     */\\r\\n    event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool is updated.\\r\\n     * @param oldAddress The old address of the Pool\\r\\n     * @param newAddress The new address of the Pool\\r\\n     */\\r\\n    event PoolUpdated(address indexed oldAddress, address indexed newAddress);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool configurator is updated.\\r\\n     * @param oldAddress The old address of the PoolConfigurator\\r\\n     * @param newAddress The new address of the PoolConfigurator\\r\\n     */\\r\\n    event PoolConfiguratorUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the price oracle is updated.\\r\\n     * @param oldAddress The old address of the PriceOracle\\r\\n     * @param newAddress The new address of the PriceOracle\\r\\n     */\\r\\n    event PriceOracleUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the ACL manager is updated.\\r\\n     * @param oldAddress The old address of the ACLManager\\r\\n     * @param newAddress The new address of the ACLManager\\r\\n     */\\r\\n    event ACLManagerUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the ACL admin is updated.\\r\\n     * @param oldAddress The old address of the ACLAdmin\\r\\n     * @param newAddress The new address of the ACLAdmin\\r\\n     */\\r\\n    event ACLAdminUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the price oracle sentinel is updated.\\r\\n     * @param oldAddress The old address of the PriceOracleSentinel\\r\\n     * @param newAddress The new address of the PriceOracleSentinel\\r\\n     */\\r\\n    event PriceOracleSentinelUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the pool data provider is updated.\\r\\n     * @param oldAddress The old address of the PoolDataProvider\\r\\n     * @param newAddress The new address of the PoolDataProvider\\r\\n     */\\r\\n    event PoolDataProviderUpdated(\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when a new proxy is created.\\r\\n     * @param id The identifier of the proxy\\r\\n     * @param proxyAddress The address of the created proxy contract\\r\\n     * @param implementationAddress The address of the implementation contract\\r\\n     */\\r\\n    event ProxyCreated(\\r\\n        bytes32 indexed id,\\r\\n        address indexed proxyAddress,\\r\\n        address indexed implementationAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when a new non-proxied contract address is registered.\\r\\n     * @param id The identifier of the contract\\r\\n     * @param oldAddress The address of the old contract\\r\\n     * @param newAddress The address of the new contract\\r\\n     */\\r\\n    event AddressSet(\\r\\n        bytes32 indexed id,\\r\\n        address indexed oldAddress,\\r\\n        address indexed newAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the implementation of the proxy registered with id is updated\\r\\n     * @param id The identifier of the contract\\r\\n     * @param proxyAddress The address of the proxy contract\\r\\n     * @param oldImplementationAddress The address of the old implementation contract\\r\\n     * @param newImplementationAddress The address of the new implementation contract\\r\\n     */\\r\\n    event AddressSetAsProxy(\\r\\n        bytes32 indexed id,\\r\\n        address indexed proxyAddress,\\r\\n        address oldImplementationAddress,\\r\\n        address indexed newImplementationAddress\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the id of the Aave market to which this contract points to.\\r\\n     * @return The market id\\r\\n     */\\r\\n    function getMarketId() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Associates an id with a specific PoolAddressesProvider.\\r\\n     * @dev This can be used to create an onchain registry of PoolAddressesProviders to\\r\\n     * identify and validate multiple Aave markets.\\r\\n     * @param newMarketId The market id\\r\\n     */\\r\\n    function setMarketId(string calldata newMarketId) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns an address by its identifier.\\r\\n     * @dev The returned address might be an EOA or a contract, potentially proxied\\r\\n     * @dev It returns ZERO if there is no registered address with the given id\\r\\n     * @param id The id\\r\\n     * @return The address of the registered for the specified id\\r\\n     */\\r\\n    function getAddress(bytes32 id) external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice General function to update the implementation of a proxy registered with\\r\\n     * certain `id`. If there is no proxy registered, it will instantiate one and\\r\\n     * set as implementation the `newImplementationAddress`.\\r\\n     * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\\r\\n     * setter function, in order to avoid unexpected consequences\\r\\n     * @param id The id\\r\\n     * @param newImplementationAddress The address of the new implementation\\r\\n     */\\r\\n    function setAddressAsProxy(\\r\\n        bytes32 id,\\r\\n        address newImplementationAddress\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Sets an address for an id replacing the address saved in the addresses map.\\r\\n     * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\\r\\n     * @param id The id\\r\\n     * @param newAddress The address to set\\r\\n     */\\r\\n    function setAddress(bytes32 id, address newAddress) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the Pool proxy.\\r\\n     * @return The Pool proxy address\\r\\n     */\\r\\n    function getPool() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the implementation of the Pool, or creates a proxy\\r\\n     * setting the new `pool` implementation when the function is called for the first time.\\r\\n     * @param newPoolImpl The new Pool implementation\\r\\n     */\\r\\n    function setPoolImpl(address newPoolImpl) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the PoolConfigurator proxy.\\r\\n     * @return The PoolConfigurator proxy address\\r\\n     */\\r\\n    function getPoolConfigurator() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\\r\\n     * setting the new `PoolConfigurator` implementation when the function is called for the first time.\\r\\n     * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\\r\\n     */\\r\\n    function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the price oracle.\\r\\n     * @return The address of the PriceOracle\\r\\n     */\\r\\n    function getPriceOracle() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the price oracle.\\r\\n     * @param newPriceOracle The address of the new PriceOracle\\r\\n     */\\r\\n    function setPriceOracle(address newPriceOracle) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the ACL manager.\\r\\n     * @return The address of the ACLManager\\r\\n     */\\r\\n    function getACLManager() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the ACL manager.\\r\\n     * @param newAclManager The address of the new ACLManager\\r\\n     */\\r\\n    function setACLManager(address newAclManager) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the ACL admin.\\r\\n     * @return The address of the ACL admin\\r\\n     */\\r\\n    function getACLAdmin() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the ACL admin.\\r\\n     * @param newAclAdmin The address of the new ACL admin\\r\\n     */\\r\\n    function setACLAdmin(address newAclAdmin) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the price oracle sentinel.\\r\\n     * @return The address of the PriceOracleSentinel\\r\\n     */\\r\\n    function getPriceOracleSentinel() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the price oracle sentinel.\\r\\n     * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\\r\\n     */\\r\\n    function setPriceOracleSentinel(address newPriceOracleSentinel) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the address of the data provider.\\r\\n     * @return The address of the DataProvider\\r\\n     */\\r\\n    function getPoolDataProvider() external view returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Updates the address of the data provider.\\r\\n     * @param newDataProvider The address of the new DataProvider\\r\\n     */\\r\\n    function setPoolDataProvider(address newDataProvider) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xdae3104180b155be2cc562afce11d8cd7ba7b659d5490c4f1cbf7ece22a156c7\",\"license\":\"AGPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"getACLAdmin()":{"notice":"Returns the address of the ACL admin."},"getACLManager()":{"notice":"Returns the address of the ACL manager."},"getAddress(bytes32)":{"notice":"Returns an address by its identifier."},"getMarketId()":{"notice":"Returns the id of the Aave market to which this contract points to."},"getPool()":{"notice":"Returns the address of the Pool proxy."},"getPoolConfigurator()":{"notice":"Returns the address of the PoolConfigurator proxy."},"getPoolDataProvider()":{"notice":"Returns the address of the data provider."},"getPriceOracle()":{"notice":"Returns the address of the price oracle."},"getPriceOracleSentinel()":{"notice":"Returns the address of the price oracle sentinel."},"setACLAdmin(address)":{"notice":"Updates the address of the ACL admin."},"setACLManager(address)":{"notice":"Updates the address of the ACL manager."},"setAddress(bytes32,address)":{"notice":"Sets an address for an id replacing the address saved in the addresses map."},"setAddressAsProxy(bytes32,address)":{"notice":"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`."},"setMarketId(string)":{"notice":"Associates an id with a specific PoolAddressesProvider."},"setPoolConfiguratorImpl(address)":{"notice":"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time."},"setPoolDataProvider(address)":{"notice":"Updates the address of the data provider."},"setPoolImpl(address)":{"notice":"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time."},"setPriceOracle(address)":{"notice":"Updates the address of the price oracle."},"setPriceOracleSentinel(address)":{"notice":"Updates the address of the price oracle sentinel."}},"notice":"Defines the basic interface for a Pool Addresses Provider.","version":1}}}}}}
{"id":"6aa5a97138e4da9b60437e28b93cd70d","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(\n        address account\n    ) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(\n        address owner,\n        address spender\n    ) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(\n        address spender,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(\n        address spender,\n        uint256 addedValue\n    ) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(\n        address spender,\n        uint256 subtractedValue\n    ) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(\n            currentAllowance >= subtractedValue,\n            \"ERC20: decreased allowance below zero\"\n        );\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(\n            fromBalance >= amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(\n                currentAllowance >= amount,\n                \"ERC20: insufficient allowance\"\n            );\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"contracts/Exchange.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./PriceChecker.sol\";\nimport \"./TradingFees.sol\";\n\n/// @notice Library SafeMath used to prevent overflows and underflows\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Exchange is Ownable {\n    using SafeMath for uint256; //for prevention of integer overflow\n    PriceChecker priceChecker;\n    TradingFees tradingFees;\n    Wallet wallet;\n\n    uint256 decimals = 10 ** 18;\n    address public ethToken = address(0);\n\n    //Token Address List available in DEX\n    _tokenInfo[] public tokenList;\n\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\n    mapping(address => mapping(address => mapping(uint256 => _Order[])))\n        public s_orderBook;\n\n    mapping(address => mapping(uint256 => _filledOrder[]))\n        public s_filledOrders;\n\n    uint256 public s_orderId = 0;\n    bool private s_isManual = true;\n\n    struct _tokenInfo {\n        address add;\n        uint256 decimals;\n    }\n\n    struct _fillOrderValues {\n        uint256 rate;\n        uint256 amount;\n    }\n\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\n    struct _Order {\n        uint256 id;\n        Side side;\n        address user;\n        address tokenA;\n        uint256 amountA;\n        address tokenB;\n        uint256 amountB;\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\n        uint256 originalAmountA;\n        uint256 originalAmountB;\n        bool waiveFees;\n    }\n\n    //For any order that is filled even if it is partially filled or fully filled\n    struct _filledOrder {\n        uint256 id;\n        Side side;\n        address user;\n        address tokenA;\n        address tokenB;\n        uint256 amountFilled;\n        uint256 fillRate;\n        uint256 originalRate;\n        uint256 originalAmountA;\n        uint256 originalAmountB;\n        bool feesWaived;\n        uint256 feesPaid; //in terms of USD\n    }\n\n    enum Side {\n        BUY,\n        SELL\n    }\n\n    //add events\n    /// @notice Event when an order is placed on an exchange\n    event Order(\n        uint256 id,\n        Side side,\n        address user,\n        address tokenA,\n        uint256 amountA,\n        address tokenB,\n        uint256 amountB,\n        uint256 rate,\n        uint256 originalAmountA,\n        uint256 originalAmountB,\n        bool waiveFees\n    );\n\n    /// @notice Event when an order is cancelled\n    event Cancel(\n        uint256 id,\n        Side side,\n        address user,\n        address tokenA,\n        uint256 amountA,\n        address tokenB,\n        uint256 amountB,\n        uint256 rate,\n        uint256 originalAmountA,\n        uint256 originalAmountB,\n        bool waiveFees\n    );\n\n    event fillBuyOrder(\n        _Order remainingOrder,\n        uint256 amountBought,\n        uint256 fillBuyRate,\n        bool feesWaived,\n        uint256 feesPaid\n    );\n\n    event fillSellOrder(\n        _Order remainingOrder,\n        uint256 amountSold,\n        uint256 fillSellRate,\n        bool feesWaived,\n        uint256 feesPaid\n    );\n\n    constructor(address _wallet, address _fees, address _priceChecker) {\n        wallet = Wallet(_wallet);\n        tradingFees = TradingFees(_fees);\n        priceChecker = PriceChecker(_priceChecker);\n    }\n\n    function createLimitBuyOrder(\n        // TokenA/TokenB\n        address _tokenA,\n        uint256 _amountA,\n        address _tokenB,\n        uint256 _amountB,\n        uint256 _rate,\n        bool _waiveFees\n    ) external validToken(_tokenA) validToken(_tokenB) {\n        //Amount user has deposited in the DEX must be >= value he wants to buy\n        require(\n            wallet.balanceOf(_tokenB, msg.sender).sub(\n                wallet.getlockedFunds(msg.sender, _tokenB)\n            ) >= _amountB,\n            \"Insufficient Funds\"\n        );\n\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenB, _amountB, true);\n\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\n            _Order(\n                s_orderId,\n                Side.BUY,\n                msg.sender,\n                _tokenA,\n                _amountA,\n                _tokenB,\n                _amountB,\n                _rate,\n                _amountA,\n                _amountB,\n                _waiveFees\n            )\n        );\n\n        emit Order(\n            s_orderId,\n            Side.BUY,\n            msg.sender,\n            _tokenA,\n            _amountA,\n            _tokenB,\n            _amountB,\n            _rate,\n            _amountA,\n            _amountB,\n            _waiveFees\n        );\n\n        s_orderId = s_orderId.add(1);\n    }\n\n    function createLimitSellOrder(\n        address _tokenA,\n        uint256 _amountA,\n        address _tokenB,\n        uint256 _amountB,\n        uint256 _rate,\n        bool _waiveFees\n    ) external validToken(_tokenA) validToken(_tokenB) {\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\n        require(\n            wallet.balanceOf(_tokenA, msg.sender).sub(\n                wallet.getlockedFunds(msg.sender, _tokenA)\n            ) >= _amountA,\n            \"Insufficient Funds\"\n        );\n\n        //Lock the funds (tokens) in the wallet\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenA, _amountA, true);\n\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\n            _Order(\n                s_orderId,\n                Side.SELL,\n                msg.sender,\n                _tokenA,\n                _amountA,\n                _tokenB,\n                _amountB,\n                _rate,\n                _amountA,\n                _amountB,\n                _waiveFees\n            )\n        );\n\n        emit Order(\n            s_orderId,\n            Side.SELL,\n            msg.sender,\n            _tokenA,\n            _amountA,\n            _tokenB,\n            _amountB,\n            _rate,\n            _amountA,\n            _amountB,\n            _waiveFees\n        );\n\n        s_orderId = s_orderId.add(1);\n    }\n\n    function cancelOrder(\n        Side side,\n        uint256 _id,\n        address _tokenA,\n        address _tokenB\n    )\n        public\n        validOrder(_id, side, _tokenA, _tokenB)\n        validToken(_tokenA)\n        validToken(_tokenB)\n    {\n        uint256 _side = uint256(side);\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\n        uint256 size = _order.length;\n        _Order memory order;\n\n        uint256 index;\n        for (uint256 i = 0; i < size; i++) {\n            if (_order[i].id == _id) {\n                index = i;\n                order = _order[i];\n                break;\n            }\n        }\n\n        //Manual cancellation of orders\n        if (s_isManual) {\n            require(msg.sender == order.user, \"Not Owner\");\n\n            //Unlock funds\n            if (side == Side.BUY) {\n                wallet.exchangeUpdateLockedFunds(\n                    msg.sender,\n                    order.tokenB,\n                    order.amountB,\n                    false\n                );\n            } else if (side == Side.SELL) {\n                wallet.exchangeUpdateLockedFunds(\n                    msg.sender,\n                    order.tokenA,\n                    order.amountA,\n                    false\n                );\n            }\n        }\n\n        for (uint256 j = index; j < size - 1; j++) {\n            _order[j] = _order[j.add(1)];\n        }\n        delete _order[size.sub(1)];\n        _order.pop();\n\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\n\n        emit Cancel(\n            _id,\n            order.side,\n            order.user,\n            order.tokenA,\n            order.amountA,\n            order.tokenB,\n            order.amountB,\n            order.rate,\n            order.originalAmountA,\n            order.originalAmountB,\n            order.waiveFees\n        );\n    }\n\n    function fillOrder(\n        Side side,\n        uint256 _id,\n        address _tokenA,\n        address _tokenB,\n        _fillOrderValues memory a\n    )\n        internal\n        validOrder(_id, side, _tokenA, _tokenB)\n        validToken(_tokenA)\n        validToken(_tokenB)\n    {\n        uint256 _side = uint256(side);\n        (_Order memory order, uint256 index) = getOrderFromArray(\n            _tokenA,\n            _tokenB,\n            _side,\n            _id\n        );\n\n        require(order.amountA >= a.amount, \"Invalid Order Amount to fill\");\n\n        order.amountA = order.amountA.sub(a.amount);\n        order.amountB = order.amountB.sub(\n            order.rate.mul(a.amount).div(decimals)\n        );\n        s_orderBook[_tokenA][_tokenB][_side][index].amountA = order.amountA;\n        s_orderBook[_tokenA][_tokenB][_side][index].amountB = order.amountB;\n\n        uint256 fees = tradingFees.calculateFees(\n            a.amount,\n            a.rate,\n            order.tokenB\n        );\n        bool feesWaived = order.waiveFees &&\n            tradingFees.checkSufficientaDAI(fees, order.user);\n\n        if (side == Side.BUY) {\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\n        } else if (side == Side.SELL) {\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\n        }\n\n        if (order.amountA == 0) {\n            s_isManual = false;\n            cancelOrder(side, order.id, order.tokenA, order.tokenB); //remove filled orders\n            s_isManual = true;\n        }\n    }\n\n    function fillBuyOrders(\n        _Order memory order,\n        uint256 _amount,\n        uint256 _rate,\n        bool feesWaived,\n        uint256 fees\n    ) internal {\n        if (feesWaived) {\n            //Deduct aDAI\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\n            wallet.exchangeUpdateBalance(\n                tradingFees.aDAI(),\n                order.user,\n                aDAIToDeduct,\n                false\n            );\n            wallet.exchangeUpdateBalance(\n                tradingFees.aDAI(),\n                wallet.fundWallet(),\n                aDAIToDeduct,\n                true\n            );\n\n            //Credit Bought tokens\n            wallet.exchangeUpdateBalance(\n                order.tokenA,\n                order.user,\n                _amount,\n                true\n            );\n        } else {\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\n                order.tokenA,\n                fees\n            );\n            //Credit Bought tokens after minusing fees\n            wallet.exchangeUpdateBalance(\n                order.tokenA,\n                order.user,\n                _amount.sub(amountTokenToDeduct),\n                true\n            );\n\n            wallet.exchangeUpdateBalance(\n                order.tokenA,\n                wallet.fundWallet(),\n                amountTokenToDeduct,\n                true\n            );\n        }\n\n        //Original Locked Funds unlocked\n        wallet.exchangeUpdateLockedFunds(\n            order.user,\n            order.tokenB,\n            (order.rate.mul(_amount)).div(decimals),\n            false\n        );\n\n        //buyer update\n        //Buyer balance deducted from what he paid\n        wallet.exchangeUpdateBalance(\n            order.tokenB,\n            order.user,\n            (_rate.mul(_amount)).div(decimals),\n            false\n        );\n\n        s_filledOrders[order.user][0].push(\n            _filledOrder(\n                order.id,\n                order.side,\n                order.user,\n                order.tokenA,\n                order.tokenB,\n                _amount,\n                _rate,\n                order.rate,\n                order.originalAmountA,\n                order.originalAmountB,\n                feesWaived,\n                fees\n            )\n        );\n    }\n\n    function fillSellOrders(\n        _Order memory order,\n        uint256 _amount,\n        uint256 _rate,\n        bool feesWaived,\n        uint256 fees\n    ) internal {\n        if (feesWaived) {\n            //Deduct aDAI\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\n            wallet.exchangeUpdateBalance(\n                tradingFees.aDAI(),\n                order.user,\n                aDAIToDeduct,\n                false\n            );\n            wallet.exchangeUpdateBalance(\n                tradingFees.aDAI(),\n                wallet.fundWallet(),\n                aDAIToDeduct,\n                true\n            );\n\n            //Credit Earned tokens\n            wallet.exchangeUpdateBalance(\n                order.tokenB,\n                order.user,\n                (_rate.mul(_amount)).div(decimals),\n                true\n            );\n        } else {\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\n                order.tokenB,\n                fees\n            );\n            wallet.exchangeUpdateBalance(\n                order.tokenA,\n                wallet.fundWallet(),\n                amountTokensToDeduct,\n                true\n            );\n            //Credit Earned tokens after minusing fees\n            wallet.exchangeUpdateBalance(\n                order.tokenB,\n                order.user,\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\n                true\n            );\n        }\n\n        wallet.exchangeUpdateLockedFunds(\n            order.user,\n            order.tokenA,\n            _amount,\n            false\n        );\n        //seller update\n        wallet.exchangeUpdateBalance(order.tokenA, order.user, _amount, false);\n\n        s_filledOrders[order.user][1].push(\n            _filledOrder(\n                order.id,\n                order.side,\n                order.user,\n                order.tokenA,\n                order.tokenB,\n                _amount,\n                _rate,\n                order.rate,\n                order.originalAmountA,\n                order.originalAmountB,\n                feesWaived,\n                fees\n            )\n        );\n    }\n\n    function matchOrders(\n        address _tokenA,\n        address _tokenB,\n        uint256 _id,\n        Side side\n    )\n        internal\n        validOrder(_id, side, _tokenA, _tokenB)\n        validToken(_tokenA)\n        validToken(_tokenB)\n    {\n        uint256 saleTokenAmt;\n\n        if (side == Side.BUY) {\n            //Retrieve sell order to match\n            _Order[] memory _sellOrder = s_orderBook[_tokenA][_tokenB][1];\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\n                //Retrieve buy order to be filled\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\n                    _tokenA,\n                    _tokenB,\n                    uint8(side),\n                    _id\n                );\n                //sell order hit buyer's limit price & tokenB matches\n                if (\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\n                    buyOrderToFill.user != _sellOrder[i].user\n                ) {\n                    _Order memory sellOrder = _sellOrder[i];\n                    //if buyer's amount to buy > seller's amount to sell\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\n                        saleTokenAmt = sellOrder.amountA;\n                    }\n                    //if seller's amount to sell >= buyer's amount to buy\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\n                        saleTokenAmt = buyOrderToFill.amountA;\n                    }\n\n                    //Verify current balance\n                    require(\n                        wallet.balanceOf(\n                            buyOrderToFill.tokenB,\n                            buyOrderToFill.user\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\n                        \"Insufficient Buyer Token Balance\"\n                    );\n                    require(\n                        wallet.balanceOf(_tokenA, sellOrder.user) >=\n                            saleTokenAmt,\n                        \"Insufficient Seller Token Balance\"\n                    );\n\n                    //update orders\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\n                        sellOrder.rate,\n                        saleTokenAmt\n                    );\n                    fillOrder(Side.BUY, _id, _tokenA, _tokenB, fillOrderValues);\n                    fillOrder(\n                        Side.SELL,\n                        sellOrder.id,\n                        _tokenA,\n                        _tokenB,\n                        fillOrderValues\n                    );\n                }\n\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\n                if (!orderExist) break;\n            }\n        } else if (side == Side.SELL) {\n            //Retrieve buy order to match\n            _Order[] memory _buyOrder = s_orderBook[_tokenA][_tokenB][0];\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\n                //Retrieve sell order to be filled\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\n                    _tokenA,\n                    _tokenB,\n                    1,\n                    _id\n                );\n                //sell order hit buyer's limit price\n                if (\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\n                    _buyOrder[i].user != sellOrderToFill.user\n                ) {\n                    _Order memory order = _buyOrder[i];\n\n                    //if seller's amount to sell > buyer's amount to buy\n                    if (sellOrderToFill.amountA > order.amountA) {\n                        saleTokenAmt = order.amountA;\n                    }\n                    //if buyer's amount to buy > seller's amount to sell\n                    else if (sellOrderToFill.amountA <= order.amountA) {\n                        saleTokenAmt = sellOrderToFill.amountA;\n                    }\n                    //Verify current balance\n                    require(\n                        wallet.balanceOf(_tokenA, sellOrderToFill.user) >=\n                            saleTokenAmt,\n                        \"Insufficient Seller Token Balance\"\n                    );\n                    require(\n                        wallet.balanceOf(order.tokenB, order.user) >=\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\n                        \"Insufficient Buyer Token Balance\"\n                    );\n\n                    //update orders\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\n                        order.rate,\n                        saleTokenAmt\n                    );\n                    fillOrder(\n                        Side.SELL,\n                        _id,\n                        _tokenA,\n                        _tokenB,\n                        fillOrderValues\n                    );\n                    fillOrder(\n                        Side.BUY,\n                        order.id,\n                        _tokenA,\n                        _tokenB,\n                        fillOrderValues\n                    );\n                }\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\n                if (!orderExist) break;\n            }\n        }\n    }\n\n    function getOrderLength(\n        Side side,\n        address _tokenA,\n        address _tokenB\n    ) public view returns (uint256) {\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\n    }\n\n    function getOrder(\n        address _tokenA,\n        address _tokenB,\n        uint256 index,\n        Side side\n    ) public view returns (_Order memory) {\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][\n            index\n        ];\n        return (order);\n    }\n\n    function getFilledOrderLength(\n        address _user,\n        Side side\n    ) public view returns (uint256) {\n        return s_filledOrders[_user][uint256(side)].length;\n    }\n\n    function getFilledOrder(\n        address _user,\n        Side side,\n        uint256 index\n    ) public view returns (_filledOrder memory) {\n        _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\n            index\n        ];\n        return (filledOrder);\n    }\n\n    function getOrderFromArray(\n        address _tokenA,\n        address _tokenB,\n        uint256 side,\n        uint256 _id\n    ) public view returns (_Order memory, uint256) {\n        uint256 i = 0;\n        _Order[] memory _order = s_orderBook[_tokenA][_tokenB][side];\n        _Order memory order;\n        for (i; i < _order.length; i++) {\n            if (_order[i].id == _id) {\n                order = _order[i];\n                break;\n            }\n        }\n        return (order, i);\n    }\n\n    function orderExists(\n        uint256 _id,\n        Side side,\n        address _tokenA,\n        address _tokenB\n    ) public view returns (bool) {\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\n\n        for (uint256 i = 0; i < orders.length; i++) {\n            if (orders[i].id == _id) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\n        require(!isVerifiedToken(_token), \"Token already verified\");\n        tokenList.push(_tokenInfo(_token, _decimals));\n    }\n\n    function isVerifiedToken(address _token) public view returns (bool) {\n        //uint256 size = tokenList.length;\n\n        for (uint256 i = 0; i < tokenList.length; i++) {\n            if (tokenList[i].add == _token) return true;\n        }\n        return false;\n    }\n\n    function getTokenInfo(address _token) public view returns (uint256) {\n        for (uint256 i = 0; i < tokenList.length; i++) {\n            if (tokenList[i].add == _token) {\n                return tokenList[i].decimals;\n            }\n        }\n    }\n\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\n        wallet = Wallet(_Walletaddress);\n    }\n\n    function setPriceCheckerAddress(\n        address _PriceCheckeraddress\n    ) public onlyOwner {\n        priceChecker = PriceChecker(_PriceCheckeraddress);\n    }\n\n    function setTradingFees(address _tradingFees) public onlyOwner {\n        tradingFees = TradingFees(_tradingFees);\n    }\n\n    modifier validOrder(\n        uint256 _id,\n        Side side,\n        address _tokenA,\n        address _tokenB\n    ) {\n        require(orderExists(_id, side, _tokenA, _tokenB), \"Invalid Order ID\");\n        _;\n    }\n\n    modifier validToken(address _token) {\n        require(isVerifiedToken(_token), \"Token unavailable in DEX\");\n        _;\n    }\n}\n"},"contracts/PriceChecker.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract PriceChecker is Ownable {\n    _priceFeed[] public priceFeeds;\n\n    struct _priceFeed {\n        string name;\n        address token;\n        AggregatorV3Interface priceFeed;\n    }\n\n    //only using PriceFeeds pegged to USD\n    function addPriceFeed(\n        string memory _name,\n        address _token,\n        address _address\n    ) external onlyOwner {\n        _priceFeed[] memory pricefeed = priceFeeds;\n        bool isAdded = false;\n        for (uint256 i = 0; i < pricefeed.length; i++) {\n            if (\n                keccak256(abi.encodePacked(_name)) ==\n                keccak256(abi.encodePacked(pricefeed[i].name))\n            ) {\n                isAdded = true;\n                break;\n            }\n        }\n        require(!isAdded, \"Price Feed already added\");\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\n    }\n\n    function getPriceFeed(\n        address _token\n    ) internal view returns (AggregatorV3Interface priceFeed) {\n        _priceFeed[] memory pricefeed = priceFeeds;\n\n        for (uint256 i = 0; i < pricefeed.length; i++) {\n            if (_token == pricefeed[i].token) {\n                return pricefeed[i].priceFeed;\n            }\n        }\n    }\n\n    function getPrice(address _address) external view returns (uint256) {\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\n        return uint256(answer);\n    }\n}\n"},"contracts/TradingFees.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./PriceChecker.sol\";\nimport \"./Wallet.sol\";\n\n/// @notice Library SafeMath used to prevent overflows and underflows\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract TradingFees is Ownable {\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\n    //and waive trading fees\n\n    using SafeMath for uint256; //for prevention of integer overflow\n\n    uint256 decimals = 10 ** 18;\n    address public daiToken =\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\n    PriceChecker private priceFeed;\n    Wallet wallet;\n\n    constructor(address _priceCheckerAddress) {\n        priceFeed = PriceChecker(_priceCheckerAddress);\n    }\n\n    function calculateFees(\n        uint256 _amount,\n        uint256 _rate,\n        address _refToken\n    ) public view returns (uint256) {\n        //Calculated based on TokenB price, require actual price in 18dp\n        //trading fees is 0.1% of trade = 0.001\n        //moving up 18dp is 0.001 x 10**18 = 10**14\n        //have to fetch tokenPrice from PriceFeed\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\n        uint256 value = (\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\n        ).div(decimals);\n        uint256 fees = value.div(10 ** 4);\n\n        return fees; //based on USD value\n    }\n\n    //Amount of DAI to deduct from fees\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\n        return uint256(amt);\n    }\n\n    //Amount of Tokens to deduct from fees\n    function amountTokensToDeduct(\n        address _refToken,\n        uint256 _fees\n    ) public view returns (uint256) {\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\n        return uint256(amt);\n    }\n\n    function checkSufficientaDAI(\n        uint256 _fees,\n        address _user\n    ) public view returns (bool) {\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\n        uint256 balance = wallet.s_tokens(aDAI, _user);\n\n        return balance >= amtDAI;\n    }\n\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\n        wallet = Wallet(_Walletaddress);\n    }\n\n    function setPriceCheckerAddress(\n        address _PriceCheckeraddress\n    ) public onlyOwner {\n        priceFeed = PriceChecker(_PriceCheckeraddress);\n    }\n}\n"},"contracts/Wallet.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20.sol\";\nimport \"./Exchange.sol\";\n\n/// @notice Library SafeMath used to prevent overflows and underflows\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Wallet is Ownable {\n    using SafeMath for uint256; //for prevention of integer overflow\n\n    address Owner;\n    address public fundWallet;\n    uint256 decimals = 18;\n    address public aDAI;\n\n    //For prevention of reentrancy\n    bool private locked;\n\n    address public ethToken = address(0);\n\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\n    mapping(address => mapping(address => uint256)) public lockedFunds;\n\n    Exchange exchange;\n    IERC20 token;\n\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\n\n    /// @notice Event when amount withdrawn exchange\n    event Withdraw(\n        address token,\n        address user,\n        uint256 amount,\n        uint256 balance\n    );\n\n    constructor() {\n        Owner = msg.sender;\n    }\n\n    function depositETH() external payable {\n        updateBalance(ethToken, msg.sender, msg.value, true);\n\n        emit Deposit(\n            ethToken,\n            msg.sender,\n            msg.value,\n            balanceOf(ethToken, msg.sender)\n        );\n    }\n\n    function withdrawETH(uint256 _amount) external {\n        require(\n            balanceOf(ethToken, msg.sender).sub(\n                getlockedFunds(msg.sender, ethToken)\n            ) >= _amount,\n            \"Insufficient balance ETH to withdraw\"\n        );\n        require(!locked, \"Reentrant call detected!\");\n        locked = true;\n        updateBalance(ethToken, msg.sender, _amount, false);\n        (bool success, ) = msg.sender.call{value: _amount}(\"\");\n        require(success, \"failed to send amount\");\n        locked = false;\n\n        emit Withdraw(\n            ethToken,\n            msg.sender,\n            _amount,\n            balanceOf(ethToken, msg.sender)\n        );\n    }\n\n    //from and transferFrom is from ERC20 contract\n    //_token should be an ERC20 token\n    function depositToken(\n        address _token,\n        uint256 _amount,\n        uint256 _decimals\n    ) external {\n        require(_token != ethToken, \"Invalid Token Type\");\n        require(\n            exchange.isVerifiedToken(_token) || _token == aDAI,\n            \"Token not verified on Exchange\"\n        );\n        //need to add a check to prove that it is an ERC20 token\n        token = IERC20(_token);\n\n        //Requires approval first\n        require(\n            token.transferFrom(msg.sender, address(this), _amount),\n            \"No Approval yet\"\n        );\n\n        updateBalance(\n            _token,\n            msg.sender,\n            _amount.mul(10 ** decimals.sub(_decimals)),\n            true\n        );\n\n        emit Deposit(\n            _token,\n            msg.sender,\n            _amount,\n            balanceOf(_token, msg.sender)\n        );\n    }\n\n    function withdrawToken(\n        address _token,\n        uint256 _amount,\n        uint256 _decimals\n    ) external {\n        require(_token != ethToken);\n        require(\n            exchange.isVerifiedToken(_token),\n            \"Token not verified on Exchange\"\n        );\n\n        require(\n            balanceOf(_token, msg.sender).sub(\n                getlockedFunds(msg.sender, _token)\n            ) >= _amount,\n            \"Insufficient Tokens to withdraw\"\n        );\n        require(!locked, \"Reentrant call detected!\");\n        locked = true;\n\n        token = IERC20(_token);\n        updateBalance(\n            _token,\n            msg.sender,\n            _amount.mul(10 ** decimals.sub(_decimals)),\n            false\n        );\n        require(\n            token.transfer(\n                msg.sender,\n                _amount.div(10 ** decimals.sub(_decimals))\n            )\n        );\n\n        locked = false;\n        emit Withdraw(\n            _token,\n            msg.sender,\n            _amount,\n            balanceOf(_token, msg.sender)\n        );\n    }\n\n    function getlockedFunds(\n        address _user,\n        address _token\n    ) public view returns (uint256) {\n        return lockedFunds[_user][_token];\n    }\n\n    function exchangeUpdateLockedFunds(\n        address _user,\n        address _token,\n        uint256 _amount,\n        bool isAdd\n    ) external isExchange {\n        updateLockedFunds(_user, _token, _amount, isAdd);\n    }\n\n    function updateLockedFunds(\n        address _user,\n        address _token,\n        uint256 _amount,\n        bool isAdd\n    ) internal {\n        if (isAdd) {\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\n                _amount\n            );\n        } else if (!isAdd) {\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\n                _amount\n            );\n        }\n    }\n\n    //balance of specific tokens in the dex owned by specific user\n    function balanceOf(\n        address _token,\n        address _user\n    ) public view returns (uint256) {\n        return s_tokens[_token][_user];\n    }\n\n    function exchangeUpdateBalance(\n        address _token,\n        address _user,\n        uint256 _amount,\n        bool isAdd\n    ) external isExchange {\n        updateBalance(_token, _user, _amount, isAdd);\n    }\n\n    function updateBalance(\n        address _token,\n        address _user,\n        uint256 _amount,\n        bool isAdd\n    ) internal {\n        if (isAdd) {\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\n        } else if (!isAdd) {\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\n        }\n    }\n\n    function updateFundWallet(address _fundwallet) public onlyOwner {\n        fundWallet = _fundwallet;\n    }\n\n    function withdrawToFundWallet(address _token, uint256 _decimals) external {\n        //Only allow fundWallet address to make the call\n        require(\n            msg.sender == fundWallet,\n            \"Invalid FundWallet address to withdraw\"\n        );\n        uint256 totalAmount = s_tokens[_token][fundWallet];\n        uint256 actualAmount = totalAmount.div(10 ** decimals.sub(_decimals));\n        token = IERC20(_token);\n\n        require(!locked, \"Reentrant call detected!\");\n        locked = true;\n        updateBalance(_token, fundWallet, totalAmount, false);\n        require(token.transfer(fundWallet, actualAmount));\n        locked = false;\n    }\n\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\n        exchange = Exchange(_exchangeAddress);\n    }\n\n    function updateaDaiAddress(address _address) public onlyOwner {\n        aDAI = address(_address);\n    }\n\n    modifier isExchange() {\n        require(msg.sender == address(exchange), \"Not Exchange contract\");\n        _;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/Exchange.sol:744:64:\n    |\n744 |     function getTokenInfo(address _token) public view returns (uint256) {\n    |                                                                ^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":21977,"file":"contracts/Exchange.sol","start":21970},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"67:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"110:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:0"},"scope":45,"src":"93:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"167:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"193:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:0"},"scope":45,"src":"147:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:0","nodeType":"VariableDeclaration","scope":31,"src":"289:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"355:7:0","nodeType":"VariableDeclaration","scope":31,"src":"348:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"377:6:0","nodeType":"VariableDeclaration","scope":31,"src":"370:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:0","nodeType":"VariableDeclaration","scope":31,"src":"391:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:0","nodeType":"VariableDeclaration","scope":31,"src":"416:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:0","nodeType":"VariableDeclaration","scope":31,"src":"441:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:0"},"scope":45,"src":"267:203:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"498:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"550:7:0","nodeType":"VariableDeclaration","scope":44,"src":"543:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"572:6:0","nodeType":"VariableDeclaration","scope":44,"src":"565:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:0","nodeType":"VariableDeclaration","scope":44,"src":"586:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:0","nodeType":"VariableDeclaration","scope":44,"src":"611:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:0","nodeType":"VariableDeclaration","scope":44,"src":"636:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:0"},"scope":45,"src":"474:191:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"57:610:0","usedErrors":[]}],"src":"32:636:0"},"id":0},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[283],"Ownable":[158]},"id":159,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":48,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":159,"sourceUnit":284,"src":"127:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":50,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":283,"src":"683:7:1"},"id":51,"nodeType":"InheritanceSpecifier","src":"683:7:1"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"159:494:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":158,"linearizedBaseContracts":[158,283],"name":"Ownable","nameLocation":"672:7:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":53,"mutability":"mutable","name":"_owner","nameLocation":"713:6:1","nodeType":"VariableDeclaration","scope":158,"src":"697:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":59,"name":"OwnershipTransferred","nameLocation":"732:20:1","nodeType":"EventDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:1","nodeType":"VariableDeclaration","scope":59,"src":"753:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:1","nodeType":"VariableDeclaration","scope":59,"src":"784:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:1"},"src":"726:84:1"},{"body":{"id":68,"nodeType":"Block","src":"926:49:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":64,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"955:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":63,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"936:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67,"nodeType":"ExpressionStatement","src":"936:32:1"}]},"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"816:91:1","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":69,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"923:2:1"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"926:0:1"},"scope":158,"src":"912:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":76,"nodeType":"Block","src":"1084:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":72,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1094:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":74,"nodeType":"ExpressionStatement","src":"1094:13:1"},{"id":75,"nodeType":"PlaceholderStatement","src":"1117:1:1"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"981:77:1","text":" @dev Throws if called by any account other than the owner."},"id":77,"name":"onlyOwner","nameLocation":"1072:9:1","nodeType":"ModifierDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"1081:2:1"},"src":"1063:62:1","virtual":false,"visibility":"internal"},{"body":{"id":85,"nodeType":"Block","src":"1256:30:1","statements":[{"expression":{"id":83,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1273:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":82,"id":84,"nodeType":"Return","src":"1266:13:1"}]},"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"1131:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":86,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:1","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"1215:2:1"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":86,"src":"1247:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:1"},"scope":158,"src":"1201:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":99,"nodeType":"Block","src":"1404:85:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":91,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1422:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":93,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1433:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":98,"nodeType":"ExpressionStatement","src":"1414:68:1"}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"1292:62:1","text":" @dev Throws if the sender is not the owner."},"id":100,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:1","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"1379:2:1"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"1404:0:1"},"scope":158,"src":"1359:130:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"1885:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:1","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":106,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1895:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"ExpressionStatement","src":"1895:30:1"}]},"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"1495:331:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":114,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1875:9:1"},"nodeType":"ModifierInvocation","src":"1875:9:1"}],"name":"renounceOwnership","nameLocation":"1840:17:1","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[],"src":"1857:2:1"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"1885:0:1"},"scope":158,"src":"1831:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":136,"nodeType":"Block","src":"2151:128:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2169:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:1","typeDescriptions":{}}},"id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"ExpressionStatement","src":"2161:73:1"},{"expression":{"arguments":[{"id":133,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2263:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":132,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2244:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":135,"nodeType":"ExpressionStatement","src":"2244:28:1"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"1938:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":137,"implemented":true,"kind":"function","modifiers":[{"id":120,"kind":"modifierInvocation","modifierName":{"id":119,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2141:9:1"},"nodeType":"ModifierInvocation","src":"2141:9:1"}],"name":"transferOwnership","nameLocation":"2090:17:1","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:1","nodeType":"VariableDeclaration","scope":137,"src":"2108:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:1"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"2151:0:1"},"scope":158,"src":"2081:198:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":156,"nodeType":"Block","src":"2496:124:1","statements":[{"assignments":[144],"declarations":[{"constant":false,"id":144,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:1","nodeType":"VariableDeclaration","scope":156,"src":"2506:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":146,"initialValue":{"id":145,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2525:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:1"},{"expression":{"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":147,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2541:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":148,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2550:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":150,"nodeType":"ExpressionStatement","src":"2541:17:1"},{"eventCall":{"arguments":[{"id":152,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2594:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":153,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2604:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":151,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"2573:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"EmitStatement","src":"2568:45:1"}]},"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"2285:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:1","nodeType":"FunctionDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:1","nodeType":"VariableDeclaration","scope":157,"src":"2461:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:1"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[],"src":"2496:0:1"},"scope":158,"src":"2433:187:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":159,"src":"654:1968:1","usedErrors":[]}],"src":"102:2521:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[236]},"id":237,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":160,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":236,"linearizedBaseContracts":[236],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":170,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":170,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":170,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":168,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":170,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":179,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":179,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":179,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":177,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":179,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":185,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":185,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":236,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":193,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":193,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":193,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":236,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":203,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":203,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":203,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":200,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":236,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":213,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":213,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":213,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":213,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":236,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":223,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":223,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":223,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":223,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":220,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":236,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":235,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"from","nameLocation":"2685:4:2","nodeType":"VariableDeclaration","scope":235,"src":"2677:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"to","nameLocation":"2707:2:2","nodeType":"VariableDeclaration","scope":235,"src":"2699:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"amount","nameLocation":"2727:6:2","nodeType":"VariableDeclaration","scope":235,"src":"2719:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:2"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":235,"src":"2758:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":232,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:2"},"scope":236,"src":"2646:118:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":237,"src":"202:2564:2","usedErrors":[]}],"src":"106:2661:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[236],"IERC20Metadata":[261]},"id":262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":238,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":262,"sourceUnit":237,"src":"135:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":241,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"305:6:3"},"id":242,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"160:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":261,"linearizedBaseContracts":[261,236],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":248,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":248,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":245,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":261,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":254,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":251,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":261,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":260,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":260,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":257,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":261,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":262,"src":"277:405:3","usedErrors":[]}],"src":"110:573:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[283]},"id":284,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":263,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:4"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"111:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":283,"linearizedBaseContracts":[283],"name":"Context","nameLocation":"626:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":272,"nodeType":"Block","src":"702:34:4","statements":[{"expression":{"expression":{"id":269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":268,"id":271,"nodeType":"Return","src":"712:17:4"}]},"id":273,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:4","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"659:2:4"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"693:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:4"},"scope":283,"src":"640:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":281,"nodeType":"Block","src":"809:32:4","statements":[{"expression":{"expression":{"id":278,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":277,"id":280,"nodeType":"Return","src":"819:15:4"}]},"id":282,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:4","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"759:2:4"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"793:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":275,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:4"},"scope":283,"src":"742:99:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":284,"src":"608:235:4","usedErrors":[]}],"src":"86:758:4"},"id":4},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[595]},"id":596,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":285,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"285:196:5","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":595,"linearizedBaseContracts":[595],"name":"SafeMath","nameLocation":"490:8:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":317,"nodeType":"Block","src":"717:140:5","statements":[{"id":316,"nodeType":"UncheckedBlock","src":"727:124:5","statements":[{"assignments":[299],"declarations":[{"constant":false,"id":299,"mutability":"mutable","name":"c","nameLocation":"759:1:5","nodeType":"VariableDeclaration","scope":316,"src":"751:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":303,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"763:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"767:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":304,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"786:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"790:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":311,"nodeType":"IfStatement","src":"782:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":297,"id":310,"nodeType":"Return","src":"793:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":313,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"838:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":297,"id":315,"nodeType":"Return","src":"824:16:5"}]}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"505:131:5","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":318,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:5","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"a","nameLocation":"665:1:5","nodeType":"VariableDeclaration","scope":318,"src":"657:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"b","nameLocation":"676:1:5","nodeType":"VariableDeclaration","scope":318,"src":"668:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:5"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":318,"src":"702:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":293,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":318,"src":"708:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:5"},"scope":595,"src":"641:216:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":345,"nodeType":"Block","src":"1078:113:5","statements":[{"id":344,"nodeType":"UncheckedBlock","src":"1088:97:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"1116:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"1120:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":337,"nodeType":"IfStatement","src":"1112:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":329,"id":336,"nodeType":"Return","src":"1123:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"1168:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":340,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"1172:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":329,"id":343,"nodeType":"Return","src":"1154:20:5"}]}]},"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"863:134:5","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:5","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"a","nameLocation":"1026:1:5","nodeType":"VariableDeclaration","scope":346,"src":"1018:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"b","nameLocation":"1037:1:5","nodeType":"VariableDeclaration","scope":346,"src":"1029:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:5"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1063:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":325,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1069:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:5"},"scope":595,"src":"1002:189:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":387,"nodeType":"Block","src":"1415:417:5","statements":[{"id":386,"nodeType":"UncheckedBlock","src":"1425:401:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1683:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":365,"nodeType":"IfStatement","src":"1679:28:5","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":357,"id":364,"nodeType":"Return","src":"1691:16:5"}},{"assignments":[367],"declarations":[{"constant":false,"id":367,"mutability":"mutable","name":"c","nameLocation":"1729:1:5","nodeType":"VariableDeclaration","scope":386,"src":"1721:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":371,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1733:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1737:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":372,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"1756:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1760:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":375,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1765:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":381,"nodeType":"IfStatement","src":"1752:33:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":357,"id":380,"nodeType":"Return","src":"1768:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":383,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"1813:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":357,"id":385,"nodeType":"Return","src":"1799:16:5"}]}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1197:137:5","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":388,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:5","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"a","nameLocation":"1363:1:5","nodeType":"VariableDeclaration","scope":388,"src":"1355:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"b","nameLocation":"1374:1:5","nodeType":"VariableDeclaration","scope":388,"src":"1366:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:5"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"1400:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"1406:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:5"},"scope":595,"src":"1339:493:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"2057:114:5","statements":[{"id":414,"nodeType":"UncheckedBlock","src":"2067:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":400,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2095:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":407,"nodeType":"IfStatement","src":"2091:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":399,"id":406,"nodeType":"Return","src":"2103:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"2148:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":410,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2152:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":399,"id":413,"nodeType":"Return","src":"2134:20:5"}]}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"1838:138:5","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:5","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"a","nameLocation":"2005:1:5","nodeType":"VariableDeclaration","scope":416,"src":"1997:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"b","nameLocation":"2016:1:5","nodeType":"VariableDeclaration","scope":416,"src":"2008:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:5"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":416,"src":"2042:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":416,"src":"2048:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:5"},"scope":595,"src":"1981:190:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":443,"nodeType":"Block","src":"2406:114:5","statements":[{"id":442,"nodeType":"UncheckedBlock","src":"2416:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":428,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2444:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":435,"nodeType":"IfStatement","src":"2440:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":427,"id":434,"nodeType":"Return","src":"2452:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":437,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2497:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":438,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2501:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":427,"id":441,"nodeType":"Return","src":"2483:20:5"}]}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"2177:148:5","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":444,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:5","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"a","nameLocation":"2354:1:5","nodeType":"VariableDeclaration","scope":444,"src":"2346:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"b","nameLocation":"2365:1:5","nodeType":"VariableDeclaration","scope":444,"src":"2357:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:5"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2391:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":423,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2397:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:5"},"scope":595,"src":"2330:190:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":458,"nodeType":"Block","src":"2822:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":454,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2839:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":455,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2843:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":453,"id":457,"nodeType":"Return","src":"2832:12:5"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2526:224:5","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":459,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:5","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"a","nameLocation":"2776:1:5","nodeType":"VariableDeclaration","scope":459,"src":"2768:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"b","nameLocation":"2787:1:5","nodeType":"VariableDeclaration","scope":459,"src":"2779:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:5"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":459,"src":"2813:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:5"},"scope":595,"src":"2755:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":473,"nodeType":"Block","src":"3189:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"3206:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"3210:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":468,"id":472,"nodeType":"Return","src":"3199:12:5"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"2857:260:5","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":474,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:5","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"a","nameLocation":"3143:1:5","nodeType":"VariableDeclaration","scope":474,"src":"3135:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"b","nameLocation":"3154:1:5","nodeType":"VariableDeclaration","scope":474,"src":"3146:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:5"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"3180:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:5"},"scope":595,"src":"3122:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":488,"nodeType":"Block","src":"3532:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3549:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":485,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3553:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":483,"id":487,"nodeType":"Return","src":"3542:12:5"}]},"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"3224:236:5","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:5","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"a","nameLocation":"3486:1:5","nodeType":"VariableDeclaration","scope":489,"src":"3478:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"b","nameLocation":"3497:1:5","nodeType":"VariableDeclaration","scope":489,"src":"3489:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:5"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"3523:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:5"},"scope":595,"src":"3465:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":503,"nodeType":"Block","src":"3917:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3934:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":500,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3938:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":498,"id":502,"nodeType":"Return","src":"3927:12:5"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"3567:278:5","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":504,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:5","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"a","nameLocation":"3871:1:5","nodeType":"VariableDeclaration","scope":504,"src":"3863:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"b","nameLocation":"3882:1:5","nodeType":"VariableDeclaration","scope":504,"src":"3874:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:5"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"3908:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:5"},"scope":595,"src":"3850:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":518,"nodeType":"Block","src":"4466:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4483:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":515,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"4487:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":513,"id":517,"nodeType":"Return","src":"4476:12:5"}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"3952:442:5","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":519,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:5","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"a","nameLocation":"4420:1:5","nodeType":"VariableDeclaration","scope":519,"src":"4412:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"b","nameLocation":"4431:1:5","nodeType":"VariableDeclaration","scope":519,"src":"4423:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:5"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":519,"src":"4457:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:5"},"scope":595,"src":"4399:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":543,"nodeType":"Block","src":"5084:106:5","statements":[{"id":542,"nodeType":"UncheckedBlock","src":"5094:90:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5126:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":533,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5131:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":535,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"5134:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":537,"nodeType":"ExpressionStatement","src":"5118:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5168:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5172:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":530,"id":541,"nodeType":"Return","src":"5161:12:5"}]}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"4501:453:5","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":544,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:5","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"a","nameLocation":"4989:1:5","nodeType":"VariableDeclaration","scope":544,"src":"4981:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"b","nameLocation":"5008:1:5","nodeType":"VariableDeclaration","scope":544,"src":"5000:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:5","nodeType":"VariableDeclaration","scope":544,"src":"5019:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":525,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:5"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":544,"src":"5075:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:5"},"scope":595,"src":"4959:231:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":568,"nodeType":"Block","src":"5799:105:5","statements":[{"id":567,"nodeType":"UncheckedBlock","src":"5809:89:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5841:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":560,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"5848:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"ExpressionStatement","src":"5833:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":563,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"5882:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":564,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5886:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":555,"id":566,"nodeType":"Return","src":"5875:12:5"}]}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"5196:473:5","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":569,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:5","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"a","nameLocation":"5704:1:5","nodeType":"VariableDeclaration","scope":569,"src":"5696:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"b","nameLocation":"5723:1:5","nodeType":"VariableDeclaration","scope":569,"src":"5715:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:5","nodeType":"VariableDeclaration","scope":569,"src":"5734:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":550,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:5"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":569,"src":"5790:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:5"},"scope":595,"src":"5674:230:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"6675:105:5","statements":[{"id":592,"nodeType":"UncheckedBlock","src":"6685:89:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":582,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"6717:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":585,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6724:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":581,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"6709:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6758:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":589,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"6762:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":580,"id":591,"nodeType":"Return","src":"6751:12:5"}]}]},"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"5910:635:5","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:5","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"a","nameLocation":"6580:1:5","nodeType":"VariableDeclaration","scope":594,"src":"6572:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"b","nameLocation":"6599:1:5","nodeType":"VariableDeclaration","scope":594,"src":"6591:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:5","nodeType":"VariableDeclaration","scope":594,"src":"6610:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":575,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:5"},"returnParameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"6666:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:5"},"scope":595,"src":"6550:230:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":596,"src":"482:6300:5","usedErrors":[]}],"src":"107:6676:5"},"id":5},"contracts/ERC20.sol":{"ast":{"absolutePath":"contracts/ERC20.sol","exportedSymbols":{"Context":[283],"ERC20":[1182],"IERC20":[236],"IERC20Metadata":[261]},"id":1183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":597,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1183,"sourceUnit":237,"src":"130:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1183,"sourceUnit":262,"src":"187:75:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1183,"sourceUnit":284,"src":"263:51:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":602,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":283,"src":"1505:7:6"},"id":603,"nodeType":"InheritanceSpecifier","src":"1505:7:6"},{"baseName":{"id":604,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"1514:6:6"},"id":605,"nodeType":"InheritanceSpecifier","src":"1514:6:6"},{"baseName":{"id":606,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":261,"src":"1522:14:6"},"id":607,"nodeType":"InheritanceSpecifier","src":"1522:14:6"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"316:1170:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1182,"linearizedBaseContracts":[1182,261,236,283],"name":"ERC20","nameLocation":"1496:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":611,"mutability":"mutable","name":"_balances","nameLocation":"1579:9:6","nodeType":"VariableDeclaration","scope":1182,"src":"1543:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":610,"keyType":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"1551:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1543:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"1562:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":617,"mutability":"mutable","name":"_allowances","nameLocation":"1651:11:6","nodeType":"VariableDeclaration","scope":1182,"src":"1595:67:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":616,"keyType":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"1603:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1595:47:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":615,"keyType":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"1622:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1614:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1633:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":619,"mutability":"mutable","name":"_totalSupply","nameLocation":"1685:12:6","nodeType":"VariableDeclaration","scope":1182,"src":"1669:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"1669:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":621,"mutability":"mutable","name":"_name","nameLocation":"1719:5:6","nodeType":"VariableDeclaration","scope":1182,"src":"1704:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":620,"name":"string","nodeType":"ElementaryTypeName","src":"1704:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":623,"mutability":"mutable","name":"_symbol","nameLocation":"1745:7:6","nodeType":"VariableDeclaration","scope":1182,"src":"1730:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":622,"name":"string","nodeType":"ElementaryTypeName","src":"1730:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":639,"nodeType":"Block","src":"2118:57:6","statements":[{"expression":{"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":631,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"2128:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":632,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"2136:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2128:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":634,"nodeType":"ExpressionStatement","src":"2128:13:6"},{"expression":{"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":635,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"2151:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":636,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"2161:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2151:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":638,"nodeType":"ExpressionStatement","src":"2151:17:6"}]},"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"1759:298:6","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":640,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"name_","nameLocation":"2088:5:6","nodeType":"VariableDeclaration","scope":640,"src":"2074:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":625,"name":"string","nodeType":"ElementaryTypeName","src":"2074:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"symbol_","nameLocation":"2109:7:6","nodeType":"VariableDeclaration","scope":640,"src":"2095:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":627,"name":"string","nodeType":"ElementaryTypeName","src":"2095:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2073:44:6"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"2118:0:6"},"scope":1182,"src":"2062:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[248],"body":{"id":649,"nodeType":"Block","src":"2309:29:6","statements":[{"expression":{"id":647,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"2326:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":646,"id":648,"nodeType":"Return","src":"2319:12:6"}]},"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"2181:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":650,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2249:4:6","nodeType":"FunctionDefinition","overrides":{"id":643,"nodeType":"OverrideSpecifier","overrides":[],"src":"2276:8:6"},"parameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"2253:2:6"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":650,"src":"2294:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":644,"name":"string","nodeType":"ElementaryTypeName","src":"2294:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2293:15:6"},"scope":1182,"src":"2240:98:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[254],"body":{"id":659,"nodeType":"Block","src":"2522:31:6","statements":[{"expression":{"id":657,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"2539:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":656,"id":658,"nodeType":"Return","src":"2532:14:6"}]},"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"2344:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":660,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2460:6:6","nodeType":"FunctionDefinition","overrides":{"id":653,"nodeType":"OverrideSpecifier","overrides":[],"src":"2489:8:6"},"parameters":{"id":652,"nodeType":"ParameterList","parameters":[],"src":"2466:2:6"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":660,"src":"2507:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":654,"name":"string","nodeType":"ElementaryTypeName","src":"2507:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2506:15:6"},"scope":1182,"src":"2451:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[260],"body":{"id":669,"nodeType":"Block","src":"3242:26:6","statements":[{"expression":{"hexValue":"3138","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3259:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":666,"id":668,"nodeType":"Return","src":"3252:9:6"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"2559:613:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":670,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3186:8:6","nodeType":"FunctionDefinition","overrides":{"id":663,"nodeType":"OverrideSpecifier","overrides":[],"src":"3217:8:6"},"parameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"3194:2:6"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"3235:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":664,"name":"uint8","nodeType":"ElementaryTypeName","src":"3235:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3234:7:6"},"scope":1182,"src":"3177:91:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[185],"body":{"id":679,"nodeType":"Block","src":"3398:36:6","statements":[{"expression":{"id":677,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"3415:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":676,"id":678,"nodeType":"Return","src":"3408:19:6"}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"3274:49:6","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":680,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3337:11:6","nodeType":"FunctionDefinition","overrides":{"id":673,"nodeType":"OverrideSpecifier","overrides":[],"src":"3371:8:6"},"parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"3348:2:6"},"returnParameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":680,"src":"3389:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"3389:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3388:9:6"},"scope":1182,"src":"3328:106:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[193],"body":{"id":693,"nodeType":"Block","src":"3589:42:6","statements":[{"expression":{"baseExpression":{"id":689,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"3606:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":691,"indexExpression":{"id":690,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3616:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3606:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":688,"id":692,"nodeType":"Return","src":"3599:25:6"}]},"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"3440:47:6","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":694,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3501:9:6","nodeType":"FunctionDefinition","overrides":{"id":685,"nodeType":"OverrideSpecifier","overrides":[],"src":"3562:8:6"},"parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"account","nameLocation":"3528:7:6","nodeType":"VariableDeclaration","scope":694,"src":"3520:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"3520:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3510:31:6"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"3580:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"3580:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3579:9:6"},"scope":1182,"src":"3492:139:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[203],"body":{"id":718,"nodeType":"Block","src":"3934:104:6","statements":[{"assignments":[706],"declarations":[{"constant":false,"id":706,"mutability":"mutable","name":"owner","nameLocation":"3952:5:6","nodeType":"VariableDeclaration","scope":718,"src":"3944:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":709,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":707,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"3960:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3960:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3944:28:6"},{"expression":{"arguments":[{"id":711,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"3992:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":712,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"3999:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"4003:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":710,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"3982:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3982:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"3982:28:6"},{"expression":{"hexValue":"74727565","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4027:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":704,"id":717,"nodeType":"Return","src":"4020:11:6"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"3637:185:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":719,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3836:8:6","nodeType":"FunctionDefinition","overrides":{"id":701,"nodeType":"OverrideSpecifier","overrides":[],"src":"3910:8:6"},"parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"to","nameLocation":"3862:2:6","nodeType":"VariableDeclaration","scope":719,"src":"3854:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"3854:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"amount","nameLocation":"3882:6:6","nodeType":"VariableDeclaration","scope":719,"src":"3874:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3844:50:6"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":719,"src":"3928:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":702,"name":"bool","nodeType":"ElementaryTypeName","src":"3928:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3927:6:6"},"scope":1182,"src":"3827:211:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[213],"body":{"id":736,"nodeType":"Block","src":"4216:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":730,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4233:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":732,"indexExpression":{"id":731,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"4245:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4233:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":734,"indexExpression":{"id":733,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"4252:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4233:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":729,"id":735,"nodeType":"Return","src":"4226:34:6"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"4044:47:6","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":737,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4105:9:6","nodeType":"FunctionDefinition","overrides":{"id":726,"nodeType":"OverrideSpecifier","overrides":[],"src":"4189:8:6"},"parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"owner","nameLocation":"4132:5:6","nodeType":"VariableDeclaration","scope":737,"src":"4124:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"4124:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"spender","nameLocation":"4155:7:6","nodeType":"VariableDeclaration","scope":737,"src":"4147:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"4147:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4114:54:6"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":737,"src":"4207:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"4207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4206:9:6"},"scope":1182,"src":"4096:171:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[223],"body":{"id":761,"nodeType":"Block","src":"4686:108:6","statements":[{"assignments":[749],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"owner","nameLocation":"4704:5:6","nodeType":"VariableDeclaration","scope":761,"src":"4696:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"4696:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":752,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":750,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"4712:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4712:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4696:28:6"},{"expression":{"arguments":[{"id":754,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"4743:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4750:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4759:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4734:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4734:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"4734:32:6"},{"expression":{"hexValue":"74727565","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4783:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":747,"id":760,"nodeType":"Return","src":"4776:11:6"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"4273:297:6","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":762,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4584:7:6","nodeType":"FunctionDefinition","overrides":{"id":744,"nodeType":"OverrideSpecifier","overrides":[],"src":"4662:8:6"},"parameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"spender","nameLocation":"4609:7:6","nodeType":"VariableDeclaration","scope":762,"src":"4601:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"4601:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"amount","nameLocation":"4634:6:6","nodeType":"VariableDeclaration","scope":762,"src":"4626:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"4626:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4591:55:6"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":762,"src":"4680:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"4680:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4679:6:6"},"scope":1182,"src":"4575:219:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[235],"body":{"id":794,"nodeType":"Block","src":"5489:153:6","statements":[{"assignments":[776],"declarations":[{"constant":false,"id":776,"mutability":"mutable","name":"spender","nameLocation":"5507:7:6","nodeType":"VariableDeclaration","scope":794,"src":"5499:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"5499:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":779,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":777,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"5517:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5499:30:6"},{"expression":{"arguments":[{"id":781,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5555:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":782,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"5561:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"5570:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":780,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5539:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5539:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"5539:38:6"},{"expression":{"arguments":[{"id":787,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5597:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"5603:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"5607:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":786,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"5587:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5587:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":791,"nodeType":"ExpressionStatement","src":"5587:27:6"},{"expression":{"hexValue":"74727565","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5631:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":774,"id":793,"nodeType":"Return","src":"5624:11:6"}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"4800:551:6","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":795,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5365:12:6","nodeType":"FunctionDefinition","overrides":{"id":771,"nodeType":"OverrideSpecifier","overrides":[],"src":"5465:8:6"},"parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"from","nameLocation":"5395:4:6","nodeType":"VariableDeclaration","scope":795,"src":"5387:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"5387:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"to","nameLocation":"5417:2:6","nodeType":"VariableDeclaration","scope":795,"src":"5409:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"5409:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"amount","nameLocation":"5437:6:6","nodeType":"VariableDeclaration","scope":795,"src":"5429:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"5429:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5377:72:6"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"5483:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":772,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5482:6:6"},"scope":1182,"src":"5356:286:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":823,"nodeType":"Block","src":"6153:140:6","statements":[{"assignments":[806],"declarations":[{"constant":false,"id":806,"mutability":"mutable","name":"owner","nameLocation":"6171:5:6","nodeType":"VariableDeclaration","scope":823,"src":"6163:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"6163:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":809,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":807,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"6179:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6179:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6163:28:6"},{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"6210:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"6217:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":814,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"6236:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"6243:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":813,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6226:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6226:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":817,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"6254:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6226:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"6201:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6201:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"6201:64:6"},{"expression":{"hexValue":"74727565","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6282:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":804,"id":822,"nodeType":"Return","src":"6275:11:6"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"5648:384:6","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":824,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6046:17:6","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"spender","nameLocation":"6081:7:6","nodeType":"VariableDeclaration","scope":824,"src":"6073:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"6073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"addedValue","nameLocation":"6106:10:6","nodeType":"VariableDeclaration","scope":824,"src":"6098:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":799,"name":"uint256","nodeType":"ElementaryTypeName","src":"6098:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6063:59:6"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":824,"src":"6147:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":802,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:6"},"scope":1182,"src":"6037:256:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":864,"nodeType":"Block","src":"6901:362:6","statements":[{"assignments":[835],"declarations":[{"constant":false,"id":835,"mutability":"mutable","name":"owner","nameLocation":"6919:5:6","nodeType":"VariableDeclaration","scope":864,"src":"6911:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":838,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":836,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"6927:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6927:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6911:28:6"},{"assignments":[840],"declarations":[{"constant":false,"id":840,"mutability":"mutable","name":"currentAllowance","nameLocation":"6957:16:6","nodeType":"VariableDeclaration","scope":864,"src":"6949:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"6949:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":845,"initialValue":{"arguments":[{"id":842,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"6986:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"6993:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":841,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6976:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6976:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6949:52:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":847,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7032:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":848,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"7052:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7032:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7081:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7011:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7011:119:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"7011:119:6"},{"id":861,"nodeType":"UncheckedBlock","src":"7140:95:6","statements":[{"expression":{"arguments":[{"id":854,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"7173:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":855,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"7180:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":856,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7189:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":857,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"7208:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7189:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":853,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"7164:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7164:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"ExpressionStatement","src":"7164:60:6"}]},{"expression":{"hexValue":"74727565","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7252:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":833,"id":863,"nodeType":"Return","src":"7245:11:6"}]},"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"6299:476:6","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":865,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6789:17:6","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"spender","nameLocation":"6824:7:6","nodeType":"VariableDeclaration","scope":865,"src":"6816:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"6816:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"subtractedValue","nameLocation":"6849:15:6","nodeType":"VariableDeclaration","scope":865,"src":"6841:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"6841:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6806:64:6"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":865,"src":"6895:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":831,"name":"bool","nodeType":"ElementaryTypeName","src":"6895:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6894:6:6"},"scope":1182,"src":"6780:483:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":941,"nodeType":"Block","src":"7825:744:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":876,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"7843:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7859:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7851:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"7851:7:6","typeDescriptions":{}}},"id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7851:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7843:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7863:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7835:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7835:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"ExpressionStatement","src":"7835:68:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":886,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"7921:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7935:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7927:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:6","typeDescriptions":{}}},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7927:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7921:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7939:37:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7913:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7913:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"7913:64:6"},{"expression":{"arguments":[{"id":896,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"8009:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"8015:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":898,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"8019:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":895,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"7988:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7988:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"ExpressionStatement","src":"7988:38:6"},{"assignments":[902],"declarations":[{"constant":false,"id":902,"mutability":"mutable","name":"fromBalance","nameLocation":"8045:11:6","nodeType":"VariableDeclaration","scope":941,"src":"8037:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"8037:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":906,"initialValue":{"baseExpression":{"id":903,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"8059:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":905,"indexExpression":{"id":904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"8069:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8059:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8037:37:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"8105:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":909,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"8120:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8105:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8140:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8084:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8084:106:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"8084:106:6"},{"id":928,"nodeType":"UncheckedBlock","src":"8200:273:6","statements":[{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":914,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"8224:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":916,"indexExpression":{"id":915,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"8234:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"8242:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":918,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"8256:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8242:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8224:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ExpressionStatement","src":"8224:38:6"},{"expression":{"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":922,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"8439:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":924,"indexExpression":{"id":923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"8449:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8439:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":925,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"8456:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8439:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":927,"nodeType":"ExpressionStatement","src":"8439:23:6"}]},{"eventCall":{"arguments":[{"id":930,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"8497:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"8503:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":932,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"8507:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":929,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"8488:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8488:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"EmitStatement","src":"8483:31:6"},{"expression":{"arguments":[{"id":936,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"8545:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":937,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"8551:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"8555:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":935,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"8525:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8525:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"8525:37:6"}]},"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"7269:443:6","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":942,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7726:9:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"from","nameLocation":"7753:4:6","nodeType":"VariableDeclaration","scope":942,"src":"7745:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"7745:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"to","nameLocation":"7775:2:6","nodeType":"VariableDeclaration","scope":942,"src":"7767:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"7767:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"amount","nameLocation":"7795:6:6","nodeType":"VariableDeclaration","scope":942,"src":"7787:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"7787:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:72:6"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"7825:0:6"},"scope":1182,"src":"7717:852:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":998,"nodeType":"Block","src":"8910:470:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":951,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"8928:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8939:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"8939:7:6","typeDescriptions":{}}},"id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8939:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8928:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8951:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8920:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8920:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":959,"nodeType":"ExpressionStatement","src":"8920:65:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9025:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9017:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"9017:7:6","typeDescriptions":{}}},"id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9017:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":965,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9029:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9038:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":960,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"8996:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8996:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"ExpressionStatement","src":"8996:49:6"},{"expression":{"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":969,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9056:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":970,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9072:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9056:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":972,"nodeType":"ExpressionStatement","src":"9056:22:6"},{"id":979,"nodeType":"UncheckedBlock","src":"9088:175:6","statements":[{"expression":{"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":973,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"9224:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":975,"indexExpression":{"id":974,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9234:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9224:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":976,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9246:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9224:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":978,"nodeType":"ExpressionStatement","src":"9224:28:6"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9286:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:6","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9286:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":985,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9298:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9307:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":980,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"9277:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9277:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"EmitStatement","src":"9272:42:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9353:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9345:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"9345:7:6","typeDescriptions":{}}},"id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9345:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":994,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"9357:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9366:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":989,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"9325:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9325:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":997,"nodeType":"ExpressionStatement","src":"9325:48:6"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"8575:265:6","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8854:5:6","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"account","nameLocation":"8868:7:6","nodeType":"VariableDeclaration","scope":999,"src":"8860:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"8860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"amount","nameLocation":"8885:6:6","nodeType":"VariableDeclaration","scope":999,"src":"8877:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"8877:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8859:33:6"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"8910:0:6"},"scope":1182,"src":"8845:535:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1070,"nodeType":"Block","src":"9765:594:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"9783:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9802:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9794:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"9794:7:6","typeDescriptions":{}}},"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9794:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9783:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9806:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9775:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9775:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"9775:67:6"},{"expression":{"arguments":[{"id":1018,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"9874:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9883:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"9883:7:6","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9883:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"9895:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1017,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"9853:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9853:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"ExpressionStatement","src":"9853:49:6"},{"assignments":[1027],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"accountBalance","nameLocation":"9921:14:6","nodeType":"VariableDeclaration","scope":1070,"src":"9913:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"9913:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1031,"initialValue":{"baseExpression":{"id":1028,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"9938:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1030,"indexExpression":{"id":1029,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"9948:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9938:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9913:43:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"9974:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1034,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"9992:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9974:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10000:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9966:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9966:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1038,"nodeType":"ExpressionStatement","src":"9966:71:6"},{"id":1051,"nodeType":"UncheckedBlock","src":"10047:194:6","statements":[{"expression":{"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1039,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"10071:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1041,"indexExpression":{"id":1040,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"10081:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10071:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1042,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"10092:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1043,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"10109:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10092:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10071:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1046,"nodeType":"ExpressionStatement","src":"10071:44:6"},{"expression":{"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1047,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"10208:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1048,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"10224:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10208:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1050,"nodeType":"ExpressionStatement","src":"10208:22:6"}]},{"eventCall":{"arguments":[{"id":1053,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"10265:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10274:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"10274:7:6","typeDescriptions":{}}},"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10274:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1058,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"10286:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1052,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"10256:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10256:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"EmitStatement","src":"10251:42:6"},{"expression":{"arguments":[{"id":1062,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"10324:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10341:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10333:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:6","typeDescriptions":{}}},"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10333:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1067,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"10345:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1061,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"10304:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10304:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"ExpressionStatement","src":"10304:48:6"}]},"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"9386:309:6","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9709:5:6","nodeType":"FunctionDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"account","nameLocation":"9723:7:6","nodeType":"VariableDeclaration","scope":1071,"src":"9715:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"amount","nameLocation":"9740:6:6","nodeType":"VariableDeclaration","scope":1071,"src":"9732:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9714:33:6"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[],"src":"9765:0:6"},"scope":1182,"src":"9700:659:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"10895:257:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1082,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"10913:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"10922:7:6","typeDescriptions":{}}},"id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10922:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10913:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10934:38:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1081,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10905:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10905:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"ExpressionStatement","src":"10905:68:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1092,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"10991:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11010:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11002:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"11002:7:6","typeDescriptions":{}}},"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11002:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10991:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11014:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10983:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10983:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1100,"nodeType":"ExpressionStatement","src":"10983:68:6"},{"expression":{"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1101,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"11062:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1104,"indexExpression":{"id":1102,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"11074:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11062:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1105,"indexExpression":{"id":1103,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"11081:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11062:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1106,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"11092:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11062:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"nodeType":"ExpressionStatement","src":"11062:36:6"},{"eventCall":{"arguments":[{"id":1110,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"11122:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"11129:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1112,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"11138:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1109,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"11113:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11113:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1114,"nodeType":"EmitStatement","src":"11108:37:6"}]},"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"10365:412:6","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10791:8:6","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"owner","nameLocation":"10817:5:6","nodeType":"VariableDeclaration","scope":1116,"src":"10809:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"10809:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"spender","nameLocation":"10840:7:6","nodeType":"VariableDeclaration","scope":1116,"src":"10832:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"10832:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"amount","nameLocation":"10865:6:6","nodeType":"VariableDeclaration","scope":1116,"src":"10857:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"10857:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10799:78:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"10895:0:6"},"scope":1182,"src":"10782:370:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"11553:367:6","statements":[{"assignments":[1127],"declarations":[{"constant":false,"id":1127,"mutability":"mutable","name":"currentAllowance","nameLocation":"11571:16:6","nodeType":"VariableDeclaration","scope":1158,"src":"11563:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1132,"initialValue":{"arguments":[{"id":1129,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"11600:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1130,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"11607:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1128,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"11590:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11590:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11563:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1133,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"11629:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11654:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"11654:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1134,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11649:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11649:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11649:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11629:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1157,"nodeType":"IfStatement","src":"11625:289:6","trueBody":{"id":1156,"nodeType":"Block","src":"11668:246:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1141,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"11707:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1142,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"11727:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11707:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11751:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11682:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11682:114:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1146,"nodeType":"ExpressionStatement","src":"11682:114:6"},{"id":1155,"nodeType":"UncheckedBlock","src":"11810:94:6","statements":[{"expression":{"arguments":[{"id":1148,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"11847:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1149,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"11854:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"11863:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1151,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"11882:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11863:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1147,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"11838:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11838:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"11838:51:6"}]}]}}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"11158:270:6","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11442:15:6","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"owner","nameLocation":"11475:5:6","nodeType":"VariableDeclaration","scope":1159,"src":"11467:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"11467:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"spender","nameLocation":"11498:7:6","nodeType":"VariableDeclaration","scope":1159,"src":"11490:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"11490:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"amount","nameLocation":"11523:6:6","nodeType":"VariableDeclaration","scope":1159,"src":"11515:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"11515:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11457:78:6"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"11553:0:6"},"scope":1182,"src":"11433:487:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1169,"nodeType":"Block","src":"12623:2:6","statements":[]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"11926:573:6","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1170,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12513:20:6","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"from","nameLocation":"12551:4:6","nodeType":"VariableDeclaration","scope":1170,"src":"12543:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"12543:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"to","nameLocation":"12573:2:6","nodeType":"VariableDeclaration","scope":1170,"src":"12565:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"12565:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"amount","nameLocation":"12593:6:6","nodeType":"VariableDeclaration","scope":1170,"src":"12585:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"12585:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12533:72:6"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"12623:0:6"},"scope":1182,"src":"12504:121:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1180,"nodeType":"Block","src":"13331:2:6","statements":[]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"12631:577:6","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13222:19:6","nodeType":"FunctionDefinition","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"from","nameLocation":"13259:4:6","nodeType":"VariableDeclaration","scope":1181,"src":"13251:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"13251:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"to","nameLocation":"13281:2:6","nodeType":"VariableDeclaration","scope":1181,"src":"13273:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"13273:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"amount","nameLocation":"13301:6:6","nodeType":"VariableDeclaration","scope":1181,"src":"13293:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"13293:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13241:72:6"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[],"src":"13331:0:6"},"scope":1182,"src":"13213:120:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1183,"src":"1487:11848:6","usedErrors":[]}],"src":"105:13231:6"},"id":6},"contracts/Exchange.sol":{"ast":{"absolutePath":"contracts/Exchange.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[283],"ERC20":[1182],"Exchange":[3136],"IERC20":[236],"IERC20Metadata":[261],"Ownable":[158],"PriceChecker":[3305],"SafeMath":[595],"TradingFees":[3535],"Wallet":[4195]},"id":3137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1184,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"absolutePath":"contracts/PriceChecker.sol","file":"./PriceChecker.sol","id":1185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":3306,"src":"58:28:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/TradingFees.sol","file":"./TradingFees.sol","id":1186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":3536,"src":"87:27:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":1187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":596,"src":"186:57:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":1188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":46,"src":"244:76:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":159,"src":"321:52:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1190,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"396:7:7"},"id":1191,"nodeType":"InheritanceSpecifier","src":"396:7:7"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3136,"linearizedBaseContracts":[3136,158,283],"name":"Exchange","nameLocation":"384:8:7","nodeType":"ContractDefinition","nodes":[{"id":1194,"libraryName":{"id":1192,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":595,"src":"416:8:7"},"nodeType":"UsingForDirective","src":"410:27:7","typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"429:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1197,"mutability":"mutable","name":"priceChecker","nameLocation":"492:12:7","nodeType":"VariableDeclaration","scope":3136,"src":"479:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"},"typeName":{"id":1196,"nodeType":"UserDefinedTypeName","pathNode":{"id":1195,"name":"PriceChecker","nodeType":"IdentifierPath","referencedDeclaration":3305,"src":"479:12:7"},"referencedDeclaration":3305,"src":"479:12:7","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"tradingFees","nameLocation":"522:11:7","nodeType":"VariableDeclaration","scope":3136,"src":"510:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"},"typeName":{"id":1199,"nodeType":"UserDefinedTypeName","pathNode":{"id":1198,"name":"TradingFees","nodeType":"IdentifierPath","referencedDeclaration":3535,"src":"510:11:7"},"referencedDeclaration":3535,"src":"510:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"wallet","nameLocation":"546:6:7","nodeType":"VariableDeclaration","scope":3136,"src":"539:13:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"},"typeName":{"id":1202,"nodeType":"UserDefinedTypeName","pathNode":{"id":1201,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":4195,"src":"539:6:7"},"referencedDeclaration":4195,"src":"539:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"decimals","nameLocation":"567:8:7","nodeType":"VariableDeclaration","scope":3136,"src":"559:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"559:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"578:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"584:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"578:8:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":false,"functionSelector":"7bf1a627","id":1214,"mutability":"mutable","name":"ethToken","nameLocation":"607:8:7","nodeType":"VariableDeclaration","scope":3136,"src":"592:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1209,"name":"address","nodeType":"ElementaryTypeName","src":"592:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"626:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"618:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"618:7:7","typeDescriptions":{}}},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"618:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9ead7222","id":1218,"mutability":"mutable","name":"tokenList","nameLocation":"697:9:7","nodeType":"VariableDeclaration","scope":3136,"src":"677:29:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1247_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo[]"},"typeName":{"baseType":{"id":1216,"nodeType":"UserDefinedTypeName","pathNode":{"id":1215,"name":"_tokenInfo","nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"677:10:7"},"referencedDeclaration":1247,"src":"677:10:7","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$1247_storage_ptr","typeString":"struct Exchange._tokenInfo"}},"id":1217,"nodeType":"ArrayTypeName","src":"677:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1247_storage_$dyn_storage_ptr","typeString":"struct Exchange._tokenInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"e4c3c7cd","id":1228,"mutability":"mutable","name":"s_orderBook","nameLocation":"881:11:7","nodeType":"VariableDeclaration","scope":3136,"src":"797:95:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order[])))"},"typeName":{"id":1227,"keyType":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"805:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"797:68:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order[])))"},"valueType":{"id":1226,"keyType":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"824:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"816:48:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order[]))"},"valueType":{"id":1225,"keyType":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"835:28:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order[])"},"valueType":{"baseType":{"id":1223,"nodeType":"UserDefinedTypeName","pathNode":{"id":1222,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"854:6:7"},"referencedDeclaration":1276,"src":"854:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"id":1224,"nodeType":"ArrayTypeName","src":"854:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}}}}},"visibility":"public"},{"constant":false,"functionSelector":"bd8098ec","id":1236,"mutability":"mutable","name":"s_filledOrders","nameLocation":"969:14:7","nodeType":"VariableDeclaration","scope":3136,"src":"899:84:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))"},"typeName":{"id":1235,"keyType":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"899:54:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))"},"valueType":{"id":1234,"keyType":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"918:34:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder[])"},"valueType":{"baseType":{"id":1232,"nodeType":"UserDefinedTypeName","pathNode":{"id":1231,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":1302,"src":"937:12:7"},"referencedDeclaration":1302,"src":"937:12:7","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1302_storage_ptr","typeString":"struct Exchange._filledOrder"}},"id":1233,"nodeType":"ArrayTypeName","src":"937:14:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_ptr","typeString":"struct Exchange._filledOrder[]"}}}},"visibility":"public"},{"constant":false,"functionSelector":"9c07ce26","id":1239,"mutability":"mutable","name":"s_orderId","nameLocation":"1005:9:7","nodeType":"VariableDeclaration","scope":3136,"src":"990:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"id":1242,"mutability":"mutable","name":"s_isManual","nameLocation":"1037:10:7","nodeType":"VariableDeclaration","scope":3136,"src":"1024:30:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1240,"name":"bool","nodeType":"ElementaryTypeName","src":"1024:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1050:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"private"},{"canonicalName":"Exchange._tokenInfo","id":1247,"members":[{"constant":false,"id":1244,"mutability":"mutable","name":"add","nameLocation":"1097:3:7","nodeType":"VariableDeclaration","scope":1247,"src":"1089:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"1089:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"decimals","nameLocation":"1118:8:7","nodeType":"VariableDeclaration","scope":1247,"src":"1110:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1110:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_tokenInfo","nameLocation":"1068:10:7","nodeType":"StructDefinition","scope":3136,"src":"1061:72:7","visibility":"public"},{"canonicalName":"Exchange._fillOrderValues","id":1252,"members":[{"constant":false,"id":1249,"mutability":"mutable","name":"rate","nameLocation":"1181:4:7","nodeType":"VariableDeclaration","scope":1252,"src":"1173:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1173:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"amount","nameLocation":"1203:6:7","nodeType":"VariableDeclaration","scope":1252,"src":"1195:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1195:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_fillOrderValues","nameLocation":"1146:16:7","nodeType":"StructDefinition","scope":3136,"src":"1139:77:7","visibility":"public"},{"canonicalName":"Exchange._Order","id":1276,"members":[{"constant":false,"id":1254,"mutability":"mutable","name":"id","nameLocation":"1374:2:7","nodeType":"VariableDeclaration","scope":1276,"src":"1366:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"side","nameLocation":"1391:4:7","nodeType":"VariableDeclaration","scope":1276,"src":"1386:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":1256,"nodeType":"UserDefinedTypeName","pathNode":{"id":1255,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"1386:4:7"},"referencedDeclaration":1305,"src":"1386:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"user","nameLocation":"1413:4:7","nodeType":"VariableDeclaration","scope":1276,"src":"1405:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"tokenA","nameLocation":"1435:6:7","nodeType":"VariableDeclaration","scope":1276,"src":"1427:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"amountA","nameLocation":"1459:7:7","nodeType":"VariableDeclaration","scope":1276,"src":"1451:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1451:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"tokenB","nameLocation":"1484:6:7","nodeType":"VariableDeclaration","scope":1276,"src":"1476:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"1476:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"amountB","nameLocation":"1508:7:7","nodeType":"VariableDeclaration","scope":1276,"src":"1500:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1500:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"rate","nameLocation":"1533:4:7","nodeType":"VariableDeclaration","scope":1276,"src":"1525:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"originalAmountA","nameLocation":"1599:15:7","nodeType":"VariableDeclaration","scope":1276,"src":"1591:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1591:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"originalAmountB","nameLocation":"1632:15:7","nodeType":"VariableDeclaration","scope":1276,"src":"1624:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"waiveFees","nameLocation":"1662:9:7","nodeType":"VariableDeclaration","scope":1276,"src":"1657:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1274,"name":"bool","nodeType":"ElementaryTypeName","src":"1657:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"_Order","nameLocation":"1349:6:7","nodeType":"StructDefinition","scope":3136,"src":"1342:336:7","visibility":"public"},{"canonicalName":"Exchange._filledOrder","id":1302,"members":[{"constant":false,"id":1278,"mutability":"mutable","name":"id","nameLocation":"1804:2:7","nodeType":"VariableDeclaration","scope":1302,"src":"1796:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1796:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"side","nameLocation":"1821:4:7","nodeType":"VariableDeclaration","scope":1302,"src":"1816:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":1280,"nodeType":"UserDefinedTypeName","pathNode":{"id":1279,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"1816:4:7"},"referencedDeclaration":1305,"src":"1816:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"user","nameLocation":"1843:4:7","nodeType":"VariableDeclaration","scope":1302,"src":"1835:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"tokenA","nameLocation":"1865:6:7","nodeType":"VariableDeclaration","scope":1302,"src":"1857:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"1857:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"tokenB","nameLocation":"1889:6:7","nodeType":"VariableDeclaration","scope":1302,"src":"1881:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"amountFilled","nameLocation":"1913:12:7","nodeType":"VariableDeclaration","scope":1302,"src":"1905:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"fillRate","nameLocation":"1943:8:7","nodeType":"VariableDeclaration","scope":1302,"src":"1935:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1935:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"originalRate","nameLocation":"1969:12:7","nodeType":"VariableDeclaration","scope":1302,"src":"1961:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"originalAmountA","nameLocation":"1999:15:7","nodeType":"VariableDeclaration","scope":1302,"src":"1991:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1991:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"originalAmountB","nameLocation":"2032:15:7","nodeType":"VariableDeclaration","scope":1302,"src":"2024:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2024:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"feesWaived","nameLocation":"2062:10:7","nodeType":"VariableDeclaration","scope":1302,"src":"2057:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1298,"name":"bool","nodeType":"ElementaryTypeName","src":"2057:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"feesPaid","nameLocation":"2090:8:7","nodeType":"VariableDeclaration","scope":1302,"src":"2082:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2082:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"_filledOrder","nameLocation":"1773:12:7","nodeType":"StructDefinition","scope":3136,"src":"1766:357:7","visibility":"public"},{"canonicalName":"Exchange.Side","id":1305,"members":[{"id":1303,"name":"BUY","nameLocation":"2149:3:7","nodeType":"EnumValue","src":"2149:3:7"},{"id":1304,"name":"SELL","nameLocation":"2162:4:7","nodeType":"EnumValue","src":"2162:4:7"}],"name":"Side","nameLocation":"2134:4:7","nodeType":"EnumDefinition","src":"2129:43:7"},{"anonymous":false,"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"2195:56:7","text":"@notice Event when an order is placed on an exchange"},"id":1331,"name":"Order","nameLocation":"2262:5:7","nodeType":"EventDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"2285:2:7","nodeType":"VariableDeclaration","scope":1331,"src":"2277:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1311,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2302:4:7","nodeType":"VariableDeclaration","scope":1331,"src":"2297:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":1310,"nodeType":"UserDefinedTypeName","pathNode":{"id":1309,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"2297:4:7"},"referencedDeclaration":1305,"src":"2297:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1313,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2324:4:7","nodeType":"VariableDeclaration","scope":1331,"src":"2316:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"2346:6:7","nodeType":"VariableDeclaration","scope":1331,"src":"2338:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2370:7:7","nodeType":"VariableDeclaration","scope":1331,"src":"2362:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2362:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1319,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"2395:6:7","nodeType":"VariableDeclaration","scope":1331,"src":"2387:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2419:7:7","nodeType":"VariableDeclaration","scope":1331,"src":"2411:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2411:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1323,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2444:4:7","nodeType":"VariableDeclaration","scope":1331,"src":"2436:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2436:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1325,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"2466:15:7","nodeType":"VariableDeclaration","scope":1331,"src":"2458:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1327,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"2499:15:7","nodeType":"VariableDeclaration","scope":1331,"src":"2491:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"2491:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1329,"indexed":false,"mutability":"mutable","name":"waiveFees","nameLocation":"2529:9:7","nodeType":"VariableDeclaration","scope":1331,"src":"2524:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1328,"name":"bool","nodeType":"ElementaryTypeName","src":"2524:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2267:277:7"},"src":"2256:289:7"},{"anonymous":false,"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"2551:44:7","text":"@notice Event when an order is cancelled"},"id":1357,"name":"Cancel","nameLocation":"2606:6:7","nodeType":"EventDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"2630:2:7","nodeType":"VariableDeclaration","scope":1357,"src":"2622:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2622:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1337,"indexed":false,"mutability":"mutable","name":"side","nameLocation":"2647:4:7","nodeType":"VariableDeclaration","scope":1357,"src":"2642:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":1336,"nodeType":"UserDefinedTypeName","pathNode":{"id":1335,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"2642:4:7"},"referencedDeclaration":1305,"src":"2642:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1339,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2669:4:7","nodeType":"VariableDeclaration","scope":1357,"src":"2661:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"2661:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"indexed":false,"mutability":"mutable","name":"tokenA","nameLocation":"2691:6:7","nodeType":"VariableDeclaration","scope":1357,"src":"2683:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"2683:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1343,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"2715:7:7","nodeType":"VariableDeclaration","scope":1357,"src":"2707:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2707:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1345,"indexed":false,"mutability":"mutable","name":"tokenB","nameLocation":"2740:6:7","nodeType":"VariableDeclaration","scope":1357,"src":"2732:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"2764:7:7","nodeType":"VariableDeclaration","scope":1357,"src":"2756:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2756:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1349,"indexed":false,"mutability":"mutable","name":"rate","nameLocation":"2789:4:7","nodeType":"VariableDeclaration","scope":1357,"src":"2781:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"2781:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1351,"indexed":false,"mutability":"mutable","name":"originalAmountA","nameLocation":"2811:15:7","nodeType":"VariableDeclaration","scope":1357,"src":"2803:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2803:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1353,"indexed":false,"mutability":"mutable","name":"originalAmountB","nameLocation":"2844:15:7","nodeType":"VariableDeclaration","scope":1357,"src":"2836:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1355,"indexed":false,"mutability":"mutable","name":"waiveFees","nameLocation":"2874:9:7","nodeType":"VariableDeclaration","scope":1357,"src":"2869:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1354,"name":"bool","nodeType":"ElementaryTypeName","src":"2869:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2612:277:7"},"src":"2600:290:7"},{"anonymous":false,"id":1370,"name":"fillBuyOrder","nameLocation":"2902:12:7","nodeType":"EventDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"indexed":false,"mutability":"mutable","name":"remainingOrder","nameLocation":"2931:14:7","nodeType":"VariableDeclaration","scope":1370,"src":"2924:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1359,"nodeType":"UserDefinedTypeName","pathNode":{"id":1358,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"2924:6:7"},"referencedDeclaration":1276,"src":"2924:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1362,"indexed":false,"mutability":"mutable","name":"amountBought","nameLocation":"2963:12:7","nodeType":"VariableDeclaration","scope":1370,"src":"2955:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1364,"indexed":false,"mutability":"mutable","name":"fillBuyRate","nameLocation":"2993:11:7","nodeType":"VariableDeclaration","scope":1370,"src":"2985:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2985:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1366,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"3019:10:7","nodeType":"VariableDeclaration","scope":1370,"src":"3014:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1365,"name":"bool","nodeType":"ElementaryTypeName","src":"3014:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1368,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"3047:8:7","nodeType":"VariableDeclaration","scope":1370,"src":"3039:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"3039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2914:147:7"},"src":"2896:166:7"},{"anonymous":false,"id":1383,"name":"fillSellOrder","nameLocation":"3074:13:7","nodeType":"EventDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"indexed":false,"mutability":"mutable","name":"remainingOrder","nameLocation":"3104:14:7","nodeType":"VariableDeclaration","scope":1383,"src":"3097:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1372,"nodeType":"UserDefinedTypeName","pathNode":{"id":1371,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"3097:6:7"},"referencedDeclaration":1276,"src":"3097:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1375,"indexed":false,"mutability":"mutable","name":"amountSold","nameLocation":"3136:10:7","nodeType":"VariableDeclaration","scope":1383,"src":"3128:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"3128:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1377,"indexed":false,"mutability":"mutable","name":"fillSellRate","nameLocation":"3164:12:7","nodeType":"VariableDeclaration","scope":1383,"src":"3156:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"3156:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1379,"indexed":false,"mutability":"mutable","name":"feesWaived","nameLocation":"3191:10:7","nodeType":"VariableDeclaration","scope":1383,"src":"3186:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1378,"name":"bool","nodeType":"ElementaryTypeName","src":"3186:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1381,"indexed":false,"mutability":"mutable","name":"feesPaid","nameLocation":"3219:8:7","nodeType":"VariableDeclaration","scope":1383,"src":"3211:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"3211:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3087:146:7"},"src":"3068:166:7"},{"body":{"id":1410,"nodeType":"Block","src":"3307:135:7","statements":[{"expression":{"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1392,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3317:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1394,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"3333:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1393,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"3326:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$4195_$","typeString":"type(contract Wallet)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3326:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"src":"3317:24:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":1397,"nodeType":"ExpressionStatement","src":"3317:24:7"},{"expression":{"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1398,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"3351:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1400,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"3377:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1399,"name":"TradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"3365:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TradingFees_$3535_$","typeString":"type(contract TradingFees)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3365:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"src":"3351:32:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":1403,"nodeType":"ExpressionStatement","src":"3351:32:7"},{"expression":{"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1404,"name":"priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3393:12:7","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1406,"name":"_priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3421:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"3408:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$3305_$","typeString":"type(contract PriceChecker)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3408:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"src":"3393:42:7","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"id":1409,"nodeType":"ExpressionStatement","src":"3393:42:7"}]},"id":1411,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"_wallet","nameLocation":"3260:7:7","nodeType":"VariableDeclaration","scope":1411,"src":"3252:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"_fees","nameLocation":"3277:5:7","nodeType":"VariableDeclaration","scope":1411,"src":"3269:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"3269:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"_priceChecker","nameLocation":"3292:13:7","nodeType":"VariableDeclaration","scope":1411,"src":"3284:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"3284:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3251:55:7"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"3307:0:7"},"scope":3136,"src":"3240:202:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1514,"nodeType":"Block","src":"3707:1075:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":1442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3899:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3899:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1444,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"3911:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1440,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3877:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getlockedFunds","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"3877:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3877:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1435,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"3835:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1436,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3844:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3844:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1433,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3818:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"3818:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3818:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"3818:41:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3818:115:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1447,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3937:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3818:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742046756e6473","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3959:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""},"value":"Insufficient Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""}],"id":1432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3797:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3797:192:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"ExpressionStatement","src":"3797:192:7"},{"expression":{"arguments":[{"expression":{"id":1455,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4033:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4033:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1457,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"4045:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1458,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"4054:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4064:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1452,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4000:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"4000:32:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4000:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1461,"nodeType":"ExpressionStatement","src":"4000:69:7"},{"expression":{"arguments":[{"arguments":[{"id":1475,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4171:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1476,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"4198:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1303,"src":"4198:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"expression":{"id":1478,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4224:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4224:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1480,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"4252:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1481,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4277:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1482,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"4303:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1483,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"4328:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1484,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"4354:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1485,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4377:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1486,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"4403:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1487,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"4429:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1474,"name":"_Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"4147:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__Order_$1276_storage_ptr_$","typeString":"type(struct Exchange._Order storage pointer)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4147:306:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}],"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1462,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"4080:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1470,"indexExpression":{"id":1463,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"4092:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4080:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1471,"indexExpression":{"id":1464,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"4101:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4080:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1472,"indexExpression":{"arguments":[{"expression":{"id":1467,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"4118:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1303,"src":"4118:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}],"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4110:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"4110:7:7","typeDescriptions":{}}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4110:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4080:48:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4080:53:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr_$_t_struct$__Order_$1276_storage_$returns$__$bound_to$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer,struct Exchange._Order storage ref)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4080:383:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1490,"nodeType":"ExpressionStatement","src":"4080:383:7"},{"eventCall":{"arguments":[{"id":1492,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4498:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1493,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"4521:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1303,"src":"4521:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"expression":{"id":1495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4543:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4543:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1497,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"4567:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1498,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4588:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1499,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"4610:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1500,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"4631:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1501,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"4653:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1502,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4672:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1503,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"4694:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1504,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"4716:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1491,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"4479:5:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$1305_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4479:257:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"EmitStatement","src":"4474:262:7"},{"expression":{"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1507,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4747:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4773:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1508,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4759:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":459,"src":"4759:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4759:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4747:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1513,"nodeType":"ExpressionStatement","src":"4747:28:7"}]},"functionSelector":"62c09cfa","id":1515,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1426,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"3678:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1427,"kind":"modifierInvocation","modifierName":{"id":1425,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"3667:10:7"},"nodeType":"ModifierInvocation","src":"3667:19:7"},{"arguments":[{"id":1429,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"3698:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1430,"kind":"modifierInvocation","modifierName":{"id":1428,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"3687:10:7"},"nodeType":"ModifierInvocation","src":"3687:19:7"}],"name":"createLimitBuyOrder","nameLocation":"3457:19:7","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"_tokenA","nameLocation":"3519:7:7","nodeType":"VariableDeclaration","scope":1515,"src":"3511:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1412,"name":"address","nodeType":"ElementaryTypeName","src":"3511:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1415,"mutability":"mutable","name":"_amountA","nameLocation":"3544:8:7","nodeType":"VariableDeclaration","scope":1515,"src":"3536:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3536:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"_tokenB","nameLocation":"3570:7:7","nodeType":"VariableDeclaration","scope":1515,"src":"3562:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"3562:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"_amountB","nameLocation":"3595:8:7","nodeType":"VariableDeclaration","scope":1515,"src":"3587:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"3587:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"_rate","nameLocation":"3621:5:7","nodeType":"VariableDeclaration","scope":1515,"src":"3613:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"3613:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"_waiveFees","nameLocation":"3641:10:7","nodeType":"VariableDeclaration","scope":1515,"src":"3636:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1422,"name":"bool","nodeType":"ElementaryTypeName","src":"3636:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3476:181:7"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[],"src":"3707:0:7"},"scope":3136,"src":"3448:1334:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1618,"nodeType":"Block","src":"5023:1143:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":1546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5232:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5232:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1548,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"5244:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1544,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5210:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getlockedFunds","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"5210:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5210:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1539,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"5168:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5177:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5177:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1537,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5151:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"5151:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5151:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"5151:41:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5151:115:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1551,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"5270:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5151:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742046756e6473","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5292:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""},"value":"Insufficient Funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","typeString":"literal_string \"Insufficient Funds\""}],"id":1536,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5130:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5130:192:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"ExpressionStatement","src":"5130:192:7"},{"expression":{"arguments":[{"expression":{"id":1559,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5414:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5414:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1561,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"5426:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1562,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"5435:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5445:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1556,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5381:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"5381:32:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5381:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"5381:69:7"},{"expression":{"arguments":[{"arguments":[{"id":1579,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"5553:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1580,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5580:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"5580:9:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"expression":{"id":1582,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5607:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5607:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1584,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"5635:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1585,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"5660:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1586,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5686:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1587,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"5711:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1588,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"5737:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1589,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"5760:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1590,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"5786:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1591,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"5812:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1578,"name":"_Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5529:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__Order_$1276_storage_ptr_$","typeString":"type(struct Exchange._Order storage pointer)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5529:307:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}],"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1566,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"5461:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1574,"indexExpression":{"id":1567,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"5473:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5461:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1575,"indexExpression":{"id":1568,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5482:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5461:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1576,"indexExpression":{"arguments":[{"expression":{"id":1571,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5499:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"5499:9:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5491:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"5491:7:7","typeDescriptions":{}}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5491:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5461:49:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5461:54:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr_$_t_struct$__Order_$1276_storage_$returns$__$bound_to$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer,struct Exchange._Order storage ref)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5461:385:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1594,"nodeType":"ExpressionStatement","src":"5461:385:7"},{"eventCall":{"arguments":[{"id":1596,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"5881:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1597,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5904:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"5904:9:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"expression":{"id":1599,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5927:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5927:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1601,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"5951:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1602,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"5972:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1603,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5994:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1604,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"6015:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1605,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"6037:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1606,"name":"_amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"6056:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1607,"name":"_amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"6078:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1608,"name":"_waiveFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"6100:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1595,"name":"Order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"5862:5:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$1305_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5862:258:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1610,"nodeType":"EmitStatement","src":"5857:263:7"},{"expression":{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1611,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"6131:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6157:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1612,"name":"s_orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"6143:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":459,"src":"6143:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6143:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6131:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1617,"nodeType":"ExpressionStatement","src":"6131:28:7"}]},"functionSelector":"6f4e410b","id":1619,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1530,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"4994:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1531,"kind":"modifierInvocation","modifierName":{"id":1529,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"4983:10:7"},"nodeType":"ModifierInvocation","src":"4983:19:7"},{"arguments":[{"id":1533,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5014:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1534,"kind":"modifierInvocation","modifierName":{"id":1532,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"5003:10:7"},"nodeType":"ModifierInvocation","src":"5003:19:7"}],"name":"createLimitSellOrder","nameLocation":"4797:20:7","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"_tokenA","nameLocation":"4835:7:7","nodeType":"VariableDeclaration","scope":1619,"src":"4827:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"_amountA","nameLocation":"4860:8:7","nodeType":"VariableDeclaration","scope":1619,"src":"4852:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4852:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"_tokenB","nameLocation":"4886:7:7","nodeType":"VariableDeclaration","scope":1619,"src":"4878:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"4878:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"_amountB","nameLocation":"4911:8:7","nodeType":"VariableDeclaration","scope":1619,"src":"4903:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1525,"mutability":"mutable","name":"_rate","nameLocation":"4937:5:7","nodeType":"VariableDeclaration","scope":1619,"src":"4929:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"4929:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"_waiveFees","nameLocation":"4957:10:7","nodeType":"VariableDeclaration","scope":1619,"src":"4952:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1526,"name":"bool","nodeType":"ElementaryTypeName","src":"4952:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4817:156:7"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[],"src":"5023:0:7"},"scope":3136,"src":"4788:1378:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1826,"nodeType":"Block","src":"6412:1599:7","statements":[{"assignments":[1644],"declarations":[{"constant":false,"id":1644,"mutability":"mutable","name":"_side","nameLocation":"6430:5:7","nodeType":"VariableDeclaration","scope":1826,"src":"6422:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"6422:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1649,"initialValue":{"arguments":[{"id":1647,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"6446:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}],"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6438:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"6438:7:7","typeDescriptions":{}}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6438:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6422:29:7"},{"assignments":[1654],"declarations":[{"constant":false,"id":1654,"mutability":"mutable","name":"_order","nameLocation":"6478:6:7","nodeType":"VariableDeclaration","scope":1826,"src":"6461:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":1652,"nodeType":"UserDefinedTypeName","pathNode":{"id":1651,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"6461:6:7"},"referencedDeclaration":1276,"src":"6461:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"id":1653,"nodeType":"ArrayTypeName","src":"6461:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":1662,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1655,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"6487:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1657,"indexExpression":{"id":1656,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"6499:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6487:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1659,"indexExpression":{"id":1658,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"6508:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6487:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1661,"indexExpression":{"id":1660,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"6517:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6487:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6461:62:7"},{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"size","nameLocation":"6541:4:7","nodeType":"VariableDeclaration","scope":1826,"src":"6533:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"6533:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"initialValue":{"expression":{"id":1665,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"6548:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6548:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6533:28:7"},{"assignments":[1670],"declarations":[{"constant":false,"id":1670,"mutability":"mutable","name":"order","nameLocation":"6585:5:7","nodeType":"VariableDeclaration","scope":1826,"src":"6571:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1669,"nodeType":"UserDefinedTypeName","pathNode":{"id":1668,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"6571:6:7"},"referencedDeclaration":1276,"src":"6571:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":1671,"nodeType":"VariableDeclarationStatement","src":"6571:19:7"},{"assignments":[1673],"declarations":[{"constant":false,"id":1673,"mutability":"mutable","name":"index","nameLocation":"6609:5:7","nodeType":"VariableDeclaration","scope":1826,"src":"6601:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"6601:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1674,"nodeType":"VariableDeclarationStatement","src":"6601:13:7"},{"body":{"id":1704,"nodeType":"Block","src":"6659:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1685,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"6677:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1687,"indexExpression":{"id":1686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6684:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6677:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage","typeString":"struct Exchange._Order storage ref"}},"id":1688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"6677:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1689,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"6693:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6677:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1703,"nodeType":"IfStatement","src":"6673:125:7","trueBody":{"id":1702,"nodeType":"Block","src":"6698:100:7","statements":[{"expression":{"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1691,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"6716:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1692,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6724:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6716:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1694,"nodeType":"ExpressionStatement","src":"6716:9:7"},{"expression":{"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1695,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"6743:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1696,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"6751:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1698,"indexExpression":{"id":1697,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6758:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6751:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage","typeString":"struct Exchange._Order storage ref"}},"src":"6743:17:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1700,"nodeType":"ExpressionStatement","src":"6743:17:7"},{"id":1701,"nodeType":"Break","src":"6778:5:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6644:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1680,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"6648:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6644:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1705,"initializationExpression":{"assignments":[1676],"declarations":[{"constant":false,"id":1676,"mutability":"mutable","name":"i","nameLocation":"6637:1:7","nodeType":"VariableDeclaration","scope":1705,"src":"6629:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"6629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1678,"initialValue":{"hexValue":"30","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6641:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6629:13:7"},"loopExpression":{"expression":{"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6654:3:7","subExpression":{"id":1682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6654:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1684,"nodeType":"ExpressionStatement","src":"6654:3:7"},"nodeType":"ForStatement","src":"6624:184:7"},{"condition":{"id":1706,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"6862:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1753,"nodeType":"IfStatement","src":"6858:601:7","trueBody":{"id":1752,"nodeType":"Block","src":"6874:585:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1708,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6896:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6896:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1710,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"6910:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"6910:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6896:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74204f776e6572","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6922:11:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""},"value":"Not Owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""}],"id":1707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6888:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6888:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1715,"nodeType":"ExpressionStatement","src":"6888:46:7"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1716,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"6980:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1717,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"6988:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1303,"src":"6988:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"src":"6980:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1733,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"7219:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1734,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"7227:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"7227:9:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"src":"7219:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1750,"nodeType":"IfStatement","src":"7215:234:7","trueBody":{"id":1749,"nodeType":"Block","src":"7238:211:7","statements":[{"expression":{"arguments":[{"expression":{"id":1740,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7310:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7310:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1742,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7342:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"7342:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1744,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7376:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"7376:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7411:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1737,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"7256:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"7256:32:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7256:178:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1748,"nodeType":"ExpressionStatement","src":"7256:178:7"}]}},"id":1751,"nodeType":"IfStatement","src":"6976:473:7","trueBody":{"id":1732,"nodeType":"Block","src":"6998:211:7","statements":[{"expression":{"arguments":[{"expression":{"id":1723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7070:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7070:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1725,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7102:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"7102:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1727,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7136:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"7136:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7171:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1720,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"7016:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"7016:32:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7016:178:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"ExpressionStatement","src":"7016:178:7"}]}}]}},{"body":{"id":1777,"nodeType":"Block","src":"7512:53:7","statements":[{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1766,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"7526:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1768,"indexExpression":{"id":1767,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"7533:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7526:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage","typeString":"struct Exchange._Order storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1769,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"7538:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1774,"indexExpression":{"arguments":[{"hexValue":"31","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1770,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"7545:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":459,"src":"7545:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7545:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7538:16:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage","typeString":"struct Exchange._Order storage ref"}},"src":"7526:28:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage","typeString":"struct Exchange._Order storage ref"}},"id":1776,"nodeType":"ExpressionStatement","src":"7526:28:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1758,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"7493:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7497:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7504:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7497:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7493:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1778,"initializationExpression":{"assignments":[1755],"declarations":[{"constant":false,"id":1755,"mutability":"mutable","name":"j","nameLocation":"7482:1:7","nodeType":"VariableDeclaration","scope":1778,"src":"7474:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"7474:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1757,"initialValue":{"id":1756,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"7486:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7474:17:7"},"loopExpression":{"expression":{"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7507:3:7","subExpression":{"id":1763,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"7507:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1765,"nodeType":"ExpressionStatement","src":"7507:3:7"},"nodeType":"ForStatement","src":"7469:96:7"},{"expression":{"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7574:26:7","subExpression":{"baseExpression":{"id":1779,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"7581:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1784,"indexExpression":{"arguments":[{"hexValue":"31","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7597:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1780,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7588:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"7588:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7588:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7581:19:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage","typeString":"struct Exchange._Order storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1786,"nodeType":"ExpressionStatement","src":"7574:26:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1787,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"7610:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"7610:10:7","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._Order storage ref[] storage pointer)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7610:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1791,"nodeType":"ExpressionStatement","src":"7610:12:7"},{"expression":{"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1792,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"7633:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1796,"indexExpression":{"id":1793,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"7645:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7633:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1797,"indexExpression":{"id":1794,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7654:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7633:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1798,"indexExpression":{"id":1795,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"7663:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7633:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1799,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"7672:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order storage ref[] storage pointer"}},"src":"7633:45:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1801,"nodeType":"ExpressionStatement","src":"7633:45:7"},{"eventCall":{"arguments":[{"id":1803,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"7714:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1804,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7731:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1257,"src":"7731:10:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"expression":{"id":1806,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7755:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"7755:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1808,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7779:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"7779:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1810,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7805:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"7805:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1812,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7832:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"7832:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1814,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7858:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"7858:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1816,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7885:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"7885:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1818,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7909:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":1271,"src":"7909:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1820,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7944:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":1273,"src":"7944:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1822,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"7979:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"waiveFees","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"7979:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1802,"name":"Cancel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"7694:6:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_Side_$1305_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,enum Exchange.Side,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7694:310:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1825,"nodeType":"EmitStatement","src":"7689:315:7"}]},"functionSelector":"f90ef4f2","id":1827,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1631,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"6323:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1632,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"6328:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"id":1633,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"6334:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1634,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"6343:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1635,"kind":"modifierInvocation","modifierName":{"id":1630,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":3122,"src":"6312:10:7"},"nodeType":"ModifierInvocation","src":"6312:39:7"},{"arguments":[{"id":1637,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"6371:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1638,"kind":"modifierInvocation","modifierName":{"id":1636,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"6360:10:7"},"nodeType":"ModifierInvocation","src":"6360:19:7"},{"arguments":[{"id":1640,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"6399:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1641,"kind":"modifierInvocation","modifierName":{"id":1639,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"6388:10:7"},"nodeType":"ModifierInvocation","src":"6388:19:7"}],"name":"cancelOrder","nameLocation":"6181:11:7","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"side","nameLocation":"6207:4:7","nodeType":"VariableDeclaration","scope":1827,"src":"6202:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":1621,"nodeType":"UserDefinedTypeName","pathNode":{"id":1620,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"6202:4:7"},"referencedDeclaration":1305,"src":"6202:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"_id","nameLocation":"6229:3:7","nodeType":"VariableDeclaration","scope":1827,"src":"6221:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"6221:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"_tokenA","nameLocation":"6250:7:7","nodeType":"VariableDeclaration","scope":1827,"src":"6242:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"6242:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"_tokenB","nameLocation":"6275:7:7","nodeType":"VariableDeclaration","scope":1827,"src":"6267:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1627,"name":"address","nodeType":"ElementaryTypeName","src":"6267:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6192:96:7"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"6412:0:7"},"scope":3136,"src":"6172:1839:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2039,"nodeType":"Block","src":"8292:1400:7","statements":[{"assignments":[1855],"declarations":[{"constant":false,"id":1855,"mutability":"mutable","name":"_side","nameLocation":"8310:5:7","nodeType":"VariableDeclaration","scope":2039,"src":"8302:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"8302:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1860,"initialValue":{"arguments":[{"id":1858,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"8326:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}],"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8318:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"8318:7:7","typeDescriptions":{}}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8318:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8302:29:7"},{"assignments":[1863,1865],"declarations":[{"constant":false,"id":1863,"mutability":"mutable","name":"order","nameLocation":"8356:5:7","nodeType":"VariableDeclaration","scope":2039,"src":"8342:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":1862,"nodeType":"UserDefinedTypeName","pathNode":{"id":1861,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"8342:6:7"},"referencedDeclaration":1276,"src":"8342:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"index","nameLocation":"8371:5:7","nodeType":"VariableDeclaration","scope":2039,"src":"8363:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"8363:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1872,"initialValue":{"arguments":[{"id":1867,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8411:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1868,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8432:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1869,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"8453:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1870,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8472:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1866,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"8380:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$","typeString":"function (address,address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8380:105:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8341:144:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1874,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"8504:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"8504:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1876,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"8521:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1251,"src":"8521:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8504:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f7264657220416d6f756e7420746f2066696c6c","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8531:30:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2a2339c54d4fc0d37a5533ccef4bf9959c39857db4a97b2323d6fa200439a73","typeString":"literal_string \"Invalid Order Amount to fill\""},"value":"Invalid Order Amount to fill"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2a2339c54d4fc0d37a5533ccef4bf9959c39857db4a97b2323d6fa200439a73","typeString":"literal_string \"Invalid Order Amount to fill\""}],"id":1873,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8496:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8496:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1881,"nodeType":"ExpressionStatement","src":"8496:66:7"},{"expression":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1882,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"8573:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"8573:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"8607:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1251,"src":"8607:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1885,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"8589:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"8589:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"8589:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8589:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8573:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ExpressionStatement","src":"8573:43:7"},{"expression":{"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1893,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"8626:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"8626:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1906,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"8702:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1902,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"8688:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1251,"src":"8688:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1899,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"8673:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"8673:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"8673:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8673:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"8673:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8673:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1896,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"8642:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"8642:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"8642:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8626:95:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1910,"nodeType":"ExpressionStatement","src":"8626:95:7"},{"expression":{"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1911,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"8731:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1916,"indexExpression":{"id":1912,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8743:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8731:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1917,"indexExpression":{"id":1913,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8752:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8731:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1918,"indexExpression":{"id":1914,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"8761:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8731:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1919,"indexExpression":{"id":1915,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"8768:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8731:43:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage","typeString":"struct Exchange._Order storage ref"}},"id":1920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"8731:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1921,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"8785:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"8785:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:67:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1924,"nodeType":"ExpressionStatement","src":"8731:67:7"},{"expression":{"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1925,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"8808:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":1930,"indexExpression":{"id":1926,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8820:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8808:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":1931,"indexExpression":{"id":1927,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8829:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8808:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":1932,"indexExpression":{"id":1928,"name":"_side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"8838:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8808:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":1933,"indexExpression":{"id":1929,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"8845:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8808:43:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage","typeString":"struct Exchange._Order storage ref"}},"id":1934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"8808:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1935,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"8862:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountB","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"8862:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8808:67:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1938,"nodeType":"ExpressionStatement","src":"8808:67:7"},{"assignments":[1940],"declarations":[{"constant":false,"id":1940,"mutability":"mutable","name":"fees","nameLocation":"8894:4:7","nodeType":"VariableDeclaration","scope":2039,"src":"8886:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"8886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1950,"initialValue":{"arguments":[{"expression":{"id":1943,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"8940:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1251,"src":"8940:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"8962:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"8962:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1947,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"8982:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"8982:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1941,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8901:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"calculateFees","nodeType":"MemberAccess","referencedDeclaration":3406,"src":"8901:25:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,uint256,address) view external returns (uint256)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8901:103:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8886:118:7"},{"assignments":[1952],"declarations":[{"constant":false,"id":1952,"mutability":"mutable","name":"feesWaived","nameLocation":"9019:10:7","nodeType":"VariableDeclaration","scope":2039,"src":"9014:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1951,"name":"bool","nodeType":"ElementaryTypeName","src":"9014:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1962,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1953,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9032:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"waiveFees","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"9032:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":1957,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"9095:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1958,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9101:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":1959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"9101:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1955,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9063:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"checkSufficientaDAI","nodeType":"MemberAccess","referencedDeclaration":3506,"src":"9063:31:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view external returns (bool)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9063:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9032:80:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9014:98:7"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1963,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"9127:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1964,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9135:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1303,"src":"9135:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"src":"9127:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1988,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"9310:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1989,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9318:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"9318:9:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"src":"9310:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2013,"nodeType":"IfStatement","src":"9306:180:7","trueBody":{"id":2012,"nodeType":"Block","src":"9329:157:7","statements":[{"expression":{"arguments":[{"id":1993,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9358:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"9365:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1251,"src":"9365:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"9375:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"9375:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1998,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"9383:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1999,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"9395:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1992,"name":"fillSellOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"9343:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9343:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2001,"nodeType":"ExpressionStatement","src":"9343:57:7"},{"eventCall":{"arguments":[{"id":2003,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9433:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":2004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"9440:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":2005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1251,"src":"9440:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2006,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"9450:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":2007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"9450:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2008,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"9458:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2009,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"9470:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2002,"name":"fillSellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"9419:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9419:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2011,"nodeType":"EmitStatement","src":"9414:61:7"}]}},"id":2014,"nodeType":"IfStatement","src":"9123:363:7","trueBody":{"id":1987,"nodeType":"Block","src":"9145:155:7","statements":[{"expression":{"arguments":[{"id":1968,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9173:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"9180:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1251,"src":"9180:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1971,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"9190:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"9190:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1973,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"9198:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1974,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"9210:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1967,"name":"fillBuyOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"9159:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9159:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1976,"nodeType":"ExpressionStatement","src":"9159:56:7"},{"eventCall":{"arguments":[{"id":1978,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9247:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},{"expression":{"id":1979,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"9254:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1251,"src":"9254:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"9264:1:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"id":1982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"9264:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1983,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"9272:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1984,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"9284:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1977,"name":"fillBuyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"9234:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (struct Exchange._Order memory,uint256,uint256,bool,uint256)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9234:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1986,"nodeType":"EmitStatement","src":"9229:60:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2015,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9500:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"9500:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9517:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9500:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2038,"nodeType":"IfStatement","src":"9496:190:7","trueBody":{"id":2037,"nodeType":"Block","src":"9520:166:7","statements":[{"expression":{"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2019,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"9534:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9547:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9534:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2022,"nodeType":"ExpressionStatement","src":"9534:18:7"},{"expression":{"arguments":[{"id":2024,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"9578:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"expression":{"id":2025,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9584:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"9584:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2027,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9594:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"9594:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2029,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9608:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"9608:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2023,"name":"cancelOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"9566:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$1305_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9566:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2032,"nodeType":"ExpressionStatement","src":"9566:55:7"},{"expression":{"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2033,"name":"s_isManual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"9658:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9671:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9658:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2036,"nodeType":"ExpressionStatement","src":"9658:17:7"}]}}]},"id":2040,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1842,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8203:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1843,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"8208:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"id":1844,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8214:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1845,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8223:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1846,"kind":"modifierInvocation","modifierName":{"id":1841,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":3122,"src":"8192:10:7"},"nodeType":"ModifierInvocation","src":"8192:39:7"},{"arguments":[{"id":1848,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8251:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1849,"kind":"modifierInvocation","modifierName":{"id":1847,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"8240:10:7"},"nodeType":"ModifierInvocation","src":"8240:19:7"},{"arguments":[{"id":1851,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8279:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1852,"kind":"modifierInvocation","modifierName":{"id":1850,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"8268:10:7"},"nodeType":"ModifierInvocation","src":"8268:19:7"}],"name":"fillOrder","nameLocation":"8026:9:7","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"side","nameLocation":"8050:4:7","nodeType":"VariableDeclaration","scope":2040,"src":"8045:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":1829,"nodeType":"UserDefinedTypeName","pathNode":{"id":1828,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"8045:4:7"},"referencedDeclaration":1305,"src":"8045:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"_id","nameLocation":"8072:3:7","nodeType":"VariableDeclaration","scope":2040,"src":"8064:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"8064:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"_tokenA","nameLocation":"8093:7:7","nodeType":"VariableDeclaration","scope":2040,"src":"8085:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"8085:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"_tokenB","nameLocation":"8118:7:7","nodeType":"VariableDeclaration","scope":2040,"src":"8110:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"8110:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1839,"mutability":"mutable","name":"a","nameLocation":"8159:1:7","nodeType":"VariableDeclaration","scope":2040,"src":"8135:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":1838,"nodeType":"UserDefinedTypeName","pathNode":{"id":1837,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":1252,"src":"8135:16:7"},"referencedDeclaration":1252,"src":"8135:16:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"src":"8035:131:7"},"returnParameters":{"id":1853,"nodeType":"ParameterList","parameters":[],"src":"8292:0:7"},"scope":3136,"src":"8017:1675:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"9860:2173:7","statements":[{"condition":{"id":2054,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"9874:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2134,"nodeType":"Block","src":"10553:577:7","statements":[{"assignments":[2100],"declarations":[{"constant":false,"id":2100,"mutability":"mutable","name":"amountTokenToDeduct","nameLocation":"10575:19:7","nodeType":"VariableDeclaration","scope":2134,"src":"10567:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"10567:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2107,"initialValue":{"arguments":[{"expression":{"id":2103,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10647:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"10647:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2105,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"10677:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2101,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10597:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountTokensToDeduct","nodeType":"MemberAccess","referencedDeclaration":3478,"src":"10597:32:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10597:98:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10567:128:7"},{"expression":{"arguments":[{"expression":{"id":2111,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10810:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"10810:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2113,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10840:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"10840:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2117,"name":"amountTokenToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"10880:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2115,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"10868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"10868:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10868:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10918:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2108,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10764:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"10764:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10764:172:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2121,"nodeType":"ExpressionStatement","src":"10764:172:7"},{"expression":{"arguments":[{"expression":{"id":2125,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10997:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"10997:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2127,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"11027:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fundWallet","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"11027:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11027:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2130,"name":"amountTokenToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"11064:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11101:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2122,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10951:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"10951:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10951:168:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2133,"nodeType":"ExpressionStatement","src":"10951:168:7"}]},"id":2135,"nodeType":"IfStatement","src":"9870:1260:7","trueBody":{"id":2098,"nodeType":"Block","src":"9886:661:7","statements":[{"assignments":[2056],"declarations":[{"constant":false,"id":2056,"mutability":"mutable","name":"aDAIToDeduct","nameLocation":"9934:12:7","nodeType":"VariableDeclaration","scope":2098,"src":"9926:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"9926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2061,"initialValue":{"arguments":[{"id":2059,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9980:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2057,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9949:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountaDAIToDeduct","nodeType":"MemberAccess","referencedDeclaration":3441,"src":"9949:30:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9949:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9926:59:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2065,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10045:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":3334,"src":"10045:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10045:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2068,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10081:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"10081:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2070,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"10109:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10139:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2062,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"9999:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"9999:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9999:159:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2073,"nodeType":"ExpressionStatement","src":"9999:159:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2077,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10218:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":3334,"src":"10218:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10218:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2080,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10254:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fundWallet","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"10254:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10254:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2083,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"10291:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10321:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2074,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10172:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"10172:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10172:167:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"ExpressionStatement","src":"10172:167:7"},{"expression":{"arguments":[{"expression":{"id":2090,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10435:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"10435:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2092,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10465:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"10465:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2094,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"10493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10518:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2087,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"10389:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"10389:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10389:147:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2097,"nodeType":"ExpressionStatement","src":"10389:147:7"}]}},{"expression":{"arguments":[{"expression":{"id":2139,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11227:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"11227:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2141,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11251:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"11251:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2150,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"11307:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2146,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"11293:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2143,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11278:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"11278:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"11278:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11278:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11277:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"11277:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11277:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11330:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2136,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"11181:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"11181:32:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11181:164:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2154,"nodeType":"ExpressionStatement","src":"11181:164:7"},{"expression":{"arguments":[{"expression":{"id":2158,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11472:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"11472:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2160,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11498:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"11498:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2168,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"11547:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2164,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"11533:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2162,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"11523:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"11523:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11523:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11522:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"11522:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11522:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11570:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2155,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"11430:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"11430:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11430:155:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2172,"nodeType":"ExpressionStatement","src":"11430:155:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2181,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11674:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"11674:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2183,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11700:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1257,"src":"11700:10:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"expression":{"id":2185,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11728:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"11728:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2187,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11756:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"11756:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2189,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11786:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"11786:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2191,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"11816:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2192,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"11841:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2193,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11864:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"11864:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2195,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11892:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":1271,"src":"11892:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2197,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11931:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":1273,"src":"11931:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2199,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"11970:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2200,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"11998:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2180,"name":"_filledOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"11644:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__filledOrder_$1302_storage_ptr_$","typeString":"type(struct Exchange._filledOrder storage pointer)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11644:372:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1302_memory_ptr","typeString":"struct Exchange._filledOrder memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__filledOrder_$1302_memory_ptr","typeString":"struct Exchange._filledOrder memory"}],"expression":{"baseExpression":{"baseExpression":{"id":2173,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"11596:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":2177,"indexExpression":{"expression":{"id":2174,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"11611:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"11611:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11596:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":2178,"indexExpression":{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11623:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11596:29:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"11596:34:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_ptr_$_t_struct$__filledOrder_$1302_storage_$returns$__$bound_to$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._filledOrder storage ref[] storage pointer,struct Exchange._filledOrder storage ref)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11596:430:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2203,"nodeType":"ExpressionStatement","src":"11596:430:7"}]},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"fillBuyOrders","nameLocation":"9707:13:7","nodeType":"FunctionDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"order","nameLocation":"9744:5:7","nodeType":"VariableDeclaration","scope":2205,"src":"9730:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2042,"nodeType":"UserDefinedTypeName","pathNode":{"id":2041,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"9730:6:7"},"referencedDeclaration":1276,"src":"9730:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"_amount","nameLocation":"9767:7:7","nodeType":"VariableDeclaration","scope":2205,"src":"9759:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"9759:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"_rate","nameLocation":"9792:5:7","nodeType":"VariableDeclaration","scope":2205,"src":"9784:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"9784:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"feesWaived","nameLocation":"9812:10:7","nodeType":"VariableDeclaration","scope":2205,"src":"9807:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2048,"name":"bool","nodeType":"ElementaryTypeName","src":"9807:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"fees","nameLocation":"9840:4:7","nodeType":"VariableDeclaration","scope":2205,"src":"9832:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"9832:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9720:130:7"},"returnParameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"9860:0:7"},"scope":3136,"src":"9698:2335:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2368,"nodeType":"Block","src":"12202:2020:7","statements":[{"condition":{"id":2219,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"12216:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2313,"nodeType":"Block","src":"12922:606:7","statements":[{"assignments":[2272],"declarations":[{"constant":false,"id":2272,"mutability":"mutable","name":"amountTokensToDeduct","nameLocation":"12944:20:7","nodeType":"VariableDeclaration","scope":2313,"src":"12936:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"12936:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2279,"initialValue":{"arguments":[{"expression":{"id":2275,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13017:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"13017:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2277,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"13047:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2273,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12967:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountTokensToDeduct","nodeType":"MemberAccess","referencedDeclaration":3478,"src":"12967:32:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12967:98:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12936:129:7"},{"expression":{"arguments":[{"expression":{"id":2283,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13125:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"13125:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2285,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"13155:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fundWallet","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"13155:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13155:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2288,"name":"amountTokensToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"13192:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13230:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2280,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"13079:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"13079:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13079:169:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2291,"nodeType":"ExpressionStatement","src":"13079:169:7"},{"expression":{"arguments":[{"expression":{"id":2295,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13363:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"13363:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2297,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13393:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"13393:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2308,"name":"amountTokensToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"13460:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2305,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"13446:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2301,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"13432:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2299,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"13422:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"13422:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13422:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13421:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"13421:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13421:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"13421:38:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13421:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13499:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2292,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"13317:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"13317:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13317:200:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2312,"nodeType":"ExpressionStatement","src":"13317:200:7"}]},"id":2314,"nodeType":"IfStatement","src":"12212:1316:7","trueBody":{"id":2270,"nodeType":"Block","src":"12228:688:7","statements":[{"assignments":[2221],"declarations":[{"constant":false,"id":2221,"mutability":"mutable","name":"aDAIToDeduct","nameLocation":"12276:12:7","nodeType":"VariableDeclaration","scope":2270,"src":"12268:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"12268:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2226,"initialValue":{"arguments":[{"id":2224,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"12322:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2222,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12291:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountaDAIToDeduct","nodeType":"MemberAccess","referencedDeclaration":3441,"src":"12291:30:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12291:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12268:59:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2230,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12387:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":3334,"src":"12387:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12387:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2233,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"12423:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"12423:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2235,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"12451:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12481:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2227,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12341:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"12341:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12341:159:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2238,"nodeType":"ExpressionStatement","src":"12341:159:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2242,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12560:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"aDAI","nodeType":"MemberAccess","referencedDeclaration":3334,"src":"12560:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12560:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2245,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12596:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"fundWallet","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"12596:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12596:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2248,"name":"aDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"12633:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12663:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2239,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12514:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"12514:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12514:167:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2251,"nodeType":"ExpressionStatement","src":"12514:167:7"},{"expression":{"arguments":[{"expression":{"id":2255,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"12777:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"12777:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2257,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"12807:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"12807:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2265,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"12860:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":2261,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"12846:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2259,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"12836:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"12836:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12836:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12835:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"12835:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12835:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12887:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2252,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12731:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"12731:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12731:174:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2269,"nodeType":"ExpressionStatement","src":"12731:174:7"}]}},{"expression":{"arguments":[{"expression":{"id":2318,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13584:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"13584:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2320,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13608:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"13608:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2322,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"13634:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13655:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2315,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"13538:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateLockedFunds","nodeType":"MemberAccess","referencedDeclaration":3932,"src":"13538:32:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13538:132:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2325,"nodeType":"ExpressionStatement","src":"13538:132:7"},{"expression":{"arguments":[{"expression":{"id":2329,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13733:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"13733:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2331,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13747:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"13747:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2333,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"13759:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13768:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2326,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"13704:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exchangeUpdateBalance","nodeType":"MemberAccess","referencedDeclaration":4018,"src":"13704:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool) external"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13704:70:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2336,"nodeType":"ExpressionStatement","src":"13704:70:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2345,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13863:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"13863:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2347,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13889:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"side","nodeType":"MemberAccess","referencedDeclaration":1257,"src":"13889:10:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"expression":{"id":2349,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13917:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"13917:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2351,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13945:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenA","nodeType":"MemberAccess","referencedDeclaration":1261,"src":"13945:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2353,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13975:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"13975:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2355,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"14005:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2356,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"14030:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2357,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"14053:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"14053:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2359,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"14081:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountA","nodeType":"MemberAccess","referencedDeclaration":1271,"src":"14081:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2361,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"14120:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"originalAmountB","nodeType":"MemberAccess","referencedDeclaration":1273,"src":"14120:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2363,"name":"feesWaived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"14159:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2364,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"14187:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2344,"name":"_filledOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"13833:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__filledOrder_$1302_storage_ptr_$","typeString":"type(struct Exchange._filledOrder storage pointer)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13833:372:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1302_memory_ptr","typeString":"struct Exchange._filledOrder memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__filledOrder_$1302_memory_ptr","typeString":"struct Exchange._filledOrder memory"}],"expression":{"baseExpression":{"baseExpression":{"id":2337,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"13785:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":2341,"indexExpression":{"expression":{"id":2338,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"13800:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"13800:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13785:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":2342,"indexExpression":{"hexValue":"31","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13812:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13785:29:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"13785:34:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_ptr_$_t_struct$__filledOrder_$1302_storage_$returns$__$bound_to$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._filledOrder storage ref[] storage pointer,struct Exchange._filledOrder storage ref)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13785:430:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2367,"nodeType":"ExpressionStatement","src":"13785:430:7"}]},"id":2369,"implemented":true,"kind":"function","modifiers":[],"name":"fillSellOrders","nameLocation":"12048:14:7","nodeType":"FunctionDefinition","parameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"order","nameLocation":"12086:5:7","nodeType":"VariableDeclaration","scope":2369,"src":"12072:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2207,"nodeType":"UserDefinedTypeName","pathNode":{"id":2206,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"12072:6:7"},"referencedDeclaration":1276,"src":"12072:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"_amount","nameLocation":"12109:7:7","nodeType":"VariableDeclaration","scope":2369,"src":"12101:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"12101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"_rate","nameLocation":"12134:5:7","nodeType":"VariableDeclaration","scope":2369,"src":"12126:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"12126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"feesWaived","nameLocation":"12154:10:7","nodeType":"VariableDeclaration","scope":2369,"src":"12149:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2213,"name":"bool","nodeType":"ElementaryTypeName","src":"12149:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2216,"mutability":"mutable","name":"fees","nameLocation":"12182:4:7","nodeType":"VariableDeclaration","scope":2369,"src":"12174:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"12174:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12062:130:7"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[],"src":"12202:0:7"},"scope":3136,"src":"12039:2183:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2727,"nodeType":"Block","src":"14470:5082:7","statements":[{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"saleTokenAmt","nameLocation":"14488:12:7","nodeType":"VariableDeclaration","scope":2727,"src":"14480:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"14480:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2395,"nodeType":"VariableDeclarationStatement","src":"14480:20:7"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2396,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"14515:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2397,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"14523:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1303,"src":"14523:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"src":"14515:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"17025:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2563,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"17033:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"17033:9:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"src":"17025:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2725,"nodeType":"IfStatement","src":"17021:2525:7","trueBody":{"id":2724,"nodeType":"Block","src":"17044:2502:7","statements":[{"assignments":[2570],"declarations":[{"constant":false,"id":2570,"mutability":"mutable","name":"_buyOrder","nameLocation":"17116:9:7","nodeType":"VariableDeclaration","scope":2724,"src":"17100:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2568,"nodeType":"UserDefinedTypeName","pathNode":{"id":2567,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"17100:6:7"},"referencedDeclaration":1276,"src":"17100:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"id":2569,"nodeType":"ArrayTypeName","src":"17100:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2578,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2571,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"17128:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2573,"indexExpression":{"id":2572,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"17140:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17128:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2575,"indexExpression":{"id":2574,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"17149:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17128:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2577,"indexExpression":{"hexValue":"30","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17158:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17128:32:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17100:60:7"},{"body":{"id":2722,"nodeType":"Block","src":"17221:2315:7","statements":[{"assignments":[2592,null],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"sellOrderToFill","nameLocation":"17305:15:7","nodeType":"VariableDeclaration","scope":2722,"src":"17291:29:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2591,"nodeType":"UserDefinedTypeName","pathNode":{"id":2590,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"17291:6:7"},"referencedDeclaration":1276,"src":"17291:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},null],"id":2599,"initialValue":{"arguments":[{"id":2594,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"17365:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2595,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"17394:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17423:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":2597,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"17446:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2593,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"17326:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$","typeString":"function (address,address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17326:141:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"17290:177:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2600,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"17563:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2602,"indexExpression":{"id":2601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"17573:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17563:12:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"17563:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2604,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"17584:15:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"17584:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17563:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2607,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"17628:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2609,"indexExpression":{"id":2608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"17638:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17628:12:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"17628:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2611,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"17649:15:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"17649:20:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17628:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17563:106:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2708,"nodeType":"IfStatement","src":"17538:1868:7","trueBody":{"id":2707,"nodeType":"Block","src":"17688:1718:7","statements":[{"assignments":[2617],"declarations":[{"constant":false,"id":2617,"mutability":"mutable","name":"order","nameLocation":"17724:5:7","nodeType":"VariableDeclaration","scope":2707,"src":"17710:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2616,"nodeType":"UserDefinedTypeName","pathNode":{"id":2615,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"17710:6:7"},"referencedDeclaration":1276,"src":"17710:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":2621,"initialValue":{"baseExpression":{"id":2618,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"17732:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2620,"indexExpression":{"id":2619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"17742:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17732:12:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"VariableDeclarationStatement","src":"17710:34:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2622,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"17844:15:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"17844:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2624,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"17870:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"17870:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17844:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2633,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"18065:15:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"18065:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2635,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"18092:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"18092:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18065:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2644,"nodeType":"IfStatement","src":"18061:133:7","trueBody":{"id":2643,"nodeType":"Block","src":"18107:87:7","statements":[{"expression":{"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2638,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"18133:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2639,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"18148:15:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"18148:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18133:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2642,"nodeType":"ExpressionStatement","src":"18133:38:7"}]}},"id":2645,"nodeType":"IfStatement","src":"17840:354:7","trueBody":{"id":2632,"nodeType":"Block","src":"17885:77:7","statements":[{"expression":{"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2627,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"17911:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2628,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"17926:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"17926:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17911:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2631,"nodeType":"ExpressionStatement","src":"17911:28:7"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2649,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"18310:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2650,"name":"sellOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"18319:15:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"18319:20:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2647,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"18293:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"18293:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18293:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2653,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"18372:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18293:91:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742053656c6c657220546f6b656e2042616c616e6365","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18410:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""},"value":"Insufficient Seller Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""}],"id":2646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18260:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18260:207:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2657,"nodeType":"ExpressionStatement","src":"18260:207:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2661,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"18539:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"18539:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2663,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"18553:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"18553:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2659,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"18522:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"18522:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18522:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":2673,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"18631:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"expression":{"id":2668,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"18614:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"18614:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2666,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"18597:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"18597:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18597:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18596:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"18596:34:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18596:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18522:118:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420427579657220546f6b656e2042616c616e6365","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18666:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""},"value":"Insufficient Buyer Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""}],"id":2658,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18489:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18489:233:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2678,"nodeType":"ExpressionStatement","src":"18489:233:7"},{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"fillOrderValues","nameLocation":"18805:15:7","nodeType":"VariableDeclaration","scope":2707,"src":"18781:39:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":2680,"nodeType":"UserDefinedTypeName","pathNode":{"id":2679,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":1252,"src":"18781:16:7"},"referencedDeclaration":1252,"src":"18781:16:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"id":2687,"initialValue":{"arguments":[{"expression":{"id":2683,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"18865:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"18865:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2685,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"18901:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2682,"name":"_fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"18823:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__fillOrderValues_$1252_storage_ptr_$","typeString":"type(struct Exchange._fillOrderValues storage pointer)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18823:112:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"nodeType":"VariableDeclarationStatement","src":"18781:154:7"},{"expression":{"arguments":[{"expression":{"id":2689,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"18992:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"18992:9:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"id":2691,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"19027:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2692,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"19056:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2693,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"19089:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2694,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"19122:15:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":2688,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"18957:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$1305_$_t_uint256_$_t_address_$_t_address_$_t_struct$__fillOrderValues_$1252_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address,struct Exchange._fillOrderValues memory)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18957:202:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2696,"nodeType":"ExpressionStatement","src":"18957:202:7"},{"expression":{"arguments":[{"expression":{"id":2698,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"19216:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1303,"src":"19216:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"expression":{"id":2700,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"19250:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"19250:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2702,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"19284:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2703,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"19317:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2704,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"19350:15:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":2697,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"19181:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$1305_$_t_uint256_$_t_address_$_t_address_$_t_struct$__fillOrderValues_$1252_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address,struct Exchange._fillOrderValues memory)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19181:206:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2706,"nodeType":"ExpressionStatement","src":"19181:206:7"}]}},{"assignments":[2710],"declarations":[{"constant":false,"id":2710,"mutability":"mutable","name":"orderExist","nameLocation":"19428:10:7","nodeType":"VariableDeclaration","scope":2722,"src":"19423:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2709,"name":"bool","nodeType":"ElementaryTypeName","src":"19423:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2717,"initialValue":{"arguments":[{"id":2712,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"19453:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2713,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"19458:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"id":2714,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"19464:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2715,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"19473:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2711,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"19441:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$1305_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address,address) view returns (bool)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19441:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"19423:58:7"},{"condition":{"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19503:11:7","subExpression":{"id":2718,"name":"orderExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"19504:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2721,"nodeType":"IfStatement","src":"19499:22:7","trueBody":{"id":2720,"nodeType":"Break","src":"19516:5:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"17194:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2584,"name":"_buyOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"17198:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"17198:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17194:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2723,"initializationExpression":{"assignments":[2580],"declarations":[{"constant":false,"id":2580,"mutability":"mutable","name":"i","nameLocation":"17187:1:7","nodeType":"VariableDeclaration","scope":2723,"src":"17179:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"17179:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2582,"initialValue":{"hexValue":"30","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17191:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17179:13:7"},"loopExpression":{"expression":{"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17216:3:7","subExpression":{"id":2587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"17216:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2589,"nodeType":"ExpressionStatement","src":"17216:3:7"},"nodeType":"ForStatement","src":"17174:2362:7"}]}},"id":2726,"nodeType":"IfStatement","src":"14511:5035:7","trueBody":{"id":2561,"nodeType":"Block","src":"14533:2482:7","statements":[{"assignments":[2404],"declarations":[{"constant":false,"id":2404,"mutability":"mutable","name":"_sellOrder","nameLocation":"14606:10:7","nodeType":"VariableDeclaration","scope":2561,"src":"14590:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2402,"nodeType":"UserDefinedTypeName","pathNode":{"id":2401,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"14590:6:7"},"referencedDeclaration":1276,"src":"14590:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"id":2403,"nodeType":"ArrayTypeName","src":"14590:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2412,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2405,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"14619:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2407,"indexExpression":{"id":2406,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"14631:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14619:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2409,"indexExpression":{"id":2408,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"14640:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14619:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2411,"indexExpression":{"hexValue":"31","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14649:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14619:32:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14590:61:7"},{"body":{"id":2559,"nodeType":"Block","src":"14713:2292:7","statements":[{"assignments":[2426,null],"declarations":[{"constant":false,"id":2426,"mutability":"mutable","name":"buyOrderToFill","nameLocation":"14796:14:7","nodeType":"VariableDeclaration","scope":2559,"src":"14782:28:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2425,"nodeType":"UserDefinedTypeName","pathNode":{"id":2424,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"14782:6:7"},"referencedDeclaration":1276,"src":"14782:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},null],"id":2436,"initialValue":{"arguments":[{"id":2428,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"14855:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2429,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"14884:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2432,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"14919:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}],"id":2431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14913:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2430,"name":"uint8","nodeType":"ElementaryTypeName","src":"14913:5:7","typeDescriptions":{}}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14913:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2434,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"14946:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2427,"name":"getOrderFromArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"14816:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$","typeString":"function (address,address,uint256,uint256) view returns (struct Exchange._Order memory,uint256)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14816:151:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14781:186:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2437,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"15080:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2439,"indexExpression":{"id":2438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"15091:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15080:13:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"15080:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2441,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"15102:14:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"15102:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15080:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2444,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"15145:14:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"15145:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"baseExpression":{"id":2446,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"15168:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2448,"indexExpression":{"id":2447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"15179:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15168:13:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"15168:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15145:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15080:106:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2545,"nodeType":"IfStatement","src":"15055:1819:7","trueBody":{"id":2544,"nodeType":"Block","src":"15205:1669:7","statements":[{"assignments":[2454],"declarations":[{"constant":false,"id":2454,"mutability":"mutable","name":"sellOrder","nameLocation":"15241:9:7","nodeType":"VariableDeclaration","scope":2544,"src":"15227:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2453,"nodeType":"UserDefinedTypeName","pathNode":{"id":2452,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"15227:6:7"},"referencedDeclaration":1276,"src":"15227:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":2458,"initialValue":{"baseExpression":{"id":2455,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"15253:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2457,"indexExpression":{"id":2456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"15264:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15253:13:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"VariableDeclarationStatement","src":"15227:39:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2459,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"15365:14:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"15365:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2461,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"15390:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"15390:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15365:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2470,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"15594:14:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"15594:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2472,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"15620:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"15620:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15594:43:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2481,"nodeType":"IfStatement","src":"15590:135:7","trueBody":{"id":2480,"nodeType":"Block","src":"15639:86:7","statements":[{"expression":{"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2475,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"15665:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2476,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"15680:14:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"15680:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15665:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2479,"nodeType":"ExpressionStatement","src":"15665:37:7"}]}},"id":2482,"nodeType":"IfStatement","src":"15361:364:7","trueBody":{"id":2469,"nodeType":"Block","src":"15409:81:7","statements":[{"expression":{"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2464,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"15435:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2465,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"15450:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountA","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"15450:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15435:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2468,"nodeType":"ExpressionStatement","src":"15435:32:7"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2486,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"15871:14:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenB","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"15871:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2488,"name":"buyOrderToFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"15922:14:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"15922:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2484,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"15825:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"15825:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15825:142:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":2498,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"16010:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"expression":{"id":2493,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"15989:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"15989:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2491,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"15972:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"15972:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15972:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15971:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"15971:38:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15971:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15825:194:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420427579657220546f6b656e2042616c616e6365","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16045:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""},"value":"Insufficient Buyer Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b526016737f3f795ad9662415cdc5815356c7958b0a29dae27c6455ef786683d","typeString":"literal_string \"Insufficient Buyer Token Balance\""}],"id":2483,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15792:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15792:309:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2503,"nodeType":"ExpressionStatement","src":"15792:309:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2507,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"16173:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2508,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"16182:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"user","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"16182:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2505,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"16156:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3997,"src":"16156:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16156:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2511,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"16229:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16156:85:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742053656c6c657220546f6b656e2042616c616e6365","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16267:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""},"value":"Insufficient Seller Token Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23606608e7b13fb3e79d5390038cbd9a3725c22bbf868c3351f539c1403aa51c","typeString":"literal_string \"Insufficient Seller Token Balance\""}],"id":2504,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16123:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16123:201:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2515,"nodeType":"ExpressionStatement","src":"16123:201:7"},{"assignments":[2518],"declarations":[{"constant":false,"id":2518,"mutability":"mutable","name":"fillOrderValues","nameLocation":"16407:15:7","nodeType":"VariableDeclaration","scope":2544,"src":"16383:39:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues"},"typeName":{"id":2517,"nodeType":"UserDefinedTypeName","pathNode":{"id":2516,"name":"_fillOrderValues","nodeType":"IdentifierPath","referencedDeclaration":1252,"src":"16383:16:7"},"referencedDeclaration":1252,"src":"16383:16:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_storage_ptr","typeString":"struct Exchange._fillOrderValues"}},"visibility":"internal"}],"id":2524,"initialValue":{"arguments":[{"expression":{"id":2520,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"16467:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rate","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"16467:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2522,"name":"saleTokenAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"16507:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2519,"name":"_fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"16425:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__fillOrderValues_$1252_storage_ptr_$","typeString":"type(struct Exchange._fillOrderValues storage pointer)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16425:116:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}},"nodeType":"VariableDeclarationStatement","src":"16383:158:7"},{"expression":{"arguments":[{"expression":{"id":2526,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"16573:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BUY","nodeType":"MemberAccess","referencedDeclaration":1303,"src":"16573:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"id":2528,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"16583:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2529,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"16588:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2530,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"16597:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2531,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"16606:15:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":2525,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"16563:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$1305_$_t_uint256_$_t_address_$_t_address_$_t_struct$__fillOrderValues_$1252_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address,struct Exchange._fillOrderValues memory)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16563:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2533,"nodeType":"ExpressionStatement","src":"16563:59:7"},{"expression":{"arguments":[{"expression":{"id":2535,"name":"Side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"16679:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Side_$1305_$","typeString":"type(enum Exchange.Side)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SELL","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"16679:9:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"expression":{"id":2537,"name":"sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"16714:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"16714:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2539,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"16752:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2540,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"16785:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2541,"name":"fillOrderValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"16818:15:7","typeDescriptions":{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$__fillOrderValues_$1252_memory_ptr","typeString":"struct Exchange._fillOrderValues memory"}],"id":2534,"name":"fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"16644:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_Side_$1305_$_t_uint256_$_t_address_$_t_address_$_t_struct$__fillOrderValues_$1252_memory_ptr_$returns$__$","typeString":"function (enum Exchange.Side,uint256,address,address,struct Exchange._fillOrderValues memory)"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16644:211:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2543,"nodeType":"ExpressionStatement","src":"16644:211:7"}]}},{"assignments":[2547],"declarations":[{"constant":false,"id":2547,"mutability":"mutable","name":"orderExist","nameLocation":"16897:10:7","nodeType":"VariableDeclaration","scope":2559,"src":"16892:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2546,"name":"bool","nodeType":"ElementaryTypeName","src":"16892:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2554,"initialValue":{"arguments":[{"id":2549,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"16922:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2550,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"16927:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"id":2551,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"16933:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2552,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"16942:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2548,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"16910:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$1305_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address,address) view returns (bool)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16910:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"16892:58:7"},{"condition":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16972:11:7","subExpression":{"id":2555,"name":"orderExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"16973:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2558,"nodeType":"IfStatement","src":"16968:22:7","trueBody":{"id":2557,"nodeType":"Break","src":"16985:5:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"14685:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2418,"name":"_sellOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"14689:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14689:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14685:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2560,"initializationExpression":{"assignments":[2414],"declarations":[{"constant":false,"id":2414,"mutability":"mutable","name":"i","nameLocation":"14678:1:7","nodeType":"VariableDeclaration","scope":2560,"src":"14670:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"14670:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2416,"initialValue":{"hexValue":"30","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14682:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14670:13:7"},"loopExpression":{"expression":{"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14708:3:7","subExpression":{"id":2421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"14708:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2423,"nodeType":"ExpressionStatement","src":"14708:3:7"},"nodeType":"ForStatement","src":"14665:2340:7"}]}}]},"id":2728,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2381,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"14381:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2382,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"14386:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"id":2383,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"14392:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2384,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"14401:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2385,"kind":"modifierInvocation","modifierName":{"id":2380,"name":"validOrder","nodeType":"IdentifierPath","referencedDeclaration":3122,"src":"14370:10:7"},"nodeType":"ModifierInvocation","src":"14370:39:7"},{"arguments":[{"id":2387,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"14429:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2388,"kind":"modifierInvocation","modifierName":{"id":2386,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"14418:10:7"},"nodeType":"ModifierInvocation","src":"14418:19:7"},{"arguments":[{"id":2390,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"14457:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2391,"kind":"modifierInvocation","modifierName":{"id":2389,"name":"validToken","nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"14446:10:7"},"nodeType":"ModifierInvocation","src":"14446:19:7"}],"name":"matchOrders","nameLocation":"14237:11:7","nodeType":"FunctionDefinition","parameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"_tokenA","nameLocation":"14266:7:7","nodeType":"VariableDeclaration","scope":2728,"src":"14258:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"14258:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"_tokenB","nameLocation":"14291:7:7","nodeType":"VariableDeclaration","scope":2728,"src":"14283:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"14283:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"_id","nameLocation":"14316:3:7","nodeType":"VariableDeclaration","scope":2728,"src":"14308:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"14308:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"side","nameLocation":"14334:4:7","nodeType":"VariableDeclaration","scope":2728,"src":"14329:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":2377,"nodeType":"UserDefinedTypeName","pathNode":{"id":2376,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"14329:4:7"},"referencedDeclaration":1305,"src":"14329:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"14248:96:7"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[],"src":"14470:0:7"},"scope":3136,"src":"14228:5324:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2752,"nodeType":"Block","src":"19687:75:7","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2740,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"19704:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2742,"indexExpression":{"id":2741,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"19716:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19704:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2744,"indexExpression":{"id":2743,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"19725:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19704:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2749,"indexExpression":{"arguments":[{"id":2747,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"19742:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}],"id":2746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19734:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"19734:7:7","typeDescriptions":{}}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19734:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19704:44:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"19704:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2739,"id":2751,"nodeType":"Return","src":"19697:58:7"}]},"functionSelector":"14eca9dc","id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderLength","nameLocation":"19567:14:7","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"side","nameLocation":"19596:4:7","nodeType":"VariableDeclaration","scope":2753,"src":"19591:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":2730,"nodeType":"UserDefinedTypeName","pathNode":{"id":2729,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"19591:4:7"},"referencedDeclaration":1305,"src":"19591:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2733,"mutability":"mutable","name":"_tokenA","nameLocation":"19618:7:7","nodeType":"VariableDeclaration","scope":2753,"src":"19610:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"19610:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2735,"mutability":"mutable","name":"_tokenB","nameLocation":"19643:7:7","nodeType":"VariableDeclaration","scope":2753,"src":"19635:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"19635:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19581:75:7"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2753,"src":"19678:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"19678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19677:9:7"},"scope":3136,"src":"19558:204:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2787,"nodeType":"Block","src":"19920:136:7","statements":[{"assignments":[2770],"declarations":[{"constant":false,"id":2770,"mutability":"mutable","name":"order","nameLocation":"19944:5:7","nodeType":"VariableDeclaration","scope":2787,"src":"19930:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2769,"nodeType":"UserDefinedTypeName","pathNode":{"id":2768,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"19930:6:7"},"referencedDeclaration":1276,"src":"19930:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":2783,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2771,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"19952:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2773,"indexExpression":{"id":2772,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"19964:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19952:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2775,"indexExpression":{"id":2774,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"19973:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19952:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2780,"indexExpression":{"arguments":[{"id":2778,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"19990:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}],"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19982:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"19982:7:7","typeDescriptions":{}}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19982:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19952:44:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"id":2782,"indexExpression":{"id":2781,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"20010:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19952:73:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage","typeString":"struct Exchange._Order storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19930:95:7"},{"expression":{"components":[{"id":2784,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"20043:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}}],"id":2785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20042:7:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"functionReturnParameters":2767,"id":2786,"nodeType":"Return","src":"20035:14:7"}]},"functionSelector":"ea42f349","id":2788,"implemented":true,"kind":"function","modifiers":[],"name":"getOrder","nameLocation":"19777:8:7","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"_tokenA","nameLocation":"19803:7:7","nodeType":"VariableDeclaration","scope":2788,"src":"19795:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2754,"name":"address","nodeType":"ElementaryTypeName","src":"19795:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"_tokenB","nameLocation":"19828:7:7","nodeType":"VariableDeclaration","scope":2788,"src":"19820:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2756,"name":"address","nodeType":"ElementaryTypeName","src":"19820:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"index","nameLocation":"19853:5:7","nodeType":"VariableDeclaration","scope":2788,"src":"19845:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"19845:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"side","nameLocation":"19873:4:7","nodeType":"VariableDeclaration","scope":2788,"src":"19868:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":2761,"nodeType":"UserDefinedTypeName","pathNode":{"id":2760,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"19868:4:7"},"referencedDeclaration":1305,"src":"19868:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"19785:98:7"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2788,"src":"19905:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2765,"nodeType":"UserDefinedTypeName","pathNode":{"id":2764,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"19905:6:7"},"referencedDeclaration":1276,"src":"19905:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"src":"19904:15:7"},"scope":3136,"src":"19768:288:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2808,"nodeType":"Block","src":"20170:67:7","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":2798,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"20187:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":2800,"indexExpression":{"id":2799,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"20202:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20187:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":2805,"indexExpression":{"arguments":[{"id":2803,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"20217:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}],"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20209:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"20209:7:7","typeDescriptions":{}}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20209:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20187:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"20187:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2797,"id":2807,"nodeType":"Return","src":"20180:50:7"}]},"functionSelector":"c3364be4","id":2809,"implemented":true,"kind":"function","modifiers":[],"name":"getFilledOrderLength","nameLocation":"20071:20:7","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"_user","nameLocation":"20109:5:7","nodeType":"VariableDeclaration","scope":2809,"src":"20101:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2789,"name":"address","nodeType":"ElementaryTypeName","src":"20101:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"side","nameLocation":"20129:4:7","nodeType":"VariableDeclaration","scope":2809,"src":"20124:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":2792,"nodeType":"UserDefinedTypeName","pathNode":{"id":2791,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"20124:4:7"},"referencedDeclaration":1305,"src":"20124:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"}],"src":"20091:48:7"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2809,"src":"20161:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"20161:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20160:9:7"},"scope":3136,"src":"20062:175:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2839,"nodeType":"Block","src":"20380:146:7","statements":[{"assignments":[2824],"declarations":[{"constant":false,"id":2824,"mutability":"mutable","name":"filledOrder","nameLocation":"20410:11:7","nodeType":"VariableDeclaration","scope":2839,"src":"20390:31:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1302_memory_ptr","typeString":"struct Exchange._filledOrder"},"typeName":{"id":2823,"nodeType":"UserDefinedTypeName","pathNode":{"id":2822,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":1302,"src":"20390:12:7"},"referencedDeclaration":1302,"src":"20390:12:7","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1302_storage_ptr","typeString":"struct Exchange._filledOrder"}},"visibility":"internal"}],"id":2835,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2825,"name":"s_filledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"20424:14:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref))"}},"id":2827,"indexExpression":{"id":2826,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"20439:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20424:21:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._filledOrder storage ref[] storage ref)"}},"id":2832,"indexExpression":{"arguments":[{"id":2830,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"20454:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}],"id":2829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20446:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"20446:7:7","typeDescriptions":{}}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20446:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20424:36:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__filledOrder_$1302_storage_$dyn_storage","typeString":"struct Exchange._filledOrder storage ref[] storage ref"}},"id":2834,"indexExpression":{"id":2833,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"20474:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20424:65:7","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1302_storage","typeString":"struct Exchange._filledOrder storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20390:99:7"},{"expression":{"components":[{"id":2836,"name":"filledOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"20507:11:7","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1302_memory_ptr","typeString":"struct Exchange._filledOrder memory"}}],"id":2837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20506:13:7","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1302_memory_ptr","typeString":"struct Exchange._filledOrder memory"}},"functionReturnParameters":2821,"id":2838,"nodeType":"Return","src":"20499:20:7"}]},"functionSelector":"8f101b0e","id":2840,"implemented":true,"kind":"function","modifiers":[],"name":"getFilledOrder","nameLocation":"20252:14:7","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"_user","nameLocation":"20284:5:7","nodeType":"VariableDeclaration","scope":2840,"src":"20276:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"20276:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2814,"mutability":"mutable","name":"side","nameLocation":"20304:4:7","nodeType":"VariableDeclaration","scope":2840,"src":"20299:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":2813,"nodeType":"UserDefinedTypeName","pathNode":{"id":2812,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"20299:4:7"},"referencedDeclaration":1305,"src":"20299:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"index","nameLocation":"20326:5:7","nodeType":"VariableDeclaration","scope":2840,"src":"20318:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"20318:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20266:71:7"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2840,"src":"20359:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1302_memory_ptr","typeString":"struct Exchange._filledOrder"},"typeName":{"id":2819,"nodeType":"UserDefinedTypeName","pathNode":{"id":2818,"name":"_filledOrder","nodeType":"IdentifierPath","referencedDeclaration":1302,"src":"20359:12:7"},"referencedDeclaration":1302,"src":"20359:12:7","typeDescriptions":{"typeIdentifier":"t_struct$__filledOrder_$1302_storage_ptr","typeString":"struct Exchange._filledOrder"}},"visibility":"internal"}],"src":"20358:21:7"},"scope":3136,"src":"20243:283:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2907,"nodeType":"Block","src":"20703:319:7","statements":[{"assignments":[2857],"declarations":[{"constant":false,"id":2857,"mutability":"mutable","name":"i","nameLocation":"20721:1:7","nodeType":"VariableDeclaration","scope":2907,"src":"20713:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2856,"name":"uint256","nodeType":"ElementaryTypeName","src":"20713:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2859,"initialValue":{"hexValue":"30","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20725:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20713:13:7"},{"assignments":[2864],"declarations":[{"constant":false,"id":2864,"mutability":"mutable","name":"_order","nameLocation":"20752:6:7","nodeType":"VariableDeclaration","scope":2907,"src":"20736:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2862,"nodeType":"UserDefinedTypeName","pathNode":{"id":2861,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"20736:6:7"},"referencedDeclaration":1276,"src":"20736:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"id":2863,"nodeType":"ArrayTypeName","src":"20736:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2872,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2865,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"20761:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2867,"indexExpression":{"id":2866,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"20773:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20761:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2869,"indexExpression":{"id":2868,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"20782:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20761:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2871,"indexExpression":{"id":2870,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"20791:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20761:35:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20736:60:7"},{"assignments":[2875],"declarations":[{"constant":false,"id":2875,"mutability":"mutable","name":"order","nameLocation":"20820:5:7","nodeType":"VariableDeclaration","scope":2907,"src":"20806:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2874,"nodeType":"UserDefinedTypeName","pathNode":{"id":2873,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"20806:6:7"},"referencedDeclaration":1276,"src":"20806:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"}],"id":2876,"nodeType":"VariableDeclarationStatement","src":"20806:19:7"},{"body":{"id":2901,"nodeType":"Block","src":"20867:122:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2886,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"20885:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2888,"indexExpression":{"id":2887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"20892:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20885:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"20885:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2890,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"20901:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20885:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2900,"nodeType":"IfStatement","src":"20881:98:7","trueBody":{"id":2899,"nodeType":"Block","src":"20906:73:7","statements":[{"expression":{"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2892,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"20924:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2893,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"20932:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2895,"indexExpression":{"id":2894,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"20939:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20932:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"src":"20924:17:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2897,"nodeType":"ExpressionStatement","src":"20924:17:7"},{"id":2898,"nodeType":"Break","src":"20959:5:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"20843:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2880,"name":"_order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"20847:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"20847:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20843:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2902,"initializationExpression":{"expression":{"id":2877,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"20840:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2878,"nodeType":"ExpressionStatement","src":"20840:1:7"},"loopExpression":{"expression":{"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20862:3:7","subExpression":{"id":2883,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"20862:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2885,"nodeType":"ExpressionStatement","src":"20862:3:7"},"nodeType":"ForStatement","src":"20835:154:7"},{"expression":{"components":[{"id":2903,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"21006:5:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},{"id":2904,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"21013:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21005:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$__Order_$1276_memory_ptr_$_t_uint256_$","typeString":"tuple(struct Exchange._Order memory,uint256)"}},"functionReturnParameters":2855,"id":2906,"nodeType":"Return","src":"20998:17:7"}]},"functionSelector":"92e43d3a","id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderFromArray","nameLocation":"20541:17:7","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"_tokenA","nameLocation":"20576:7:7","nodeType":"VariableDeclaration","scope":2908,"src":"20568:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"20568:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"_tokenB","nameLocation":"20601:7:7","nodeType":"VariableDeclaration","scope":2908,"src":"20593:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"20593:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"side","nameLocation":"20626:4:7","nodeType":"VariableDeclaration","scope":2908,"src":"20618:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"20618:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"_id","nameLocation":"20648:3:7","nodeType":"VariableDeclaration","scope":2908,"src":"20640:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"20640:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20558:99:7"},"returnParameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"20679:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order"},"typeName":{"id":2851,"nodeType":"UserDefinedTypeName","pathNode":{"id":2850,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"20679:6:7"},"referencedDeclaration":1276,"src":"20679:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"20694:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"20694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20678:24:7"},"scope":3136,"src":"20532:490:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2963,"nodeType":"Block","src":"21172:255:7","statements":[{"assignments":[2926],"declarations":[{"constant":false,"id":2926,"mutability":"mutable","name":"orders","nameLocation":"21198:6:7","nodeType":"VariableDeclaration","scope":2963,"src":"21182:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order[]"},"typeName":{"baseType":{"id":2924,"nodeType":"UserDefinedTypeName","pathNode":{"id":2923,"name":"_Order","nodeType":"IdentifierPath","referencedDeclaration":1276,"src":"21182:6:7"},"referencedDeclaration":1276,"src":"21182:6:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_storage_ptr","typeString":"struct Exchange._Order"}},"id":2925,"nodeType":"ArrayTypeName","src":"21182:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage_ptr","typeString":"struct Exchange._Order[]"}},"visibility":"internal"}],"id":2937,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2927,"name":"s_orderBook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"21207:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref)))"}},"id":2929,"indexExpression":{"id":2928,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"21219:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21207:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct Exchange._Order storage ref[] storage ref))"}},"id":2931,"indexExpression":{"id":2930,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"21228:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21207:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$__Order_$1276_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Exchange._Order storage ref[] storage ref)"}},"id":2936,"indexExpression":{"arguments":[{"id":2934,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"21245:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}],"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21237:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"21237:7:7","typeDescriptions":{}}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21237:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21207:44:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_storage_$dyn_storage","typeString":"struct Exchange._Order storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21182:69:7"},{"body":{"id":2959,"nodeType":"Block","src":"21306:93:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2949,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"21324:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2951,"indexExpression":{"id":2950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"21331:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21324:9:7","typeDescriptions":{"typeIdentifier":"t_struct$__Order_$1276_memory_ptr","typeString":"struct Exchange._Order memory"}},"id":2952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1254,"src":"21324:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2953,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"21340:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21324:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2958,"nodeType":"IfStatement","src":"21320:69:7","trueBody":{"id":2957,"nodeType":"Block","src":"21345:44:7","statements":[{"expression":{"hexValue":"74727565","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21370:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2921,"id":2956,"nodeType":"Return","src":"21363:11:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"21282:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2943,"name":"orders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"21286:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__Order_$1276_memory_ptr_$dyn_memory_ptr","typeString":"struct Exchange._Order memory[] memory"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"21286:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21282:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2960,"initializationExpression":{"assignments":[2939],"declarations":[{"constant":false,"id":2939,"mutability":"mutable","name":"i","nameLocation":"21275:1:7","nodeType":"VariableDeclaration","scope":2960,"src":"21267:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"21267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2941,"initialValue":{"hexValue":"30","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21279:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21267:13:7"},"loopExpression":{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21301:3:7","subExpression":{"id":2946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"21301:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"21301:3:7"},"nodeType":"ForStatement","src":"21262:137:7"},{"expression":{"hexValue":"66616c7365","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21415:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2921,"id":2962,"nodeType":"Return","src":"21408:12:7"}]},"functionSelector":"429d24b2","id":2964,"implemented":true,"kind":"function","modifiers":[],"name":"orderExists","nameLocation":"21037:11:7","nodeType":"FunctionDefinition","parameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"_id","nameLocation":"21066:3:7","nodeType":"VariableDeclaration","scope":2964,"src":"21058:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"21058:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"side","nameLocation":"21084:4:7","nodeType":"VariableDeclaration","scope":2964,"src":"21079:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":2912,"nodeType":"UserDefinedTypeName","pathNode":{"id":2911,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"21079:4:7"},"referencedDeclaration":1305,"src":"21079:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"_tokenA","nameLocation":"21106:7:7","nodeType":"VariableDeclaration","scope":2964,"src":"21098:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"21098:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"_tokenB","nameLocation":"21131:7:7","nodeType":"VariableDeclaration","scope":2964,"src":"21123:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"21123:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21048:96:7"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2964,"src":"21166:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2919,"name":"bool","nodeType":"ElementaryTypeName","src":"21166:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21165:6:7"},"scope":3136,"src":"21028:399:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2990,"nodeType":"Block","src":"21503:131:7","statements":[{"expression":{"arguments":[{"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21521:24:7","subExpression":{"arguments":[{"id":2975,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"21538:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2974,"name":"isVerifiedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"21522:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21522:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c7265616479207665726966696564","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21547:24:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","typeString":"literal_string \"Token already verified\""},"value":"Token already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","typeString":"literal_string \"Token already verified\""}],"id":2973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21513:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21513:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2980,"nodeType":"ExpressionStatement","src":"21513:59:7"},{"expression":{"arguments":[{"arguments":[{"id":2985,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"21608:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2986,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"21616:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2984,"name":"_tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"21597:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__tokenInfo_$1247_storage_ptr_$","typeString":"type(struct Exchange._tokenInfo storage pointer)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21597:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$1247_memory_ptr","typeString":"struct Exchange._tokenInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__tokenInfo_$1247_memory_ptr","typeString":"struct Exchange._tokenInfo memory"}],"expression":{"id":2981,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"21582:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1247_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"21582:14:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__tokenInfo_$1247_storage_$dyn_storage_ptr_$_t_struct$__tokenInfo_$1247_storage_$returns$__$bound_to$_t_array$_t_struct$__tokenInfo_$1247_storage_$dyn_storage_ptr_$","typeString":"function (struct Exchange._tokenInfo storage ref[] storage pointer,struct Exchange._tokenInfo storage ref)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21582:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2989,"nodeType":"ExpressionStatement","src":"21582:45:7"}]},"functionSelector":"af81c5b9","id":2991,"implemented":true,"kind":"function","modifiers":[{"id":2971,"kind":"modifierInvocation","modifierName":{"id":2970,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"21493:9:7"},"nodeType":"ModifierInvocation","src":"21493:9:7"}],"name":"addToken","nameLocation":"21442:8:7","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"_token","nameLocation":"21459:6:7","nodeType":"VariableDeclaration","scope":2991,"src":"21451:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"21451:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"_decimals","nameLocation":"21475:9:7","nodeType":"VariableDeclaration","scope":2991,"src":"21467:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"21467:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21450:35:7"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[],"src":"21503:0:7"},"scope":3136,"src":"21433:201:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3022,"nodeType":"Block","src":"21708:197:7","statements":[{"body":{"id":3018,"nodeType":"Block","src":"21809:68:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3009,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"21827:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1247_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":3011,"indexExpression":{"id":3010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"21837:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21827:12:7","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$1247_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":3012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1244,"src":"21827:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3013,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"21847:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21827:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3017,"nodeType":"IfStatement","src":"21823:43:7","trueBody":{"expression":{"hexValue":"74727565","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21862:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2997,"id":3016,"nodeType":"Return","src":"21855:11:7"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"21782:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3003,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"21786:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1247_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"21786:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21782:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3019,"initializationExpression":{"assignments":[2999],"declarations":[{"constant":false,"id":2999,"mutability":"mutable","name":"i","nameLocation":"21775:1:7","nodeType":"VariableDeclaration","scope":3019,"src":"21767:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"21767:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3001,"initialValue":{"hexValue":"30","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21779:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21767:13:7"},"loopExpression":{"expression":{"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21804:3:7","subExpression":{"id":3006,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"21804:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3008,"nodeType":"ExpressionStatement","src":"21804:3:7"},"nodeType":"ForStatement","src":"21762:115:7"},{"expression":{"hexValue":"66616c7365","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21893:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2997,"id":3021,"nodeType":"Return","src":"21886:12:7"}]},"functionSelector":"1027b219","id":3023,"implemented":true,"kind":"function","modifiers":[],"name":"isVerifiedToken","nameLocation":"21649:15:7","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"_token","nameLocation":"21673:6:7","nodeType":"VariableDeclaration","scope":3023,"src":"21665:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"21665:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21664:16:7"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3023,"src":"21702:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2995,"name":"bool","nodeType":"ElementaryTypeName","src":"21702:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21701:6:7"},"scope":3136,"src":"21640:265:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3056,"nodeType":"Block","src":"21979:180:7","statements":[{"body":{"id":3054,"nodeType":"Block","src":"22036:117:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3041,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"22054:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1247_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":3043,"indexExpression":{"id":3042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22064:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22054:12:7","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$1247_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":3044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1244,"src":"22054:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3045,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"22074:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22054:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3053,"nodeType":"IfStatement","src":"22050:93:7","trueBody":{"id":3052,"nodeType":"Block","src":"22082:61:7","statements":[{"expression":{"expression":{"baseExpression":{"id":3047,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"22107:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1247_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":3049,"indexExpression":{"id":3048,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22117:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22107:12:7","typeDescriptions":{"typeIdentifier":"t_struct$__tokenInfo_$1247_storage","typeString":"struct Exchange._tokenInfo storage ref"}},"id":3050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1246,"src":"22107:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3029,"id":3051,"nodeType":"Return","src":"22100:28:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22009:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3035,"name":"tokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"22013:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__tokenInfo_$1247_storage_$dyn_storage","typeString":"struct Exchange._tokenInfo storage ref[] storage ref"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"22013:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22009:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3055,"initializationExpression":{"assignments":[3031],"declarations":[{"constant":false,"id":3031,"mutability":"mutable","name":"i","nameLocation":"22002:1:7","nodeType":"VariableDeclaration","scope":3055,"src":"21994:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"21994:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3033,"initialValue":{"hexValue":"30","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22006:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21994:13:7"},"loopExpression":{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"22031:3:7","subExpression":{"id":3038,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22031:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3040,"nodeType":"ExpressionStatement","src":"22031:3:7"},"nodeType":"ForStatement","src":"21989:164:7"}]},"functionSelector":"1f69565f","id":3057,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"21920:12:7","nodeType":"FunctionDefinition","parameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"_token","nameLocation":"21941:6:7","nodeType":"VariableDeclaration","scope":3057,"src":"21933:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3024,"name":"address","nodeType":"ElementaryTypeName","src":"21933:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21932:16:7"},"returnParameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3057,"src":"21970:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"21970:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21969:9:7"},"scope":3136,"src":"21911:248:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3070,"nodeType":"Block","src":"22232:48:7","statements":[{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3064,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"22242:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3066,"name":"_Walletaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"22258:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3065,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"22251:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$4195_$","typeString":"type(contract Wallet)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22251:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"src":"22242:31:7","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":3069,"nodeType":"ExpressionStatement","src":"22242:31:7"}]},"functionSelector":"ac1a386a","id":3071,"implemented":true,"kind":"function","modifiers":[{"id":3062,"kind":"modifierInvocation","modifierName":{"id":3061,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"22222:9:7"},"nodeType":"ModifierInvocation","src":"22222:9:7"}],"name":"setWalletAddress","nameLocation":"22174:16:7","nodeType":"FunctionDefinition","parameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"_Walletaddress","nameLocation":"22199:14:7","nodeType":"VariableDeclaration","scope":3071,"src":"22191:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3058,"name":"address","nodeType":"ElementaryTypeName","src":"22191:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22190:24:7"},"returnParameters":{"id":3063,"nodeType":"ParameterList","parameters":[],"src":"22232:0:7"},"scope":3136,"src":"22165:115:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3084,"nodeType":"Block","src":"22379:66:7","statements":[{"expression":{"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3078,"name":"priceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"22389:12:7","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3080,"name":"_PriceCheckeraddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"22417:20:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3079,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"22404:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$3305_$","typeString":"type(contract PriceChecker)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22404:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"src":"22389:49:7","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"id":3083,"nodeType":"ExpressionStatement","src":"22389:49:7"}]},"functionSelector":"b136e39a","id":3085,"implemented":true,"kind":"function","modifiers":[{"id":3076,"kind":"modifierInvocation","modifierName":{"id":3075,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"22369:9:7"},"nodeType":"ModifierInvocation","src":"22369:9:7"}],"name":"setPriceCheckerAddress","nameLocation":"22295:22:7","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"_PriceCheckeraddress","nameLocation":"22335:20:7","nodeType":"VariableDeclaration","scope":3085,"src":"22327:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"22327:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22317:44:7"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[],"src":"22379:0:7"},"scope":3136,"src":"22286:159:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3098,"nodeType":"Block","src":"22514:56:7","statements":[{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3092,"name":"tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"22524:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3094,"name":"_tradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"22550:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3093,"name":"TradingFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"22538:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TradingFees_$3535_$","typeString":"type(contract TradingFees)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22538:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"src":"22524:39:7","typeDescriptions":{"typeIdentifier":"t_contract$_TradingFees_$3535","typeString":"contract TradingFees"}},"id":3097,"nodeType":"ExpressionStatement","src":"22524:39:7"}]},"functionSelector":"dafbfe6a","id":3099,"implemented":true,"kind":"function","modifiers":[{"id":3090,"kind":"modifierInvocation","modifierName":{"id":3089,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"22504:9:7"},"nodeType":"ModifierInvocation","src":"22504:9:7"}],"name":"setTradingFees","nameLocation":"22460:14:7","nodeType":"FunctionDefinition","parameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"_tradingFees","nameLocation":"22483:12:7","nodeType":"VariableDeclaration","scope":3099,"src":"22475:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3086,"name":"address","nodeType":"ElementaryTypeName","src":"22475:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22474:22:7"},"returnParameters":{"id":3091,"nodeType":"ParameterList","parameters":[],"src":"22514:0:7"},"scope":3136,"src":"22451:119:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3121,"nodeType":"Block","src":"22692:97:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":3112,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"22722:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3113,"name":"side","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"22727:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},{"id":3114,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"22733:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3115,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"22742:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3111,"name":"orderExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"22710:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Side_$1305_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,enum Exchange.Side,address,address) view returns (bool)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22710:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204f72646572204944","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22752:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","typeString":"literal_string \"Invalid Order ID\""},"value":"Invalid Order ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","typeString":"literal_string \"Invalid Order ID\""}],"id":3110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22702:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22702:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3119,"nodeType":"ExpressionStatement","src":"22702:69:7"},{"id":3120,"nodeType":"PlaceholderStatement","src":"22781:1:7"}]},"id":3122,"name":"validOrder","nameLocation":"22585:10:7","nodeType":"ModifierDefinition","parameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"_id","nameLocation":"22613:3:7","nodeType":"VariableDeclaration","scope":3122,"src":"22605:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"22605:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"side","nameLocation":"22631:4:7","nodeType":"VariableDeclaration","scope":3122,"src":"22626:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"},"typeName":{"id":3103,"nodeType":"UserDefinedTypeName","pathNode":{"id":3102,"name":"Side","nodeType":"IdentifierPath","referencedDeclaration":1305,"src":"22626:4:7"},"referencedDeclaration":1305,"src":"22626:4:7","typeDescriptions":{"typeIdentifier":"t_enum$_Side_$1305","typeString":"enum Exchange.Side"}},"visibility":"internal"},{"constant":false,"id":3106,"mutability":"mutable","name":"_tokenA","nameLocation":"22653:7:7","nodeType":"VariableDeclaration","scope":3122,"src":"22645:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3105,"name":"address","nodeType":"ElementaryTypeName","src":"22645:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"_tokenB","nameLocation":"22678:7:7","nodeType":"VariableDeclaration","scope":3122,"src":"22670:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"22670:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22595:96:7"},"src":"22576:213:7","virtual":false,"visibility":"internal"},{"body":{"id":3134,"nodeType":"Block","src":"22831:88:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":3128,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"22865:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3127,"name":"isVerifiedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"22849:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22849:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20756e617661696c61626c6520696e20444558","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22874:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","typeString":"literal_string \"Token unavailable in DEX\""},"value":"Token unavailable in DEX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","typeString":"literal_string \"Token unavailable in DEX\""}],"id":3126,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22841:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22841:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3132,"nodeType":"ExpressionStatement","src":"22841:60:7"},{"id":3133,"nodeType":"PlaceholderStatement","src":"22911:1:7"}]},"id":3135,"name":"validToken","nameLocation":"22804:10:7","nodeType":"ModifierDefinition","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"_token","nameLocation":"22823:6:7","nodeType":"VariableDeclaration","scope":3135,"src":"22815:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"22815:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22814:16:7"},"src":"22795:124:7","virtual":false,"visibility":"internal"}],"scope":3137,"src":"375:22546:7","usedErrors":[]}],"src":"33:22889:7"},"id":7},"contracts/PriceChecker.sol":{"ast":{"absolutePath":"contracts/PriceChecker.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[283],"Ownable":[158],"PriceChecker":[3305]},"id":3306,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3138,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:8"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":3139,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3306,"sourceUnit":46,"src":"57:76:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3306,"sourceUnit":159,"src":"134:52:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3141,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"213:7:8"},"id":3142,"nodeType":"InheritanceSpecifier","src":"213:7:8"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3305,"linearizedBaseContracts":[3305,158,283],"name":"PriceChecker","nameLocation":"197:12:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"10c7f0b9","id":3146,"mutability":"mutable","name":"priceFeeds","nameLocation":"247:10:8","nodeType":"VariableDeclaration","scope":3305,"src":"227:30:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":3144,"nodeType":"UserDefinedTypeName","pathNode":{"id":3143,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":3154,"src":"227:10:8"},"referencedDeclaration":3154,"src":"227:10:8","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$3154_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":3145,"nodeType":"ArrayTypeName","src":"227:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"public"},{"canonicalName":"PriceChecker._priceFeed","id":3154,"members":[{"constant":false,"id":3148,"mutability":"mutable","name":"name","nameLocation":"299:4:8","nodeType":"VariableDeclaration","scope":3154,"src":"292:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3147,"name":"string","nodeType":"ElementaryTypeName","src":"292:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"token","nameLocation":"321:5:8","nodeType":"VariableDeclaration","scope":3154,"src":"313:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3149,"name":"address","nodeType":"ElementaryTypeName","src":"313:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"priceFeed","nameLocation":"358:9:8","nodeType":"VariableDeclaration","scope":3154,"src":"336:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":3152,"nodeType":"UserDefinedTypeName","pathNode":{"id":3151,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"336:21:8"},"referencedDeclaration":45,"src":"336:21:8","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"name":"_priceFeed","nameLocation":"271:10:8","nodeType":"StructDefinition","scope":3305,"src":"264:110:8","visibility":"public"},{"body":{"id":3235,"nodeType":"Block","src":"548:568:8","statements":[{"assignments":[3169],"declarations":[{"constant":false,"id":3169,"mutability":"mutable","name":"pricefeed","nameLocation":"578:9:8","nodeType":"VariableDeclaration","scope":3235,"src":"558:29:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":3167,"nodeType":"UserDefinedTypeName","pathNode":{"id":3166,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":3154,"src":"558:10:8"},"referencedDeclaration":3154,"src":"558:10:8","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$3154_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":3168,"nodeType":"ArrayTypeName","src":"558:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"internal"}],"id":3171,"initialValue":{"id":3170,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"590:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"558:42:8"},{"assignments":[3173],"declarations":[{"constant":false,"id":3173,"mutability":"mutable","name":"isAdded","nameLocation":"615:7:8","nodeType":"VariableDeclaration","scope":3235,"src":"610:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3172,"name":"bool","nodeType":"ElementaryTypeName","src":"610:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3175,"initialValue":{"hexValue":"66616c7365","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"625:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"610:20:8"},{"body":{"id":3210,"nodeType":"Block","src":"687:230:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3190,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"749:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3188,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"732:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"732:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"732:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3187,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"722:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"722:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":3196,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"803:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":3198,"indexExpression":{"id":3197,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"813:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"803:12:8","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$3154_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":3199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"name","nodeType":"MemberAccess","referencedDeclaration":3148,"src":"803:17:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3194,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"786:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"786:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"786:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3193,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"776:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"776:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"722:100:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3209,"nodeType":"IfStatement","src":"701:206:8","trueBody":{"id":3208,"nodeType":"Block","src":"837:70:8","statements":[{"expression":{"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3203,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"855:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"865:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"855:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"ExpressionStatement","src":"855:14:8"},{"id":3207,"nodeType":"Break","src":"887:5:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"660:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3181,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"664:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"664:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"660:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3211,"initializationExpression":{"assignments":[3177],"declarations":[{"constant":false,"id":3177,"mutability":"mutable","name":"i","nameLocation":"653:1:8","nodeType":"VariableDeclaration","scope":3211,"src":"645:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3179,"initialValue":{"hexValue":"30","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"657:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"645:13:8"},"loopExpression":{"expression":{"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"682:3:8","subExpression":{"id":3184,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"682:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3186,"nodeType":"ExpressionStatement","src":"682:3:8"},"nodeType":"ForStatement","src":"640:277:8"},{"expression":{"arguments":[{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"934:8:8","subExpression":{"id":3213,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"935:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365204665656420616c7265616479206164646564","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"944:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","typeString":"literal_string \"Price Feed already added\""},"value":"Price Feed already added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","typeString":"literal_string \"Price Feed already added\""}],"id":3212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"926:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3217,"nodeType":"ExpressionStatement","src":"926:45:8"},{"assignments":[3220],"declarations":[{"constant":false,"id":3220,"mutability":"mutable","name":"priceFeed","nameLocation":"1003:9:8","nodeType":"VariableDeclaration","scope":3235,"src":"981:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":3219,"nodeType":"UserDefinedTypeName","pathNode":{"id":3218,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"981:21:8"},"referencedDeclaration":45,"src":"981:21:8","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":3224,"initialValue":{"arguments":[{"id":3222,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"1037:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3221,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"1015:21:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1015:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"981:65:8"},{"expression":{"arguments":[{"arguments":[{"id":3229,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"1083:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3230,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"1090:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3231,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"1098:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}],"id":3228,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"1072:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$__priceFeed_$3154_storage_ptr_$","typeString":"type(struct PriceChecker._priceFeed storage pointer)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1072:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$3154_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$__priceFeed_$3154_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}],"expression":{"id":3225,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"1056:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1056:15:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$__priceFeed_$3154_storage_$dyn_storage_ptr_$_t_struct$__priceFeed_$3154_storage_$returns$__$bound_to$_t_array$_t_struct$__priceFeed_$3154_storage_$dyn_storage_ptr_$","typeString":"function (struct PriceChecker._priceFeed storage ref[] storage pointer,struct PriceChecker._priceFeed storage ref)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1056:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3234,"nodeType":"ExpressionStatement","src":"1056:53:8"}]},"functionSelector":"8c35423e","id":3236,"implemented":true,"kind":"function","modifiers":[{"id":3163,"kind":"modifierInvocation","modifierName":{"id":3162,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"538:9:8"},"nodeType":"ModifierInvocation","src":"538:9:8"}],"name":"addPriceFeed","nameLocation":"431:12:8","nodeType":"FunctionDefinition","parameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"_name","nameLocation":"467:5:8","nodeType":"VariableDeclaration","scope":3236,"src":"453:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3155,"name":"string","nodeType":"ElementaryTypeName","src":"453:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3158,"mutability":"mutable","name":"_token","nameLocation":"490:6:8","nodeType":"VariableDeclaration","scope":3236,"src":"482:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3157,"name":"address","nodeType":"ElementaryTypeName","src":"482:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"_address","nameLocation":"514:8:8","nodeType":"VariableDeclaration","scope":3236,"src":"506:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"506:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"443:85:8"},"returnParameters":{"id":3164,"nodeType":"ParameterList","parameters":[],"src":"548:0:8"},"scope":3305,"src":"422:694:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3277,"nodeType":"Block","src":"1230:236:8","statements":[{"assignments":[3248],"declarations":[{"constant":false,"id":3248,"mutability":"mutable","name":"pricefeed","nameLocation":"1260:9:8","nodeType":"VariableDeclaration","scope":3277,"src":"1240:29:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed[]"},"typeName":{"baseType":{"id":3246,"nodeType":"UserDefinedTypeName","pathNode":{"id":3245,"name":"_priceFeed","nodeType":"IdentifierPath","referencedDeclaration":3154,"src":"1240:10:8"},"referencedDeclaration":3154,"src":"1240:10:8","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$3154_storage_ptr","typeString":"struct PriceChecker._priceFeed"}},"id":3247,"nodeType":"ArrayTypeName","src":"1240:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_storage_$dyn_storage_ptr","typeString":"struct PriceChecker._priceFeed[]"}},"visibility":"internal"}],"id":3250,"initialValue":{"id":3249,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"1272:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_storage_$dyn_storage","typeString":"struct PriceChecker._priceFeed storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1240:42:8"},{"body":{"id":3275,"nodeType":"Block","src":"1340:120:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3262,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"1358:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":3263,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"1368:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":3265,"indexExpression":{"id":3264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"1378:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:12:8","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$3154_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":3266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3150,"src":"1368:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1358:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3274,"nodeType":"IfStatement","src":"1354:96:8","trueBody":{"id":3273,"nodeType":"Block","src":"1388:62:8","statements":[{"expression":{"expression":{"baseExpression":{"id":3268,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"1413:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":3270,"indexExpression":{"id":3269,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"1423:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1413:12:8","typeDescriptions":{"typeIdentifier":"t_struct$__priceFeed_$3154_memory_ptr","typeString":"struct PriceChecker._priceFeed memory"}},"id":3271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"priceFeed","nodeType":"MemberAccess","referencedDeclaration":3153,"src":"1413:22:8","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"functionReturnParameters":3243,"id":3272,"nodeType":"Return","src":"1406:29:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"1313:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3256,"name":"pricefeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"1317:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$__priceFeed_$3154_memory_ptr_$dyn_memory_ptr","typeString":"struct PriceChecker._priceFeed memory[] memory"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1317:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1313:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3276,"initializationExpression":{"assignments":[3252],"declarations":[{"constant":false,"id":3252,"mutability":"mutable","name":"i","nameLocation":"1306:1:8","nodeType":"VariableDeclaration","scope":3276,"src":"1298:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3254,"initialValue":{"hexValue":"30","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1310:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1298:13:8"},"loopExpression":{"expression":{"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1335:3:8","subExpression":{"id":3259,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"1335:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3261,"nodeType":"ExpressionStatement","src":"1335:3:8"},"nodeType":"ForStatement","src":"1293:167:8"}]},"id":3278,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceFeed","nameLocation":"1131:12:8","nodeType":"FunctionDefinition","parameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"_token","nameLocation":"1161:6:8","nodeType":"VariableDeclaration","scope":3278,"src":"1153:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3237,"name":"address","nodeType":"ElementaryTypeName","src":"1153:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1143:30:8"},"returnParameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"priceFeed","nameLocation":"1219:9:8","nodeType":"VariableDeclaration","scope":3278,"src":"1197:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":3241,"nodeType":"UserDefinedTypeName","pathNode":{"id":3240,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1197:21:8"},"referencedDeclaration":45,"src":"1197:21:8","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"1196:33:8"},"scope":3305,"src":"1122:344:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3303,"nodeType":"Block","src":"1540:168:8","statements":[{"assignments":[3287],"declarations":[{"constant":false,"id":3287,"mutability":"mutable","name":"priceFeed","nameLocation":"1572:9:8","nodeType":"VariableDeclaration","scope":3303,"src":"1550:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":3286,"nodeType":"UserDefinedTypeName","pathNode":{"id":3285,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1550:21:8"},"referencedDeclaration":45,"src":"1550:21:8","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":3291,"initialValue":{"arguments":[{"id":3289,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"1597:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3288,"name":"getPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"1584:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_contract$_AggregatorV3Interface_$45_$","typeString":"function (address) view returns (contract AggregatorV3Interface)"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1584:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1550:56:8"},{"assignments":[null,3293,null,null,null],"declarations":[null,{"constant":false,"id":3293,"mutability":"mutable","name":"answer","nameLocation":"1626:6:8","nodeType":"VariableDeclaration","scope":3303,"src":"1619:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3292,"name":"int256","nodeType":"ElementaryTypeName","src":"1619:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":3297,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3294,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"1642:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1642:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1642:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1616:53:8"},{"expression":{"arguments":[{"id":3300,"name":"answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1694:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1686:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:8","typeDescriptions":{}}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1686:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3284,"id":3302,"nodeType":"Return","src":"1679:22:8"}]},"functionSelector":"41976e09","id":3304,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"1481:8:8","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"_address","nameLocation":"1498:8:8","nodeType":"VariableDeclaration","scope":3304,"src":"1490:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"1490:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1489:18:8"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3304,"src":"1531:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1531:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1530:9:8"},"scope":3305,"src":"1472:236:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3306,"src":"188:1522:8","usedErrors":[]}],"src":"32:1679:8"},"id":8},"contracts/TradingFees.sol":{"ast":{"absolutePath":"contracts/TradingFees.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[283],"ERC20":[1182],"Exchange":[3136],"IERC20":[236],"IERC20Metadata":[261],"Ownable":[158],"PriceChecker":[3305],"SafeMath":[595],"TradingFees":[3535],"Wallet":[4195]},"id":3536,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3307,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"contracts/PriceChecker.sol","file":"./PriceChecker.sol","id":3308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3536,"sourceUnit":3306,"src":"58:28:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Wallet.sol","file":"./Wallet.sol","id":3309,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3536,"sourceUnit":4196,"src":"87:22:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":3310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3536,"sourceUnit":596,"src":"181:57:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":3311,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3536,"sourceUnit":46,"src":"239:76:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3536,"sourceUnit":159,"src":"316:52:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3313,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"394:7:9"},"id":3314,"nodeType":"InheritanceSpecifier","src":"394:7:9"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3535,"linearizedBaseContracts":[3535,158,283],"name":"TradingFees","nameLocation":"379:11:9","nodeType":"ContractDefinition","nodes":[{"id":3317,"libraryName":{"id":3315,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":595,"src":"905:8:9"},"nodeType":"UsingForDirective","src":"899:27:9","typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":3322,"mutability":"mutable","name":"decimals","nameLocation":"977:8:9","nodeType":"VariableDeclaration","scope":3535,"src":"969:27:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"988:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"994:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"988:8:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"internal"},{"constant":false,"functionSelector":"be22f546","id":3328,"mutability":"mutable","name":"daiToken","nameLocation":"1017:8:9","nodeType":"VariableDeclaration","scope":3535,"src":"1002:85:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3323,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307842613844436544333531323932356535324645363762316235333239313837353839303732413535","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xBa8DCeD3512925e52FE67b1b5329187589072A55"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1036:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3324,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:9","typeDescriptions":{}}},"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1036:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"1a38a4fb","id":3334,"mutability":"mutable","name":"aDAI","nameLocation":"1133:4:9","nodeType":"VariableDeclaration","scope":3535,"src":"1118:73:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3329,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307841444439384230333432653430393445633332663362363743636664333234324338373666663761","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1148:42:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1140:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3330,"name":"address","nodeType":"ElementaryTypeName","src":"1140:7:9","typeDescriptions":{}}},"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1140:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":3337,"mutability":"mutable","name":"priceFeed","nameLocation":"1243:9:9","nodeType":"VariableDeclaration","scope":3535,"src":"1222:30:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"},"typeName":{"id":3336,"nodeType":"UserDefinedTypeName","pathNode":{"id":3335,"name":"PriceChecker","nodeType":"IdentifierPath","referencedDeclaration":3305,"src":"1222:12:9"},"referencedDeclaration":3305,"src":"1222:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"visibility":"private"},{"constant":false,"id":3340,"mutability":"mutable","name":"wallet","nameLocation":"1265:6:9","nodeType":"VariableDeclaration","scope":3535,"src":"1258:13:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"},"typeName":{"id":3339,"nodeType":"UserDefinedTypeName","pathNode":{"id":3338,"name":"Wallet","nodeType":"IdentifierPath","referencedDeclaration":4195,"src":"1258:6:9"},"referencedDeclaration":4195,"src":"1258:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"visibility":"internal"},{"body":{"id":3351,"nodeType":"Block","src":"1320:63:9","statements":[{"expression":{"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3345,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"1330:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3347,"name":"_priceCheckerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"1355:20:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3346,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"1342:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$3305_$","typeString":"type(contract PriceChecker)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1342:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"src":"1330:46:9","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"id":3350,"nodeType":"ExpressionStatement","src":"1330:46:9"}]},"id":3352,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"_priceCheckerAddress","nameLocation":"1298:20:9","nodeType":"VariableDeclaration","scope":3352,"src":"1290:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3341,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1289:30:9"},"returnParameters":{"id":3344,"nodeType":"ParameterList","parameters":[],"src":"1320:0:9"},"scope":3535,"src":"1278:105:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3405,"nodeType":"Block","src":"1523:530:9","statements":[{"assignments":[3364],"declarations":[{"constant":false,"id":3364,"mutability":"mutable","name":"priceOfToken","nameLocation":"1764:12:9","nodeType":"VariableDeclaration","scope":3405,"src":"1756:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3369,"initialValue":{"arguments":[{"id":3367,"name":"_refToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"1798:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3365,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"1779:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":3304,"src":"1779:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1779:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1756:52:9"},{"assignments":[3371],"declarations":[{"constant":false,"id":3371,"mutability":"mutable","name":"value","nameLocation":"1846:5:9","nodeType":"VariableDeclaration","scope":3405,"src":"1838:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3393,"initialValue":{"arguments":[{"id":3391,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"1951:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1926:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1932:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1926:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":3382,"name":"priceOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"1909:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"1909:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1909:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":3378,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"1894:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"id":3374,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"1882:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3372,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"1870:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"1870:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1870:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1869:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"1869:24:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1869:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1868:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"1868:40:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1868:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1854:92:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"1854:96:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1854:106:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1838:122:9"},{"assignments":[3395],"declarations":[{"constant":false,"id":3395,"mutability":"mutable","name":"fees","nameLocation":"1978:4:9","nodeType":"VariableDeclaration","scope":3405,"src":"1970:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3402,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1995:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2001:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1995:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}],"expression":{"id":3396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"1985:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"1985:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1985:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1970:33:9"},{"expression":{"id":3403,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"2021:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3362,"id":3404,"nodeType":"Return","src":"2014:11:9"}]},"functionSelector":"513ffedd","id":3406,"implemented":true,"kind":"function","modifiers":[],"name":"calculateFees","nameLocation":"1398:13:9","nodeType":"FunctionDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"_amount","nameLocation":"1429:7:9","nodeType":"VariableDeclaration","scope":3406,"src":"1421:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"_rate","nameLocation":"1454:5:9","nodeType":"VariableDeclaration","scope":3406,"src":"1446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3358,"mutability":"mutable","name":"_refToken","nameLocation":"1477:9:9","nodeType":"VariableDeclaration","scope":3406,"src":"1469:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3357,"name":"address","nodeType":"ElementaryTypeName","src":"1469:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1411:81:9"},"returnParameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3406,"src":"1514:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1514:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1513:9:9"},"scope":3535,"src":"1389:664:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3440,"nodeType":"Block","src":"2172:195:9","statements":[{"assignments":[3414],"declarations":[{"constant":false,"id":3414,"mutability":"mutable","name":"aDAI_Price","nameLocation":"2190:10:9","nodeType":"VariableDeclaration","scope":3440,"src":"2182:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2182:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3419,"initialValue":{"arguments":[{"id":3417,"name":"daiToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"2222:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3415,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"2203:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":3304,"src":"2203:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2203:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2182:49:9"},{"assignments":[3421],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"amt","nameLocation":"2276:3:9","nodeType":"VariableDeclaration","scope":3440,"src":"2268:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2268:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3434,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2321:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2327:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2321:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":3427,"name":"aDAI_Price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"2306:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"2306:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2306:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3424,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"2292:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3422,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"2282:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"2282:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2282:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"2282:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2282:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2268:63:9"},{"expression":{"arguments":[{"id":3437,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"2356:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2348:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"2348:7:9","typeDescriptions":{}}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2348:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3412,"id":3439,"nodeType":"Return","src":"2341:19:9"}]},"functionSelector":"a42963e9","id":3441,"implemented":true,"kind":"function","modifiers":[],"name":"amountaDAIToDeduct","nameLocation":"2108:18:9","nodeType":"FunctionDefinition","parameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"_fees","nameLocation":"2135:5:9","nodeType":"VariableDeclaration","scope":3441,"src":"2127:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2126:15:9"},"returnParameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3441,"src":"2163:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2163:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2162:9:9"},"scope":3535,"src":"2099:268:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3477,"nodeType":"Block","src":"2532:188:9","statements":[{"assignments":[3451],"declarations":[{"constant":false,"id":3451,"mutability":"mutable","name":"priceOfToken","nameLocation":"2550:12:9","nodeType":"VariableDeclaration","scope":3477,"src":"2542:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3456,"initialValue":{"arguments":[{"id":3454,"name":"_refToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"2584:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3452,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"2565:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPrice","nodeType":"MemberAccess","referencedDeclaration":3304,"src":"2565:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2565:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2542:52:9"},{"assignments":[3458],"declarations":[{"constant":false,"id":3458,"mutability":"mutable","name":"amt","nameLocation":"2627:3:9","nodeType":"VariableDeclaration","scope":3477,"src":"2619:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3471,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2674:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2680:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2674:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}],"expression":{"id":3464,"name":"priceOfToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"2657:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"2657:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2657:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3461,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"2643:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3459,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"2633:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"2633:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2633:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"2633:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2633:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2619:65:9"},{"expression":{"arguments":[{"id":3474,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"2709:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2701:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:9","typeDescriptions":{}}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2701:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3449,"id":3476,"nodeType":"Return","src":"2694:19:9"}]},"functionSelector":"b98ee419","id":3478,"implemented":true,"kind":"function","modifiers":[],"name":"amountTokensToDeduct","nameLocation":"2425:20:9","nodeType":"FunctionDefinition","parameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"mutability":"mutable","name":"_refToken","nameLocation":"2463:9:9","nodeType":"VariableDeclaration","scope":3478,"src":"2455:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3442,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3445,"mutability":"mutable","name":"_fees","nameLocation":"2490:5:9","nodeType":"VariableDeclaration","scope":3478,"src":"2482:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2445:56:9"},"returnParameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3478,"src":"2523:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2523:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2522:9:9"},"scope":3535,"src":"2416:304:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3505,"nodeType":"Block","src":"2834:150:9","statements":[{"assignments":[3488],"declarations":[{"constant":false,"id":3488,"mutability":"mutable","name":"amtDAI","nameLocation":"2852:6:9","nodeType":"VariableDeclaration","scope":3505,"src":"2844:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2844:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3492,"initialValue":{"arguments":[{"id":3490,"name":"_fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"2880:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3489,"name":"amountaDAIToDeduct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"2861:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2861:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2844:42:9"},{"assignments":[3494],"declarations":[{"constant":false,"id":3494,"mutability":"mutable","name":"balance","nameLocation":"2904:7:9","nodeType":"VariableDeclaration","scope":3505,"src":"2896:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3500,"initialValue":{"arguments":[{"id":3497,"name":"aDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"2930:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3498,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"2936:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3495,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"2914:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"s_tokens","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"2914:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2914:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2896:46:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"2960:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3502,"name":"amtDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"2971:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3486,"id":3504,"nodeType":"Return","src":"2953:24:9"}]},"functionSelector":"ca8963f1","id":3506,"implemented":true,"kind":"function","modifiers":[],"name":"checkSufficientaDAI","nameLocation":"2735:19:9","nodeType":"FunctionDefinition","parameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"_fees","nameLocation":"2772:5:9","nodeType":"VariableDeclaration","scope":3506,"src":"2764:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2764:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3482,"mutability":"mutable","name":"_user","nameLocation":"2795:5:9","nodeType":"VariableDeclaration","scope":3506,"src":"2787:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3481,"name":"address","nodeType":"ElementaryTypeName","src":"2787:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2754:52:9"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3506,"src":"2828:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3484,"name":"bool","nodeType":"ElementaryTypeName","src":"2828:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2827:6:9"},"scope":3535,"src":"2726:258:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3519,"nodeType":"Block","src":"3057:48:9","statements":[{"expression":{"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3513,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"3067:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3515,"name":"_Walletaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"3083:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3514,"name":"Wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"3076:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Wallet_$4195_$","typeString":"type(contract Wallet)"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3076:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"src":"3067:31:9","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}},"id":3518,"nodeType":"ExpressionStatement","src":"3067:31:9"}]},"functionSelector":"ac1a386a","id":3520,"implemented":true,"kind":"function","modifiers":[{"id":3511,"kind":"modifierInvocation","modifierName":{"id":3510,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3047:9:9"},"nodeType":"ModifierInvocation","src":"3047:9:9"}],"name":"setWalletAddress","nameLocation":"2999:16:9","nodeType":"FunctionDefinition","parameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"_Walletaddress","nameLocation":"3024:14:9","nodeType":"VariableDeclaration","scope":3520,"src":"3016:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3507,"name":"address","nodeType":"ElementaryTypeName","src":"3016:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3015:24:9"},"returnParameters":{"id":3512,"nodeType":"ParameterList","parameters":[],"src":"3057:0:9"},"scope":3535,"src":"2990:115:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3533,"nodeType":"Block","src":"3204:63:9","statements":[{"expression":{"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3527,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"3214:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3529,"name":"_PriceCheckeraddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"3239:20:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3528,"name":"PriceChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"3226:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceChecker_$3305_$","typeString":"type(contract PriceChecker)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3226:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"src":"3214:46:9","typeDescriptions":{"typeIdentifier":"t_contract$_PriceChecker_$3305","typeString":"contract PriceChecker"}},"id":3532,"nodeType":"ExpressionStatement","src":"3214:46:9"}]},"functionSelector":"b136e39a","id":3534,"implemented":true,"kind":"function","modifiers":[{"id":3525,"kind":"modifierInvocation","modifierName":{"id":3524,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3194:9:9"},"nodeType":"ModifierInvocation","src":"3194:9:9"}],"name":"setPriceCheckerAddress","nameLocation":"3120:22:9","nodeType":"FunctionDefinition","parameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"_PriceCheckeraddress","nameLocation":"3160:20:9","nodeType":"VariableDeclaration","scope":3534,"src":"3152:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3521,"name":"address","nodeType":"ElementaryTypeName","src":"3152:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3142:44:9"},"returnParameters":{"id":3526,"nodeType":"ParameterList","parameters":[],"src":"3204:0:9"},"scope":3535,"src":"3111:156:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3536,"src":"370:2899:9","usedErrors":[]}],"src":"33:3237:9"},"id":9},"contracts/Wallet.sol":{"ast":{"absolutePath":"contracts/Wallet.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[283],"ERC20":[1182],"Exchange":[3136],"IERC20":[236],"IERC20Metadata":[261],"Ownable":[158],"SafeMath":[595],"Wallet":[4195]},"id":4196,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3537,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:10"},{"absolutePath":"contracts/ERC20.sol","file":"./ERC20.sol","id":3538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4196,"sourceUnit":1183,"src":"58:21:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Exchange.sol","file":"./Exchange.sol","id":3539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4196,"sourceUnit":3137,"src":"80:24:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":3540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4196,"sourceUnit":596,"src":"176:57:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":3541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4196,"sourceUnit":46,"src":"234:76:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4196,"sourceUnit":159,"src":"311:52:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3543,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"384:7:10"},"id":3544,"nodeType":"InheritanceSpecifier","src":"384:7:10"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4195,"linearizedBaseContracts":[4195,158,283],"name":"Wallet","nameLocation":"374:6:10","nodeType":"ContractDefinition","nodes":[{"id":3547,"libraryName":{"id":3545,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":595,"src":"404:8:10"},"nodeType":"UsingForDirective","src":"398:27:10","typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"417:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":3549,"mutability":"mutable","name":"Owner","nameLocation":"476:5:10","nodeType":"VariableDeclaration","scope":4195,"src":"468:13:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3548,"name":"address","nodeType":"ElementaryTypeName","src":"468:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"664a1ad6","id":3551,"mutability":"mutable","name":"fundWallet","nameLocation":"502:10:10","nodeType":"VariableDeclaration","scope":4195,"src":"487:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3550,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":3554,"mutability":"mutable","name":"decimals","nameLocation":"526:8:10","nodeType":"VariableDeclaration","scope":4195,"src":"518:21:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"518:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3138","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"537:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"internal"},{"constant":false,"functionSelector":"1a38a4fb","id":3556,"mutability":"mutable","name":"aDAI","nameLocation":"560:4:10","nodeType":"VariableDeclaration","scope":4195,"src":"545:19:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3555,"name":"address","nodeType":"ElementaryTypeName","src":"545:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":3558,"mutability":"mutable","name":"locked","nameLocation":"619:6:10","nodeType":"VariableDeclaration","scope":4195,"src":"606:19:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3557,"name":"bool","nodeType":"ElementaryTypeName","src":"606:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"functionSelector":"7bf1a627","id":3564,"mutability":"mutable","name":"ethToken","nameLocation":"647:8:10","nodeType":"VariableDeclaration","scope":4195,"src":"632:36:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3559,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"658:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3560,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:10","typeDescriptions":{}}},"id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"658:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cd5d767c","id":3570,"mutability":"mutable","name":"s_tokens","nameLocation":"730:8:10","nodeType":"VariableDeclaration","scope":4195,"src":"675:63:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":3569,"keyType":{"id":3565,"name":"address","nodeType":"ElementaryTypeName","src":"683:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"675:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":3568,"keyType":{"id":3566,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"694:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"4bdde1cf","id":3576,"mutability":"mutable","name":"lockedFunds","nameLocation":"839:11:10","nodeType":"VariableDeclaration","scope":4195,"src":"784:66:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":3575,"keyType":{"id":3571,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"784:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":3574,"keyType":{"id":3572,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"803:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":3579,"mutability":"mutable","name":"exchange","nameLocation":"866:8:10","nodeType":"VariableDeclaration","scope":4195,"src":"857:17:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$3136","typeString":"contract Exchange"},"typeName":{"id":3578,"nodeType":"UserDefinedTypeName","pathNode":{"id":3577,"name":"Exchange","nodeType":"IdentifierPath","referencedDeclaration":3136,"src":"857:8:10"},"referencedDeclaration":3136,"src":"857:8:10","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$3136","typeString":"contract Exchange"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"token","nameLocation":"887:5:10","nodeType":"VariableDeclaration","scope":4195,"src":"880:12:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"},"typeName":{"id":3581,"nodeType":"UserDefinedTypeName","pathNode":{"id":3580,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"880:6:10"},"referencedDeclaration":236,"src":"880:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"visibility":"internal"},{"anonymous":false,"id":3592,"name":"Deposit","nameLocation":"905:7:10","nodeType":"EventDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"921:5:10","nodeType":"VariableDeclaration","scope":3592,"src":"913:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3583,"name":"address","nodeType":"ElementaryTypeName","src":"913:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3586,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"936:4:10","nodeType":"VariableDeclaration","scope":3592,"src":"928:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3585,"name":"address","nodeType":"ElementaryTypeName","src":"928:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3588,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"950:6:10","nodeType":"VariableDeclaration","scope":3592,"src":"942:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3590,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"966:7:10","nodeType":"VariableDeclaration","scope":3592,"src":"958:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"958:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"912:62:10"},"src":"899:76:10"},{"anonymous":false,"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"981:48:10","text":"@notice Event when amount withdrawn exchange"},"id":3603,"name":"Withdraw","nameLocation":"1040:8:10","nodeType":"EventDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1066:5:10","nodeType":"VariableDeclaration","scope":3603,"src":"1058:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3594,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3597,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1089:4:10","nodeType":"VariableDeclaration","scope":3603,"src":"1081:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3596,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3599,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1111:6:10","nodeType":"VariableDeclaration","scope":3603,"src":"1103:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1103:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"1135:7:10","nodeType":"VariableDeclaration","scope":3603,"src":"1127:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1048:100:10"},"src":"1034:115:10"},{"body":{"id":3611,"nodeType":"Block","src":"1169:35:10","statements":[{"expression":{"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3606,"name":"Owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"1179:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3607,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1187:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1187:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1179:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3610,"nodeType":"ExpressionStatement","src":"1179:18:10"}]},"id":3612,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3604,"nodeType":"ParameterList","parameters":[],"src":"1166:2:10"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[],"src":"1169:0:10"},"scope":4195,"src":"1155:49:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3637,"nodeType":"Block","src":"1249:216:10","statements":[{"expression":{"arguments":[{"id":3616,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"1273:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3617,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1283:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1283:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3619,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1295:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1295:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1306:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3615,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"1259:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1259:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3623,"nodeType":"ExpressionStatement","src":"1259:52:10"},{"eventCall":{"arguments":[{"id":3625,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"1348:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1370:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1370:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1394:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1394:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3631,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"1427:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1437:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1437:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3630,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"1417:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1417:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3624,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"1327:7:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1327:131:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3636,"nodeType":"EmitStatement","src":"1322:136:10"}]},"functionSelector":"f6326fb3","id":3638,"implemented":true,"kind":"function","modifiers":[],"name":"depositETH","nameLocation":"1219:10:10","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[],"src":"1229:2:10"},"returnParameters":{"id":3614,"nodeType":"ParameterList","parameters":[],"src":"1249:0:10"},"scope":4195,"src":"1210:255:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3710,"nodeType":"Block","src":"1518:637:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":3651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1617:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1617:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3653,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"1629:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3650,"name":"getlockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"1602:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1602:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3645,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"1559:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3646,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1569:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1569:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3644,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"1549:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1549:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"1549:35:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1549:103:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3656,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"1656:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1549:114:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e63652045544820746f207769746864726177","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1677:38:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","typeString":"literal_string \"Insufficient balance ETH to withdraw\""},"value":"Insufficient balance ETH to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","typeString":"literal_string \"Insufficient balance ETH to withdraw\""}],"id":3643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1528:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1528:197:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3660,"nodeType":"ExpressionStatement","src":"1528:197:10"},{"expression":{"arguments":[{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1743:7:10","subExpression":{"id":3662,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"1744:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1752:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":3661,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1735:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1735:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3666,"nodeType":"ExpressionStatement","src":"1735:44:10"},{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3667,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"1789:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1798:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1789:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3670,"nodeType":"ExpressionStatement","src":"1789:13:10"},{"expression":{"arguments":[{"id":3672,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"1826:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3673,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1836:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1836:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3675,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"1848:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1857:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3671,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"1812:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1812:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3678,"nodeType":"ExpressionStatement","src":"1812:51:10"},{"assignments":[3680,null],"declarations":[{"constant":false,"id":3680,"mutability":"mutable","name":"success","nameLocation":"1879:7:10","nodeType":"VariableDeclaration","scope":3710,"src":"1874:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3679,"name":"bool","nodeType":"ElementaryTypeName","src":"1874:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3688,"initialValue":{"arguments":[{"hexValue":"","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1924:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":3681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1892:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1892:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1892:15:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3684,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"1915:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1892:31:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1892:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1873:54:10"},{"expression":{"arguments":[{"id":3690,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"1945:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f2073656e6420616d6f756e74","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1954:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","typeString":"literal_string \"failed to send amount\""},"value":"failed to send amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","typeString":"literal_string \"failed to send amount\""}],"id":3689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1937:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1937:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3693,"nodeType":"ExpressionStatement","src":"1937:41:10"},{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3694,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"1988:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1997:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1988:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3697,"nodeType":"ExpressionStatement","src":"1988:14:10"},{"eventCall":{"arguments":[{"id":3699,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"2040:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2062:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2062:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3702,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"2086:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3704,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"2117:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3705,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2127:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2127:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3703,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"2107:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2107:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3698,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"2018:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:130:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3709,"nodeType":"EmitStatement","src":"2013:135:10"}]},"functionSelector":"f14210a6","id":3711,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawETH","nameLocation":"1480:11:10","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"_amount","nameLocation":"1500:7:10","nodeType":"VariableDeclaration","scope":3711,"src":"1492:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1492:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1491:17:10"},"returnParameters":{"id":3642,"nodeType":"ParameterList","parameters":[],"src":"1518:0:10"},"scope":4195,"src":"1471:684:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3787,"nodeType":"Block","src":"2363:754:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"2381:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3722,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"2391:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2381:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420546f6b656e2054797065","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2401:20:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca","typeString":"literal_string \"Invalid Token Type\""},"value":"Invalid Token Type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca","typeString":"literal_string \"Invalid Token Type\""}],"id":3720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2373:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2373:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3726,"nodeType":"ExpressionStatement","src":"2373:49:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3730,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"2478:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3728,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"2453:8:10","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$3136","typeString":"contract Exchange"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isVerifiedToken","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"2453:24:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2453:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3732,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"2489:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3733,"name":"aDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"2499:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2489:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2453:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2517:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""},"value":"Token not verified on Exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""}],"id":3727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2432:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2432:127:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3738,"nodeType":"ExpressionStatement","src":"2432:127:10"},{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3739,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"2634:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3741,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"2649:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3740,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"2642:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$236_$","typeString":"type(contract IERC20)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2642:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"src":"2634:22:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"id":3744,"nodeType":"ExpressionStatement","src":"2634:22:10"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3748,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2741:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2741:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3752,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2761:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Wallet_$4195","typeString":"contract Wallet"}],"id":3751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2753:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3750,"name":"address","nodeType":"ElementaryTypeName","src":"2753:7:10","typeDescriptions":{}}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2753:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3754,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"2768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3746,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"2722:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":235,"src":"2722:18:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2722:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20417070726f76616c20796574","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2790:17:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","typeString":"literal_string \"No Approval yet\""},"value":"No Approval yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","typeString":"literal_string \"No Approval yet\""}],"id":3745,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2701:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2701:116:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3758,"nodeType":"ExpressionStatement","src":"2701:116:10"},{"expression":{"arguments":[{"id":3760,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"2855:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2875:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2875:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2911:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3768,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"2930:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3766,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"2917:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"2917:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2917:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3763,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"2899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"2899:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2955:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3759,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"2828:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2828:141:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3774,"nodeType":"ExpressionStatement","src":"2828:141:10"},{"eventCall":{"arguments":[{"id":3776,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"3006:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3026:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3026:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3779,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"3050:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3781,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"3081:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3782,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3089:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3089:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3780,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"3071:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3071:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3775,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"2985:7:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2985:125:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3786,"nodeType":"EmitStatement","src":"2980:130:10"}]},"functionSelector":"99c6d2de","id":3788,"implemented":true,"kind":"function","modifiers":[],"name":"depositToken","nameLocation":"2259:12:10","nodeType":"FunctionDefinition","parameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"_token","nameLocation":"2289:6:10","nodeType":"VariableDeclaration","scope":3788,"src":"2281:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3712,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3715,"mutability":"mutable","name":"_amount","nameLocation":"2313:7:10","nodeType":"VariableDeclaration","scope":3788,"src":"2305:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2305:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"_decimals","nameLocation":"2338:9:10","nodeType":"VariableDeclaration","scope":3788,"src":"2330:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2271:82:10"},"returnParameters":{"id":3719,"nodeType":"ParameterList","parameters":[],"src":"2363:0:10"},"scope":4195,"src":"2250:867:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3894,"nodeType":"Block","src":"3237:947:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3798,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"3255:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3799,"name":"ethToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"3265:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3255:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3247:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3247:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3802,"nodeType":"ExpressionStatement","src":"3247:27:10"},{"expression":{"arguments":[{"arguments":[{"id":3806,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"3330:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3804,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"3305:8:10","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$3136","typeString":"contract Exchange"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isVerifiedToken","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"3305:24:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3305:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3351:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""},"value":"Token not verified on Exchange"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","typeString":"literal_string \"Token not verified on Exchange\""}],"id":3803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3284:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3284:109:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3810,"nodeType":"ExpressionStatement","src":"3284:109:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"id":3819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3491:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3491:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3821,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"3503:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3818,"name":"getlockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"3476:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3476:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3813,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"3435:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3443:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3443:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3812,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"3425:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3425:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"3425:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3425:99:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3824,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"3528:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3425:110:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420546f6b656e7320746f207769746864726177","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3549:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","typeString":"literal_string \"Insufficient Tokens to withdraw\""},"value":"Insufficient Tokens to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","typeString":"literal_string \"Insufficient Tokens to withdraw\""}],"id":3811,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3404:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3404:188:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3828,"nodeType":"ExpressionStatement","src":"3404:188:10"},{"expression":{"arguments":[{"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3610:7:10","subExpression":{"id":3830,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"3611:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3619:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":3829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3602:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3602:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3834,"nodeType":"ExpressionStatement","src":"3602:44:10"},{"expression":{"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3835,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"3656:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3665:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3656:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3838,"nodeType":"ExpressionStatement","src":"3656:13:10"},{"expression":{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3839,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"3680:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3841,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"3695:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3840,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"3688:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$236_$","typeString":"type(contract IERC20)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3688:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"src":"3680:22:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"id":3844,"nodeType":"ExpressionStatement","src":"3680:22:10"},{"expression":{"arguments":[{"id":3846,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"3739:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3847,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3759:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3759:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3795:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3854,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"3814:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3852,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"3801:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"3801:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3801:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3795:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3849,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"3783:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":489,"src":"3783:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3783:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3839:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3845,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"3712:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3712:142:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3860,"nodeType":"ExpressionStatement","src":"3712:142:10"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3864,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3917:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3917:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3957:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":3871,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"3976:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3869,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"3963:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"3963:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3963:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3957:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3866,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"3945:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"3945:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3945:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3862,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"3885:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":203,"src":"3885:14:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3885:116:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3864:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3864:147:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3877,"nodeType":"ExpressionStatement","src":"3864:147:10"},{"expression":{"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3878,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"4022:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4031:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4022:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3881,"nodeType":"ExpressionStatement","src":"4022:14:10"},{"eventCall":{"arguments":[{"id":3883,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"4073:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3884,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4093:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4093:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3886,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"4117:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3888,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"4148:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4156:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4156:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3887,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"4138:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4138:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3882,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"4051:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4051:126:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3893,"nodeType":"EmitStatement","src":"4046:131:10"}]},"functionSelector":"96c0ec55","id":3895,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"3132:13:10","nodeType":"FunctionDefinition","parameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"_token","nameLocation":"3163:6:10","nodeType":"VariableDeclaration","scope":3895,"src":"3155:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3789,"name":"address","nodeType":"ElementaryTypeName","src":"3155:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"_amount","nameLocation":"3187:7:10","nodeType":"VariableDeclaration","scope":3895,"src":"3179:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"3179:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"_decimals","nameLocation":"3212:9:10","nodeType":"VariableDeclaration","scope":3895,"src":"3204:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3204:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3145:82:10"},"returnParameters":{"id":3796,"nodeType":"ParameterList","parameters":[],"src":"3237:0:10"},"scope":4195,"src":"3123:1061:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3910,"nodeType":"Block","src":"4297:50:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3904,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"4314:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3906,"indexExpression":{"id":3905,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"4326:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4314:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3908,"indexExpression":{"id":3907,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"4333:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4314:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3903,"id":3909,"nodeType":"Return","src":"4307:33:10"}]},"functionSelector":"4fc121db","id":3911,"implemented":true,"kind":"function","modifiers":[],"name":"getlockedFunds","nameLocation":"4199:14:10","nodeType":"FunctionDefinition","parameters":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"_user","nameLocation":"4231:5:10","nodeType":"VariableDeclaration","scope":3911,"src":"4223:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3896,"name":"address","nodeType":"ElementaryTypeName","src":"4223:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"_token","nameLocation":"4254:6:10","nodeType":"VariableDeclaration","scope":3911,"src":"4246:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3898,"name":"address","nodeType":"ElementaryTypeName","src":"4246:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4213:53:10"},"returnParameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3911,"src":"4288:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"4288:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4287:9:10"},"scope":4195,"src":"4190:157:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3931,"nodeType":"Block","src":"4506:65:10","statements":[{"expression":{"arguments":[{"id":3925,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"4534:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3926,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"4541:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3927,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"4549:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3928,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"4558:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3924,"name":"updateLockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"4516:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4516:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3930,"nodeType":"ExpressionStatement","src":"4516:48:10"}]},"functionSelector":"fc11a3d6","id":3932,"implemented":true,"kind":"function","modifiers":[{"id":3922,"kind":"modifierInvocation","modifierName":{"id":3921,"name":"isExchange","nodeType":"IdentifierPath","referencedDeclaration":4194,"src":"4495:10:10"},"nodeType":"ModifierInvocation","src":"4495:10:10"}],"name":"exchangeUpdateLockedFunds","nameLocation":"4362:25:10","nodeType":"FunctionDefinition","parameters":{"id":3920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3913,"mutability":"mutable","name":"_user","nameLocation":"4405:5:10","nodeType":"VariableDeclaration","scope":3932,"src":"4397:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3912,"name":"address","nodeType":"ElementaryTypeName","src":"4397:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"_token","nameLocation":"4428:6:10","nodeType":"VariableDeclaration","scope":3932,"src":"4420:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3914,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"_amount","nameLocation":"4452:7:10","nodeType":"VariableDeclaration","scope":3932,"src":"4444:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"4444:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3919,"mutability":"mutable","name":"isAdd","nameLocation":"4474:5:10","nodeType":"VariableDeclaration","scope":3932,"src":"4469:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3918,"name":"bool","nodeType":"ElementaryTypeName","src":"4469:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4387:98:10"},"returnParameters":{"id":3923,"nodeType":"ParameterList","parameters":[],"src":"4506:0:10"},"scope":4195,"src":"4353:218:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3980,"nodeType":"Block","src":"4711:291:10","statements":[{"condition":{"id":3943,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4725:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4865:6:10","subExpression":{"id":3960,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"4866:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3978,"nodeType":"IfStatement","src":"4861:135:10","trueBody":{"id":3977,"nodeType":"Block","src":"4873:123:10","statements":[{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3962,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"4887:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3965,"indexExpression":{"id":3963,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"4899:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4887:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3966,"indexExpression":{"id":3964,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4906:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4887:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3973,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4964:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3967,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"4916:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3969,"indexExpression":{"id":3968,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"4928:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4916:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3971,"indexExpression":{"id":3970,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4935:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4916:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"4916:30:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4916:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4887:98:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3976,"nodeType":"ExpressionStatement","src":"4887:98:10"}]}},"id":3979,"nodeType":"IfStatement","src":"4721:275:10","trueBody":{"id":3959,"nodeType":"Block","src":"4732:123:10","statements":[{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3944,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"4746:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3947,"indexExpression":{"id":3945,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"4758:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4746:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3948,"indexExpression":{"id":3946,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4765:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4746:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3955,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4823:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":3949,"name":"lockedFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"4775:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3951,"indexExpression":{"id":3950,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"4787:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4775:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3953,"indexExpression":{"id":3952,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4794:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4775:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":459,"src":"4775:30:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4775:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4746:98:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3958,"nodeType":"ExpressionStatement","src":"4746:98:10"}]}}]},"id":3981,"implemented":true,"kind":"function","modifiers":[],"name":"updateLockedFunds","nameLocation":"4586:17:10","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"_user","nameLocation":"4621:5:10","nodeType":"VariableDeclaration","scope":3981,"src":"4613:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3933,"name":"address","nodeType":"ElementaryTypeName","src":"4613:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"_token","nameLocation":"4644:6:10","nodeType":"VariableDeclaration","scope":3981,"src":"4636:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3935,"name":"address","nodeType":"ElementaryTypeName","src":"4636:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"_amount","nameLocation":"4668:7:10","nodeType":"VariableDeclaration","scope":3981,"src":"4660:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3940,"mutability":"mutable","name":"isAdd","nameLocation":"4690:5:10","nodeType":"VariableDeclaration","scope":3981,"src":"4685:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3939,"name":"bool","nodeType":"ElementaryTypeName","src":"4685:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4603:98:10"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[],"src":"4711:0:10"},"scope":4195,"src":"4577:425:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3996,"nodeType":"Block","src":"5177:47:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3990,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"5194:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3992,"indexExpression":{"id":3991,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"5203:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5194:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3994,"indexExpression":{"id":3993,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"5211:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5194:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3989,"id":3995,"nodeType":"Return","src":"5187:30:10"}]},"functionSelector":"f7888aec","id":3997,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"5084:9:10","nodeType":"FunctionDefinition","parameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"_token","nameLocation":"5111:6:10","nodeType":"VariableDeclaration","scope":3997,"src":"5103:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3982,"name":"address","nodeType":"ElementaryTypeName","src":"5103:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"_user","nameLocation":"5135:5:10","nodeType":"VariableDeclaration","scope":3997,"src":"5127:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3984,"name":"address","nodeType":"ElementaryTypeName","src":"5127:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5093:53:10"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3997,"src":"5168:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"5168:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5167:9:10"},"scope":4195,"src":"5075:149:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4017,"nodeType":"Block","src":"5379:61:10","statements":[{"expression":{"arguments":[{"id":4011,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"5403:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4012,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"5411:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4013,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"5418:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4014,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"5427:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4010,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"5389:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4016,"nodeType":"ExpressionStatement","src":"5389:44:10"}]},"functionSelector":"126b9c5d","id":4018,"implemented":true,"kind":"function","modifiers":[{"id":4008,"kind":"modifierInvocation","modifierName":{"id":4007,"name":"isExchange","nodeType":"IdentifierPath","referencedDeclaration":4194,"src":"5368:10:10"},"nodeType":"ModifierInvocation","src":"5368:10:10"}],"name":"exchangeUpdateBalance","nameLocation":"5239:21:10","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"_token","nameLocation":"5278:6:10","nodeType":"VariableDeclaration","scope":4018,"src":"5270:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3998,"name":"address","nodeType":"ElementaryTypeName","src":"5270:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"_user","nameLocation":"5302:5:10","nodeType":"VariableDeclaration","scope":4018,"src":"5294:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4000,"name":"address","nodeType":"ElementaryTypeName","src":"5294:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"_amount","nameLocation":"5325:7:10","nodeType":"VariableDeclaration","scope":4018,"src":"5317:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"5317:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"isAdd","nameLocation":"5347:5:10","nodeType":"VariableDeclaration","scope":4018,"src":"5342:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4004,"name":"bool","nodeType":"ElementaryTypeName","src":"5342:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5260:98:10"},"returnParameters":{"id":4009,"nodeType":"ParameterList","parameters":[],"src":"5379:0:10"},"scope":4195,"src":"5230:210:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4066,"nodeType":"Block","src":"5576:219:10","statements":[{"condition":{"id":4029,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"5590:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5694:6:10","subExpression":{"id":4046,"name":"isAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"5695:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4064,"nodeType":"IfStatement","src":"5690:99:10","trueBody":{"id":4063,"nodeType":"Block","src":"5702:87:10","statements":[{"expression":{"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4048,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"5716:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4051,"indexExpression":{"id":4049,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"5725:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5716:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4052,"indexExpression":{"id":4050,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5733:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5716:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4059,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"5770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":4053,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"5742:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4055,"indexExpression":{"id":4054,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"5751:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5742:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4057,"indexExpression":{"id":4056,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5759:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5742:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"5742:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5742:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5716:62:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4062,"nodeType":"ExpressionStatement","src":"5716:62:10"}]}},"id":4065,"nodeType":"IfStatement","src":"5586:203:10","trueBody":{"id":4045,"nodeType":"Block","src":"5597:87:10","statements":[{"expression":{"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4030,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"5611:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4033,"indexExpression":{"id":4031,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"5620:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5611:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4034,"indexExpression":{"id":4032,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5628:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5611:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4041,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"5665:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":4035,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"5637:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4037,"indexExpression":{"id":4036,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"5646:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5637:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4039,"indexExpression":{"id":4038,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5654:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5637:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":459,"src":"5637:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5637:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5611:62:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4044,"nodeType":"ExpressionStatement","src":"5611:62:10"}]}}]},"id":4067,"implemented":true,"kind":"function","modifiers":[],"name":"updateBalance","nameLocation":"5455:13:10","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"_token","nameLocation":"5486:6:10","nodeType":"VariableDeclaration","scope":4067,"src":"5478:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4019,"name":"address","nodeType":"ElementaryTypeName","src":"5478:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"_user","nameLocation":"5510:5:10","nodeType":"VariableDeclaration","scope":4067,"src":"5502:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4021,"name":"address","nodeType":"ElementaryTypeName","src":"5502:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4024,"mutability":"mutable","name":"_amount","nameLocation":"5533:7:10","nodeType":"VariableDeclaration","scope":4067,"src":"5525:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5525:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4026,"mutability":"mutable","name":"isAdd","nameLocation":"5555:5:10","nodeType":"VariableDeclaration","scope":4067,"src":"5550:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4025,"name":"bool","nodeType":"ElementaryTypeName","src":"5550:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5468:98:10"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[],"src":"5576:0:10"},"scope":4195,"src":"5446:349:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4078,"nodeType":"Block","src":"5865:41:10","statements":[{"expression":{"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4074,"name":"fundWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"5875:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4075,"name":"_fundwallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"5888:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5875:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4077,"nodeType":"ExpressionStatement","src":"5875:24:10"}]},"functionSelector":"5ec38bec","id":4079,"implemented":true,"kind":"function","modifiers":[{"id":4072,"kind":"modifierInvocation","modifierName":{"id":4071,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"5855:9:10"},"nodeType":"ModifierInvocation","src":"5855:9:10"}],"name":"updateFundWallet","nameLocation":"5810:16:10","nodeType":"FunctionDefinition","parameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4069,"mutability":"mutable","name":"_fundwallet","nameLocation":"5835:11:10","nodeType":"VariableDeclaration","scope":4079,"src":"5827:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4068,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5826:21:10"},"returnParameters":{"id":4073,"nodeType":"ParameterList","parameters":[],"src":"5865:0:10"},"scope":4195,"src":"5801:105:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4149,"nodeType":"Block","src":"5986:578:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4087,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6074:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6074:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4089,"name":"fundWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"6088:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6074:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642046756e6457616c6c6574206164647265737320746f207769746864726177","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6112:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57","typeString":"literal_string \"Invalid FundWallet address to withdraw\""},"value":"Invalid FundWallet address to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57","typeString":"literal_string \"Invalid FundWallet address to withdraw\""}],"id":4086,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6053:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6053:109:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4093,"nodeType":"ExpressionStatement","src":"6053:109:10"},{"assignments":[4095],"declarations":[{"constant":false,"id":4095,"mutability":"mutable","name":"totalAmount","nameLocation":"6180:11:10","nodeType":"VariableDeclaration","scope":4149,"src":"6172:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"6172:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4101,"initialValue":{"baseExpression":{"baseExpression":{"id":4096,"name":"s_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"6194:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4098,"indexExpression":{"id":4097,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"6203:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6194:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4100,"indexExpression":{"id":4099,"name":"fundWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"6211:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6194:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6172:50:10"},{"assignments":[4103],"declarations":[{"constant":false,"id":4103,"mutability":"mutable","name":"actualAmount","nameLocation":"6240:12:10","nodeType":"VariableDeclaration","scope":4149,"src":"6232:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4113,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6271:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":4109,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"6290:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4107,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"6277:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":474,"src":"6277:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6277:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6271:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4104,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"6255:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":504,"src":"6255:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6255:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6232:69:10"},{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4114,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"6311:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4116,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"6326:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4115,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"6319:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$236_$","typeString":"type(contract IERC20)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6319:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"src":"6311:22:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"id":4119,"nodeType":"ExpressionStatement","src":"6311:22:10"},{"expression":{"arguments":[{"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6352:7:10","subExpression":{"id":4121,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"6353:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6361:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""},"value":"Reentrant call detected!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","typeString":"literal_string \"Reentrant call detected!\""}],"id":4120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6344:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6344:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4125,"nodeType":"ExpressionStatement","src":"6344:44:10"},{"expression":{"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4126,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"6398:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6398:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4129,"nodeType":"ExpressionStatement","src":"6398:13:10"},{"expression":{"arguments":[{"id":4131,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"6435:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4132,"name":"fundWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"6443:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4133,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"6455:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6468:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4130,"name":"updateBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"6421:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6421:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4136,"nodeType":"ExpressionStatement","src":"6421:53:10"},{"expression":{"arguments":[{"arguments":[{"id":4140,"name":"fundWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"6507:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4141,"name":"actualAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"6519:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4138,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"6492:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$236","typeString":"contract IERC20"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":203,"src":"6492:14:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6492:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6484:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6484:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4144,"nodeType":"ExpressionStatement","src":"6484:49:10"},{"expression":{"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4145,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"6543:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6552:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6543:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4148,"nodeType":"ExpressionStatement","src":"6543:14:10"}]},"functionSelector":"5dfbfffd","id":4150,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToFundWallet","nameLocation":"5921:20:10","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"_token","nameLocation":"5950:6:10","nodeType":"VariableDeclaration","scope":4150,"src":"5942:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4080,"name":"address","nodeType":"ElementaryTypeName","src":"5942:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4083,"mutability":"mutable","name":"_decimals","nameLocation":"5966:9:10","nodeType":"VariableDeclaration","scope":4150,"src":"5958:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"5958:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5941:35:10"},"returnParameters":{"id":4085,"nodeType":"ParameterList","parameters":[],"src":"5986:0:10"},"scope":4195,"src":"5912:652:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4163,"nodeType":"Block","src":"6644:54:10","statements":[{"expression":{"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4157,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"6654:8:10","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$3136","typeString":"contract Exchange"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4159,"name":"_exchangeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"6674:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4158,"name":"Exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"6665:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exchange_$3136_$","typeString":"type(contract Exchange)"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6665:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$3136","typeString":"contract Exchange"}},"src":"6654:37:10","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$3136","typeString":"contract Exchange"}},"id":4162,"nodeType":"ExpressionStatement","src":"6654:37:10"}]},"functionSelector":"31415a65","id":4164,"implemented":true,"kind":"function","modifiers":[{"id":4155,"kind":"modifierInvocation","modifierName":{"id":4154,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"6634:9:10"},"nodeType":"ModifierInvocation","src":"6634:9:10"}],"name":"updateExchangeAddress","nameLocation":"6579:21:10","nodeType":"FunctionDefinition","parameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"_exchangeAddress","nameLocation":"6609:16:10","nodeType":"VariableDeclaration","scope":4164,"src":"6601:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4151,"name":"address","nodeType":"ElementaryTypeName","src":"6601:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6600:26:10"},"returnParameters":{"id":4156,"nodeType":"ParameterList","parameters":[],"src":"6644:0:10"},"scope":4195,"src":"6570:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4178,"nodeType":"Block","src":"6766:41:10","statements":[{"expression":{"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4171,"name":"aDAI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"6776:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4174,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"6791:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6783:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4172,"name":"address","nodeType":"ElementaryTypeName","src":"6783:7:10","typeDescriptions":{}}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6783:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6776:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4177,"nodeType":"ExpressionStatement","src":"6776:24:10"}]},"functionSelector":"545e0157","id":4179,"implemented":true,"kind":"function","modifiers":[{"id":4169,"kind":"modifierInvocation","modifierName":{"id":4168,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"6756:9:10"},"nodeType":"ModifierInvocation","src":"6756:9:10"}],"name":"updateaDaiAddress","nameLocation":"6713:17:10","nodeType":"FunctionDefinition","parameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"_address","nameLocation":"6739:8:10","nodeType":"VariableDeclaration","scope":4179,"src":"6731:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4165,"name":"address","nodeType":"ElementaryTypeName","src":"6731:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6730:18:10"},"returnParameters":{"id":4170,"nodeType":"ParameterList","parameters":[],"src":"6766:0:10"},"scope":4195,"src":"6704:103:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4193,"nodeType":"Block","src":"6835:93:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6853:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6853:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4186,"name":"exchange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"6875:8:10","typeDescriptions":{"typeIdentifier":"t_contract$_Exchange_$3136","typeString":"contract Exchange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Exchange_$3136","typeString":"contract Exchange"}],"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6867:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4184,"name":"address","nodeType":"ElementaryTypeName","src":"6867:7:10","typeDescriptions":{}}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6867:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6853:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742045786368616e676520636f6e7472616374","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6886:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa","typeString":"literal_string \"Not Exchange contract\""},"value":"Not Exchange contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa","typeString":"literal_string \"Not Exchange contract\""}],"id":4181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6845:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6845:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4191,"nodeType":"ExpressionStatement","src":"6845:65:10"},{"id":4192,"nodeType":"PlaceholderStatement","src":"6920:1:10"}]},"id":4194,"name":"isExchange","nameLocation":"6822:10:10","nodeType":"ModifierDefinition","parameters":{"id":4180,"nodeType":"ParameterList","parameters":[],"src":"6832:2:10"},"src":"6813:115:10","virtual":false,"visibility":"internal"}],"scope":4196,"src":"365:6565:10","usedErrors":[]}],"src":"33:6898:10"},"id":10}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220801a649639a4662f1423a07f295f253ac939f4e1d9e14aa3cc81e609359b6e5264736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 BYTE PUSH5 0x9639A4662F EQ 0x23 LOG0 PUSH32 0x295F253AC939F4E1D9E14AA3CC81E609359B6E5264736F6C6343000807003300 ","sourceMap":"482:6300:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220801a649639a4662f1423a07f295f253ac939f4e1d9e14aa3cc81e609359b6e5264736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 BYTE PUSH5 0x9639A4662F EQ 0x23 LOG0 PUSH32 0x295F253AC939F4E1D9E14AA3CC81E609359B6E5264736F6C6343000807003300 ","sourceMap":"482:6300:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_640":{"entryPoint":null,"id":640,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":289,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":415,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":579,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":589,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":643,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":697,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":805,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":852,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":899,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":904,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":909,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":919,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:11","statements":[{"body":{"nodeType":"YulBlock","src":"102:326:11","statements":[{"nodeType":"YulAssignment","src":"112:75:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:11"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:11"},"nodeType":"YulFunctionCall","src":"137:49:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:11"},"nodeType":"YulFunctionCall","src":"121:66:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:11"},"nodeType":"YulFunctionCall","src":"196:21:11"},"nodeType":"YulExpressionStatement","src":"196:21:11"},{"nodeType":"YulVariableDeclaration","src":"226:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:11"},"nodeType":"YulFunctionCall","src":"237:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"293:77:11"},"nodeType":"YulFunctionCall","src":"293:79:11"},"nodeType":"YulExpressionStatement","src":"293:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:11"},"nodeType":"YulFunctionCall","src":"268:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:11"},"nodeType":"YulFunctionCall","src":"265:25:11"},"nodeType":"YulIf","src":"262:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"405:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"410:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"415:6:11"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"383:21:11"},"nodeType":"YulFunctionCall","src":"383:39:11"},"nodeType":"YulExpressionStatement","src":"383:39:11"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:11","type":""}],"src":"7:421:11"},{"body":{"nodeType":"YulBlock","src":"521:282:11","statements":[{"body":{"nodeType":"YulBlock","src":"570:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"572:77:11"},"nodeType":"YulFunctionCall","src":"572:79:11"},"nodeType":"YulExpressionStatement","src":"572:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"549:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"557:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"545:3:11"},"nodeType":"YulFunctionCall","src":"545:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"564:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"541:3:11"},"nodeType":"YulFunctionCall","src":"541:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"534:6:11"},"nodeType":"YulFunctionCall","src":"534:35:11"},"nodeType":"YulIf","src":"531:122:11"},{"nodeType":"YulVariableDeclaration","src":"662:27:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"682:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"676:5:11"},"nodeType":"YulFunctionCall","src":"676:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"666:6:11","type":""}]},{"nodeType":"YulAssignment","src":"698:99:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"770:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"778:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"766:3:11"},"nodeType":"YulFunctionCall","src":"766:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"793:3:11"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"707:58:11"},"nodeType":"YulFunctionCall","src":"707:90:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"698:5:11"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"499:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"507:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"515:5:11","type":""}],"src":"448:355:11"},{"body":{"nodeType":"YulBlock","src":"923:739:11","statements":[{"body":{"nodeType":"YulBlock","src":"969:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"971:77:11"},"nodeType":"YulFunctionCall","src":"971:79:11"},"nodeType":"YulExpressionStatement","src":"971:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"944:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"953:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"940:3:11"},"nodeType":"YulFunctionCall","src":"940:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"965:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"936:3:11"},"nodeType":"YulFunctionCall","src":"936:32:11"},"nodeType":"YulIf","src":"933:119:11"},{"nodeType":"YulBlock","src":"1062:291:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1077:38:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1101:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1097:3:11"},"nodeType":"YulFunctionCall","src":"1097:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1091:5:11"},"nodeType":"YulFunctionCall","src":"1091:24:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1081:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1162:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1164:77:11"},"nodeType":"YulFunctionCall","src":"1164:79:11"},"nodeType":"YulExpressionStatement","src":"1164:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1134:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1142:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1131:2:11"},"nodeType":"YulFunctionCall","src":"1131:30:11"},"nodeType":"YulIf","src":"1128:117:11"},{"nodeType":"YulAssignment","src":"1259:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1326:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:11"},"nodeType":"YulFunctionCall","src":"1311:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1335:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1269:41:11"},"nodeType":"YulFunctionCall","src":"1269:74:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1259:6:11"}]}]},{"nodeType":"YulBlock","src":"1363:292:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1378:39:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1413:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:11"},"nodeType":"YulFunctionCall","src":"1398:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1392:5:11"},"nodeType":"YulFunctionCall","src":"1392:25:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1382:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1466:77:11"},"nodeType":"YulFunctionCall","src":"1466:79:11"},"nodeType":"YulExpressionStatement","src":"1466:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1436:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1444:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1433:2:11"},"nodeType":"YulFunctionCall","src":"1433:30:11"},"nodeType":"YulIf","src":"1430:117:11"},{"nodeType":"YulAssignment","src":"1561:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1628:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:11"},"nodeType":"YulFunctionCall","src":"1613:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1637:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1571:41:11"},"nodeType":"YulFunctionCall","src":"1571:74:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1561:6:11"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"885:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"896:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"908:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"916:6:11","type":""}],"src":"809:853:11"},{"body":{"nodeType":"YulBlock","src":"1709:88:11","statements":[{"nodeType":"YulAssignment","src":"1719:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1729:18:11"},"nodeType":"YulFunctionCall","src":"1729:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1719:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1778:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"1786:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1758:19:11"},"nodeType":"YulFunctionCall","src":"1758:33:11"},"nodeType":"YulExpressionStatement","src":"1758:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1693:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1702:6:11","type":""}],"src":"1668:129:11"},{"body":{"nodeType":"YulBlock","src":"1843:35:11","statements":[{"nodeType":"YulAssignment","src":"1853:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1869:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1863:5:11"},"nodeType":"YulFunctionCall","src":"1863:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1853:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1836:6:11","type":""}],"src":"1803:75:11"},{"body":{"nodeType":"YulBlock","src":"1951:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"2056:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2058:16:11"},"nodeType":"YulFunctionCall","src":"2058:18:11"},"nodeType":"YulExpressionStatement","src":"2058:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2028:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2036:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2025:2:11"},"nodeType":"YulFunctionCall","src":"2025:30:11"},"nodeType":"YulIf","src":"2022:56:11"},{"nodeType":"YulAssignment","src":"2088:37:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2118:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2096:21:11"},"nodeType":"YulFunctionCall","src":"2096:29:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2088:4:11"}]},{"nodeType":"YulAssignment","src":"2162:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2174:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"2180:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:11"},"nodeType":"YulFunctionCall","src":"2170:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2162:4:11"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1935:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1946:4:11","type":""}],"src":"1884:308:11"},{"body":{"nodeType":"YulBlock","src":"2247:258:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2257:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2266:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2261:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2326:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2351:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"2356:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:11"},"nodeType":"YulFunctionCall","src":"2347:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2370:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"2375:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:11"},"nodeType":"YulFunctionCall","src":"2366:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2360:5:11"},"nodeType":"YulFunctionCall","src":"2360:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:11"},"nodeType":"YulFunctionCall","src":"2340:39:11"},"nodeType":"YulExpressionStatement","src":"2340:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2287:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"2290:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2284:2:11"},"nodeType":"YulFunctionCall","src":"2284:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2298:19:11","statements":[{"nodeType":"YulAssignment","src":"2300:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2309:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"2312:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:11"},"nodeType":"YulFunctionCall","src":"2305:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2300:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"2280:3:11","statements":[]},"src":"2276:113:11"},{"body":{"nodeType":"YulBlock","src":"2423:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2473:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2478:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:11"},"nodeType":"YulFunctionCall","src":"2469:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"2487:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2462:6:11"},"nodeType":"YulFunctionCall","src":"2462:27:11"},"nodeType":"YulExpressionStatement","src":"2462:27:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2404:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"2407:6:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2401:2:11"},"nodeType":"YulFunctionCall","src":"2401:13:11"},"nodeType":"YulIf","src":"2398:101:11"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2229:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2234:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"2239:6:11","type":""}],"src":"2198:307:11"},{"body":{"nodeType":"YulBlock","src":"2562:269:11","statements":[{"nodeType":"YulAssignment","src":"2572:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2586:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"2592:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2582:3:11"},"nodeType":"YulFunctionCall","src":"2582:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2572:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"2603:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2633:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2629:3:11"},"nodeType":"YulFunctionCall","src":"2629:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2607:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2680:51:11","statements":[{"nodeType":"YulAssignment","src":"2694:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2708:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2716:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2704:3:11"},"nodeType":"YulFunctionCall","src":"2704:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2694:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2660:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2653:6:11"},"nodeType":"YulFunctionCall","src":"2653:26:11"},"nodeType":"YulIf","src":"2650:81:11"},{"body":{"nodeType":"YulBlock","src":"2783:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2797:16:11"},"nodeType":"YulFunctionCall","src":"2797:18:11"},"nodeType":"YulExpressionStatement","src":"2797:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2747:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2770:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2778:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2767:2:11"},"nodeType":"YulFunctionCall","src":"2767:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2744:2:11"},"nodeType":"YulFunctionCall","src":"2744:38:11"},"nodeType":"YulIf","src":"2741:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2546:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2555:6:11","type":""}],"src":"2511:320:11"},{"body":{"nodeType":"YulBlock","src":"2880:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2890:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2912:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2942:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2920:21:11"},"nodeType":"YulFunctionCall","src":"2920:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2908:3:11"},"nodeType":"YulFunctionCall","src":"2908:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2894:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3059:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3061:16:11"},"nodeType":"YulFunctionCall","src":"3061:18:11"},"nodeType":"YulExpressionStatement","src":"3061:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3002:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"3014:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:11"},"nodeType":"YulFunctionCall","src":"2999:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3038:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3050:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3035:2:11"},"nodeType":"YulFunctionCall","src":"3035:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2996:2:11"},"nodeType":"YulFunctionCall","src":"2996:62:11"},"nodeType":"YulIf","src":"2993:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3101:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3090:6:11"},"nodeType":"YulFunctionCall","src":"3090:22:11"},"nodeType":"YulExpressionStatement","src":"3090:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2866:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"2874:4:11","type":""}],"src":"2837:281:11"},{"body":{"nodeType":"YulBlock","src":"3152:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3169:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3172:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:11"},"nodeType":"YulFunctionCall","src":"3162:88:11"},"nodeType":"YulExpressionStatement","src":"3162:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3266:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3269:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3259:6:11"},"nodeType":"YulFunctionCall","src":"3259:15:11"},"nodeType":"YulExpressionStatement","src":"3259:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:11"},"nodeType":"YulFunctionCall","src":"3283:15:11"},"nodeType":"YulExpressionStatement","src":"3283:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3124:180:11"},{"body":{"nodeType":"YulBlock","src":"3338:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3355:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3358:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:11"},"nodeType":"YulFunctionCall","src":"3348:88:11"},"nodeType":"YulExpressionStatement","src":"3348:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3452:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3455:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:11"},"nodeType":"YulFunctionCall","src":"3445:15:11"},"nodeType":"YulExpressionStatement","src":"3445:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3476:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3479:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3469:6:11"},"nodeType":"YulFunctionCall","src":"3469:15:11"},"nodeType":"YulExpressionStatement","src":"3469:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3310:180:11"},{"body":{"nodeType":"YulBlock","src":"3585:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3605:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3595:6:11"},"nodeType":"YulFunctionCall","src":"3595:12:11"},"nodeType":"YulExpressionStatement","src":"3595:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3496:117:11"},{"body":{"nodeType":"YulBlock","src":"3708:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3725:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3728:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3718:6:11"},"nodeType":"YulFunctionCall","src":"3718:12:11"},"nodeType":"YulExpressionStatement","src":"3718:12:11"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3619:117:11"},{"body":{"nodeType":"YulBlock","src":"3831:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3848:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3841:6:11"},"nodeType":"YulFunctionCall","src":"3841:12:11"},"nodeType":"YulExpressionStatement","src":"3841:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3742:117:11"},{"body":{"nodeType":"YulBlock","src":"3954:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3974:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3964:6:11"},"nodeType":"YulFunctionCall","src":"3964:12:11"},"nodeType":"YulExpressionStatement","src":"3964:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3865:117:11"},{"body":{"nodeType":"YulBlock","src":"4036:54:11","statements":[{"nodeType":"YulAssignment","src":"4046:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4064:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:11"},"nodeType":"YulFunctionCall","src":"4060:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4076:3:11"},"nodeType":"YulFunctionCall","src":"4076:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4056:3:11"},"nodeType":"YulFunctionCall","src":"4056:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4046:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4019:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4029:6:11","type":""}],"src":"3988:102:11"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620016173803806200161783398181016040528101906200003791906200019f565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61125f80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d20565b60405180910390f35b6100e660048036038101906100e19190610b6a565b610308565b6040516100f39190610d05565b60405180910390f35b61010461032b565b6040516101119190610e22565b60405180910390f35b610134600480360381019061012f9190610b17565b610335565b6040516101419190610d05565b60405180910390f35b610152610364565b60405161015f9190610e3d565b60405180910390f35b610182600480360381019061017d9190610b6a565b61036d565b60405161018f9190610d05565b60405180910390f35b6101b260048036038101906101ad9190610aaa565b6103a4565b6040516101bf9190610e22565b60405180910390f35b6101d06103ec565b6040516101dd9190610d20565b60405180910390f35b61020060048036038101906101fb9190610b6a565b61047e565b60405161020d9190610d05565b60405180910390f35b610230600480360381019061022b9190610b6a565b6104f5565b60405161023d9190610d05565b60405180910390f35b610260600480360381019061025b9190610ad7565b610518565b60405161026d9190610e22565b60405180910390f35b60606003805461028590610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f52565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e74565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f52565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e02565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610de2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d62565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e22565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d82565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d42565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610da2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610e22565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081359050610a8f816111fb565b92915050565b600081359050610aa481611212565b92915050565b600060208284031215610ac057610abf610fe2565b5b6000610ace84828501610a80565b91505092915050565b60008060408385031215610aee57610aed610fe2565b5b6000610afc85828601610a80565b9250506020610b0d85828601610a80565b9150509250929050565b600080600060608486031215610b3057610b2f610fe2565b5b6000610b3e86828701610a80565b9350506020610b4f86828701610a80565b9250506040610b6086828701610a95565b9150509250925092565b60008060408385031215610b8157610b80610fe2565b5b6000610b8f85828601610a80565b9250506020610ba085828601610a95565b9150509250929050565b610bb381610edc565b82525050565b6000610bc482610e58565b610bce8185610e63565b9350610bde818560208601610f1f565b610be781610fe7565b840191505092915050565b6000610bff602383610e63565b9150610c0a82610ff8565b604082019050919050565b6000610c22602283610e63565b9150610c2d82611047565b604082019050919050565b6000610c45601d83610e63565b9150610c5082611096565b602082019050919050565b6000610c68602683610e63565b9150610c73826110bf565b604082019050919050565b6000610c8b602583610e63565b9150610c968261110e565b604082019050919050565b6000610cae602483610e63565b9150610cb98261115d565b604082019050919050565b6000610cd1602583610e63565b9150610cdc826111ac565b604082019050919050565b610cf081610f08565b82525050565b610cff81610f12565b82525050565b6000602082019050610d1a6000830184610baa565b92915050565b60006020820190508181036000830152610d3a8184610bb9565b905092915050565b60006020820190508181036000830152610d5b81610bf2565b9050919050565b60006020820190508181036000830152610d7b81610c15565b9050919050565b60006020820190508181036000830152610d9b81610c38565b9050919050565b60006020820190508181036000830152610dbb81610c5b565b9050919050565b60006020820190508181036000830152610ddb81610c7e565b9050919050565b60006020820190508181036000830152610dfb81610ca1565b9050919050565b60006020820190508181036000830152610e1b81610cc4565b9050919050565b6000602082019050610e376000830184610ce7565b92915050565b6000602082019050610e526000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7f82610f08565b9150610e8a83610f08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebf57610ebe610f84565b5b828201905092915050565b6000610ed582610ee8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f3d578082015181840152602081019050610f22565b83811115610f4c576000848401525b50505050565b60006002820490506001821680610f6a57607f821691505b60208210811415610f7e57610f7d610fb3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61120481610eca565b811461120f57600080fd5b50565b61121b81610f08565b811461122657600080fd5b5056fea26469706673582212202511d9715b3019bfbadbaaf47c6699be599d5b03933ba2e30cbc5c325eae4c9164736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1617 CODESIZE SUB DUP1 PUSH3 0x1617 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA4 DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0D DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB3E DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4F DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB60 DUP7 DUP3 DUP8 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xEDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 DUP3 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0xBCE DUP2 DUP6 PUSH2 0xE63 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xFE7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF PUSH1 0x23 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0A DUP3 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH1 0x22 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH1 0x1D DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC50 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH1 0x26 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP3 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC96 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE PUSH1 0x24 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP3 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD5B DUP2 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7B DUP2 PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDDB DUP2 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFB DUP2 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0xF08 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF22 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xECA JUMP JUMPDEST DUP2 EQ PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 GT 0xD9 PUSH18 0x5B3019BFBADBAAF47C6699BE599D5B03933B LOG2 0xE3 0xC 0xBC 0x5C ORIGIN 0x5E 0xAE 0x4C SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"1487:11848:6:-:0;;;2062:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2136:5;2128;:13;;;;;;;;;;;;:::i;:::-;;2161:7;2151;:17;;;;;;;;;;;;:::i;:::-;;2062:113;;1487:11848;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:11:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;1487:11848:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1181":{"entryPoint":2683,"id":1181,"parameterSlots":3,"returnSlots":0},"@_approve_1116":{"entryPoint":1447,"id":1116,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1170":{"entryPoint":2678,"id":1170,"parameterSlots":3,"returnSlots":0},"@_msgSender_273":{"entryPoint":1439,"id":273,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1159":{"entryPoint":1906,"id":1159,"parameterSlots":3,"returnSlots":0},"@_transfer_942":{"entryPoint":2046,"id":942,"parameterSlots":3,"returnSlots":0},"@allowance_737":{"entryPoint":1304,"id":737,"parameterSlots":2,"returnSlots":1},"@approve_762":{"entryPoint":776,"id":762,"parameterSlots":2,"returnSlots":1},"@balanceOf_694":{"entryPoint":932,"id":694,"parameterSlots":1,"returnSlots":1},"@decimals_670":{"entryPoint":868,"id":670,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_865":{"entryPoint":1150,"id":865,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_824":{"entryPoint":877,"id":824,"parameterSlots":2,"returnSlots":1},"@name_650":{"entryPoint":630,"id":650,"parameterSlots":0,"returnSlots":1},"@symbol_660":{"entryPoint":1004,"id":660,"parameterSlots":0,"returnSlots":1},"@totalSupply_680":{"entryPoint":811,"id":680,"parameterSlots":0,"returnSlots":1},"@transferFrom_795":{"entryPoint":821,"id":795,"parameterSlots":3,"returnSlots":1},"@transfer_719":{"entryPoint":1269,"id":719,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2688,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2709,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2775,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2839,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2922,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2986,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3001,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":3058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3093,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":3128,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":3163,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":3198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3233,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3268,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3303,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3318,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3394,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3426,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3522,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3586,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3645,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3672,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3683,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3700,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3786,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3804,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3816,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3848,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3858,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":3871,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3922,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3972,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4019,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4066,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4071,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4088,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":4167,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4246,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4287,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4366,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":4445,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":4524,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4603,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4626,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13861:11","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:11","statements":[{"nodeType":"YulAssignment","src":"69:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:11"},"nodeType":"YulFunctionCall","src":"78:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:11"},"nodeType":"YulFunctionCall","src":"107:33:11"},"nodeType":"YulExpressionStatement","src":"107:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:11","type":""}],"src":"7:139:11"},{"body":{"nodeType":"YulBlock","src":"204:87:11","statements":[{"nodeType":"YulAssignment","src":"214:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:11"},"nodeType":"YulFunctionCall","src":"223:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:11"},"nodeType":"YulFunctionCall","src":"252:33:11"},"nodeType":"YulExpressionStatement","src":"252:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:11","type":""}],"src":"152:139:11"},{"body":{"nodeType":"YulBlock","src":"363:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"409:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"411:77:11"},"nodeType":"YulFunctionCall","src":"411:79:11"},"nodeType":"YulExpressionStatement","src":"411:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"384:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"393:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"380:3:11"},"nodeType":"YulFunctionCall","src":"380:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"405:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"376:3:11"},"nodeType":"YulFunctionCall","src":"376:32:11"},"nodeType":"YulIf","src":"373:119:11"},{"nodeType":"YulBlock","src":"502:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"517:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"531:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"521:6:11","type":""}]},{"nodeType":"YulAssignment","src":"546:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"581:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"592:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"577:3:11"},"nodeType":"YulFunctionCall","src":"577:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"601:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"556:20:11"},"nodeType":"YulFunctionCall","src":"556:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"546:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"333:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"344:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"356:6:11","type":""}],"src":"297:329:11"},{"body":{"nodeType":"YulBlock","src":"715:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"761:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"763:77:11"},"nodeType":"YulFunctionCall","src":"763:79:11"},"nodeType":"YulExpressionStatement","src":"763:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"736:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"745:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"732:3:11"},"nodeType":"YulFunctionCall","src":"732:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"757:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"728:3:11"},"nodeType":"YulFunctionCall","src":"728:32:11"},"nodeType":"YulIf","src":"725:119:11"},{"nodeType":"YulBlock","src":"854:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"869:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"883:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"873:6:11","type":""}]},{"nodeType":"YulAssignment","src":"898:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"933:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"944:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"929:3:11"},"nodeType":"YulFunctionCall","src":"929:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"953:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"908:20:11"},"nodeType":"YulFunctionCall","src":"908:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"898:6:11"}]}]},{"nodeType":"YulBlock","src":"981:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"996:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1010:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1000:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1026:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1061:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1072:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1057:3:11"},"nodeType":"YulFunctionCall","src":"1057:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1081:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1036:20:11"},"nodeType":"YulFunctionCall","src":"1036:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1026:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"677:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"688:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"700:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"708:6:11","type":""}],"src":"632:474:11"},{"body":{"nodeType":"YulBlock","src":"1212:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"1258:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1260:77:11"},"nodeType":"YulFunctionCall","src":"1260:79:11"},"nodeType":"YulExpressionStatement","src":"1260:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1233:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1242:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:11"},"nodeType":"YulFunctionCall","src":"1229:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1254:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1225:3:11"},"nodeType":"YulFunctionCall","src":"1225:32:11"},"nodeType":"YulIf","src":"1222:119:11"},{"nodeType":"YulBlock","src":"1351:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1366:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1380:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1370:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1395:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1430:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1441:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1426:3:11"},"nodeType":"YulFunctionCall","src":"1426:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1450:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1405:20:11"},"nodeType":"YulFunctionCall","src":"1405:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1395:6:11"}]}]},{"nodeType":"YulBlock","src":"1478:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1493:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1507:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1497:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1523:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1558:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1569:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1554:3:11"},"nodeType":"YulFunctionCall","src":"1554:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1578:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1533:20:11"},"nodeType":"YulFunctionCall","src":"1533:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1523:6:11"}]}]},{"nodeType":"YulBlock","src":"1606:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1621:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1635:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1625:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1651:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1697:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1682:3:11"},"nodeType":"YulFunctionCall","src":"1682:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1706:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1661:20:11"},"nodeType":"YulFunctionCall","src":"1661:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1651:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1166:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1177:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1189:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1197:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1205:6:11","type":""}],"src":"1112:619:11"},{"body":{"nodeType":"YulBlock","src":"1820:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"1866:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1868:77:11"},"nodeType":"YulFunctionCall","src":"1868:79:11"},"nodeType":"YulExpressionStatement","src":"1868:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1841:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1850:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1837:3:11"},"nodeType":"YulFunctionCall","src":"1837:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1862:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1833:3:11"},"nodeType":"YulFunctionCall","src":"1833:32:11"},"nodeType":"YulIf","src":"1830:119:11"},{"nodeType":"YulBlock","src":"1959:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1974:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1988:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1978:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2003:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2038:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2049:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2034:3:11"},"nodeType":"YulFunctionCall","src":"2034:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2058:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2013:20:11"},"nodeType":"YulFunctionCall","src":"2013:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2003:6:11"}]}]},{"nodeType":"YulBlock","src":"2086:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2101:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2115:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2105:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2131:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2166:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2177:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2162:3:11"},"nodeType":"YulFunctionCall","src":"2162:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2186:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2141:20:11"},"nodeType":"YulFunctionCall","src":"2141:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2131:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1782:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1793:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1805:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1813:6:11","type":""}],"src":"1737:474:11"},{"body":{"nodeType":"YulBlock","src":"2276:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2293:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2313:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2298:14:11"},"nodeType":"YulFunctionCall","src":"2298:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2286:6:11"},"nodeType":"YulFunctionCall","src":"2286:34:11"},"nodeType":"YulExpressionStatement","src":"2286:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2264:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2271:3:11","type":""}],"src":"2217:109:11"},{"body":{"nodeType":"YulBlock","src":"2424:272:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2434:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2481:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2448:32:11"},"nodeType":"YulFunctionCall","src":"2448:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2438:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2496:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2562:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2567:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2503:58:11"},"nodeType":"YulFunctionCall","src":"2503:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2496:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2609:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2616:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2605:3:11"},"nodeType":"YulFunctionCall","src":"2605:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"2623:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"2628:6:11"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2583:21:11"},"nodeType":"YulFunctionCall","src":"2583:52:11"},"nodeType":"YulExpressionStatement","src":"2583:52:11"},{"nodeType":"YulAssignment","src":"2644:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2655:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2682:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2660:21:11"},"nodeType":"YulFunctionCall","src":"2660:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2651:3:11"},"nodeType":"YulFunctionCall","src":"2651:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2644:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2405:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2412:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2420:3:11","type":""}],"src":"2332:364:11"},{"body":{"nodeType":"YulBlock","src":"2848:220:11","statements":[{"nodeType":"YulAssignment","src":"2858:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2924:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"2929:2:11","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2865:58:11"},"nodeType":"YulFunctionCall","src":"2865:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2858:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3030:3:11"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"2941:88:11"},"nodeType":"YulFunctionCall","src":"2941:93:11"},"nodeType":"YulExpressionStatement","src":"2941:93:11"},{"nodeType":"YulAssignment","src":"3043:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3054:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3059:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:11"},"nodeType":"YulFunctionCall","src":"3050:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3043:3:11"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2836:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2844:3:11","type":""}],"src":"2702:366:11"},{"body":{"nodeType":"YulBlock","src":"3220:220:11","statements":[{"nodeType":"YulAssignment","src":"3230:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3296:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3301:2:11","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3237:58:11"},"nodeType":"YulFunctionCall","src":"3237:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3230:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3402:3:11"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"3313:88:11"},"nodeType":"YulFunctionCall","src":"3313:93:11"},"nodeType":"YulExpressionStatement","src":"3313:93:11"},{"nodeType":"YulAssignment","src":"3415:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3426:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3431:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3422:3:11"},"nodeType":"YulFunctionCall","src":"3422:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3415:3:11"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3208:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3216:3:11","type":""}],"src":"3074:366:11"},{"body":{"nodeType":"YulBlock","src":"3592:220:11","statements":[{"nodeType":"YulAssignment","src":"3602:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3668:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3673:2:11","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3609:58:11"},"nodeType":"YulFunctionCall","src":"3609:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3602:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3774:3:11"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"3685:88:11"},"nodeType":"YulFunctionCall","src":"3685:93:11"},"nodeType":"YulExpressionStatement","src":"3685:93:11"},{"nodeType":"YulAssignment","src":"3787:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3798:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3803:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3794:3:11"},"nodeType":"YulFunctionCall","src":"3794:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3787:3:11"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3580:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3588:3:11","type":""}],"src":"3446:366:11"},{"body":{"nodeType":"YulBlock","src":"3964:220:11","statements":[{"nodeType":"YulAssignment","src":"3974:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4040:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4045:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3981:58:11"},"nodeType":"YulFunctionCall","src":"3981:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3974:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4146:3:11"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"4057:88:11"},"nodeType":"YulFunctionCall","src":"4057:93:11"},"nodeType":"YulExpressionStatement","src":"4057:93:11"},{"nodeType":"YulAssignment","src":"4159:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4170:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4175:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4166:3:11"},"nodeType":"YulFunctionCall","src":"4166:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4159:3:11"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3952:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3960:3:11","type":""}],"src":"3818:366:11"},{"body":{"nodeType":"YulBlock","src":"4336:220:11","statements":[{"nodeType":"YulAssignment","src":"4346:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4412:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4417:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4353:58:11"},"nodeType":"YulFunctionCall","src":"4353:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4346:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4518:3:11"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"4429:88:11"},"nodeType":"YulFunctionCall","src":"4429:93:11"},"nodeType":"YulExpressionStatement","src":"4429:93:11"},{"nodeType":"YulAssignment","src":"4531:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4542:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4547:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4538:3:11"},"nodeType":"YulFunctionCall","src":"4538:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4531:3:11"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4324:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4332:3:11","type":""}],"src":"4190:366:11"},{"body":{"nodeType":"YulBlock","src":"4708:220:11","statements":[{"nodeType":"YulAssignment","src":"4718:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4784:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4789:2:11","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4725:58:11"},"nodeType":"YulFunctionCall","src":"4725:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4718:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4890:3:11"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"4801:88:11"},"nodeType":"YulFunctionCall","src":"4801:93:11"},"nodeType":"YulExpressionStatement","src":"4801:93:11"},{"nodeType":"YulAssignment","src":"4903:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4914:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4919:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4910:3:11"},"nodeType":"YulFunctionCall","src":"4910:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4903:3:11"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4696:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4704:3:11","type":""}],"src":"4562:366:11"},{"body":{"nodeType":"YulBlock","src":"5080:220:11","statements":[{"nodeType":"YulAssignment","src":"5090:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5156:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5161:2:11","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5097:58:11"},"nodeType":"YulFunctionCall","src":"5097:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5090:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5262:3:11"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"5173:88:11"},"nodeType":"YulFunctionCall","src":"5173:93:11"},"nodeType":"YulExpressionStatement","src":"5173:93:11"},{"nodeType":"YulAssignment","src":"5275:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5286:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5291:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5282:3:11"},"nodeType":"YulFunctionCall","src":"5282:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5275:3:11"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5068:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5076:3:11","type":""}],"src":"4934:366:11"},{"body":{"nodeType":"YulBlock","src":"5371:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5388:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5411:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5393:17:11"},"nodeType":"YulFunctionCall","src":"5393:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5381:6:11"},"nodeType":"YulFunctionCall","src":"5381:37:11"},"nodeType":"YulExpressionStatement","src":"5381:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5359:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5366:3:11","type":""}],"src":"5306:118:11"},{"body":{"nodeType":"YulBlock","src":"5491:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5508:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5529:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5513:15:11"},"nodeType":"YulFunctionCall","src":"5513:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5501:6:11"},"nodeType":"YulFunctionCall","src":"5501:35:11"},"nodeType":"YulExpressionStatement","src":"5501:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5479:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5486:3:11","type":""}],"src":"5430:112:11"},{"body":{"nodeType":"YulBlock","src":"5640:118:11","statements":[{"nodeType":"YulAssignment","src":"5650:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5662:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5673:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5658:3:11"},"nodeType":"YulFunctionCall","src":"5658:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5650:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5724:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5737:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5748:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5733:3:11"},"nodeType":"YulFunctionCall","src":"5733:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5686:37:11"},"nodeType":"YulFunctionCall","src":"5686:65:11"},"nodeType":"YulExpressionStatement","src":"5686:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5612:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5624:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5635:4:11","type":""}],"src":"5548:210:11"},{"body":{"nodeType":"YulBlock","src":"5882:195:11","statements":[{"nodeType":"YulAssignment","src":"5892:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5904:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5915:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5900:3:11"},"nodeType":"YulFunctionCall","src":"5900:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5892:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5939:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5950:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5935:3:11"},"nodeType":"YulFunctionCall","src":"5935:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5958:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5964:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5954:3:11"},"nodeType":"YulFunctionCall","src":"5954:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5928:6:11"},"nodeType":"YulFunctionCall","src":"5928:47:11"},"nodeType":"YulExpressionStatement","src":"5928:47:11"},{"nodeType":"YulAssignment","src":"5984:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6056:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"6065:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5992:63:11"},"nodeType":"YulFunctionCall","src":"5992:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5984:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5854:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5866:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5877:4:11","type":""}],"src":"5764:313:11"},{"body":{"nodeType":"YulBlock","src":"6254:248:11","statements":[{"nodeType":"YulAssignment","src":"6264:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6276:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6287:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:11"},"nodeType":"YulFunctionCall","src":"6272:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6264:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6311:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6322:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6307:3:11"},"nodeType":"YulFunctionCall","src":"6307:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6330:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6336:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6326:3:11"},"nodeType":"YulFunctionCall","src":"6326:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6300:6:11"},"nodeType":"YulFunctionCall","src":"6300:47:11"},"nodeType":"YulExpressionStatement","src":"6300:47:11"},{"nodeType":"YulAssignment","src":"6356:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6490:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6364:124:11"},"nodeType":"YulFunctionCall","src":"6364:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6356:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6234:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6249:4:11","type":""}],"src":"6083:419:11"},{"body":{"nodeType":"YulBlock","src":"6679:248:11","statements":[{"nodeType":"YulAssignment","src":"6689:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6701:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6712:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6697:3:11"},"nodeType":"YulFunctionCall","src":"6697:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6689:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6736:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6747:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6732:3:11"},"nodeType":"YulFunctionCall","src":"6732:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6755:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6751:3:11"},"nodeType":"YulFunctionCall","src":"6751:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6725:6:11"},"nodeType":"YulFunctionCall","src":"6725:47:11"},"nodeType":"YulExpressionStatement","src":"6725:47:11"},{"nodeType":"YulAssignment","src":"6781:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6915:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6789:124:11"},"nodeType":"YulFunctionCall","src":"6789:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6781:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6659:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6674:4:11","type":""}],"src":"6508:419:11"},{"body":{"nodeType":"YulBlock","src":"7104:248:11","statements":[{"nodeType":"YulAssignment","src":"7114:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7126:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7137:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7122:3:11"},"nodeType":"YulFunctionCall","src":"7122:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7114:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7161:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7172:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7157:3:11"},"nodeType":"YulFunctionCall","src":"7157:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7180:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7186:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7176:3:11"},"nodeType":"YulFunctionCall","src":"7176:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7150:6:11"},"nodeType":"YulFunctionCall","src":"7150:47:11"},"nodeType":"YulExpressionStatement","src":"7150:47:11"},{"nodeType":"YulAssignment","src":"7206:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7340:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7214:124:11"},"nodeType":"YulFunctionCall","src":"7214:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7206:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7084:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7099:4:11","type":""}],"src":"6933:419:11"},{"body":{"nodeType":"YulBlock","src":"7529:248:11","statements":[{"nodeType":"YulAssignment","src":"7539:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7551:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7562:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7547:3:11"},"nodeType":"YulFunctionCall","src":"7547:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7539:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7586:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7597:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7582:3:11"},"nodeType":"YulFunctionCall","src":"7582:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7605:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7611:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7601:3:11"},"nodeType":"YulFunctionCall","src":"7601:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7575:6:11"},"nodeType":"YulFunctionCall","src":"7575:47:11"},"nodeType":"YulExpressionStatement","src":"7575:47:11"},{"nodeType":"YulAssignment","src":"7631:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7765:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7639:124:11"},"nodeType":"YulFunctionCall","src":"7639:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7631:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7509:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7524:4:11","type":""}],"src":"7358:419:11"},{"body":{"nodeType":"YulBlock","src":"7954:248:11","statements":[{"nodeType":"YulAssignment","src":"7964:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7976:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7987:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7972:3:11"},"nodeType":"YulFunctionCall","src":"7972:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7964:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8011:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8022:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8007:3:11"},"nodeType":"YulFunctionCall","src":"8007:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8030:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8036:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8026:3:11"},"nodeType":"YulFunctionCall","src":"8026:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8000:6:11"},"nodeType":"YulFunctionCall","src":"8000:47:11"},"nodeType":"YulExpressionStatement","src":"8000:47:11"},{"nodeType":"YulAssignment","src":"8056:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8190:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8064:124:11"},"nodeType":"YulFunctionCall","src":"8064:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8056:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7934:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7949:4:11","type":""}],"src":"7783:419:11"},{"body":{"nodeType":"YulBlock","src":"8379:248:11","statements":[{"nodeType":"YulAssignment","src":"8389:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8401:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8412:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8397:3:11"},"nodeType":"YulFunctionCall","src":"8397:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8389:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8436:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8447:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8432:3:11"},"nodeType":"YulFunctionCall","src":"8432:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8455:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8461:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8451:3:11"},"nodeType":"YulFunctionCall","src":"8451:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8425:6:11"},"nodeType":"YulFunctionCall","src":"8425:47:11"},"nodeType":"YulExpressionStatement","src":"8425:47:11"},{"nodeType":"YulAssignment","src":"8481:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8615:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8489:124:11"},"nodeType":"YulFunctionCall","src":"8489:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8481:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8359:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8374:4:11","type":""}],"src":"8208:419:11"},{"body":{"nodeType":"YulBlock","src":"8804:248:11","statements":[{"nodeType":"YulAssignment","src":"8814:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8826:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8837:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8822:3:11"},"nodeType":"YulFunctionCall","src":"8822:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8814:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8861:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8872:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8857:3:11"},"nodeType":"YulFunctionCall","src":"8857:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8880:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8886:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8876:3:11"},"nodeType":"YulFunctionCall","src":"8876:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8850:6:11"},"nodeType":"YulFunctionCall","src":"8850:47:11"},"nodeType":"YulExpressionStatement","src":"8850:47:11"},{"nodeType":"YulAssignment","src":"8906:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9040:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8914:124:11"},"nodeType":"YulFunctionCall","src":"8914:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8906:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8784:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8799:4:11","type":""}],"src":"8633:419:11"},{"body":{"nodeType":"YulBlock","src":"9156:124:11","statements":[{"nodeType":"YulAssignment","src":"9166:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9178:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9189:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9174:3:11"},"nodeType":"YulFunctionCall","src":"9174:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9166:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9246:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9259:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9270:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9255:3:11"},"nodeType":"YulFunctionCall","src":"9255:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9202:43:11"},"nodeType":"YulFunctionCall","src":"9202:71:11"},"nodeType":"YulExpressionStatement","src":"9202:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9128:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9140:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9151:4:11","type":""}],"src":"9058:222:11"},{"body":{"nodeType":"YulBlock","src":"9380:120:11","statements":[{"nodeType":"YulAssignment","src":"9390:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9402:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9413:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9398:3:11"},"nodeType":"YulFunctionCall","src":"9398:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9390:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9466:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9479:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9490:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9475:3:11"},"nodeType":"YulFunctionCall","src":"9475:17:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9426:39:11"},"nodeType":"YulFunctionCall","src":"9426:67:11"},"nodeType":"YulExpressionStatement","src":"9426:67:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9352:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9364:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9375:4:11","type":""}],"src":"9286:214:11"},{"body":{"nodeType":"YulBlock","src":"9546:35:11","statements":[{"nodeType":"YulAssignment","src":"9556:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9572:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9566:5:11"},"nodeType":"YulFunctionCall","src":"9566:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9556:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9539:6:11","type":""}],"src":"9506:75:11"},{"body":{"nodeType":"YulBlock","src":"9646:40:11","statements":[{"nodeType":"YulAssignment","src":"9657:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9673:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9667:5:11"},"nodeType":"YulFunctionCall","src":"9667:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9657:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9629:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9639:6:11","type":""}],"src":"9587:99:11"},{"body":{"nodeType":"YulBlock","src":"9788:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9805:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"9810:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9798:6:11"},"nodeType":"YulFunctionCall","src":"9798:19:11"},"nodeType":"YulExpressionStatement","src":"9798:19:11"},{"nodeType":"YulAssignment","src":"9826:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9845:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9850:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9841:3:11"},"nodeType":"YulFunctionCall","src":"9841:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9826:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9760:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"9765:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9776:11:11","type":""}],"src":"9692:169:11"},{"body":{"nodeType":"YulBlock","src":"9911:261:11","statements":[{"nodeType":"YulAssignment","src":"9921:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9944:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9926:17:11"},"nodeType":"YulFunctionCall","src":"9926:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9921:1:11"}]},{"nodeType":"YulAssignment","src":"9955:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9978:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9960:17:11"},"nodeType":"YulFunctionCall","src":"9960:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9955:1:11"}]},{"body":{"nodeType":"YulBlock","src":"10118:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10120:16:11"},"nodeType":"YulFunctionCall","src":"10120:18:11"},"nodeType":"YulExpressionStatement","src":"10120:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10039:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10046:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"10114:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10042:3:11"},"nodeType":"YulFunctionCall","src":"10042:74:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10036:2:11"},"nodeType":"YulFunctionCall","src":"10036:81:11"},"nodeType":"YulIf","src":"10033:107:11"},{"nodeType":"YulAssignment","src":"10150:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10161:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"10164:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10157:3:11"},"nodeType":"YulFunctionCall","src":"10157:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10150:3:11"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9898:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"9901:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9907:3:11","type":""}],"src":"9867:305:11"},{"body":{"nodeType":"YulBlock","src":"10223:51:11","statements":[{"nodeType":"YulAssignment","src":"10233:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10262:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10244:17:11"},"nodeType":"YulFunctionCall","src":"10244:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10233:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10205:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10215:7:11","type":""}],"src":"10178:96:11"},{"body":{"nodeType":"YulBlock","src":"10322:48:11","statements":[{"nodeType":"YulAssignment","src":"10332:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10357:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10350:6:11"},"nodeType":"YulFunctionCall","src":"10350:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10343:6:11"},"nodeType":"YulFunctionCall","src":"10343:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10332:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10304:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10314:7:11","type":""}],"src":"10280:90:11"},{"body":{"nodeType":"YulBlock","src":"10421:81:11","statements":[{"nodeType":"YulAssignment","src":"10431:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10446:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10453:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10442:3:11"},"nodeType":"YulFunctionCall","src":"10442:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10431:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10403:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10413:7:11","type":""}],"src":"10376:126:11"},{"body":{"nodeType":"YulBlock","src":"10553:32:11","statements":[{"nodeType":"YulAssignment","src":"10563:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"10574:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10563:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10535:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10545:7:11","type":""}],"src":"10508:77:11"},{"body":{"nodeType":"YulBlock","src":"10634:43:11","statements":[{"nodeType":"YulAssignment","src":"10644:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10659:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10666:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10655:3:11"},"nodeType":"YulFunctionCall","src":"10655:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10644:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10616:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10626:7:11","type":""}],"src":"10591:86:11"},{"body":{"nodeType":"YulBlock","src":"10732:258:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10742:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10751:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10746:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"10811:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10836:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"10841:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10832:3:11"},"nodeType":"YulFunctionCall","src":"10832:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10855:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"10860:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10851:3:11"},"nodeType":"YulFunctionCall","src":"10851:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10845:5:11"},"nodeType":"YulFunctionCall","src":"10845:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10825:6:11"},"nodeType":"YulFunctionCall","src":"10825:39:11"},"nodeType":"YulExpressionStatement","src":"10825:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10772:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"10775:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10769:2:11"},"nodeType":"YulFunctionCall","src":"10769:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10783:19:11","statements":[{"nodeType":"YulAssignment","src":"10785:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10794:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"10797:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10790:3:11"},"nodeType":"YulFunctionCall","src":"10790:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10785:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"10765:3:11","statements":[]},"src":"10761:113:11"},{"body":{"nodeType":"YulBlock","src":"10908:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10958:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"10963:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10954:3:11"},"nodeType":"YulFunctionCall","src":"10954:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"10972:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10947:6:11"},"nodeType":"YulFunctionCall","src":"10947:27:11"},"nodeType":"YulExpressionStatement","src":"10947:27:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10889:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"10892:6:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10886:2:11"},"nodeType":"YulFunctionCall","src":"10886:13:11"},"nodeType":"YulIf","src":"10883:101:11"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10714:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10719:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"10724:6:11","type":""}],"src":"10683:307:11"},{"body":{"nodeType":"YulBlock","src":"11047:269:11","statements":[{"nodeType":"YulAssignment","src":"11057:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11071:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"11077:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11067:3:11"},"nodeType":"YulFunctionCall","src":"11067:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11057:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"11088:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11118:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"11124:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11114:3:11"},"nodeType":"YulFunctionCall","src":"11114:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11092:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11165:51:11","statements":[{"nodeType":"YulAssignment","src":"11179:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11193:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11201:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11189:3:11"},"nodeType":"YulFunctionCall","src":"11189:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11179:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11145:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11138:6:11"},"nodeType":"YulFunctionCall","src":"11138:26:11"},"nodeType":"YulIf","src":"11135:81:11"},{"body":{"nodeType":"YulBlock","src":"11268:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11282:16:11"},"nodeType":"YulFunctionCall","src":"11282:18:11"},"nodeType":"YulExpressionStatement","src":"11282:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11232:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11255:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11263:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11252:2:11"},"nodeType":"YulFunctionCall","src":"11252:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11229:2:11"},"nodeType":"YulFunctionCall","src":"11229:38:11"},"nodeType":"YulIf","src":"11226:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11031:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11040:6:11","type":""}],"src":"10996:320:11"},{"body":{"nodeType":"YulBlock","src":"11350:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11367:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11370:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11360:6:11"},"nodeType":"YulFunctionCall","src":"11360:88:11"},"nodeType":"YulExpressionStatement","src":"11360:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11464:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11467:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11457:6:11"},"nodeType":"YulFunctionCall","src":"11457:15:11"},"nodeType":"YulExpressionStatement","src":"11457:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11488:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11491:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11481:6:11"},"nodeType":"YulFunctionCall","src":"11481:15:11"},"nodeType":"YulExpressionStatement","src":"11481:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11322:180:11"},{"body":{"nodeType":"YulBlock","src":"11536:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11553:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11556:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11546:6:11"},"nodeType":"YulFunctionCall","src":"11546:88:11"},"nodeType":"YulExpressionStatement","src":"11546:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11650:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11653:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11643:6:11"},"nodeType":"YulFunctionCall","src":"11643:15:11"},"nodeType":"YulExpressionStatement","src":"11643:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11674:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11677:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11667:6:11"},"nodeType":"YulFunctionCall","src":"11667:15:11"},"nodeType":"YulExpressionStatement","src":"11667:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11508:180:11"},{"body":{"nodeType":"YulBlock","src":"11783:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11800:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11803:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11793:6:11"},"nodeType":"YulFunctionCall","src":"11793:12:11"},"nodeType":"YulExpressionStatement","src":"11793:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"11694:117:11"},{"body":{"nodeType":"YulBlock","src":"11906:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11923:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11926:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11916:6:11"},"nodeType":"YulFunctionCall","src":"11916:12:11"},"nodeType":"YulExpressionStatement","src":"11916:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"11817:117:11"},{"body":{"nodeType":"YulBlock","src":"11988:54:11","statements":[{"nodeType":"YulAssignment","src":"11998:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12016:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12023:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12012:3:11"},"nodeType":"YulFunctionCall","src":"12012:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12032:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12028:3:11"},"nodeType":"YulFunctionCall","src":"12028:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12008:3:11"},"nodeType":"YulFunctionCall","src":"12008:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11998:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11971:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11981:6:11","type":""}],"src":"11940:102:11"},{"body":{"nodeType":"YulBlock","src":"12154:116:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12176:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12184:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12172:3:11"},"nodeType":"YulFunctionCall","src":"12172:14:11"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"12188:34:11","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12165:6:11"},"nodeType":"YulFunctionCall","src":"12165:58:11"},"nodeType":"YulExpressionStatement","src":"12165:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12244:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12252:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12240:3:11"},"nodeType":"YulFunctionCall","src":"12240:15:11"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12257:5:11","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12233:6:11"},"nodeType":"YulFunctionCall","src":"12233:30:11"},"nodeType":"YulExpressionStatement","src":"12233:30:11"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12146:6:11","type":""}],"src":"12048:222:11"},{"body":{"nodeType":"YulBlock","src":"12382:115:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12404:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12412:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12400:3:11"},"nodeType":"YulFunctionCall","src":"12400:14:11"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"12416:34:11","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12393:6:11"},"nodeType":"YulFunctionCall","src":"12393:58:11"},"nodeType":"YulExpressionStatement","src":"12393:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12472:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12480:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12468:3:11"},"nodeType":"YulFunctionCall","src":"12468:15:11"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"12485:4:11","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12461:6:11"},"nodeType":"YulFunctionCall","src":"12461:29:11"},"nodeType":"YulExpressionStatement","src":"12461:29:11"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12374:6:11","type":""}],"src":"12276:221:11"},{"body":{"nodeType":"YulBlock","src":"12609:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12631:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12639:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12627:3:11"},"nodeType":"YulFunctionCall","src":"12627:14:11"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"12643:31:11","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12620:6:11"},"nodeType":"YulFunctionCall","src":"12620:55:11"},"nodeType":"YulExpressionStatement","src":"12620:55:11"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12601:6:11","type":""}],"src":"12503:179:11"},{"body":{"nodeType":"YulBlock","src":"12794:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12816:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12824:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12812:3:11"},"nodeType":"YulFunctionCall","src":"12812:14:11"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12828:34:11","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12805:6:11"},"nodeType":"YulFunctionCall","src":"12805:58:11"},"nodeType":"YulExpressionStatement","src":"12805:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12884:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12892:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12880:3:11"},"nodeType":"YulFunctionCall","src":"12880:15:11"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12897:8:11","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12873:6:11"},"nodeType":"YulFunctionCall","src":"12873:33:11"},"nodeType":"YulExpressionStatement","src":"12873:33:11"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12786:6:11","type":""}],"src":"12688:225:11"},{"body":{"nodeType":"YulBlock","src":"13025:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13047:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13055:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13043:3:11"},"nodeType":"YulFunctionCall","src":"13043:14:11"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"13059:34:11","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13036:6:11"},"nodeType":"YulFunctionCall","src":"13036:58:11"},"nodeType":"YulExpressionStatement","src":"13036:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13115:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13123:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13111:3:11"},"nodeType":"YulFunctionCall","src":"13111:15:11"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"13128:7:11","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13104:6:11"},"nodeType":"YulFunctionCall","src":"13104:32:11"},"nodeType":"YulExpressionStatement","src":"13104:32:11"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13017:6:11","type":""}],"src":"12919:224:11"},{"body":{"nodeType":"YulBlock","src":"13255:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13277:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13285:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13273:3:11"},"nodeType":"YulFunctionCall","src":"13273:14:11"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"13289:34:11","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13266:6:11"},"nodeType":"YulFunctionCall","src":"13266:58:11"},"nodeType":"YulExpressionStatement","src":"13266:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13345:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13353:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13341:3:11"},"nodeType":"YulFunctionCall","src":"13341:15:11"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"13358:6:11","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13334:6:11"},"nodeType":"YulFunctionCall","src":"13334:31:11"},"nodeType":"YulExpressionStatement","src":"13334:31:11"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13247:6:11","type":""}],"src":"13149:223:11"},{"body":{"nodeType":"YulBlock","src":"13484:118:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13506:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13514:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13502:3:11"},"nodeType":"YulFunctionCall","src":"13502:14:11"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"13518:34:11","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13495:6:11"},"nodeType":"YulFunctionCall","src":"13495:58:11"},"nodeType":"YulExpressionStatement","src":"13495:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13574:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13582:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13570:3:11"},"nodeType":"YulFunctionCall","src":"13570:15:11"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"13587:7:11","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13563:6:11"},"nodeType":"YulFunctionCall","src":"13563:32:11"},"nodeType":"YulExpressionStatement","src":"13563:32:11"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13476:6:11","type":""}],"src":"13378:224:11"},{"body":{"nodeType":"YulBlock","src":"13651:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"13708:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13717:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13720:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13710:6:11"},"nodeType":"YulFunctionCall","src":"13710:12:11"},"nodeType":"YulExpressionStatement","src":"13710:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13674:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13699:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13681:17:11"},"nodeType":"YulFunctionCall","src":"13681:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13671:2:11"},"nodeType":"YulFunctionCall","src":"13671:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13664:6:11"},"nodeType":"YulFunctionCall","src":"13664:43:11"},"nodeType":"YulIf","src":"13661:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13644:5:11","type":""}],"src":"13608:122:11"},{"body":{"nodeType":"YulBlock","src":"13779:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"13836:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13845:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13848:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13838:6:11"},"nodeType":"YulFunctionCall","src":"13838:12:11"},"nodeType":"YulExpressionStatement","src":"13838:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13802:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13827:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13809:17:11"},"nodeType":"YulFunctionCall","src":"13809:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13799:2:11"},"nodeType":"YulFunctionCall","src":"13799:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13792:6:11"},"nodeType":"YulFunctionCall","src":"13792:43:11"},"nodeType":"YulIf","src":"13789:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13772:5:11","type":""}],"src":"13736:122:11"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d20565b60405180910390f35b6100e660048036038101906100e19190610b6a565b610308565b6040516100f39190610d05565b60405180910390f35b61010461032b565b6040516101119190610e22565b60405180910390f35b610134600480360381019061012f9190610b17565b610335565b6040516101419190610d05565b60405180910390f35b610152610364565b60405161015f9190610e3d565b60405180910390f35b610182600480360381019061017d9190610b6a565b61036d565b60405161018f9190610d05565b60405180910390f35b6101b260048036038101906101ad9190610aaa565b6103a4565b6040516101bf9190610e22565b60405180910390f35b6101d06103ec565b6040516101dd9190610d20565b60405180910390f35b61020060048036038101906101fb9190610b6a565b61047e565b60405161020d9190610d05565b60405180910390f35b610230600480360381019061022b9190610b6a565b6104f5565b60405161023d9190610d05565b60405180910390f35b610260600480360381019061025b9190610ad7565b610518565b60405161026d9190610e22565b60405180910390f35b60606003805461028590610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f52565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e74565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f52565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e02565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610de2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d62565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e22565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d82565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d42565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610da2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610e22565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081359050610a8f816111fb565b92915050565b600081359050610aa481611212565b92915050565b600060208284031215610ac057610abf610fe2565b5b6000610ace84828501610a80565b91505092915050565b60008060408385031215610aee57610aed610fe2565b5b6000610afc85828601610a80565b9250506020610b0d85828601610a80565b9150509250929050565b600080600060608486031215610b3057610b2f610fe2565b5b6000610b3e86828701610a80565b9350506020610b4f86828701610a80565b9250506040610b6086828701610a95565b9150509250925092565b60008060408385031215610b8157610b80610fe2565b5b6000610b8f85828601610a80565b9250506020610ba085828601610a95565b9150509250929050565b610bb381610edc565b82525050565b6000610bc482610e58565b610bce8185610e63565b9350610bde818560208601610f1f565b610be781610fe7565b840191505092915050565b6000610bff602383610e63565b9150610c0a82610ff8565b604082019050919050565b6000610c22602283610e63565b9150610c2d82611047565b604082019050919050565b6000610c45601d83610e63565b9150610c5082611096565b602082019050919050565b6000610c68602683610e63565b9150610c73826110bf565b604082019050919050565b6000610c8b602583610e63565b9150610c968261110e565b604082019050919050565b6000610cae602483610e63565b9150610cb98261115d565b604082019050919050565b6000610cd1602583610e63565b9150610cdc826111ac565b604082019050919050565b610cf081610f08565b82525050565b610cff81610f12565b82525050565b6000602082019050610d1a6000830184610baa565b92915050565b60006020820190508181036000830152610d3a8184610bb9565b905092915050565b60006020820190508181036000830152610d5b81610bf2565b9050919050565b60006020820190508181036000830152610d7b81610c15565b9050919050565b60006020820190508181036000830152610d9b81610c38565b9050919050565b60006020820190508181036000830152610dbb81610c5b565b9050919050565b60006020820190508181036000830152610ddb81610c7e565b9050919050565b60006020820190508181036000830152610dfb81610ca1565b9050919050565b60006020820190508181036000830152610e1b81610cc4565b9050919050565b6000602082019050610e376000830184610ce7565b92915050565b6000602082019050610e526000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7f82610f08565b9150610e8a83610f08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebf57610ebe610f84565b5b828201905092915050565b6000610ed582610ee8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f3d578082015181840152602081019050610f22565b83811115610f4c576000848401525b50505050565b60006002820490506001821680610f6a57607f821691505b60208210811415610f7e57610f7d610fb3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61120481610eca565b811461120f57600080fd5b50565b61121b81610f08565b811461122657600080fd5b5056fea26469706673582212202511d9715b3019bfbadbaaf47c6699be599d5b03933ba2e30cbc5c325eae4c9164736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA4 DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0D DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB3E DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4F DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB60 DUP7 DUP3 DUP8 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xEDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 DUP3 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0xBCE DUP2 DUP6 PUSH2 0xE63 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xFE7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF PUSH1 0x23 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0A DUP3 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH1 0x22 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH1 0x1D DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC50 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH1 0x26 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP3 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC96 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE PUSH1 0x24 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP3 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD5B DUP2 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7B DUP2 PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDDB DUP2 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFB DUP2 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0xF08 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF22 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xECA JUMP JUMPDEST DUP2 EQ PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 GT 0xD9 PUSH18 0x5B3019BFBADBAAF47C6699BE599D5B03933B LOG2 0xE3 0xC 0xBC 0x5C ORIGIN 0x5E 0xAE 0x4C SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"1487:11848:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4575:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3328:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5356:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3177:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6037:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3492:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2451:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6780:483;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3827:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4096:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2240:98;2294:13;2326:5;2319:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:98;:::o;4575:219::-;4680:4;4696:13;4712:12;:10;:12::i;:::-;4696:28;;4734:32;4743:5;4750:7;4759:6;4734:8;:32::i;:::-;4783:4;4776:11;;;4575:219;;;;:::o;3328:106::-;3389:7;3415:12;;3408:19;;3328:106;:::o;5356:286::-;5483:4;5499:15;5517:12;:10;:12::i;:::-;5499:30;;5539:38;5555:4;5561:7;5570:6;5539:15;:38::i;:::-;5587:27;5597:4;5603:2;5607:6;5587:9;:27::i;:::-;5631:4;5624:11;;;5356:286;;;;;:::o;3177:91::-;3235:5;3259:2;3252:9;;3177:91;:::o;6037:256::-;6147:4;6163:13;6179:12;:10;:12::i;:::-;6163:28;;6201:64;6210:5;6217:7;6254:10;6226:25;6236:5;6243:7;6226:9;:25::i;:::-;:38;;;;:::i;:::-;6201:8;:64::i;:::-;6282:4;6275:11;;;6037:256;;;;:::o;3492:139::-;3580:7;3606:9;:18;3616:7;3606:18;;;;;;;;;;;;;;;;3599:25;;3492:139;;;:::o;2451:102::-;2507:13;2539:7;2532:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2451:102;:::o;6780:483::-;6895:4;6911:13;6927:12;:10;:12::i;:::-;6911:28;;6949:24;6976:25;6986:5;6993:7;6976:9;:25::i;:::-;6949:52;;7052:15;7032:16;:35;;7011:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;7164:60;7173:5;7180:7;7208:15;7189:16;:34;7164:8;:60::i;:::-;7252:4;7245:11;;;;6780:483;;;;:::o;3827:211::-;3928:4;3944:13;3960:12;:10;:12::i;:::-;3944:28;;3982;3992:5;3999:2;4003:6;3982:9;:28::i;:::-;4027:4;4020:11;;;3827:211;;;;:::o;4096:171::-;4207:7;4233:11;:18;4245:5;4233:18;;;;;;;;;;;;;;;:27;4252:7;4233:27;;;;;;;;;;;;;;;;4226:34;;4096:171;;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;10782:370:6:-;10930:1;10913:19;;:5;:19;;;;10905:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11010:1;10991:21;;:7;:21;;;;10983:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11092:6;11062:11;:18;11074:5;11062:18;;;;;;;;;;;;;;;:27;11081:7;11062:27;;;;;;;;;;;;;;;:36;;;;11129:7;11113:32;;11122:5;11113:32;;;11138:6;11113:32;;;;;;:::i;:::-;;;;;;;;10782:370;;;:::o;11433:487::-;11563:24;11590:25;11600:5;11607:7;11590:9;:25::i;:::-;11563:52;;11649:17;11629:16;:37;11625:289;;11727:6;11707:16;:26;;11682:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;11838:51;11847:5;11854:7;11882:6;11863:16;:25;11838:8;:51::i;:::-;11625:289;11553:367;11433:487;;;:::o;7717:852::-;7859:1;7843:18;;:4;:18;;;;7835:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7935:1;7921:16;;:2;:16;;;;7913:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7988:38;8009:4;8015:2;8019:6;7988:20;:38::i;:::-;8037:19;8059:9;:15;8069:4;8059:15;;;;;;;;;;;;;;;;8037:37;;8120:6;8105:11;:21;;8084:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;8256:6;8242:11;:20;8224:9;:15;8234:4;8224:15;;;;;;;;;;;;;;;:38;;;;8456:6;8439:9;:13;8449:2;8439:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8503:2;8488:26;;8497:4;8488:26;;;8507:6;8488:26;;;;;;:::i;:::-;;;;;;;;8525:37;8545:4;8551:2;8555:6;8525:19;:37::i;:::-;7825:744;7717:852;;;:::o;12504:121::-;;;;:::o;13213:120::-;;;;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3074:366;;;:::o;3446:::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3446:366;;;:::o;3818:::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3818:366;;;:::o;4190:::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4190:366;;;:::o;4562:::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4562:366;;;:::o;4934:::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;4934:366;;;:::o;5306:118::-;5393:24;5411:5;5393:24;:::i;:::-;5388:3;5381:37;5306:118;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5430:112;;:::o;5548:210::-;5635:4;5673:2;5662:9;5658:18;5650:26;;5686:65;5748:1;5737:9;5733:17;5724:6;5686:65;:::i;:::-;5548:210;;;;:::o;5764:313::-;5877:4;5915:2;5904:9;5900:18;5892:26;;5964:9;5958:4;5954:20;5950:1;5939:9;5935:17;5928:47;5992:78;6065:4;6056:6;5992:78;:::i;:::-;5984:86;;5764:313;;;;:::o;6083:419::-;6249:4;6287:2;6276:9;6272:18;6264:26;;6336:9;6330:4;6326:20;6322:1;6311:9;6307:17;6300:47;6364:131;6490:4;6364:131;:::i;:::-;6356:139;;6083:419;;;:::o;6508:::-;6674:4;6712:2;6701:9;6697:18;6689:26;;6761:9;6755:4;6751:20;6747:1;6736:9;6732:17;6725:47;6789:131;6915:4;6789:131;:::i;:::-;6781:139;;6508:419;;;:::o;6933:::-;7099:4;7137:2;7126:9;7122:18;7114:26;;7186:9;7180:4;7176:20;7172:1;7161:9;7157:17;7150:47;7214:131;7340:4;7214:131;:::i;:::-;7206:139;;6933:419;;;:::o;7358:::-;7524:4;7562:2;7551:9;7547:18;7539:26;;7611:9;7605:4;7601:20;7597:1;7586:9;7582:17;7575:47;7639:131;7765:4;7639:131;:::i;:::-;7631:139;;7358:419;;;:::o;7783:::-;7949:4;7987:2;7976:9;7972:18;7964:26;;8036:9;8030:4;8026:20;8022:1;8011:9;8007:17;8000:47;8064:131;8190:4;8064:131;:::i;:::-;8056:139;;7783:419;;;:::o;8208:::-;8374:4;8412:2;8401:9;8397:18;8389:26;;8461:9;8455:4;8451:20;8447:1;8436:9;8432:17;8425:47;8489:131;8615:4;8489:131;:::i;:::-;8481:139;;8208:419;;;:::o;8633:::-;8799:4;8837:2;8826:9;8822:18;8814:26;;8886:9;8880:4;8876:20;8872:1;8861:9;8857:17;8850:47;8914:131;9040:4;8914:131;:::i;:::-;8906:139;;8633:419;;;:::o;9058:222::-;9151:4;9189:2;9178:9;9174:18;9166:26;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9058:222;;;;:::o;9286:214::-;9375:4;9413:2;9402:9;9398:18;9390:26;;9426:67;9490:1;9479:9;9475:17;9466:6;9426:67;:::i;:::-;9286:214;;;;:::o;9587:99::-;9639:6;9673:5;9667:12;9657:22;;9587:99;;;:::o;9692:169::-;9776:11;9810:6;9805:3;9798:19;9850:4;9845:3;9841:14;9826:29;;9692:169;;;;:::o;9867:305::-;9907:3;9926:20;9944:1;9926:20;:::i;:::-;9921:25;;9960:20;9978:1;9960:20;:::i;:::-;9955:25;;10114:1;10046:66;10042:74;10039:1;10036:81;10033:107;;;10120:18;;:::i;:::-;10033:107;10164:1;10161;10157:9;10150:16;;9867:305;;;;:::o;10178:96::-;10215:7;10244:24;10262:5;10244:24;:::i;:::-;10233:35;;10178:96;;;:::o;10280:90::-;10314:7;10357:5;10350:13;10343:21;10332:32;;10280:90;;;:::o;10376:126::-;10413:7;10453:42;10446:5;10442:54;10431:65;;10376:126;;;:::o;10508:77::-;10545:7;10574:5;10563:16;;10508:77;;;:::o;10591:86::-;10626:7;10666:4;10659:5;10655:16;10644:27;;10591:86;;;:::o;10683:307::-;10751:1;10761:113;10775:6;10772:1;10769:13;10761:113;;;10860:1;10855:3;10851:11;10845:18;10841:1;10836:3;10832:11;10825:39;10797:2;10794:1;10790:10;10785:15;;10761:113;;;10892:6;10889:1;10886:13;10883:101;;;10972:1;10963:6;10958:3;10954:16;10947:27;10883:101;10732:258;10683:307;;;:::o;10996:320::-;11040:6;11077:1;11071:4;11067:12;11057:22;;11124:1;11118:4;11114:12;11145:18;11135:81;;11201:4;11193:6;11189:17;11179:27;;11135:81;11263:2;11255:6;11252:14;11232:18;11229:38;11226:84;;;11282:18;;:::i;:::-;11226:84;11047:269;10996:320;;;:::o;11322:180::-;11370:77;11367:1;11360:88;11467:4;11464:1;11457:15;11491:4;11488:1;11481:15;11508:180;11556:77;11553:1;11546:88;11653:4;11650:1;11643:15;11677:4;11674:1;11667:15;11817:117;11926:1;11923;11916:12;11940:102;11981:6;12032:2;12028:7;12023:2;12016:5;12012:14;12008:28;11998:38;;11940:102;;;:::o;12048:222::-;12188:34;12184:1;12176:6;12172:14;12165:58;12257:5;12252:2;12244:6;12240:15;12233:30;12048:222;:::o;12276:221::-;12416:34;12412:1;12404:6;12400:14;12393:58;12485:4;12480:2;12472:6;12468:15;12461:29;12276:221;:::o;12503:179::-;12643:31;12639:1;12631:6;12627:14;12620:55;12503:179;:::o;12688:225::-;12828:34;12824:1;12816:6;12812:14;12805:58;12897:8;12892:2;12884:6;12880:15;12873:33;12688:225;:::o;12919:224::-;13059:34;13055:1;13047:6;13043:14;13036:58;13128:7;13123:2;13115:6;13111:15;13104:32;12919:224;:::o;13149:223::-;13289:34;13285:1;13277:6;13273:14;13266:58;13358:6;13353:2;13345:6;13341:15;13334:31;13149:223;:::o;13378:224::-;13518:34;13514:1;13506:6;13502:14;13495:58;13587:7;13582:2;13574:6;13570:15;13563:32;13378:224;:::o;13608:122::-;13681:24;13699:5;13681:24;:::i;:::-;13674:5;13671:35;13661:63;;13720:1;13717;13710:12;13661:63;13608:122;:::o;13736:::-;13809:24;13827:5;13809:24;:::i;:::-;13802:5;13799:35;13789:63;;13848:1;13845;13838:12;13789:63;13736:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"940600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(\\n        address account\\n    ) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(\\n        address spender,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(\\n            currentAllowance >= subtractedValue,\\n            \\\"ERC20: decreased allowance below zero\\\"\\n        );\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(\\n            fromBalance >= amount,\\n            \\\"ERC20: transfer amount exceeds balance\\\"\\n        );\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(\\n                currentAllowance >= amount,\\n                \\\"ERC20: insufficient allowance\\\"\\n            );\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa5e93048def7546de7ce959ca5f138cde21822a7645fb6e03407ee0f5f92ba5d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":611,"contract":"contracts/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":617,"contract":"contracts/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":619,"contract":"contracts/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":621,"contract":"contracts/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":623,"contract":"contracts/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Exchange.sol":{"Exchange":{"abi":[{"inputs":[{"internalType":"address","name":"_wallet","type":"address"},{"internalType":"address","name":"_fees","type":"address"},{"internalType":"address","name":"_priceChecker","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"waiveFees","type":"bool"}],"name":"Cancel","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"tokenA","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenB","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"indexed":false,"internalType":"bool","name":"waiveFees","type":"bool"}],"name":"Order","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"indexed":false,"internalType":"struct Exchange._Order","name":"remainingOrder","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"amountBought","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillBuyRate","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"fillBuyOrder","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"indexed":false,"internalType":"struct Exchange._Order","name":"remainingOrder","type":"tuple"},{"indexed":false,"internalType":"uint256","name":"amountSold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillSellRate","type":"uint256"},{"indexed":false,"internalType":"bool","name":"feesWaived","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feesPaid","type":"uint256"}],"name":"fillSellOrder","type":"event"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"addToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"bool","name":"_waiveFees","type":"bool"}],"name":"createLimitBuyOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"uint256","name":"_amountA","type":"uint256"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"_amountB","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"bool","name":"_waiveFees","type":"bool"}],"name":"createLimitSellOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getFilledOrder","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountFilled","type":"uint256"},{"internalType":"uint256","name":"fillRate","type":"uint256"},{"internalType":"uint256","name":"originalRate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"feesWaived","type":"bool"},{"internalType":"uint256","name":"feesPaid","type":"uint256"}],"internalType":"struct Exchange._filledOrder","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"}],"name":"getFilledOrderLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"}],"name":"getOrder","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"internalType":"struct Exchange._Order","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"},{"internalType":"uint256","name":"side","type":"uint256"},{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"getOrderFromArray","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"internalType":"struct Exchange._Order","name":"","type":"tuple"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"name":"getOrderLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getTokenInfo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"isVerifiedToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"name":"orderExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_filledOrders","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountFilled","type":"uint256"},{"internalType":"uint256","name":"fillRate","type":"uint256"},{"internalType":"uint256","name":"originalRate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"feesWaived","type":"bool"},{"internalType":"uint256","name":"feesPaid","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_orderBook","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum Exchange.Side","name":"side","type":"uint8"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"originalAmountA","type":"uint256"},{"internalType":"uint256","name":"originalAmountB","type":"uint256"},{"internalType":"bool","name":"waiveFees","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_orderId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_PriceCheckeraddress","type":"address"}],"name":"setPriceCheckerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tradingFees","type":"address"}],"name":"setTradingFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_Walletaddress","type":"address"}],"name":"setWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenList","outputs":[{"internalType":"address","name":"add","type":"address"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1411":{"entryPoint":null,"id":1411,"parameterSlots":3,"returnSlots":0},"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_273":{"entryPoint":401,"id":273,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":409,"id":157,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":628,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":720,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":740,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":772,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":777,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1511:11","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:11","statements":[{"nodeType":"YulAssignment","src":"80:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:11"},"nodeType":"YulFunctionCall","src":"89:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:11"},"nodeType":"YulFunctionCall","src":"111:33:11"},"nodeType":"YulExpressionStatement","src":"111:33:11"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:11","type":""}],"src":"7:143:11"},{"body":{"nodeType":"YulBlock","src":"267:552:11","statements":[{"body":{"nodeType":"YulBlock","src":"313:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"315:77:11"},"nodeType":"YulFunctionCall","src":"315:79:11"},"nodeType":"YulExpressionStatement","src":"315:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"288:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"297:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"284:3:11"},"nodeType":"YulFunctionCall","src":"284:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"309:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"280:3:11"},"nodeType":"YulFunctionCall","src":"280:32:11"},"nodeType":"YulIf","src":"277:119:11"},{"nodeType":"YulBlock","src":"406:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"421:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"435:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"425:6:11","type":""}]},{"nodeType":"YulAssignment","src":"450:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"496:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"507:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"492:3:11"},"nodeType":"YulFunctionCall","src":"492:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"516:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"460:31:11"},"nodeType":"YulFunctionCall","src":"460:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"450:6:11"}]}]},{"nodeType":"YulBlock","src":"544:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"559:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"573:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"563:6:11","type":""}]},{"nodeType":"YulAssignment","src":"589:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"635:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"646:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"631:3:11"},"nodeType":"YulFunctionCall","src":"631:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"655:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"599:31:11"},"nodeType":"YulFunctionCall","src":"599:64:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:11"}]}]},{"nodeType":"YulBlock","src":"683:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"698:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"712:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"702:6:11","type":""}]},{"nodeType":"YulAssignment","src":"728:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"774:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"785:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"770:3:11"},"nodeType":"YulFunctionCall","src":"770:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"794:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"738:31:11"},"nodeType":"YulFunctionCall","src":"738:64:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"728:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"221:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"232:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"244:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"252:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"260:6:11","type":""}],"src":"156:663:11"},{"body":{"nodeType":"YulBlock","src":"865:35:11","statements":[{"nodeType":"YulAssignment","src":"875:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"891:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"885:5:11"},"nodeType":"YulFunctionCall","src":"885:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"875:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"858:6:11","type":""}],"src":"825:75:11"},{"body":{"nodeType":"YulBlock","src":"951:51:11","statements":[{"nodeType":"YulAssignment","src":"961:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"972:17:11"},"nodeType":"YulFunctionCall","src":"972:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"961:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"933:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"943:7:11","type":""}],"src":"906:96:11"},{"body":{"nodeType":"YulBlock","src":"1053:81:11","statements":[{"nodeType":"YulAssignment","src":"1063:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1078:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1085:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1074:3:11"},"nodeType":"YulFunctionCall","src":"1074:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1063:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1035:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1045:7:11","type":""}],"src":"1008:126:11"},{"body":{"nodeType":"YulBlock","src":"1229:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1246:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1249:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1239:6:11"},"nodeType":"YulFunctionCall","src":"1239:12:11"},"nodeType":"YulExpressionStatement","src":"1239:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1140:117:11"},{"body":{"nodeType":"YulBlock","src":"1352:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1369:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1372:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1362:6:11"},"nodeType":"YulFunctionCall","src":"1362:12:11"},"nodeType":"YulExpressionStatement","src":"1362:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1263:117:11"},{"body":{"nodeType":"YulBlock","src":"1429:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"1486:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1495:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1488:6:11"},"nodeType":"YulFunctionCall","src":"1488:12:11"},"nodeType":"YulExpressionStatement","src":"1488:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1459:17:11"},"nodeType":"YulFunctionCall","src":"1459:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1449:2:11"},"nodeType":"YulFunctionCall","src":"1449:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1442:6:11"},"nodeType":"YulFunctionCall","src":"1442:43:11"},"nodeType":"YulIf","src":"1439:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1422:5:11","type":""}],"src":"1386:122:11"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052670de0b6b3a76400006004556000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006009556001600a60006101000a81548160ff0219169083151502179055503480156200007f57600080fd5b5060405162004756380380620047568339818101604052810190620000a5919062000274565b620000c5620000b96200019160201b60201c565b6200019960201b60201c565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000323565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200026e8162000309565b92915050565b60008060006060848603121562000290576200028f62000304565b5b6000620002a0868287016200025d565b9350506020620002b3868287016200025d565b9250506040620002c6868287016200025d565b9150509250925092565b6000620002dd82620002e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200031481620002d0565b81146200032057600080fd5b50565b61442380620003336000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80639c07ce26116100c3578063c3364be41161007c578063c3364be4146103cf578063dafbfe6a146103ff578063e4c3c7cd1461041b578063ea42f34914610455578063f2fde38b14610485578063f90ef4f2146104a15761014d565b80639c07ce26146102f15780639ead72221461030f578063ac1a386a14610340578063af81c5b91461035c578063b136e39a14610378578063bd8098ec146103945761014d565b80636f4e410b116101155780636f4e410b1461022e578063715018a61461024a5780637bf1a627146102545780638da5cb5b146102725780638f101b0e1461029057806392e43d3a146102c05761014d565b80631027b2191461015257806314eca9dc146101825780631f69565f146101b2578063429d24b2146101e257806362c09cfa14610212575b600080fd5b61016c60048036038101906101679190613530565b6104bd565b6040516101799190613d4f565b60405180910390f35b61019c600480360381019061019791906137de565b610573565b6040516101a99190613ead565b60405180910390f35b6101cc60048036038101906101c79190613530565b610621565b6040516101d99190613ead565b60405180910390f35b6101fc60048036038101906101f791906138f2565b6106f7565b6040516102099190613d4f565b60405180910390f35b61022c600480360381019061022791906136fe565b6109e5565b005b610248600480360381019061024391906136fe565b610fff565b005b610252611618565b005b61025c61162c565b6040516102699190613c9d565b60405180910390f35b61027a611652565b6040516102879190613c9d565b60405180910390f35b6102aa60048036038101906102a5919061366b565b61167b565b6040516102b79190613e91565b60405180910390f35b6102da60048036038101906102d591906135c4565b6118be565b6040516102e8929190613e66565b60405180910390f35b6102f9611bc8565b6040516103069190613ead565b60405180910390f35b61032960048036038101906103249190613898565b611bce565b604051610337929190613d26565b60405180910390f35b61035a60048036038101906103559190613530565b611c22565b005b610376600480360381019061037191906136be565b611c6e565b005b610392600480360381019061038d9190613530565b611d6c565b005b6103ae60048036038101906103a9919061378b565b611db8565b6040516103c69c9b9a99989796959493929190613ec8565b60405180910390f35b6103e960048036038101906103e4919061362b565b611ebc565b6040516103f69190613ead565b60405180910390f35b61041960048036038101906104149190613530565b611f2c565b005b610435600480360381019061043091906135c4565b611f78565b60405161044c9b9a99989796959493929190613f82565b60405180910390f35b61046f600480360381019061046a919061355d565b612083565b60405161047c9190613e4a565b60405180910390f35b61049f600480360381019061049a9190613530565b6122fa565b005b6104bb60048036038101906104b69190613831565b61237e565b005b600080600090505b600680549050811015610568578273ffffffffffffffffffffffffffffffffffffffff16600682815481106104fd576104fc61420b565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561055557600191505061056e565b808061056090614135565b9150506104c5565b50600090505b919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000856001811115610606576106056141ad565b5b81526020019081526020016000208054905090509392505050565b600080600090505b6006805490508110156106f0578273ffffffffffffffffffffffffffffffffffffffff16600682815481106106615761066061420b565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106dd57600681815481106106c3576106c261420b565b5b9060005260206000209060020201600101549150506106f2565b80806106e890614135565b915050610629565b505b919050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086600181111561078b5761078a6141ad565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561098057838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff16600181111561080c5761080b6141ad565b5b600181111561081e5761081d6141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581525050815260200190600101906107b9565b50505050905060005b81518110156109d657868282815181106109a6576109a561420b565b5b60200260200101516000015114156109c3576001925050506109dd565b80806109ce90614135565b915050610989565b5060009150505b949350505050565b856109ef816104bd565b610a2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2590613daa565b60405180910390fd5b84610a38816104bd565b610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e90613daa565b60405180910390fd5b84610be3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338a6040518363ffffffff1660e01b8152600401610ad8929190613cb8565b60206040518083038186803b158015610af057600080fd5b505afa158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2891906138c5565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8a336040518363ffffffff1660e01b8152600401610b85929190613cb8565b60206040518083038186803b158015610b9d57600080fd5b505afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd591906138c5565b612ed390919063ffffffff16565b1015610c24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1b90613dca565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d633888860016040518563ffffffff1660e01b8152600401610c869493929190613ce1565b600060405180830381600087803b158015610ca057600080fd5b505af1158015610cb4573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000806001811115610d4957610d486141ad565b5b8152602001908152602001600020604051806101600160405280600954815260200160006001811115610d7f57610d7e6141ad565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115610e5a57610e596141ad565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546000338b8b8b8b8b8f8e8d604051610fd19b9a99989796959493929190613f82565b60405180910390a1610fef6001600954612ee990919063ffffffff16565b6009819055505050505050505050565b85611009816104bd565b611048576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103f90613daa565b60405180910390fd5b84611052816104bd565b611091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108890613daa565b60405180910390fd5b866111fd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338c6040518363ffffffff1660e01b81526004016110f2929190613cb8565b60206040518083038186803b15801561110a57600080fd5b505afa15801561111e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114291906138c5565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8c336040518363ffffffff1660e01b815260040161119f929190613cb8565b60206040518083038186803b1580156111b757600080fd5b505afa1580156111cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ef91906138c5565b612ed390919063ffffffff16565b101561123e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123590613dca565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338a8a60016040518563ffffffff1660e01b81526004016112a09493929190613ce1565b600060405180830381600087803b1580156112ba57600080fd5b505af11580156112ce573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600180811115611363576113626141ad565b5b81526020019081526020016000206040518061016001604052806009548152602001600180811115611398576113976141ad565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115611473576114726141ad565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546001338b8b8b8b8b8f8e8d6040516115ea9b9a99989796959493929190613f82565b60405180910390a16116086001600954612ee990919063ffffffff16565b6009819055505050505050505050565b611620612eff565b61162a6000612f7d565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611683613049565b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008560018111156116d9576116d86141ad565b5b815260200190815260200160002083815481106116f9576116f861420b565b5b90600052602060002090600b020160405180610180016040529081600082015481526020016001820160009054906101000a900460ff166001811115611742576117416141ad565b5b6001811115611754576117536141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152602001600a820154815250509050809150509392505050565b6118c6613100565b600080600090506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611b4357838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156119cf576119ce6141ad565b5b60018111156119e1576119e06141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250508152602001906001019061197c565b505050509050611b51613100565b5b8151831015611bb65785828481518110611b6f57611b6e61420b565b5b6020026020010151600001511415611ba357818381518110611b9457611b9361420b565b5b60200260200101519050611bb6565b8280611bae90614135565b935050611b52565b80839450945050505094509492505050565b60095481565b60068181548110611bde57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b611c2a612eff565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611c76612eff565b611c7f826104bd565b15611cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb690613e0a565b60405180910390fd5b600660405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b611d74612eff565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60086020528260005260406000206020528160005260406000208181548110611de057600080fd5b90600052602060002090600b020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff169080600a015490508c565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836001811115611f1257611f116141ad565b5b815260200190815260200160002080549050905092915050565b611f34612eff565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60076020528360005260406000206020528260005260406000206020528160005260406000208181548110611fac57600080fd5b90600052602060002090600a02016000935093505050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b61208b613100565b6000600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600181111561211e5761211d6141ad565b5b8152602001908152602001600020848154811061213e5761213d61420b565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff166001811115612187576121866141ad565b5b6001811115612199576121986141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581525050905080915050949350505050565b612302612eff565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161236990613d8a565b60405180910390fd5b61237b81612f7d565b50565b8284838361238e848484846106f7565b6123cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123c490613d6a565b60405180910390fd5b856123d7816104bd565b612416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240d90613daa565b60405180910390fd5b85612420816104bd565b61245f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161245690613daa565b60405180910390fd5b60008a6001811115612474576124736141ad565b5b90506000600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000209050600081805490509050612518613100565b600080600090505b83811015612732578e85828154811061253c5761253b61420b565b5b90600052602060002090600a020160000154141561271f5780915084818154811061256a5761256961420b565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156125b3576125b26141ad565b5b60018111156125c5576125c46141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250509250612732565b808061272a90614135565b915050612520565b50600a60009054906101000a900460ff161561295357816040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146127ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127b190613dea565b60405180910390fd5b600060018111156127ce576127cd6141ad565b5b8f60018111156127e1576127e06141ad565b5b141561288857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338460a001518560c0015160006040518563ffffffff1660e01b81526004016128519493929190613ce1565b600060405180830381600087803b15801561286b57600080fd5b505af115801561287f573d6000803e3d6000fd5b50505050612952565b60018081111561289b5761289a6141ad565b5b8f60018111156128ae576128ad6141ad565b5b141561295157600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338460600151856080015160006040518563ffffffff1660e01b815260040161291e9493929190613ce1565b600060405180830381600087803b15801561293857600080fd5b505af115801561294c573d6000803e3d6000fd5b505050505b5b5b60008190505b6001846129669190614094565b811015612bb35784612982600183612ee990919063ffffffff16565b815481106129935761299261420b565b5b90600052602060002090600a02018582815481106129b4576129b361420b565b5b90600052602060002090600a0201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115612a0457612a036141ad565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff0219169083151502179055509050508080612bab90614135565b915050612959565b5083612bc9600185612ed390919063ffffffff16565b81548110612bda57612bd961420b565b5b90600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff0219169055505083805480612cc957612cc86141dc565b5b60019003818190600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff02191690555050905583600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020908054612e4b9291906131b0565b507fa1cc643491754200d3eca5769e524a0fd00f9b0862b18d0da7d6e7277a83dfda8e83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c6101400151604051612eba9b9a99989796959493929190613f82565b60405180910390a1505050505050505050505050505050565b60008183612ee19190614094565b905092915050565b60008183612ef7919061403e565b905092915050565b612f07613041565b73ffffffffffffffffffffffffffffffffffffffff16612f25611652565b73ffffffffffffffffffffffffffffffffffffffff1614612f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f7290613e2a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610180016040528060008152602001600060018111156130705761306f6141ad565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081525090565b6040518061016001604052806000815260200160006001811115613127576131266141ad565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090600a0281019282156133d257600052602060002091600a0282015b828111156133d1578282600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115613227576132266141ad565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908315150217905550505091600a019190600a01906131db565b5b5090506133df91906133e3565b5090565b5b808211156134c3576000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff021916905550600a016133e4565b5090565b6000813590506134d681614398565b92915050565b6000813590506134eb816143af565b92915050565b600081359050613500816143c6565b92915050565b600081359050613515816143d6565b92915050565b60008151905061352a816143d6565b92915050565b6000602082840312156135465761354561423a565b5b6000613554848285016134c7565b91505092915050565b600080600080608085870312156135775761357661423a565b5b6000613585878288016134c7565b9450506020613596878288016134c7565b93505060406135a787828801613506565b92505060606135b8878288016134f1565b91505092959194509250565b600080600080608085870312156135de576135dd61423a565b5b60006135ec878288016134c7565b94505060206135fd878288016134c7565b935050604061360e87828801613506565b925050606061361f87828801613506565b91505092959194509250565b600080604083850312156136425761364161423a565b5b6000613650858286016134c7565b9250506020613661858286016134f1565b9150509250929050565b6000806000606084860312156136845761368361423a565b5b6000613692868287016134c7565b93505060206136a3868287016134f1565b92505060406136b486828701613506565b9150509250925092565b600080604083850312156136d5576136d461423a565b5b60006136e3858286016134c7565b92505060206136f485828601613506565b9150509250929050565b60008060008060008060c0878903121561371b5761371a61423a565b5b600061372989828a016134c7565b965050602061373a89828a01613506565b955050604061374b89828a016134c7565b945050606061375c89828a01613506565b935050608061376d89828a01613506565b92505060a061377e89828a016134dc565b9150509295509295509295565b6000806000606084860312156137a4576137a361423a565b5b60006137b2868287016134c7565b93505060206137c386828701613506565b92505060406137d486828701613506565b9150509250925092565b6000806000606084860312156137f7576137f661423a565b5b6000613805868287016134f1565b9350506020613816868287016134c7565b9250506040613827868287016134c7565b9150509250925092565b6000806000806080858703121561384b5761384a61423a565b5b6000613859878288016134f1565b945050602061386a87828801613506565b935050604061387b878288016134c7565b925050606061388c878288016134c7565b91505092959194509250565b6000602082840312156138ae576138ad61423a565b5b60006138bc84828501613506565b91505092915050565b6000602082840312156138db576138da61423a565b5b60006138e98482850161351b565b91505092915050565b6000806000806080858703121561390c5761390b61423a565b5b600061391a87828801613506565b945050602061392b878288016134f1565b935050604061393c878288016134c7565b925050606061394d878288016134c7565b91505092959194509250565b613962816140c8565b82525050565b613971816140c8565b82525050565b613980816140da565b82525050565b61398f816140da565b82525050565b61399e81614123565b82525050565b6139ad81614123565b82525050565b60006139c060108361402d565b91506139cb8261423f565b602082019050919050565b60006139e360268361402d565b91506139ee82614268565b604082019050919050565b6000613a0660188361402d565b9150613a11826142b7565b602082019050919050565b6000613a2960128361402d565b9150613a34826142e0565b602082019050919050565b6000613a4c60098361402d565b9150613a5782614309565b602082019050919050565b6000613a6f60168361402d565b9150613a7a82614332565b602082019050919050565b6000613a9260208361402d565b9150613a9d8261435b565b602082019050919050565b61016082016000820151613abf6000850182613c7f565b506020820151613ad26020850182613995565b506040820151613ae56040850182613959565b506060820151613af86060850182613959565b506080820151613b0b6080850182613c7f565b5060a0820151613b1e60a0850182613959565b5060c0820151613b3160c0850182613c7f565b5060e0820151613b4460e0850182613c7f565b50610100820151613b59610100850182613c7f565b50610120820151613b6e610120850182613c7f565b50610140820151613b83610140850182613977565b50505050565b61018082016000820151613ba06000850182613c7f565b506020820151613bb36020850182613995565b506040820151613bc66040850182613959565b506060820151613bd96060850182613959565b506080820151613bec6080850182613959565b5060a0820151613bff60a0850182613c7f565b5060c0820151613c1260c0850182613c7f565b5060e0820151613c2560e0850182613c7f565b50610100820151613c3a610100850182613c7f565b50610120820151613c4f610120850182613c7f565b50610140820151613c64610140850182613977565b50610160820151613c79610160850182613c7f565b50505050565b613c8881614119565b82525050565b613c9781614119565b82525050565b6000602082019050613cb26000830184613968565b92915050565b6000604082019050613ccd6000830185613968565b613cda6020830184613968565b9392505050565b6000608082019050613cf66000830187613968565b613d036020830186613968565b613d106040830185613c8e565b613d1d6060830184613986565b95945050505050565b6000604082019050613d3b6000830185613968565b613d486020830184613c8e565b9392505050565b6000602082019050613d646000830184613986565b92915050565b60006020820190508181036000830152613d83816139b3565b9050919050565b60006020820190508181036000830152613da3816139d6565b9050919050565b60006020820190508181036000830152613dc3816139f9565b9050919050565b60006020820190508181036000830152613de381613a1c565b9050919050565b60006020820190508181036000830152613e0381613a3f565b9050919050565b60006020820190508181036000830152613e2381613a62565b9050919050565b60006020820190508181036000830152613e4381613a85565b9050919050565b600061016082019050613e606000830184613aa8565b92915050565b600061018082019050613e7c6000830185613aa8565b613e8a610160830184613c8e565b9392505050565b600061018082019050613ea76000830184613b89565b92915050565b6000602082019050613ec26000830184613c8e565b92915050565b600061018082019050613ede600083018f613c8e565b613eeb602083018e6139a4565b613ef8604083018d613968565b613f05606083018c613968565b613f12608083018b613968565b613f1f60a083018a613c8e565b613f2c60c0830189613c8e565b613f3960e0830188613c8e565b613f47610100830187613c8e565b613f55610120830186613c8e565b613f63610140830185613986565b613f71610160830184613c8e565b9d9c50505050505050505050505050565b600061016082019050613f98600083018e613c8e565b613fa5602083018d6139a4565b613fb2604083018c613968565b613fbf606083018b613968565b613fcc608083018a613c8e565b613fd960a0830189613968565b613fe660c0830188613c8e565b613ff360e0830187613c8e565b614001610100830186613c8e565b61400f610120830185613c8e565b61401d610140830184613986565b9c9b505050505050505050505050565b600082825260208201905092915050565b600061404982614119565b915061405483614119565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156140895761408861417e565b5b828201905092915050565b600061409f82614119565b91506140aa83614119565b9250828210156140bd576140bc61417e565b5b828203905092915050565b60006140d3826140f9565b9050919050565b60008115159050919050565b60008190506140f482614384565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061412e826140e6565b9050919050565b600061414082614119565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156141735761417261417e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f496e76616c6964204f7264657220494400000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20756e617661696c61626c6520696e204445580000000000000000600082015250565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b7f546f6b656e20616c726561647920766572696669656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60028110614395576143946141ad565b5b50565b6143a1816140c8565b81146143ac57600080fd5b50565b6143b8816140da565b81146143c357600080fd5b50565b600281106143d357600080fd5b50565b6143df81614119565b81146143ea57600080fd5b5056fea2646970667358221220b4527b55633c67351cc624550c5da4a9aedbfe9d49a4846f4d61b6b219b9906f64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4756 CODESIZE SUB DUP1 PUSH3 0x4756 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x274 JUMP JUMPDEST PUSH3 0xC5 PUSH3 0xB9 PUSH3 0x191 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x199 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x323 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x26E DUP2 PUSH3 0x309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x290 JUMPI PUSH3 0x28F PUSH3 0x304 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2A0 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2B3 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2C6 DUP7 DUP3 DUP8 ADD PUSH3 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2DD DUP3 PUSH3 0x2E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x314 DUP2 PUSH3 0x2D0 JUMP JUMPDEST DUP2 EQ PUSH3 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4423 DUP1 PUSH3 0x333 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C07CE26 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC3364BE4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC3364BE4 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xDAFBFE6A EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xE4C3C7CD EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xEA42F349 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xF90EF4F2 EQ PUSH2 0x4A1 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x9C07CE26 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x9EAD7222 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xBD8098EC EQ PUSH2 0x394 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6F4E410B GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x6F4E410B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8F101B0E EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x92E43D3A EQ PUSH2 0x2C0 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1027B219 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x14ECA9DC EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x1F69565F EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x429D24B2 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x62C09CFA EQ PUSH2 0x212 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x3D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x37DE JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x3D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0xFFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH2 0x1618 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH2 0x162C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x3C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x3C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x366B JUMP JUMPDEST PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x3E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x35C4 JUMP JUMPDEST PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP3 SWAP2 SWAP1 PUSH2 0x3E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x3898 JUMP JUMPDEST PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP3 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1C22 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x36BE JUMP JUMPDEST PUSH2 0x1C6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1D6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1F2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x35C4 JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x3E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x22FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x3831 JUMP JUMPDEST PUSH2 0x237E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x568 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4FD JUMPI PUSH2 0x4FC PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x555 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x56E JUMP JUMPDEST DUP1 DUP1 PUSH2 0x560 SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4C5 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x606 JUMPI PUSH2 0x605 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6F0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6DD JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6C3 JUMPI PUSH2 0x6C2 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x6F2 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x6E8 SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x629 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x78B JUMPI PUSH2 0x78A PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x980 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80B PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x81E JUMPI PUSH2 0x81D PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x7B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x9D6 JUMPI DUP7 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9A6 JUMPI PUSH2 0x9A5 PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x9DD JUMP JUMPDEST DUP1 DUP1 PUSH2 0x9CE SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x989 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x9EF DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA25 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0xA38 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6E SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0xBE3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD8 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP11 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB85 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1B SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC86 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD49 JUMPI PUSH2 0xD48 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD7F JUMPI PUSH2 0xD7E PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE5A JUMPI PUSH2 0xE59 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x0 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0xFD1 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xFEF PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x1009 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x1048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103F SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x1052 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x1091 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1088 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH2 0x11FD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F2 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x110A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1142 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP13 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119F SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x123E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP11 DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1363 JUMPI PUSH2 0x1362 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1473 JUMPI PUSH2 0x1472 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x1 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x15EA SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1608 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1620 PUSH2 0x2EFF JUMP JUMPDEST PUSH2 0x162A PUSH1 0x0 PUSH2 0x2F7D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1683 PUSH2 0x3049 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16D9 JUMPI PUSH2 0x16D8 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x16F9 JUMPI PUSH2 0x16F8 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1742 JUMPI PUSH2 0x1741 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1754 JUMPI PUSH2 0x1753 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x18C6 PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1B43 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19CF JUMPI PUSH2 0x19CE PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19E1 JUMPI PUSH2 0x19E0 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x197C JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x1B51 PUSH2 0x3100 JUMP JUMPDEST JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x1BB6 JUMPI DUP6 DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B6F JUMPI PUSH2 0x1B6E PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1BA3 JUMPI DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1BB6 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x1BAE SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1B52 JUMP JUMPDEST DUP1 DUP4 SWAP5 POP SWAP5 POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1C2A PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x2EFF JUMP JUMPDEST PUSH2 0x1C7F DUP3 PUSH2 0x4BD JUMP JUMPDEST ISZERO PUSH2 0x1CBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB6 SWAP1 PUSH2 0x3E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1D74 PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F34 PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1FAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH2 0x208B PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x211E JUMPI PUSH2 0x211D PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x213E JUMPI PUSH2 0x213D PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2187 JUMPI PUSH2 0x2186 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2199 JUMPI PUSH2 0x2198 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2302 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2369 SWAP1 PUSH2 0x3D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x237B DUP2 PUSH2 0x2F7D JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP5 DUP4 DUP4 PUSH2 0x238E DUP5 DUP5 DUP5 DUP5 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x23CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C4 SWAP1 PUSH2 0x3D6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x23D7 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x2416 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x240D SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x2420 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x245F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2456 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2474 JUMPI PUSH2 0x2473 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x2518 PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2732 JUMPI DUP15 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x253C JUMPI PUSH2 0x253B PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x271F JUMPI DUP1 SWAP2 POP DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x25B3 JUMPI PUSH2 0x25B2 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x25C5 JUMPI PUSH2 0x25C4 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH2 0x2732 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x272A SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2520 JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2953 JUMPI DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B1 SWAP1 PUSH2 0x3DEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x27CE JUMPI PUSH2 0x27CD PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x27E1 JUMPI PUSH2 0x27E0 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2888 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2851 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x286B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x287F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x289B JUMPI PUSH2 0x289A PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x28AE JUMPI PUSH2 0x28AD PUSH2 0x41AD JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2951 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x291E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x294C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0x2966 SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2BB3 JUMPI DUP5 PUSH2 0x2982 PUSH1 0x1 DUP4 PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2993 JUMPI PUSH2 0x2992 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x29B4 JUMPI PUSH2 0x29B3 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A04 JUMPI PUSH2 0x2A03 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP1 PUSH2 0x2BAB SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2959 JUMP JUMPDEST POP DUP4 PUSH2 0x2BC9 PUSH1 0x1 DUP6 PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2BDA JUMPI PUSH2 0x2BD9 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP4 DUP1 SLOAD DUP1 PUSH2 0x2CC9 JUMPI PUSH2 0x2CC8 PUSH2 0x41DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x7 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0x2E4B SWAP3 SWAP2 SWAP1 PUSH2 0x31B0 JUMP JUMPDEST POP PUSH32 0xA1CC643491754200D3ECA5769E524A0FD00F9B0862B18D0DA7D6E7277A83DFDA DUP15 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2EBA SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2EE1 SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2EF7 SWAP2 SWAP1 PUSH2 0x403E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F07 PUSH2 0x3041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F25 PUSH2 0x1652 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F72 SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3070 JUMPI PUSH2 0x306F PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3127 JUMPI PUSH2 0x3126 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x33D2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xA MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x33D1 JUMPI DUP3 DUP3 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3227 JUMPI PUSH2 0x3226 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP SWAP2 PUSH1 0xA ADD SWAP2 SWAP1 PUSH1 0xA ADD SWAP1 PUSH2 0x31DB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x33DF SWAP2 SWAP1 PUSH2 0x33E3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x34C3 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0xA ADD PUSH2 0x33E4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34D6 DUP2 PUSH2 0x4398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34EB DUP2 PUSH2 0x43AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3500 DUP2 PUSH2 0x43C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3515 DUP2 PUSH2 0x43D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x352A DUP2 PUSH2 0x43D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3546 JUMPI PUSH2 0x3545 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3554 DUP5 DUP3 DUP6 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3577 JUMPI PUSH2 0x3576 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3585 DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3596 DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x35A7 DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x35B8 DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x35DE JUMPI PUSH2 0x35DD PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35EC DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x35FD DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x360E DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x361F DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3642 JUMPI PUSH2 0x3641 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3650 DUP6 DUP3 DUP7 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3661 DUP6 DUP3 DUP7 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3684 JUMPI PUSH2 0x3683 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3692 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x36A3 DUP7 DUP3 DUP8 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x36B4 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36D5 JUMPI PUSH2 0x36D4 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E3 DUP6 DUP3 DUP7 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x36F4 DUP6 DUP3 DUP7 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x371B JUMPI PUSH2 0x371A PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3729 DUP10 DUP3 DUP11 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x373A DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x374B DUP10 DUP3 DUP11 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x375C DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x376D DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x377E DUP10 DUP3 DUP11 ADD PUSH2 0x34DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37A4 JUMPI PUSH2 0x37A3 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B2 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x37C3 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x37D4 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37F7 JUMPI PUSH2 0x37F6 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3805 DUP7 DUP3 DUP8 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3816 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3827 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x384B JUMPI PUSH2 0x384A PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3859 DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x386A DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x387B DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x388C DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38AE JUMPI PUSH2 0x38AD PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38BC DUP5 DUP3 DUP6 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38DB JUMPI PUSH2 0x38DA PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E9 DUP5 DUP3 DUP6 ADD PUSH2 0x351B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x390C JUMPI PUSH2 0x390B PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x391A DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x392B DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x393C DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x394D DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x3962 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3971 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3980 DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x398F DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x399E DUP2 PUSH2 0x4123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x39AD DUP2 PUSH2 0x4123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C0 PUSH1 0x10 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x39CB DUP3 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E3 PUSH1 0x26 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x39EE DUP3 PUSH2 0x4268 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A06 PUSH1 0x18 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A11 DUP3 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A29 PUSH1 0x12 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A34 DUP3 PUSH2 0x42E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4C PUSH1 0x9 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A57 DUP3 PUSH2 0x4309 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6F PUSH1 0x16 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A7A DUP3 PUSH2 0x4332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A92 PUSH1 0x20 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9D DUP3 PUSH2 0x435B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3ABF PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3AD2 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3995 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3AE5 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3AF8 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x3B0B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x3B1E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x3B31 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x3B44 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x3B59 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x3B6E PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3B83 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x3977 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x180 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3BA0 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3BB3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3995 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3BC6 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3BD9 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x3BEC PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x3BFF PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x3C12 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x3C25 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x3C3A PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x3C4F PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3C64 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x3977 JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x3C79 PUSH2 0x160 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3C88 DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3C97 DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CCD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3CDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3968 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CF6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D03 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D10 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3D1D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D83 DUP2 PUSH2 0x39B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DA3 DUP2 PUSH2 0x39D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DC3 DUP2 PUSH2 0x39F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE3 DUP2 PUSH2 0x3A1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E03 DUP2 PUSH2 0x3A3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E23 DUP2 PUSH2 0x3A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E43 DUP2 PUSH2 0x3A85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3E60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3E7C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3AA8 JUMP JUMPDEST PUSH2 0x3E8A PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3EA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3EDE PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3EEB PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x39A4 JUMP JUMPDEST PUSH2 0x3EF8 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F05 PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F12 PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F1F PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F2C PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F39 PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F47 PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F55 PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F63 PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x3986 JUMP JUMPDEST PUSH2 0x3F71 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3F98 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FA5 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x39A4 JUMP JUMPDEST PUSH2 0x3FB2 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FBF PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FCC PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FD9 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FE6 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FF3 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x4001 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x400F PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x401D PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4049 DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH2 0x4054 DUP4 PUSH2 0x4119 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4089 JUMPI PUSH2 0x4088 PUSH2 0x417E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409F DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH2 0x40AA DUP4 PUSH2 0x4119 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x40BD JUMPI PUSH2 0x40BC PUSH2 0x417E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D3 DUP3 PUSH2 0x40F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x40F4 DUP3 PUSH2 0x4384 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412E DUP3 PUSH2 0x40E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4140 DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4173 JUMPI PUSH2 0x4172 PUSH2 0x417E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E76616C6964204F7264657220494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20756E617661696C61626C6520696E204445580000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742046756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920766572696669656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x4395 JUMPI PUSH2 0x4394 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x43A1 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x43AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x43B8 DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP2 EQ PUSH2 0x43C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x43D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x43DF DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP2 EQ PUSH2 0x43EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 MSTORE PUSH28 0x55633C67351CC624550C5DA4A9AEDBFE9D49A4846F4D61B6B219B990 PUSH16 0x64736F6C634300080700330000000000 ","sourceMap":"375:22546:7:-:0;;;578:8;559:27;;626:1;592:36;;;;;;;;;;;;;;;;;;;;1017:1;990:28;;1050:4;1024:30;;;;;;;;;;;;;;;;;;;;3240:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;3333:7:7;3317:6;;:24;;;;;;;;;;;;;;;;;;3377:5;3351:11;;:32;;;;;;;;;;;;;;;;;;3421:13;3393:12;;:42;;;;;;;;;;;;;;;;;;3240:202;;;375:22546;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:11:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:119;;;315:79;;:::i;:::-;277:119;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;156:663;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1008:126;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;375:22546:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":12031,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_273":{"entryPoint":12353,"id":273,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":12157,"id":157,"parameterSlots":1,"returnSlots":0},"@addToken_2991":{"entryPoint":7278,"id":2991,"parameterSlots":2,"returnSlots":0},"@add_459":{"entryPoint":12009,"id":459,"parameterSlots":2,"returnSlots":1},"@cancelOrder_1827":{"entryPoint":9086,"id":1827,"parameterSlots":4,"returnSlots":0},"@createLimitBuyOrder_1515":{"entryPoint":2533,"id":1515,"parameterSlots":6,"returnSlots":0},"@createLimitSellOrder_1619":{"entryPoint":4095,"id":1619,"parameterSlots":6,"returnSlots":0},"@ethToken_1214":{"entryPoint":5676,"id":1214,"parameterSlots":0,"returnSlots":0},"@getFilledOrderLength_2809":{"entryPoint":7868,"id":2809,"parameterSlots":2,"returnSlots":1},"@getFilledOrder_2840":{"entryPoint":5755,"id":2840,"parameterSlots":3,"returnSlots":1},"@getOrderFromArray_2908":{"entryPoint":6334,"id":2908,"parameterSlots":4,"returnSlots":2},"@getOrderLength_2753":{"entryPoint":1395,"id":2753,"parameterSlots":3,"returnSlots":1},"@getOrder_2788":{"entryPoint":8323,"id":2788,"parameterSlots":4,"returnSlots":1},"@getTokenInfo_3057":{"entryPoint":1569,"id":3057,"parameterSlots":1,"returnSlots":1},"@isVerifiedToken_3023":{"entryPoint":1213,"id":3023,"parameterSlots":1,"returnSlots":1},"@orderExists_2964":{"entryPoint":1783,"id":2964,"parameterSlots":4,"returnSlots":1},"@owner_86":{"entryPoint":5714,"id":86,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":5656,"id":114,"parameterSlots":0,"returnSlots":0},"@s_filledOrders_1236":{"entryPoint":7608,"id":1236,"parameterSlots":0,"returnSlots":0},"@s_orderBook_1228":{"entryPoint":8056,"id":1228,"parameterSlots":0,"returnSlots":0},"@s_orderId_1239":{"entryPoint":7112,"id":1239,"parameterSlots":0,"returnSlots":0},"@setPriceCheckerAddress_3085":{"entryPoint":7532,"id":3085,"parameterSlots":1,"returnSlots":0},"@setTradingFees_3099":{"entryPoint":7980,"id":3099,"parameterSlots":1,"returnSlots":0},"@setWalletAddress_3071":{"entryPoint":7202,"id":3071,"parameterSlots":1,"returnSlots":0},"@sub_474":{"entryPoint":11987,"id":474,"parameterSlots":2,"returnSlots":1},"@tokenList_1218":{"entryPoint":7118,"id":1218,"parameterSlots":0,"returnSlots":0},"@transferOwnership_137":{"entryPoint":8954,"id":137,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":13511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":13532,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_enum$_Side_$1305":{"entryPoint":13553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":13595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13616,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_enum$_Side_$1305":{"entryPoint":13661,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256":{"entryPoint":13764,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_enum$_Side_$1305":{"entryPoint":13867,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_enum$_Side_$1305t_uint256":{"entryPoint":13931,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":14014,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool":{"entryPoint":14078,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":14219,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_enum$_Side_$1305t_addresst_address":{"entryPoint":14302,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_enum$_Side_$1305t_uint256t_addresst_address":{"entryPoint":14385,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":14488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":14533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_enum$_Side_$1305t_addresst_address":{"entryPoint":14578,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address":{"entryPoint":14681,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":14696,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":14711,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14726,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$1305_to_t_uint8":{"entryPoint":14741,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Side_$1305_to_t_uint8_fromStack":{"entryPoint":14756,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack":{"entryPoint":14771,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":14806,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack":{"entryPoint":14841,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack":{"entryPoint":14876,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack":{"entryPoint":14911,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack":{"entryPoint":14946,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":14981,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$__Order_$1276_memory_ptr_to_t_struct$__Order_$1276_memory_ptr_fromStack":{"entryPoint":15016,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$__filledOrder_$1302_memory_ptr_to_t_struct$__filledOrder_$1302_memory_ptr_fromStack":{"entryPoint":15241,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":15487,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":15502,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":15517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":15544,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed":{"entryPoint":15585,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15654,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":15695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15722,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15786,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15818,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15882,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15914,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$__Order_$1276_memory_ptr__to_t_struct$__Order_$1276_memory_ptr__fromStack_reversed":{"entryPoint":15946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$__Order_$1276_memory_ptr_t_uint256__to_t_struct$__Order_$1276_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":15974,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_struct$__filledOrder_$1302_memory_ptr__to_t_struct$__filledOrder_$1302_memory_ptr__fromStack_reversed":{"entryPoint":16017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":16045,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_enum$_Side_$1305_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":16072,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_tuple_t_uint256_t_enum$_Side_$1305_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":16258,"id":null,"parameterSlots":12,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":16429,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":16446,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":16532,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":16584,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":16602,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Side_$1305":{"entryPoint":16614,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":16633,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":16665,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Side_$1305_to_t_uint8":{"entryPoint":16675,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":16693,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":16766,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":16813,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":16860,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":16907,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":16954,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2":{"entryPoint":16959,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":17000,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3":{"entryPoint":17079,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092":{"entryPoint":17120,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4":{"entryPoint":17161,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430":{"entryPoint":17202,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":17243,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Side_$1305":{"entryPoint":17284,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":17304,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":17327,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_enum$_Side_$1305":{"entryPoint":17350,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":17366,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:30383:11","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:11","statements":[{"nodeType":"YulAssignment","src":"69:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:11"},"nodeType":"YulFunctionCall","src":"78:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:11"},"nodeType":"YulFunctionCall","src":"107:33:11"},"nodeType":"YulExpressionStatement","src":"107:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:11","type":""}],"src":"7:139:11"},{"body":{"nodeType":"YulBlock","src":"201:84:11","statements":[{"nodeType":"YulAssignment","src":"211:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"233:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:11"},"nodeType":"YulFunctionCall","src":"220:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"211:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"249:23:11"},"nodeType":"YulFunctionCall","src":"249:30:11"},"nodeType":"YulExpressionStatement","src":"249:30:11"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"187:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"195:5:11","type":""}],"src":"152:133:11"},{"body":{"nodeType":"YulBlock","src":"352:96:11","statements":[{"nodeType":"YulAssignment","src":"362:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"384:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"371:12:11"},"nodeType":"YulFunctionCall","src":"371:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"362:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"436:5:11"}],"functionName":{"name":"validator_revert_t_enum$_Side_$1305","nodeType":"YulIdentifier","src":"400:35:11"},"nodeType":"YulFunctionCall","src":"400:42:11"},"nodeType":"YulExpressionStatement","src":"400:42:11"}]},"name":"abi_decode_t_enum$_Side_$1305","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"330:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"338:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"346:5:11","type":""}],"src":"291:157:11"},{"body":{"nodeType":"YulBlock","src":"506:87:11","statements":[{"nodeType":"YulAssignment","src":"516:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"538:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"525:12:11"},"nodeType":"YulFunctionCall","src":"525:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"516:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"581:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"554:26:11"},"nodeType":"YulFunctionCall","src":"554:33:11"},"nodeType":"YulExpressionStatement","src":"554:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"484:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"492:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"500:5:11","type":""}],"src":"454:139:11"},{"body":{"nodeType":"YulBlock","src":"662:80:11","statements":[{"nodeType":"YulAssignment","src":"672:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"687:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"681:5:11"},"nodeType":"YulFunctionCall","src":"681:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"730:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"703:26:11"},"nodeType":"YulFunctionCall","src":"703:33:11"},"nodeType":"YulExpressionStatement","src":"703:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"640:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"648:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"656:5:11","type":""}],"src":"599:143:11"},{"body":{"nodeType":"YulBlock","src":"814:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"860:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"862:77:11"},"nodeType":"YulFunctionCall","src":"862:79:11"},"nodeType":"YulExpressionStatement","src":"862:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"835:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"844:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"831:3:11"},"nodeType":"YulFunctionCall","src":"831:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"856:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"827:3:11"},"nodeType":"YulFunctionCall","src":"827:32:11"},"nodeType":"YulIf","src":"824:119:11"},{"nodeType":"YulBlock","src":"953:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"968:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"982:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"972:6:11","type":""}]},{"nodeType":"YulAssignment","src":"997:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1032:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1043:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1028:3:11"},"nodeType":"YulFunctionCall","src":"1028:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1052:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1007:20:11"},"nodeType":"YulFunctionCall","src":"1007:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"997:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"784:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"795:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"807:6:11","type":""}],"src":"748:329:11"},{"body":{"nodeType":"YulBlock","src":"1209:657:11","statements":[{"body":{"nodeType":"YulBlock","src":"1256:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1258:77:11"},"nodeType":"YulFunctionCall","src":"1258:79:11"},"nodeType":"YulExpressionStatement","src":"1258:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1230:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1239:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1226:3:11"},"nodeType":"YulFunctionCall","src":"1226:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1251:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1222:3:11"},"nodeType":"YulFunctionCall","src":"1222:33:11"},"nodeType":"YulIf","src":"1219:120:11"},{"nodeType":"YulBlock","src":"1349:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1364:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1378:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1368:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1393:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1428:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1439:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1424:3:11"},"nodeType":"YulFunctionCall","src":"1424:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1448:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1403:20:11"},"nodeType":"YulFunctionCall","src":"1403:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1393:6:11"}]}]},{"nodeType":"YulBlock","src":"1476:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1491:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1505:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1495:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1521:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1556:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1567:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1552:3:11"},"nodeType":"YulFunctionCall","src":"1552:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1576:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1531:20:11"},"nodeType":"YulFunctionCall","src":"1531:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1521:6:11"}]}]},{"nodeType":"YulBlock","src":"1604:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1619:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1633:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1623:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1649:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1684:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1695:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1680:3:11"},"nodeType":"YulFunctionCall","src":"1680:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1704:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1659:20:11"},"nodeType":"YulFunctionCall","src":"1659:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1649:6:11"}]}]},{"nodeType":"YulBlock","src":"1732:127:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1747:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1761:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1751:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1777:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1821:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1832:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1817:3:11"},"nodeType":"YulFunctionCall","src":"1817:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1841:7:11"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1305","nodeType":"YulIdentifier","src":"1787:29:11"},"nodeType":"YulFunctionCall","src":"1787:62:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1777:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_enum$_Side_$1305","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1155:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1166:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1178:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1186:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1194:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1202:6:11","type":""}],"src":"1083:783:11"},{"body":{"nodeType":"YulBlock","src":"1989:648:11","statements":[{"body":{"nodeType":"YulBlock","src":"2036:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2038:77:11"},"nodeType":"YulFunctionCall","src":"2038:79:11"},"nodeType":"YulExpressionStatement","src":"2038:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2010:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2019:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2006:3:11"},"nodeType":"YulFunctionCall","src":"2006:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2031:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2002:3:11"},"nodeType":"YulFunctionCall","src":"2002:33:11"},"nodeType":"YulIf","src":"1999:120:11"},{"nodeType":"YulBlock","src":"2129:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2144:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2158:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2148:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2173:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2219:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2204:3:11"},"nodeType":"YulFunctionCall","src":"2204:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2228:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2183:20:11"},"nodeType":"YulFunctionCall","src":"2183:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2173:6:11"}]}]},{"nodeType":"YulBlock","src":"2256:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2271:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2285:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2275:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2301:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2336:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2347:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2332:3:11"},"nodeType":"YulFunctionCall","src":"2332:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2356:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2311:20:11"},"nodeType":"YulFunctionCall","src":"2311:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2301:6:11"}]}]},{"nodeType":"YulBlock","src":"2384:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2399:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2413:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2403:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2429:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2464:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2475:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2460:3:11"},"nodeType":"YulFunctionCall","src":"2460:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2484:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2439:20:11"},"nodeType":"YulFunctionCall","src":"2439:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2429:6:11"}]}]},{"nodeType":"YulBlock","src":"2512:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2527:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2541:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2531:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2557:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2592:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2603:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:11"},"nodeType":"YulFunctionCall","src":"2588:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2612:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2567:20:11"},"nodeType":"YulFunctionCall","src":"2567:53:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2557:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1935:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1946:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1958:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1966:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1974:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1982:6:11","type":""}],"src":"1872:765:11"},{"body":{"nodeType":"YulBlock","src":"2735:400:11","statements":[{"body":{"nodeType":"YulBlock","src":"2781:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2783:77:11"},"nodeType":"YulFunctionCall","src":"2783:79:11"},"nodeType":"YulExpressionStatement","src":"2783:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2756:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2765:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2752:3:11"},"nodeType":"YulFunctionCall","src":"2752:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2777:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2748:3:11"},"nodeType":"YulFunctionCall","src":"2748:32:11"},"nodeType":"YulIf","src":"2745:119:11"},{"nodeType":"YulBlock","src":"2874:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2889:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2903:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2893:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2918:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2953:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2964:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2949:3:11"},"nodeType":"YulFunctionCall","src":"2949:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2973:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2928:20:11"},"nodeType":"YulFunctionCall","src":"2928:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2918:6:11"}]}]},{"nodeType":"YulBlock","src":"3001:127:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3016:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3030:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3020:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3046:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3090:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3101:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3086:3:11"},"nodeType":"YulFunctionCall","src":"3086:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3110:7:11"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1305","nodeType":"YulIdentifier","src":"3056:29:11"},"nodeType":"YulFunctionCall","src":"3056:62:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3046:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_Side_$1305","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2697:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2708:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2720:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2728:6:11","type":""}],"src":"2643:492:11"},{"body":{"nodeType":"YulBlock","src":"3250:528:11","statements":[{"body":{"nodeType":"YulBlock","src":"3296:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3298:77:11"},"nodeType":"YulFunctionCall","src":"3298:79:11"},"nodeType":"YulExpressionStatement","src":"3298:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3271:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3280:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3267:3:11"},"nodeType":"YulFunctionCall","src":"3267:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3292:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3263:3:11"},"nodeType":"YulFunctionCall","src":"3263:32:11"},"nodeType":"YulIf","src":"3260:119:11"},{"nodeType":"YulBlock","src":"3389:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3404:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3418:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3408:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3433:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3468:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3479:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3464:3:11"},"nodeType":"YulFunctionCall","src":"3464:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3488:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3443:20:11"},"nodeType":"YulFunctionCall","src":"3443:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3433:6:11"}]}]},{"nodeType":"YulBlock","src":"3516:127:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3531:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3545:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3535:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3561:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3605:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3616:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3601:3:11"},"nodeType":"YulFunctionCall","src":"3601:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3625:7:11"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1305","nodeType":"YulIdentifier","src":"3571:29:11"},"nodeType":"YulFunctionCall","src":"3571:62:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3561:6:11"}]}]},{"nodeType":"YulBlock","src":"3653:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3668:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3682:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3672:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3698:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3733:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3744:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3729:3:11"},"nodeType":"YulFunctionCall","src":"3729:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3753:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3708:20:11"},"nodeType":"YulFunctionCall","src":"3708:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3698:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_enum$_Side_$1305t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3204:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3215:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3227:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3235:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3243:6:11","type":""}],"src":"3141:637:11"},{"body":{"nodeType":"YulBlock","src":"3867:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"3913:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3915:77:11"},"nodeType":"YulFunctionCall","src":"3915:79:11"},"nodeType":"YulExpressionStatement","src":"3915:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3888:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3897:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3884:3:11"},"nodeType":"YulFunctionCall","src":"3884:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3909:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3880:3:11"},"nodeType":"YulFunctionCall","src":"3880:32:11"},"nodeType":"YulIf","src":"3877:119:11"},{"nodeType":"YulBlock","src":"4006:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4021:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4035:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4025:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4050:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4085:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4096:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4081:3:11"},"nodeType":"YulFunctionCall","src":"4081:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4105:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4060:20:11"},"nodeType":"YulFunctionCall","src":"4060:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4050:6:11"}]}]},{"nodeType":"YulBlock","src":"4133:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4148:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4162:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4152:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4178:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4213:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4224:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4209:3:11"},"nodeType":"YulFunctionCall","src":"4209:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4233:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4188:20:11"},"nodeType":"YulFunctionCall","src":"4188:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4178:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3829:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3840:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3852:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3860:6:11","type":""}],"src":"3784:474:11"},{"body":{"nodeType":"YulBlock","src":"4412:903:11","statements":[{"body":{"nodeType":"YulBlock","src":"4459:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4461:77:11"},"nodeType":"YulFunctionCall","src":"4461:79:11"},"nodeType":"YulExpressionStatement","src":"4461:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4433:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4442:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4429:3:11"},"nodeType":"YulFunctionCall","src":"4429:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4454:3:11","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4425:3:11"},"nodeType":"YulFunctionCall","src":"4425:33:11"},"nodeType":"YulIf","src":"4422:120:11"},{"nodeType":"YulBlock","src":"4552:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4567:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4581:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4571:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4596:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4631:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4642:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4627:3:11"},"nodeType":"YulFunctionCall","src":"4627:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4651:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4606:20:11"},"nodeType":"YulFunctionCall","src":"4606:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4596:6:11"}]}]},{"nodeType":"YulBlock","src":"4679:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4694:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4708:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4698:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:11"},"nodeType":"YulFunctionCall","src":"4755:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4734:20:11"},"nodeType":"YulFunctionCall","src":"4734:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4724:6:11"}]}]},{"nodeType":"YulBlock","src":"4807:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:11"},"nodeType":"YulFunctionCall","src":"4883:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4862:20:11"},"nodeType":"YulFunctionCall","src":"4862:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4852:6:11"}]}]},{"nodeType":"YulBlock","src":"4935:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4950:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4964:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4954:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4980:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5015:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5026:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5011:3:11"},"nodeType":"YulFunctionCall","src":"5011:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5035:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4990:20:11"},"nodeType":"YulFunctionCall","src":"4990:53:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4980:6:11"}]}]},{"nodeType":"YulBlock","src":"5063:119:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5078:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5092:3:11","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5082:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5109:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5144:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5155:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5140:3:11"},"nodeType":"YulFunctionCall","src":"5140:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5164:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5119:20:11"},"nodeType":"YulFunctionCall","src":"5119:53:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5109:6:11"}]}]},{"nodeType":"YulBlock","src":"5192:116:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5207:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5221:3:11","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5211:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5238:60:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5270:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5281:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5266:3:11"},"nodeType":"YulFunctionCall","src":"5266:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5290:7:11"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"5248:17:11"},"nodeType":"YulFunctionCall","src":"5248:50:11"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5238:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4342:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4353:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4365:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4373:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4381:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4389:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4397:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4405:6:11","type":""}],"src":"4264:1051:11"},{"body":{"nodeType":"YulBlock","src":"5421:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"5467:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5469:77:11"},"nodeType":"YulFunctionCall","src":"5469:79:11"},"nodeType":"YulExpressionStatement","src":"5469:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5442:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5451:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5438:3:11"},"nodeType":"YulFunctionCall","src":"5438:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5463:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5434:3:11"},"nodeType":"YulFunctionCall","src":"5434:32:11"},"nodeType":"YulIf","src":"5431:119:11"},{"nodeType":"YulBlock","src":"5560:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5575:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5589:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5579:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5604:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5639:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5650:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5635:3:11"},"nodeType":"YulFunctionCall","src":"5635:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5659:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5614:20:11"},"nodeType":"YulFunctionCall","src":"5614:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5604:6:11"}]}]},{"nodeType":"YulBlock","src":"5687:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5702:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5716:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5706:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5732:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5767:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5778:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5763:3:11"},"nodeType":"YulFunctionCall","src":"5763:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5787:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5742:20:11"},"nodeType":"YulFunctionCall","src":"5742:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5732:6:11"}]}]},{"nodeType":"YulBlock","src":"5815:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5830:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5844:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5834:6:11","type":""}]},{"nodeType":"YulAssignment","src":"5860:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5895:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5906:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5891:3:11"},"nodeType":"YulFunctionCall","src":"5891:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5915:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5870:20:11"},"nodeType":"YulFunctionCall","src":"5870:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5860:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5375:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5386:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5398:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5406:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5414:6:11","type":""}],"src":"5321:619:11"},{"body":{"nodeType":"YulBlock","src":"6055:528:11","statements":[{"body":{"nodeType":"YulBlock","src":"6101:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6103:77:11"},"nodeType":"YulFunctionCall","src":"6103:79:11"},"nodeType":"YulExpressionStatement","src":"6103:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6076:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6085:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6072:3:11"},"nodeType":"YulFunctionCall","src":"6072:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6097:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6068:3:11"},"nodeType":"YulFunctionCall","src":"6068:32:11"},"nodeType":"YulIf","src":"6065:119:11"},{"nodeType":"YulBlock","src":"6194:126:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6209:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6223:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6213:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6238:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6282:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6293:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6278:3:11"},"nodeType":"YulFunctionCall","src":"6278:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6302:7:11"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1305","nodeType":"YulIdentifier","src":"6248:29:11"},"nodeType":"YulFunctionCall","src":"6248:62:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6238:6:11"}]}]},{"nodeType":"YulBlock","src":"6330:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6345:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6359:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6349:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6375:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6410:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6421:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6406:3:11"},"nodeType":"YulFunctionCall","src":"6406:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6430:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6385:20:11"},"nodeType":"YulFunctionCall","src":"6385:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6375:6:11"}]}]},{"nodeType":"YulBlock","src":"6458:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6473:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6487:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6477:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6503:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6538:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6549:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6534:3:11"},"nodeType":"YulFunctionCall","src":"6534:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6558:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6513:20:11"},"nodeType":"YulFunctionCall","src":"6513:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6503:6:11"}]}]}]},"name":"abi_decode_tuple_t_enum$_Side_$1305t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6009:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6020:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6032:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6040:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6048:6:11","type":""}],"src":"5946:637:11"},{"body":{"nodeType":"YulBlock","src":"6715:657:11","statements":[{"body":{"nodeType":"YulBlock","src":"6762:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6764:77:11"},"nodeType":"YulFunctionCall","src":"6764:79:11"},"nodeType":"YulExpressionStatement","src":"6764:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6736:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6745:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6732:3:11"},"nodeType":"YulFunctionCall","src":"6732:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6757:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6728:3:11"},"nodeType":"YulFunctionCall","src":"6728:33:11"},"nodeType":"YulIf","src":"6725:120:11"},{"nodeType":"YulBlock","src":"6855:126:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6870:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6884:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6874:6:11","type":""}]},{"nodeType":"YulAssignment","src":"6899:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6943:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6954:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6939:3:11"},"nodeType":"YulFunctionCall","src":"6939:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6963:7:11"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1305","nodeType":"YulIdentifier","src":"6909:29:11"},"nodeType":"YulFunctionCall","src":"6909:62:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6899:6:11"}]}]},{"nodeType":"YulBlock","src":"6991:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7006:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7020:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7010:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7036:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7071:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7082:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7067:3:11"},"nodeType":"YulFunctionCall","src":"7067:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7091:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7046:20:11"},"nodeType":"YulFunctionCall","src":"7046:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7036:6:11"}]}]},{"nodeType":"YulBlock","src":"7119:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7134:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7148:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7138:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7164:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7199:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7210:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7195:3:11"},"nodeType":"YulFunctionCall","src":"7195:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7219:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7174:20:11"},"nodeType":"YulFunctionCall","src":"7174:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7164:6:11"}]}]},{"nodeType":"YulBlock","src":"7247:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7262:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7276:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7266:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7292:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7327:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7338:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7323:3:11"},"nodeType":"YulFunctionCall","src":"7323:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7347:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7302:20:11"},"nodeType":"YulFunctionCall","src":"7302:53:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7292:6:11"}]}]}]},"name":"abi_decode_tuple_t_enum$_Side_$1305t_uint256t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6661:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6672:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6684:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6692:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6700:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6708:6:11","type":""}],"src":"6589:783:11"},{"body":{"nodeType":"YulBlock","src":"7444:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"7490:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7492:77:11"},"nodeType":"YulFunctionCall","src":"7492:79:11"},"nodeType":"YulExpressionStatement","src":"7492:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7465:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7474:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7461:3:11"},"nodeType":"YulFunctionCall","src":"7461:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7486:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7457:3:11"},"nodeType":"YulFunctionCall","src":"7457:32:11"},"nodeType":"YulIf","src":"7454:119:11"},{"nodeType":"YulBlock","src":"7583:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7598:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7612:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7602:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7627:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7662:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7673:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7658:3:11"},"nodeType":"YulFunctionCall","src":"7658:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7682:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7637:20:11"},"nodeType":"YulFunctionCall","src":"7637:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7627:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7414:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7425:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7437:6:11","type":""}],"src":"7378:329:11"},{"body":{"nodeType":"YulBlock","src":"7790:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"7836:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7838:77:11"},"nodeType":"YulFunctionCall","src":"7838:79:11"},"nodeType":"YulExpressionStatement","src":"7838:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7811:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7820:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7807:3:11"},"nodeType":"YulFunctionCall","src":"7807:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7832:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7803:3:11"},"nodeType":"YulFunctionCall","src":"7803:32:11"},"nodeType":"YulIf","src":"7800:119:11"},{"nodeType":"YulBlock","src":"7929:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7944:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7958:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7948:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7973:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8019:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8030:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8015:3:11"},"nodeType":"YulFunctionCall","src":"8015:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8039:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7983:31:11"},"nodeType":"YulFunctionCall","src":"7983:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7973:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7760:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7771:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7783:6:11","type":""}],"src":"7713:351:11"},{"body":{"nodeType":"YulBlock","src":"8196:657:11","statements":[{"body":{"nodeType":"YulBlock","src":"8243:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8245:77:11"},"nodeType":"YulFunctionCall","src":"8245:79:11"},"nodeType":"YulExpressionStatement","src":"8245:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8217:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8226:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8213:3:11"},"nodeType":"YulFunctionCall","src":"8213:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"8238:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8209:3:11"},"nodeType":"YulFunctionCall","src":"8209:33:11"},"nodeType":"YulIf","src":"8206:120:11"},{"nodeType":"YulBlock","src":"8336:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8351:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8365:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8355:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8380:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8415:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8426:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8411:3:11"},"nodeType":"YulFunctionCall","src":"8411:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8435:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8390:20:11"},"nodeType":"YulFunctionCall","src":"8390:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8380:6:11"}]}]},{"nodeType":"YulBlock","src":"8463:127:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8478:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8492:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8482:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8508:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8552:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8563:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8548:3:11"},"nodeType":"YulFunctionCall","src":"8548:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8572:7:11"}],"functionName":{"name":"abi_decode_t_enum$_Side_$1305","nodeType":"YulIdentifier","src":"8518:29:11"},"nodeType":"YulFunctionCall","src":"8518:62:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8508:6:11"}]}]},{"nodeType":"YulBlock","src":"8600:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8615:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8629:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8619:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8645:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8680:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8691:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8676:3:11"},"nodeType":"YulFunctionCall","src":"8676:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8700:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8655:20:11"},"nodeType":"YulFunctionCall","src":"8655:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8645:6:11"}]}]},{"nodeType":"YulBlock","src":"8728:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8743:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8757:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8747:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8773:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8808:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8819:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8804:3:11"},"nodeType":"YulFunctionCall","src":"8804:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8828:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8783:20:11"},"nodeType":"YulFunctionCall","src":"8783:53:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8773:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_enum$_Side_$1305t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8142:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8153:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8165:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8173:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8181:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8189:6:11","type":""}],"src":"8070:783:11"},{"body":{"nodeType":"YulBlock","src":"8914:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8931:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8954:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8936:17:11"},"nodeType":"YulFunctionCall","src":"8936:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8924:6:11"},"nodeType":"YulFunctionCall","src":"8924:37:11"},"nodeType":"YulExpressionStatement","src":"8924:37:11"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8902:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8909:3:11","type":""}],"src":"8859:108:11"},{"body":{"nodeType":"YulBlock","src":"9038:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9055:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9078:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9060:17:11"},"nodeType":"YulFunctionCall","src":"9060:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9048:6:11"},"nodeType":"YulFunctionCall","src":"9048:37:11"},"nodeType":"YulExpressionStatement","src":"9048:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9026:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9033:3:11","type":""}],"src":"8973:118:11"},{"body":{"nodeType":"YulBlock","src":"9146:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9163:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9183:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9168:14:11"},"nodeType":"YulFunctionCall","src":"9168:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9156:6:11"},"nodeType":"YulFunctionCall","src":"9156:34:11"},"nodeType":"YulExpressionStatement","src":"9156:34:11"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9134:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9141:3:11","type":""}],"src":"9097:99:11"},{"body":{"nodeType":"YulBlock","src":"9261:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9278:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9298:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9283:14:11"},"nodeType":"YulFunctionCall","src":"9283:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9271:6:11"},"nodeType":"YulFunctionCall","src":"9271:34:11"},"nodeType":"YulExpressionStatement","src":"9271:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9249:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9256:3:11","type":""}],"src":"9202:109:11"},{"body":{"nodeType":"YulBlock","src":"9379:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9396:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9439:5:11"}],"functionName":{"name":"convert_t_enum$_Side_$1305_to_t_uint8","nodeType":"YulIdentifier","src":"9401:37:11"},"nodeType":"YulFunctionCall","src":"9401:44:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9389:6:11"},"nodeType":"YulFunctionCall","src":"9389:57:11"},"nodeType":"YulExpressionStatement","src":"9389:57:11"}]},"name":"abi_encode_t_enum$_Side_$1305_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9367:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9374:3:11","type":""}],"src":"9317:135:11"},{"body":{"nodeType":"YulBlock","src":"9530:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9547:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9590:5:11"}],"functionName":{"name":"convert_t_enum$_Side_$1305_to_t_uint8","nodeType":"YulIdentifier","src":"9552:37:11"},"nodeType":"YulFunctionCall","src":"9552:44:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9540:6:11"},"nodeType":"YulFunctionCall","src":"9540:57:11"},"nodeType":"YulExpressionStatement","src":"9540:57:11"}]},"name":"abi_encode_t_enum$_Side_$1305_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9518:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9525:3:11","type":""}],"src":"9458:145:11"},{"body":{"nodeType":"YulBlock","src":"9755:220:11","statements":[{"nodeType":"YulAssignment","src":"9765:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9831:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9836:2:11","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9772:58:11"},"nodeType":"YulFunctionCall","src":"9772:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9765:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9937:3:11"}],"functionName":{"name":"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","nodeType":"YulIdentifier","src":"9848:88:11"},"nodeType":"YulFunctionCall","src":"9848:93:11"},"nodeType":"YulExpressionStatement","src":"9848:93:11"},{"nodeType":"YulAssignment","src":"9950:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9961:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9966:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9957:3:11"},"nodeType":"YulFunctionCall","src":"9957:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9950:3:11"}]}]},"name":"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9743:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9751:3:11","type":""}],"src":"9609:366:11"},{"body":{"nodeType":"YulBlock","src":"10127:220:11","statements":[{"nodeType":"YulAssignment","src":"10137:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10203:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10208:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10144:58:11"},"nodeType":"YulFunctionCall","src":"10144:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10137:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10309:3:11"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"10220:88:11"},"nodeType":"YulFunctionCall","src":"10220:93:11"},"nodeType":"YulExpressionStatement","src":"10220:93:11"},{"nodeType":"YulAssignment","src":"10322:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10333:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10338:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10329:3:11"},"nodeType":"YulFunctionCall","src":"10329:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10322:3:11"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10115:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10123:3:11","type":""}],"src":"9981:366:11"},{"body":{"nodeType":"YulBlock","src":"10499:220:11","statements":[{"nodeType":"YulAssignment","src":"10509:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10575:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10580:2:11","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10516:58:11"},"nodeType":"YulFunctionCall","src":"10516:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10509:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10681:3:11"}],"functionName":{"name":"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","nodeType":"YulIdentifier","src":"10592:88:11"},"nodeType":"YulFunctionCall","src":"10592:93:11"},"nodeType":"YulExpressionStatement","src":"10592:93:11"},{"nodeType":"YulAssignment","src":"10694:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10705:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10710:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10701:3:11"},"nodeType":"YulFunctionCall","src":"10701:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10694:3:11"}]}]},"name":"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10487:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10495:3:11","type":""}],"src":"10353:366:11"},{"body":{"nodeType":"YulBlock","src":"10871:220:11","statements":[{"nodeType":"YulAssignment","src":"10881:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10947:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10952:2:11","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10888:58:11"},"nodeType":"YulFunctionCall","src":"10888:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10881:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11053:3:11"}],"functionName":{"name":"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","nodeType":"YulIdentifier","src":"10964:88:11"},"nodeType":"YulFunctionCall","src":"10964:93:11"},"nodeType":"YulExpressionStatement","src":"10964:93:11"},{"nodeType":"YulAssignment","src":"11066:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11077:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11082:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11073:3:11"},"nodeType":"YulFunctionCall","src":"11073:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11066:3:11"}]}]},"name":"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10859:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10867:3:11","type":""}],"src":"10725:366:11"},{"body":{"nodeType":"YulBlock","src":"11243:219:11","statements":[{"nodeType":"YulAssignment","src":"11253:73:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11319:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11324:1:11","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11260:58:11"},"nodeType":"YulFunctionCall","src":"11260:66:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11253:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11424:3:11"}],"functionName":{"name":"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","nodeType":"YulIdentifier","src":"11335:88:11"},"nodeType":"YulFunctionCall","src":"11335:93:11"},"nodeType":"YulExpressionStatement","src":"11335:93:11"},{"nodeType":"YulAssignment","src":"11437:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11448:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11453:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11444:3:11"},"nodeType":"YulFunctionCall","src":"11444:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11437:3:11"}]}]},"name":"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11231:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11239:3:11","type":""}],"src":"11097:365:11"},{"body":{"nodeType":"YulBlock","src":"11614:220:11","statements":[{"nodeType":"YulAssignment","src":"11624:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11690:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11695:2:11","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11631:58:11"},"nodeType":"YulFunctionCall","src":"11631:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11624:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11796:3:11"}],"functionName":{"name":"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","nodeType":"YulIdentifier","src":"11707:88:11"},"nodeType":"YulFunctionCall","src":"11707:93:11"},"nodeType":"YulExpressionStatement","src":"11707:93:11"},{"nodeType":"YulAssignment","src":"11809:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11820:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11825:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11816:3:11"},"nodeType":"YulFunctionCall","src":"11816:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11809:3:11"}]}]},"name":"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11602:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11610:3:11","type":""}],"src":"11468:366:11"},{"body":{"nodeType":"YulBlock","src":"11986:220:11","statements":[{"nodeType":"YulAssignment","src":"11996:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12062:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12067:2:11","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12003:58:11"},"nodeType":"YulFunctionCall","src":"12003:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11996:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12168:3:11"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"12079:88:11"},"nodeType":"YulFunctionCall","src":"12079:93:11"},"nodeType":"YulExpressionStatement","src":"12079:93:11"},{"nodeType":"YulAssignment","src":"12181:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12192:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12197:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12188:3:11"},"nodeType":"YulFunctionCall","src":"12188:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12181:3:11"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11974:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11982:3:11","type":""}],"src":"11840:366:11"},{"body":{"nodeType":"YulBlock","src":"12382:2007:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12392:28:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12408:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12413:6:11","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12404:3:11"},"nodeType":"YulFunctionCall","src":"12404:16:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"12396:4:11","type":""}]},{"nodeType":"YulBlock","src":"12430:162:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12463:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12493:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12500:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12489:3:11"},"nodeType":"YulFunctionCall","src":"12489:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12483:5:11"},"nodeType":"YulFunctionCall","src":"12483:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12467:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12553:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12571:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12576:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12567:3:11"},"nodeType":"YulFunctionCall","src":"12567:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12519:33:11"},"nodeType":"YulFunctionCall","src":"12519:63:11"},"nodeType":"YulExpressionStatement","src":"12519:63:11"}]},{"nodeType":"YulBlock","src":"12602:171:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12637:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12667:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12674:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12663:3:11"},"nodeType":"YulFunctionCall","src":"12663:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12657:5:11"},"nodeType":"YulFunctionCall","src":"12657:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12641:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12734:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12752:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12757:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12748:3:11"},"nodeType":"YulFunctionCall","src":"12748:14:11"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1305_to_t_uint8","nodeType":"YulIdentifier","src":"12693:40:11"},"nodeType":"YulFunctionCall","src":"12693:70:11"},"nodeType":"YulExpressionStatement","src":"12693:70:11"}]},{"nodeType":"YulBlock","src":"12783:164:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12818:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12848:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12855:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12844:3:11"},"nodeType":"YulFunctionCall","src":"12844:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12838:5:11"},"nodeType":"YulFunctionCall","src":"12838:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12822:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12908:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12926:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"12931:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12922:3:11"},"nodeType":"YulFunctionCall","src":"12922:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"12874:33:11"},"nodeType":"YulFunctionCall","src":"12874:63:11"},"nodeType":"YulExpressionStatement","src":"12874:63:11"}]},{"nodeType":"YulBlock","src":"12957:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12994:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13024:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13031:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13020:3:11"},"nodeType":"YulFunctionCall","src":"13020:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13014:5:11"},"nodeType":"YulFunctionCall","src":"13014:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12998:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13084:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13102:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13107:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13098:3:11"},"nodeType":"YulFunctionCall","src":"13098:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13050:33:11"},"nodeType":"YulFunctionCall","src":"13050:63:11"},"nodeType":"YulExpressionStatement","src":"13050:63:11"}]},{"nodeType":"YulBlock","src":"13133:167:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13171:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13201:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13208:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13197:3:11"},"nodeType":"YulFunctionCall","src":"13197:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13191:5:11"},"nodeType":"YulFunctionCall","src":"13191:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13175:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13261:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13279:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13284:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13275:3:11"},"nodeType":"YulFunctionCall","src":"13275:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13227:33:11"},"nodeType":"YulFunctionCall","src":"13227:63:11"},"nodeType":"YulExpressionStatement","src":"13227:63:11"}]},{"nodeType":"YulBlock","src":"13310:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13347:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13377:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13384:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13373:3:11"},"nodeType":"YulFunctionCall","src":"13373:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13367:5:11"},"nodeType":"YulFunctionCall","src":"13367:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13351:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13437:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13455:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13460:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13451:3:11"},"nodeType":"YulFunctionCall","src":"13451:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13403:33:11"},"nodeType":"YulFunctionCall","src":"13403:63:11"},"nodeType":"YulExpressionStatement","src":"13403:63:11"}]},{"nodeType":"YulBlock","src":"13486:167:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13524:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13554:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13561:4:11","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13550:3:11"},"nodeType":"YulFunctionCall","src":"13550:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13544:5:11"},"nodeType":"YulFunctionCall","src":"13544:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13528:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13614:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13632:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13637:4:11","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13628:3:11"},"nodeType":"YulFunctionCall","src":"13628:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13580:33:11"},"nodeType":"YulFunctionCall","src":"13580:63:11"},"nodeType":"YulExpressionStatement","src":"13580:63:11"}]},{"nodeType":"YulBlock","src":"13663:164:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13698:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13728:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13735:4:11","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13724:3:11"},"nodeType":"YulFunctionCall","src":"13724:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13718:5:11"},"nodeType":"YulFunctionCall","src":"13718:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13702:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13788:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13806:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13811:4:11","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13802:3:11"},"nodeType":"YulFunctionCall","src":"13802:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13754:33:11"},"nodeType":"YulFunctionCall","src":"13754:63:11"},"nodeType":"YulExpressionStatement","src":"13754:63:11"}]},{"nodeType":"YulBlock","src":"13837:179:11","statements":[{"nodeType":"YulVariableDeclaration","src":"13883:45:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13913:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13920:6:11","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13909:3:11"},"nodeType":"YulFunctionCall","src":"13909:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13903:5:11"},"nodeType":"YulFunctionCall","src":"13903:25:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13887:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13975:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13993:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"13998:6:11","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13989:3:11"},"nodeType":"YulFunctionCall","src":"13989:16:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13941:33:11"},"nodeType":"YulFunctionCall","src":"13941:65:11"},"nodeType":"YulExpressionStatement","src":"13941:65:11"}]},{"nodeType":"YulBlock","src":"14026:179:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14072:45:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14102:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"14109:6:11","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14098:3:11"},"nodeType":"YulFunctionCall","src":"14098:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14092:5:11"},"nodeType":"YulFunctionCall","src":"14092:25:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14076:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14164:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14182:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14187:6:11","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14178:3:11"},"nodeType":"YulFunctionCall","src":"14178:16:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14130:33:11"},"nodeType":"YulFunctionCall","src":"14130:65:11"},"nodeType":"YulExpressionStatement","src":"14130:65:11"}]},{"nodeType":"YulBlock","src":"14215:167:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14255:45:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14285:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"14292:6:11","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14281:3:11"},"nodeType":"YulFunctionCall","src":"14281:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14275:5:11"},"nodeType":"YulFunctionCall","src":"14275:25:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14259:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14341:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14359:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14364:6:11","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14355:3:11"},"nodeType":"YulFunctionCall","src":"14355:16:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"14313:27:11"},"nodeType":"YulFunctionCall","src":"14313:59:11"},"nodeType":"YulExpressionStatement","src":"14313:59:11"}]}]},"name":"abi_encode_t_struct$__Order_$1276_memory_ptr_to_t_struct$__Order_$1276_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12369:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12376:3:11","type":""}],"src":"12268:2121:11"},{"body":{"nodeType":"YulBlock","src":"14589:2204:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14599:28:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14615:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14620:6:11","type":"","value":"0x0180"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14611:3:11"},"nodeType":"YulFunctionCall","src":"14611:16:11"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14603:4:11","type":""}]},{"nodeType":"YulBlock","src":"14637:162:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14670:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14700:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"14707:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14696:3:11"},"nodeType":"YulFunctionCall","src":"14696:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14690:5:11"},"nodeType":"YulFunctionCall","src":"14690:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14674:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14760:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14778:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14783:4:11","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14774:3:11"},"nodeType":"YulFunctionCall","src":"14774:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14726:33:11"},"nodeType":"YulFunctionCall","src":"14726:63:11"},"nodeType":"YulExpressionStatement","src":"14726:63:11"}]},{"nodeType":"YulBlock","src":"14809:171:11","statements":[{"nodeType":"YulVariableDeclaration","src":"14844:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14874:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"14881:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14870:3:11"},"nodeType":"YulFunctionCall","src":"14870:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14864:5:11"},"nodeType":"YulFunctionCall","src":"14864:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14848:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14941:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14959:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"14964:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14955:3:11"},"nodeType":"YulFunctionCall","src":"14955:14:11"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1305_to_t_uint8","nodeType":"YulIdentifier","src":"14900:40:11"},"nodeType":"YulFunctionCall","src":"14900:70:11"},"nodeType":"YulExpressionStatement","src":"14900:70:11"}]},{"nodeType":"YulBlock","src":"14990:164:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15025:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15055:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"15062:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15051:3:11"},"nodeType":"YulFunctionCall","src":"15051:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15045:5:11"},"nodeType":"YulFunctionCall","src":"15045:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15029:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15115:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15133:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15138:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15129:3:11"},"nodeType":"YulFunctionCall","src":"15129:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"15081:33:11"},"nodeType":"YulFunctionCall","src":"15081:63:11"},"nodeType":"YulExpressionStatement","src":"15081:63:11"}]},{"nodeType":"YulBlock","src":"15164:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15201:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15231:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"15238:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15227:3:11"},"nodeType":"YulFunctionCall","src":"15227:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15221:5:11"},"nodeType":"YulFunctionCall","src":"15221:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15205:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15291:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15309:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15314:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15305:3:11"},"nodeType":"YulFunctionCall","src":"15305:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"15257:33:11"},"nodeType":"YulFunctionCall","src":"15257:63:11"},"nodeType":"YulExpressionStatement","src":"15257:63:11"}]},{"nodeType":"YulBlock","src":"15340:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15377:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15407:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"15414:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15403:3:11"},"nodeType":"YulFunctionCall","src":"15403:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15397:5:11"},"nodeType":"YulFunctionCall","src":"15397:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15381:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15467:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15485:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15490:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15481:3:11"},"nodeType":"YulFunctionCall","src":"15481:14:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"15433:33:11"},"nodeType":"YulFunctionCall","src":"15433:63:11"},"nodeType":"YulExpressionStatement","src":"15433:63:11"}]},{"nodeType":"YulBlock","src":"15516:172:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15559:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15589:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"15596:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15585:3:11"},"nodeType":"YulFunctionCall","src":"15585:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15579:5:11"},"nodeType":"YulFunctionCall","src":"15579:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15563:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15649:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15667:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15672:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15663:3:11"},"nodeType":"YulFunctionCall","src":"15663:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15615:33:11"},"nodeType":"YulFunctionCall","src":"15615:63:11"},"nodeType":"YulExpressionStatement","src":"15615:63:11"}]},{"nodeType":"YulBlock","src":"15698:168:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15737:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15767:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"15774:4:11","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15763:3:11"},"nodeType":"YulFunctionCall","src":"15763:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15757:5:11"},"nodeType":"YulFunctionCall","src":"15757:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15741:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"15827:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15845:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15850:4:11","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15841:3:11"},"nodeType":"YulFunctionCall","src":"15841:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15793:33:11"},"nodeType":"YulFunctionCall","src":"15793:63:11"},"nodeType":"YulExpressionStatement","src":"15793:63:11"}]},{"nodeType":"YulBlock","src":"15876:172:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15919:43:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15949:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"15956:4:11","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15945:3:11"},"nodeType":"YulFunctionCall","src":"15945:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15939:5:11"},"nodeType":"YulFunctionCall","src":"15939:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"15923:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16009:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16027:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16032:4:11","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16023:3:11"},"nodeType":"YulFunctionCall","src":"16023:14:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15975:33:11"},"nodeType":"YulFunctionCall","src":"15975:63:11"},"nodeType":"YulExpressionStatement","src":"15975:63:11"}]},{"nodeType":"YulBlock","src":"16058:179:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16104:45:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16134:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16141:6:11","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16130:3:11"},"nodeType":"YulFunctionCall","src":"16130:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16124:5:11"},"nodeType":"YulFunctionCall","src":"16124:25:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16108:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16196:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16214:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16219:6:11","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16210:3:11"},"nodeType":"YulFunctionCall","src":"16210:16:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16162:33:11"},"nodeType":"YulFunctionCall","src":"16162:65:11"},"nodeType":"YulExpressionStatement","src":"16162:65:11"}]},{"nodeType":"YulBlock","src":"16247:179:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16293:45:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16323:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16330:6:11","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16319:3:11"},"nodeType":"YulFunctionCall","src":"16319:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16313:5:11"},"nodeType":"YulFunctionCall","src":"16313:25:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16297:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16385:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16403:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16408:6:11","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16399:3:11"},"nodeType":"YulFunctionCall","src":"16399:16:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16351:33:11"},"nodeType":"YulFunctionCall","src":"16351:65:11"},"nodeType":"YulExpressionStatement","src":"16351:65:11"}]},{"nodeType":"YulBlock","src":"16436:168:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16477:45:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16507:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16514:6:11","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16503:3:11"},"nodeType":"YulFunctionCall","src":"16503:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16497:5:11"},"nodeType":"YulFunctionCall","src":"16497:25:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16481:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16563:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16581:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16586:6:11","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16577:3:11"},"nodeType":"YulFunctionCall","src":"16577:16:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"16535:27:11"},"nodeType":"YulFunctionCall","src":"16535:59:11"},"nodeType":"YulExpressionStatement","src":"16535:59:11"}]},{"nodeType":"YulBlock","src":"16614:172:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16653:45:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16683:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16690:6:11","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16679:3:11"},"nodeType":"YulFunctionCall","src":"16679:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16673:5:11"},"nodeType":"YulFunctionCall","src":"16673:25:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16657:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16745:12:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16763:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"16768:6:11","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16759:3:11"},"nodeType":"YulFunctionCall","src":"16759:16:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16711:33:11"},"nodeType":"YulFunctionCall","src":"16711:65:11"},"nodeType":"YulExpressionStatement","src":"16711:65:11"}]}]},"name":"abi_encode_t_struct$__filledOrder_$1302_memory_ptr_to_t_struct$__filledOrder_$1302_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14576:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14583:3:11","type":""}],"src":"14463:2330:11"},{"body":{"nodeType":"YulBlock","src":"16854:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16871:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16894:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16876:17:11"},"nodeType":"YulFunctionCall","src":"16876:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16864:6:11"},"nodeType":"YulFunctionCall","src":"16864:37:11"},"nodeType":"YulExpressionStatement","src":"16864:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16842:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16849:3:11","type":""}],"src":"16799:108:11"},{"body":{"nodeType":"YulBlock","src":"16978:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16995:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17018:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17000:17:11"},"nodeType":"YulFunctionCall","src":"17000:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16988:6:11"},"nodeType":"YulFunctionCall","src":"16988:37:11"},"nodeType":"YulExpressionStatement","src":"16988:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16966:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16973:3:11","type":""}],"src":"16913:118:11"},{"body":{"nodeType":"YulBlock","src":"17135:124:11","statements":[{"nodeType":"YulAssignment","src":"17145:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17157:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17168:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17153:3:11"},"nodeType":"YulFunctionCall","src":"17153:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17145:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17225:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17238:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17249:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17234:3:11"},"nodeType":"YulFunctionCall","src":"17234:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17181:43:11"},"nodeType":"YulFunctionCall","src":"17181:71:11"},"nodeType":"YulExpressionStatement","src":"17181:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17107:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17119:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17130:4:11","type":""}],"src":"17037:222:11"},{"body":{"nodeType":"YulBlock","src":"17391:206:11","statements":[{"nodeType":"YulAssignment","src":"17401:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17413:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17424:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17409:3:11"},"nodeType":"YulFunctionCall","src":"17409:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17401:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17481:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17494:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17505:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17490:3:11"},"nodeType":"YulFunctionCall","src":"17490:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17437:43:11"},"nodeType":"YulFunctionCall","src":"17437:71:11"},"nodeType":"YulExpressionStatement","src":"17437:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17562:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17575:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17586:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17571:3:11"},"nodeType":"YulFunctionCall","src":"17571:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17518:43:11"},"nodeType":"YulFunctionCall","src":"17518:72:11"},"nodeType":"YulExpressionStatement","src":"17518:72:11"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17355:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17367:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17375:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17386:4:11","type":""}],"src":"17265:332:11"},{"body":{"nodeType":"YulBlock","src":"17779:365:11","statements":[{"nodeType":"YulAssignment","src":"17789:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17801:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17812:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17797:3:11"},"nodeType":"YulFunctionCall","src":"17797:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17789:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17870:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17883:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17894:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17879:3:11"},"nodeType":"YulFunctionCall","src":"17879:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17826:43:11"},"nodeType":"YulFunctionCall","src":"17826:71:11"},"nodeType":"YulExpressionStatement","src":"17826:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17951:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17964:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17975:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17960:3:11"},"nodeType":"YulFunctionCall","src":"17960:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17907:43:11"},"nodeType":"YulFunctionCall","src":"17907:72:11"},"nodeType":"YulExpressionStatement","src":"17907:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18033:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18046:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18057:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18042:3:11"},"nodeType":"YulFunctionCall","src":"18042:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17989:43:11"},"nodeType":"YulFunctionCall","src":"17989:72:11"},"nodeType":"YulExpressionStatement","src":"17989:72:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18109:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18122:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18133:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18118:3:11"},"nodeType":"YulFunctionCall","src":"18118:18:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"18071:37:11"},"nodeType":"YulFunctionCall","src":"18071:66:11"},"nodeType":"YulExpressionStatement","src":"18071:66:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17727:9:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17739:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17747:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17755:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17763:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17774:4:11","type":""}],"src":"17603:541:11"},{"body":{"nodeType":"YulBlock","src":"18276:206:11","statements":[{"nodeType":"YulAssignment","src":"18286:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18298:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18309:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18294:3:11"},"nodeType":"YulFunctionCall","src":"18294:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18286:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18366:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18379:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18390:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18375:3:11"},"nodeType":"YulFunctionCall","src":"18375:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18322:43:11"},"nodeType":"YulFunctionCall","src":"18322:71:11"},"nodeType":"YulExpressionStatement","src":"18322:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18447:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18460:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18471:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18456:3:11"},"nodeType":"YulFunctionCall","src":"18456:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18403:43:11"},"nodeType":"YulFunctionCall","src":"18403:72:11"},"nodeType":"YulExpressionStatement","src":"18403:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18240:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18252:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18260:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18271:4:11","type":""}],"src":"18150:332:11"},{"body":{"nodeType":"YulBlock","src":"18580:118:11","statements":[{"nodeType":"YulAssignment","src":"18590:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18602:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18613:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18598:3:11"},"nodeType":"YulFunctionCall","src":"18598:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18590:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18664:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18677:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18688:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18673:3:11"},"nodeType":"YulFunctionCall","src":"18673:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"18626:37:11"},"nodeType":"YulFunctionCall","src":"18626:65:11"},"nodeType":"YulExpressionStatement","src":"18626:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18552:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18564:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18575:4:11","type":""}],"src":"18488:210:11"},{"body":{"nodeType":"YulBlock","src":"18875:248:11","statements":[{"nodeType":"YulAssignment","src":"18885:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18897:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18908:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18893:3:11"},"nodeType":"YulFunctionCall","src":"18893:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18885:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18932:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18943:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18928:3:11"},"nodeType":"YulFunctionCall","src":"18928:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18951:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"18957:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18947:3:11"},"nodeType":"YulFunctionCall","src":"18947:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18921:6:11"},"nodeType":"YulFunctionCall","src":"18921:47:11"},"nodeType":"YulExpressionStatement","src":"18921:47:11"},{"nodeType":"YulAssignment","src":"18977:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19111:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18985:124:11"},"nodeType":"YulFunctionCall","src":"18985:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18977:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18855:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18870:4:11","type":""}],"src":"18704:419:11"},{"body":{"nodeType":"YulBlock","src":"19300:248:11","statements":[{"nodeType":"YulAssignment","src":"19310:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19322:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19333:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19318:3:11"},"nodeType":"YulFunctionCall","src":"19318:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19310:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19357:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19368:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19353:3:11"},"nodeType":"YulFunctionCall","src":"19353:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19376:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"19382:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19372:3:11"},"nodeType":"YulFunctionCall","src":"19372:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19346:6:11"},"nodeType":"YulFunctionCall","src":"19346:47:11"},"nodeType":"YulExpressionStatement","src":"19346:47:11"},{"nodeType":"YulAssignment","src":"19402:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19536:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19410:124:11"},"nodeType":"YulFunctionCall","src":"19410:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19402:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19280:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19295:4:11","type":""}],"src":"19129:419:11"},{"body":{"nodeType":"YulBlock","src":"19725:248:11","statements":[{"nodeType":"YulAssignment","src":"19735:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19747:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19758:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19743:3:11"},"nodeType":"YulFunctionCall","src":"19743:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19735:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19782:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19793:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19778:3:11"},"nodeType":"YulFunctionCall","src":"19778:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19801:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"19807:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19797:3:11"},"nodeType":"YulFunctionCall","src":"19797:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19771:6:11"},"nodeType":"YulFunctionCall","src":"19771:47:11"},"nodeType":"YulExpressionStatement","src":"19771:47:11"},{"nodeType":"YulAssignment","src":"19827:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19961:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19835:124:11"},"nodeType":"YulFunctionCall","src":"19835:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19827:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19705:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19720:4:11","type":""}],"src":"19554:419:11"},{"body":{"nodeType":"YulBlock","src":"20150:248:11","statements":[{"nodeType":"YulAssignment","src":"20160:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20172:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20183:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20168:3:11"},"nodeType":"YulFunctionCall","src":"20168:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20160:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20207:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20218:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20203:3:11"},"nodeType":"YulFunctionCall","src":"20203:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20226:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"20232:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20222:3:11"},"nodeType":"YulFunctionCall","src":"20222:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20196:6:11"},"nodeType":"YulFunctionCall","src":"20196:47:11"},"nodeType":"YulExpressionStatement","src":"20196:47:11"},{"nodeType":"YulAssignment","src":"20252:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20386:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20260:124:11"},"nodeType":"YulFunctionCall","src":"20260:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20252:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20130:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20145:4:11","type":""}],"src":"19979:419:11"},{"body":{"nodeType":"YulBlock","src":"20575:248:11","statements":[{"nodeType":"YulAssignment","src":"20585:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20597:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20608:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20593:3:11"},"nodeType":"YulFunctionCall","src":"20593:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20585:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20632:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20643:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20628:3:11"},"nodeType":"YulFunctionCall","src":"20628:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20651:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"20657:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20647:3:11"},"nodeType":"YulFunctionCall","src":"20647:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20621:6:11"},"nodeType":"YulFunctionCall","src":"20621:47:11"},"nodeType":"YulExpressionStatement","src":"20621:47:11"},{"nodeType":"YulAssignment","src":"20677:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20811:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20685:124:11"},"nodeType":"YulFunctionCall","src":"20685:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20677:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20555:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20570:4:11","type":""}],"src":"20404:419:11"},{"body":{"nodeType":"YulBlock","src":"21000:248:11","statements":[{"nodeType":"YulAssignment","src":"21010:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21022:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21033:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21018:3:11"},"nodeType":"YulFunctionCall","src":"21018:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21010:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21057:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21068:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21053:3:11"},"nodeType":"YulFunctionCall","src":"21053:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21076:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"21082:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21072:3:11"},"nodeType":"YulFunctionCall","src":"21072:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21046:6:11"},"nodeType":"YulFunctionCall","src":"21046:47:11"},"nodeType":"YulExpressionStatement","src":"21046:47:11"},{"nodeType":"YulAssignment","src":"21102:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21236:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21110:124:11"},"nodeType":"YulFunctionCall","src":"21110:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21102:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20980:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20995:4:11","type":""}],"src":"20829:419:11"},{"body":{"nodeType":"YulBlock","src":"21425:248:11","statements":[{"nodeType":"YulAssignment","src":"21435:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21447:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21458:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21443:3:11"},"nodeType":"YulFunctionCall","src":"21443:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21435:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21482:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21493:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21478:3:11"},"nodeType":"YulFunctionCall","src":"21478:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21501:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"21507:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21497:3:11"},"nodeType":"YulFunctionCall","src":"21497:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21471:6:11"},"nodeType":"YulFunctionCall","src":"21471:47:11"},"nodeType":"YulExpressionStatement","src":"21471:47:11"},{"nodeType":"YulAssignment","src":"21527:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21661:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21535:124:11"},"nodeType":"YulFunctionCall","src":"21535:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21527:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21405:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21420:4:11","type":""}],"src":"21254:419:11"},{"body":{"nodeType":"YulBlock","src":"21825:173:11","statements":[{"nodeType":"YulAssignment","src":"21835:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21847:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21858:3:11","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21843:3:11"},"nodeType":"YulFunctionCall","src":"21843:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21835:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21964:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21977:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21988:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21973:3:11"},"nodeType":"YulFunctionCall","src":"21973:17:11"}],"functionName":{"name":"abi_encode_t_struct$__Order_$1276_memory_ptr_to_t_struct$__Order_$1276_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21872:91:11"},"nodeType":"YulFunctionCall","src":"21872:119:11"},"nodeType":"YulExpressionStatement","src":"21872:119:11"}]},"name":"abi_encode_tuple_t_struct$__Order_$1276_memory_ptr__to_t_struct$__Order_$1276_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21797:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21809:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21820:4:11","type":""}],"src":"21679:319:11"},{"body":{"nodeType":"YulBlock","src":"22178:256:11","statements":[{"nodeType":"YulAssignment","src":"22188:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22200:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22211:3:11","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22196:3:11"},"nodeType":"YulFunctionCall","src":"22196:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22188:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22317:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22330:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22341:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22326:3:11"},"nodeType":"YulFunctionCall","src":"22326:17:11"}],"functionName":{"name":"abi_encode_t_struct$__Order_$1276_memory_ptr_to_t_struct$__Order_$1276_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22225:91:11"},"nodeType":"YulFunctionCall","src":"22225:119:11"},"nodeType":"YulExpressionStatement","src":"22225:119:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22398:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22411:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22422:3:11","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22407:3:11"},"nodeType":"YulFunctionCall","src":"22407:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22354:43:11"},"nodeType":"YulFunctionCall","src":"22354:73:11"},"nodeType":"YulExpressionStatement","src":"22354:73:11"}]},"name":"abi_encode_tuple_t_struct$__Order_$1276_memory_ptr_t_uint256__to_t_struct$__Order_$1276_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22142:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22154:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22162:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22173:4:11","type":""}],"src":"22004:430:11"},{"body":{"nodeType":"YulBlock","src":"22598:185:11","statements":[{"nodeType":"YulAssignment","src":"22608:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22620:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22631:3:11","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22616:3:11"},"nodeType":"YulFunctionCall","src":"22616:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22608:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22749:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22762:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22773:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22758:3:11"},"nodeType":"YulFunctionCall","src":"22758:17:11"}],"functionName":{"name":"abi_encode_t_struct$__filledOrder_$1302_memory_ptr_to_t_struct$__filledOrder_$1302_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22645:103:11"},"nodeType":"YulFunctionCall","src":"22645:131:11"},"nodeType":"YulExpressionStatement","src":"22645:131:11"}]},"name":"abi_encode_tuple_t_struct$__filledOrder_$1302_memory_ptr__to_t_struct$__filledOrder_$1302_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22570:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22582:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22593:4:11","type":""}],"src":"22440:343:11"},{"body":{"nodeType":"YulBlock","src":"22887:124:11","statements":[{"nodeType":"YulAssignment","src":"22897:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22909:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22920:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22905:3:11"},"nodeType":"YulFunctionCall","src":"22905:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22897:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22977:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22990:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23001:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22986:3:11"},"nodeType":"YulFunctionCall","src":"22986:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22933:43:11"},"nodeType":"YulFunctionCall","src":"22933:71:11"},"nodeType":"YulExpressionStatement","src":"22933:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22859:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22871:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22882:4:11","type":""}],"src":"22789:222:11"},{"body":{"nodeType":"YulBlock","src":"23426:1038:11","statements":[{"nodeType":"YulAssignment","src":"23436:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23448:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23459:3:11","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23444:3:11"},"nodeType":"YulFunctionCall","src":"23444:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23436:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23517:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23530:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23541:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23526:3:11"},"nodeType":"YulFunctionCall","src":"23526:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23473:43:11"},"nodeType":"YulFunctionCall","src":"23473:71:11"},"nodeType":"YulExpressionStatement","src":"23473:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23605:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23618:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23629:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23614:3:11"},"nodeType":"YulFunctionCall","src":"23614:18:11"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1305_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"23554:50:11"},"nodeType":"YulFunctionCall","src":"23554:79:11"},"nodeType":"YulExpressionStatement","src":"23554:79:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23687:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23700:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23711:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23696:3:11"},"nodeType":"YulFunctionCall","src":"23696:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23643:43:11"},"nodeType":"YulFunctionCall","src":"23643:72:11"},"nodeType":"YulExpressionStatement","src":"23643:72:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23769:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23782:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23793:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23778:3:11"},"nodeType":"YulFunctionCall","src":"23778:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23725:43:11"},"nodeType":"YulFunctionCall","src":"23725:72:11"},"nodeType":"YulExpressionStatement","src":"23725:72:11"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23851:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23864:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23875:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23860:3:11"},"nodeType":"YulFunctionCall","src":"23860:19:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23807:43:11"},"nodeType":"YulFunctionCall","src":"23807:73:11"},"nodeType":"YulExpressionStatement","src":"23807:73:11"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23934:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23947:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23958:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23943:3:11"},"nodeType":"YulFunctionCall","src":"23943:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23890:43:11"},"nodeType":"YulFunctionCall","src":"23890:73:11"},"nodeType":"YulExpressionStatement","src":"23890:73:11"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"24017:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24030:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24041:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24026:3:11"},"nodeType":"YulFunctionCall","src":"24026:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23973:43:11"},"nodeType":"YulFunctionCall","src":"23973:73:11"},"nodeType":"YulExpressionStatement","src":"23973:73:11"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"24100:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24113:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24124:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24109:3:11"},"nodeType":"YulFunctionCall","src":"24109:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24056:43:11"},"nodeType":"YulFunctionCall","src":"24056:73:11"},"nodeType":"YulExpressionStatement","src":"24056:73:11"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"24183:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24196:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24207:3:11","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24192:3:11"},"nodeType":"YulFunctionCall","src":"24192:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24139:43:11"},"nodeType":"YulFunctionCall","src":"24139:73:11"},"nodeType":"YulExpressionStatement","src":"24139:73:11"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"24266:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24279:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24290:3:11","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24275:3:11"},"nodeType":"YulFunctionCall","src":"24275:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24222:43:11"},"nodeType":"YulFunctionCall","src":"24222:73:11"},"nodeType":"YulExpressionStatement","src":"24222:73:11"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"24343:7:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24357:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24368:3:11","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24353:3:11"},"nodeType":"YulFunctionCall","src":"24353:19:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"24305:37:11"},"nodeType":"YulFunctionCall","src":"24305:68:11"},"nodeType":"YulExpressionStatement","src":"24305:68:11"},{"expression":{"arguments":[{"name":"value11","nodeType":"YulIdentifier","src":"24427:7:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24441:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24452:3:11","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24437:3:11"},"nodeType":"YulFunctionCall","src":"24437:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24383:43:11"},"nodeType":"YulFunctionCall","src":"24383:74:11"},"nodeType":"YulExpressionStatement","src":"24383:74:11"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_Side_$1305_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23308:9:11","type":""},{"name":"value11","nodeType":"YulTypedName","src":"23320:7:11","type":""},{"name":"value10","nodeType":"YulTypedName","src":"23329:7:11","type":""},{"name":"value9","nodeType":"YulTypedName","src":"23338:6:11","type":""},{"name":"value8","nodeType":"YulTypedName","src":"23346:6:11","type":""},{"name":"value7","nodeType":"YulTypedName","src":"23354:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"23362:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23370:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23378:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23386:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23394:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23402:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23410:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23421:4:11","type":""}],"src":"23017:1447:11"},{"body":{"nodeType":"YulBlock","src":"24850:954:11","statements":[{"nodeType":"YulAssignment","src":"24860:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24872:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24883:3:11","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24868:3:11"},"nodeType":"YulFunctionCall","src":"24868:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24860:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24941:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24954:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24965:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24950:3:11"},"nodeType":"YulFunctionCall","src":"24950:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24897:43:11"},"nodeType":"YulFunctionCall","src":"24897:71:11"},"nodeType":"YulExpressionStatement","src":"24897:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25029:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25042:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25053:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25038:3:11"},"nodeType":"YulFunctionCall","src":"25038:18:11"}],"functionName":{"name":"abi_encode_t_enum$_Side_$1305_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"24978:50:11"},"nodeType":"YulFunctionCall","src":"24978:79:11"},"nodeType":"YulExpressionStatement","src":"24978:79:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25111:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25124:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25135:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25120:3:11"},"nodeType":"YulFunctionCall","src":"25120:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25067:43:11"},"nodeType":"YulFunctionCall","src":"25067:72:11"},"nodeType":"YulExpressionStatement","src":"25067:72:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25193:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25206:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25217:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25202:3:11"},"nodeType":"YulFunctionCall","src":"25202:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25149:43:11"},"nodeType":"YulFunctionCall","src":"25149:72:11"},"nodeType":"YulExpressionStatement","src":"25149:72:11"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25275:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25288:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25299:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25284:3:11"},"nodeType":"YulFunctionCall","src":"25284:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25231:43:11"},"nodeType":"YulFunctionCall","src":"25231:73:11"},"nodeType":"YulExpressionStatement","src":"25231:73:11"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"25358:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25371:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25382:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25367:3:11"},"nodeType":"YulFunctionCall","src":"25367:19:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25314:43:11"},"nodeType":"YulFunctionCall","src":"25314:73:11"},"nodeType":"YulExpressionStatement","src":"25314:73:11"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"25441:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25454:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25465:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25450:3:11"},"nodeType":"YulFunctionCall","src":"25450:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25397:43:11"},"nodeType":"YulFunctionCall","src":"25397:73:11"},"nodeType":"YulExpressionStatement","src":"25397:73:11"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"25524:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25537:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25548:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25533:3:11"},"nodeType":"YulFunctionCall","src":"25533:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25480:43:11"},"nodeType":"YulFunctionCall","src":"25480:73:11"},"nodeType":"YulExpressionStatement","src":"25480:73:11"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"25607:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25620:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25631:3:11","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25616:3:11"},"nodeType":"YulFunctionCall","src":"25616:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25563:43:11"},"nodeType":"YulFunctionCall","src":"25563:73:11"},"nodeType":"YulExpressionStatement","src":"25563:73:11"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"25690:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25703:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25714:3:11","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25699:3:11"},"nodeType":"YulFunctionCall","src":"25699:19:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25646:43:11"},"nodeType":"YulFunctionCall","src":"25646:73:11"},"nodeType":"YulExpressionStatement","src":"25646:73:11"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"25767:7:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25781:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25792:3:11","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25777:3:11"},"nodeType":"YulFunctionCall","src":"25777:19:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25729:37:11"},"nodeType":"YulFunctionCall","src":"25729:68:11"},"nodeType":"YulExpressionStatement","src":"25729:68:11"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_Side_$1305_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24741:9:11","type":""},{"name":"value10","nodeType":"YulTypedName","src":"24753:7:11","type":""},{"name":"value9","nodeType":"YulTypedName","src":"24762:6:11","type":""},{"name":"value8","nodeType":"YulTypedName","src":"24770:6:11","type":""},{"name":"value7","nodeType":"YulTypedName","src":"24778:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"24786:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"24794:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24802:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24810:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24818:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24826:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24834:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24845:4:11","type":""}],"src":"24470:1334:11"},{"body":{"nodeType":"YulBlock","src":"25850:35:11","statements":[{"nodeType":"YulAssignment","src":"25860:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25876:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25870:5:11"},"nodeType":"YulFunctionCall","src":"25870:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25860:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"25843:6:11","type":""}],"src":"25810:75:11"},{"body":{"nodeType":"YulBlock","src":"25987:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26004:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"26009:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25997:6:11"},"nodeType":"YulFunctionCall","src":"25997:19:11"},"nodeType":"YulExpressionStatement","src":"25997:19:11"},{"nodeType":"YulAssignment","src":"26025:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26044:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"26049:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26040:3:11"},"nodeType":"YulFunctionCall","src":"26040:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"26025:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25959:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"25964:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25975:11:11","type":""}],"src":"25891:169:11"},{"body":{"nodeType":"YulBlock","src":"26110:261:11","statements":[{"nodeType":"YulAssignment","src":"26120:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26143:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26125:17:11"},"nodeType":"YulFunctionCall","src":"26125:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26120:1:11"}]},{"nodeType":"YulAssignment","src":"26154:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26177:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26159:17:11"},"nodeType":"YulFunctionCall","src":"26159:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26154:1:11"}]},{"body":{"nodeType":"YulBlock","src":"26317:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26319:16:11"},"nodeType":"YulFunctionCall","src":"26319:18:11"},"nodeType":"YulExpressionStatement","src":"26319:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26238:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26245:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"26313:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26241:3:11"},"nodeType":"YulFunctionCall","src":"26241:74:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26235:2:11"},"nodeType":"YulFunctionCall","src":"26235:81:11"},"nodeType":"YulIf","src":"26232:107:11"},{"nodeType":"YulAssignment","src":"26349:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26360:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"26363:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26356:3:11"},"nodeType":"YulFunctionCall","src":"26356:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"26349:3:11"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26097:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"26100:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"26106:3:11","type":""}],"src":"26066:305:11"},{"body":{"nodeType":"YulBlock","src":"26422:146:11","statements":[{"nodeType":"YulAssignment","src":"26432:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26455:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26437:17:11"},"nodeType":"YulFunctionCall","src":"26437:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26432:1:11"}]},{"nodeType":"YulAssignment","src":"26466:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26489:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26471:17:11"},"nodeType":"YulFunctionCall","src":"26471:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26466:1:11"}]},{"body":{"nodeType":"YulBlock","src":"26513:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26515:16:11"},"nodeType":"YulFunctionCall","src":"26515:18:11"},"nodeType":"YulExpressionStatement","src":"26515:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26507:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"26510:1:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26504:2:11"},"nodeType":"YulFunctionCall","src":"26504:8:11"},"nodeType":"YulIf","src":"26501:34:11"},{"nodeType":"YulAssignment","src":"26545:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26557:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"26560:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26553:3:11"},"nodeType":"YulFunctionCall","src":"26553:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"26545:4:11"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26408:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"26411:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"26417:4:11","type":""}],"src":"26377:191:11"},{"body":{"nodeType":"YulBlock","src":"26619:51:11","statements":[{"nodeType":"YulAssignment","src":"26629:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26658:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"26640:17:11"},"nodeType":"YulFunctionCall","src":"26640:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26629:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26601:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26611:7:11","type":""}],"src":"26574:96:11"},{"body":{"nodeType":"YulBlock","src":"26718:48:11","statements":[{"nodeType":"YulAssignment","src":"26728:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26753:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26746:6:11"},"nodeType":"YulFunctionCall","src":"26746:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26739:6:11"},"nodeType":"YulFunctionCall","src":"26739:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26728:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26700:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26710:7:11","type":""}],"src":"26676:90:11"},{"body":{"nodeType":"YulBlock","src":"26826:75:11","statements":[{"nodeType":"YulAssignment","src":"26836:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"26847:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26836:7:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26889:5:11"}],"functionName":{"name":"validator_assert_t_enum$_Side_$1305","nodeType":"YulIdentifier","src":"26853:35:11"},"nodeType":"YulFunctionCall","src":"26853:42:11"},"nodeType":"YulExpressionStatement","src":"26853:42:11"}]},"name":"cleanup_t_enum$_Side_$1305","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26808:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26818:7:11","type":""}],"src":"26772:129:11"},{"body":{"nodeType":"YulBlock","src":"26952:81:11","statements":[{"nodeType":"YulAssignment","src":"26962:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26977:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"26984:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26973:3:11"},"nodeType":"YulFunctionCall","src":"26973:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26962:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26934:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26944:7:11","type":""}],"src":"26907:126:11"},{"body":{"nodeType":"YulBlock","src":"27084:32:11","statements":[{"nodeType":"YulAssignment","src":"27094:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"27105:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"27094:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27066:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"27076:7:11","type":""}],"src":"27039:77:11"},{"body":{"nodeType":"YulBlock","src":"27189:62:11","statements":[{"nodeType":"YulAssignment","src":"27199:46:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27239:5:11"}],"functionName":{"name":"cleanup_t_enum$_Side_$1305","nodeType":"YulIdentifier","src":"27212:26:11"},"nodeType":"YulFunctionCall","src":"27212:33:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"27199:9:11"}]}]},"name":"convert_t_enum$_Side_$1305_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27169:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"27179:9:11","type":""}],"src":"27122:129:11"},{"body":{"nodeType":"YulBlock","src":"27300:190:11","statements":[{"nodeType":"YulAssignment","src":"27310:33:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27337:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27319:17:11"},"nodeType":"YulFunctionCall","src":"27319:24:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27310:5:11"}]},{"body":{"nodeType":"YulBlock","src":"27433:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27435:16:11"},"nodeType":"YulFunctionCall","src":"27435:18:11"},"nodeType":"YulExpressionStatement","src":"27435:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27358:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"27365:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27355:2:11"},"nodeType":"YulFunctionCall","src":"27355:77:11"},"nodeType":"YulIf","src":"27352:103:11"},{"nodeType":"YulAssignment","src":"27464:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27475:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"27482:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27471:3:11"},"nodeType":"YulFunctionCall","src":"27471:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27464:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27286:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27296:3:11","type":""}],"src":"27257:233:11"},{"body":{"nodeType":"YulBlock","src":"27524:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27541:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27544:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27534:6:11"},"nodeType":"YulFunctionCall","src":"27534:88:11"},"nodeType":"YulExpressionStatement","src":"27534:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27638:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27641:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27631:6:11"},"nodeType":"YulFunctionCall","src":"27631:15:11"},"nodeType":"YulExpressionStatement","src":"27631:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27662:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27665:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27655:6:11"},"nodeType":"YulFunctionCall","src":"27655:15:11"},"nodeType":"YulExpressionStatement","src":"27655:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"27496:180:11"},{"body":{"nodeType":"YulBlock","src":"27710:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27727:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27730:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27720:6:11"},"nodeType":"YulFunctionCall","src":"27720:88:11"},"nodeType":"YulExpressionStatement","src":"27720:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27824:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27827:4:11","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27817:6:11"},"nodeType":"YulFunctionCall","src":"27817:15:11"},"nodeType":"YulExpressionStatement","src":"27817:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27848:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27851:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27841:6:11"},"nodeType":"YulFunctionCall","src":"27841:15:11"},"nodeType":"YulExpressionStatement","src":"27841:15:11"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"27682:180:11"},{"body":{"nodeType":"YulBlock","src":"27896:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27913:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27916:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27906:6:11"},"nodeType":"YulFunctionCall","src":"27906:88:11"},"nodeType":"YulExpressionStatement","src":"27906:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28010:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28013:4:11","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28003:6:11"},"nodeType":"YulFunctionCall","src":"28003:15:11"},"nodeType":"YulExpressionStatement","src":"28003:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28034:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28037:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28027:6:11"},"nodeType":"YulFunctionCall","src":"28027:15:11"},"nodeType":"YulExpressionStatement","src":"28027:15:11"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"27868:180:11"},{"body":{"nodeType":"YulBlock","src":"28082:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28099:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28102:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28092:6:11"},"nodeType":"YulFunctionCall","src":"28092:88:11"},"nodeType":"YulExpressionStatement","src":"28092:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28196:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28199:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28189:6:11"},"nodeType":"YulFunctionCall","src":"28189:15:11"},"nodeType":"YulExpressionStatement","src":"28189:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28220:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28223:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28213:6:11"},"nodeType":"YulFunctionCall","src":"28213:15:11"},"nodeType":"YulExpressionStatement","src":"28213:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"28054:180:11"},{"body":{"nodeType":"YulBlock","src":"28329:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28346:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28349:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28339:6:11"},"nodeType":"YulFunctionCall","src":"28339:12:11"},"nodeType":"YulExpressionStatement","src":"28339:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"28240:117:11"},{"body":{"nodeType":"YulBlock","src":"28452:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28469:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28472:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28462:6:11"},"nodeType":"YulFunctionCall","src":"28462:12:11"},"nodeType":"YulExpressionStatement","src":"28462:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"28363:117:11"},{"body":{"nodeType":"YulBlock","src":"28592:60:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28614:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"28622:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28610:3:11"},"nodeType":"YulFunctionCall","src":"28610:14:11"},{"hexValue":"496e76616c6964204f72646572204944","kind":"string","nodeType":"YulLiteral","src":"28626:18:11","type":"","value":"Invalid Order ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28603:6:11"},"nodeType":"YulFunctionCall","src":"28603:42:11"},"nodeType":"YulExpressionStatement","src":"28603:42:11"}]},"name":"store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28584:6:11","type":""}],"src":"28486:166:11"},{"body":{"nodeType":"YulBlock","src":"28764:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28786:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"28794:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28782:3:11"},"nodeType":"YulFunctionCall","src":"28782:14:11"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"28798:34:11","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28775:6:11"},"nodeType":"YulFunctionCall","src":"28775:58:11"},"nodeType":"YulExpressionStatement","src":"28775:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28854:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"28862:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28850:3:11"},"nodeType":"YulFunctionCall","src":"28850:15:11"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"28867:8:11","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28843:6:11"},"nodeType":"YulFunctionCall","src":"28843:33:11"},"nodeType":"YulExpressionStatement","src":"28843:33:11"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28756:6:11","type":""}],"src":"28658:225:11"},{"body":{"nodeType":"YulBlock","src":"28995:68:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29017:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29025:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29013:3:11"},"nodeType":"YulFunctionCall","src":"29013:14:11"},{"hexValue":"546f6b656e20756e617661696c61626c6520696e20444558","kind":"string","nodeType":"YulLiteral","src":"29029:26:11","type":"","value":"Token unavailable in DEX"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29006:6:11"},"nodeType":"YulFunctionCall","src":"29006:50:11"},"nodeType":"YulExpressionStatement","src":"29006:50:11"}]},"name":"store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28987:6:11","type":""}],"src":"28889:174:11"},{"body":{"nodeType":"YulBlock","src":"29175:62:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29197:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29205:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29193:3:11"},"nodeType":"YulFunctionCall","src":"29193:14:11"},{"hexValue":"496e73756666696369656e742046756e6473","kind":"string","nodeType":"YulLiteral","src":"29209:20:11","type":"","value":"Insufficient Funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29186:6:11"},"nodeType":"YulFunctionCall","src":"29186:44:11"},"nodeType":"YulExpressionStatement","src":"29186:44:11"}]},"name":"store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29167:6:11","type":""}],"src":"29069:168:11"},{"body":{"nodeType":"YulBlock","src":"29349:53:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29371:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29379:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29367:3:11"},"nodeType":"YulFunctionCall","src":"29367:14:11"},{"hexValue":"4e6f74204f776e6572","kind":"string","nodeType":"YulLiteral","src":"29383:11:11","type":"","value":"Not Owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29360:6:11"},"nodeType":"YulFunctionCall","src":"29360:35:11"},"nodeType":"YulExpressionStatement","src":"29360:35:11"}]},"name":"store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29341:6:11","type":""}],"src":"29243:159:11"},{"body":{"nodeType":"YulBlock","src":"29514:66:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29536:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29544:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29532:3:11"},"nodeType":"YulFunctionCall","src":"29532:14:11"},{"hexValue":"546f6b656e20616c7265616479207665726966696564","kind":"string","nodeType":"YulLiteral","src":"29548:24:11","type":"","value":"Token already verified"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29525:6:11"},"nodeType":"YulFunctionCall","src":"29525:48:11"},"nodeType":"YulExpressionStatement","src":"29525:48:11"}]},"name":"store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29506:6:11","type":""}],"src":"29408:172:11"},{"body":{"nodeType":"YulBlock","src":"29692:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29714:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"29722:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29710:3:11"},"nodeType":"YulFunctionCall","src":"29710:14:11"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"29726:34:11","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29703:6:11"},"nodeType":"YulFunctionCall","src":"29703:58:11"},"nodeType":"YulExpressionStatement","src":"29703:58:11"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29684:6:11","type":""}],"src":"29586:182:11"},{"body":{"nodeType":"YulBlock","src":"29826:62:11","statements":[{"body":{"nodeType":"YulBlock","src":"29860:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"29862:16:11"},"nodeType":"YulFunctionCall","src":"29862:18:11"},"nodeType":"YulExpressionStatement","src":"29862:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29849:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"29856:1:11","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29846:2:11"},"nodeType":"YulFunctionCall","src":"29846:12:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29839:6:11"},"nodeType":"YulFunctionCall","src":"29839:20:11"},"nodeType":"YulIf","src":"29836:46:11"}]},"name":"validator_assert_t_enum$_Side_$1305","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29819:5:11","type":""}],"src":"29774:114:11"},{"body":{"nodeType":"YulBlock","src":"29937:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"29994:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30003:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30006:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29996:6:11"},"nodeType":"YulFunctionCall","src":"29996:12:11"},"nodeType":"YulExpressionStatement","src":"29996:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29960:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29985:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"29967:17:11"},"nodeType":"YulFunctionCall","src":"29967:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29957:2:11"},"nodeType":"YulFunctionCall","src":"29957:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29950:6:11"},"nodeType":"YulFunctionCall","src":"29950:43:11"},"nodeType":"YulIf","src":"29947:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29930:5:11","type":""}],"src":"29894:122:11"},{"body":{"nodeType":"YulBlock","src":"30062:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"30116:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30125:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30128:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30118:6:11"},"nodeType":"YulFunctionCall","src":"30118:12:11"},"nodeType":"YulExpressionStatement","src":"30118:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30085:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30107:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"30092:14:11"},"nodeType":"YulFunctionCall","src":"30092:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30082:2:11"},"nodeType":"YulFunctionCall","src":"30082:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30075:6:11"},"nodeType":"YulFunctionCall","src":"30075:40:11"},"nodeType":"YulIf","src":"30072:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30055:5:11","type":""}],"src":"30022:116:11"},{"body":{"nodeType":"YulBlock","src":"30196:56:11","statements":[{"body":{"nodeType":"YulBlock","src":"30230:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30239:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30242:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30232:6:11"},"nodeType":"YulFunctionCall","src":"30232:12:11"},"nodeType":"YulExpressionStatement","src":"30232:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30219:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"30226:1:11","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30216:2:11"},"nodeType":"YulFunctionCall","src":"30216:12:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30209:6:11"},"nodeType":"YulFunctionCall","src":"30209:20:11"},"nodeType":"YulIf","src":"30206:40:11"}]},"name":"validator_revert_t_enum$_Side_$1305","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30189:5:11","type":""}],"src":"30144:108:11"},{"body":{"nodeType":"YulBlock","src":"30301:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"30358:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30367:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30370:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30360:6:11"},"nodeType":"YulFunctionCall","src":"30360:12:11"},"nodeType":"YulExpressionStatement","src":"30360:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30324:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30349:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30331:17:11"},"nodeType":"YulFunctionCall","src":"30331:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"30321:2:11"},"nodeType":"YulFunctionCall","src":"30321:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30314:6:11"},"nodeType":"YulFunctionCall","src":"30314:43:11"},"nodeType":"YulIf","src":"30311:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30294:5:11","type":""}],"src":"30258:122:11"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_enum$_Side_$1305(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Side_$1305(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_enum$_Side_$1305(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_enum$_Side_$1305(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Side_$1305(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$1305(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Side_$1305t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$1305(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$1305t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$1305(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$1305t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$1305(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_Side_$1305t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$1305(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_Side_$1305_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$1305_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Side_$1305_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$1305_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    // struct Exchange._Order -> struct Exchange._Order\n    function abi_encode_t_struct$__Order_$1276_memory_ptr_to_t_struct$__Order_$1276_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_Side_$1305_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tokenA\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountA\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tokenB\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountB\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // rate\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // originalAmountA\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // originalAmountB\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // waiveFees\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n    }\n\n    // struct Exchange._filledOrder -> struct Exchange._filledOrder\n    function abi_encode_t_struct$__filledOrder_$1302_memory_ptr_to_t_struct$__filledOrder_$1302_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0180)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_enum$_Side_$1305_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tokenA\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tokenB\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountFilled\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // fillRate\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // originalRate\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // originalAmountA\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // originalAmountB\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        {\n            // feesWaived\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0140))\n        }\n\n        {\n            // feesPaid\n\n            let memberValue0 := mload(add(value, 0x0160))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0160))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$__Order_$1276_memory_ptr__to_t_struct$__Order_$1276_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_struct$__Order_$1276_memory_ptr_to_t_struct$__Order_$1276_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$__Order_$1276_memory_ptr_t_uint256__to_t_struct$__Order_$1276_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_struct$__Order_$1276_memory_ptr_to_t_struct$__Order_$1276_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_struct$__filledOrder_$1302_memory_ptr__to_t_struct$__filledOrder_$1302_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_struct$__filledOrder_$1302_memory_ptr_to_t_struct$__filledOrder_$1302_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Side_$1305_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint8_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Side_$1305_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value11,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_Side_$1305_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Side_$1305_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Side_$1305(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Side_$1305(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Side_$1305_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Side_$1305(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_166c4c055667d38609aa6bb32046ad1c61288264549a85f7b7cce861a8d0b0a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Order ID\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2cadf07b6749cff5186c84bf4223678fa7822f9dc1ee69819e3a7fae5f7fdab3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token unavailable in DEX\")\n\n    }\n\n    function store_literal_in_memory_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Funds\")\n\n    }\n\n    function store_literal_in_memory_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Owner\")\n\n    }\n\n    function store_literal_in_memory_87bd97b41a902830a2cd1ae66316978c101efc572fa78b76108f549b1bec6430(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token already verified\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_assert_t_enum$_Side_$1305(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Side_$1305(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061014d5760003560e01c80639c07ce26116100c3578063c3364be41161007c578063c3364be4146103cf578063dafbfe6a146103ff578063e4c3c7cd1461041b578063ea42f34914610455578063f2fde38b14610485578063f90ef4f2146104a15761014d565b80639c07ce26146102f15780639ead72221461030f578063ac1a386a14610340578063af81c5b91461035c578063b136e39a14610378578063bd8098ec146103945761014d565b80636f4e410b116101155780636f4e410b1461022e578063715018a61461024a5780637bf1a627146102545780638da5cb5b146102725780638f101b0e1461029057806392e43d3a146102c05761014d565b80631027b2191461015257806314eca9dc146101825780631f69565f146101b2578063429d24b2146101e257806362c09cfa14610212575b600080fd5b61016c60048036038101906101679190613530565b6104bd565b6040516101799190613d4f565b60405180910390f35b61019c600480360381019061019791906137de565b610573565b6040516101a99190613ead565b60405180910390f35b6101cc60048036038101906101c79190613530565b610621565b6040516101d99190613ead565b60405180910390f35b6101fc60048036038101906101f791906138f2565b6106f7565b6040516102099190613d4f565b60405180910390f35b61022c600480360381019061022791906136fe565b6109e5565b005b610248600480360381019061024391906136fe565b610fff565b005b610252611618565b005b61025c61162c565b6040516102699190613c9d565b60405180910390f35b61027a611652565b6040516102879190613c9d565b60405180910390f35b6102aa60048036038101906102a5919061366b565b61167b565b6040516102b79190613e91565b60405180910390f35b6102da60048036038101906102d591906135c4565b6118be565b6040516102e8929190613e66565b60405180910390f35b6102f9611bc8565b6040516103069190613ead565b60405180910390f35b61032960048036038101906103249190613898565b611bce565b604051610337929190613d26565b60405180910390f35b61035a60048036038101906103559190613530565b611c22565b005b610376600480360381019061037191906136be565b611c6e565b005b610392600480360381019061038d9190613530565b611d6c565b005b6103ae60048036038101906103a9919061378b565b611db8565b6040516103c69c9b9a99989796959493929190613ec8565b60405180910390f35b6103e960048036038101906103e4919061362b565b611ebc565b6040516103f69190613ead565b60405180910390f35b61041960048036038101906104149190613530565b611f2c565b005b610435600480360381019061043091906135c4565b611f78565b60405161044c9b9a99989796959493929190613f82565b60405180910390f35b61046f600480360381019061046a919061355d565b612083565b60405161047c9190613e4a565b60405180910390f35b61049f600480360381019061049a9190613530565b6122fa565b005b6104bb60048036038101906104b69190613831565b61237e565b005b600080600090505b600680549050811015610568578273ffffffffffffffffffffffffffffffffffffffff16600682815481106104fd576104fc61420b565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561055557600191505061056e565b808061056090614135565b9150506104c5565b50600090505b919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000856001811115610606576106056141ad565b5b81526020019081526020016000208054905090509392505050565b600080600090505b6006805490508110156106f0578273ffffffffffffffffffffffffffffffffffffffff16600682815481106106615761066061420b565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106dd57600681815481106106c3576106c261420b565b5b9060005260206000209060020201600101549150506106f2565b80806106e890614135565b915050610629565b505b919050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086600181111561078b5761078a6141ad565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561098057838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff16600181111561080c5761080b6141ad565b5b600181111561081e5761081d6141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581525050815260200190600101906107b9565b50505050905060005b81518110156109d657868282815181106109a6576109a561420b565b5b60200260200101516000015114156109c3576001925050506109dd565b80806109ce90614135565b915050610989565b5060009150505b949350505050565b856109ef816104bd565b610a2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2590613daa565b60405180910390fd5b84610a38816104bd565b610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e90613daa565b60405180910390fd5b84610be3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338a6040518363ffffffff1660e01b8152600401610ad8929190613cb8565b60206040518083038186803b158015610af057600080fd5b505afa158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2891906138c5565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8a336040518363ffffffff1660e01b8152600401610b85929190613cb8565b60206040518083038186803b158015610b9d57600080fd5b505afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd591906138c5565b612ed390919063ffffffff16565b1015610c24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1b90613dca565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d633888860016040518563ffffffff1660e01b8152600401610c869493929190613ce1565b600060405180830381600087803b158015610ca057600080fd5b505af1158015610cb4573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000806001811115610d4957610d486141ad565b5b8152602001908152602001600020604051806101600160405280600954815260200160006001811115610d7f57610d7e6141ad565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115610e5a57610e596141ad565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546000338b8b8b8b8b8f8e8d604051610fd19b9a99989796959493929190613f82565b60405180910390a1610fef6001600954612ee990919063ffffffff16565b6009819055505050505050505050565b85611009816104bd565b611048576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103f90613daa565b60405180910390fd5b84611052816104bd565b611091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108890613daa565b60405180910390fd5b866111fd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fc121db338c6040518363ffffffff1660e01b81526004016110f2929190613cb8565b60206040518083038186803b15801561110a57600080fd5b505afa15801561111e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114291906138c5565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7888aec8c336040518363ffffffff1660e01b815260040161119f929190613cb8565b60206040518083038186803b1580156111b757600080fd5b505afa1580156111cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ef91906138c5565b612ed390919063ffffffff16565b101561123e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123590613dca565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338a8a60016040518563ffffffff1660e01b81526004016112a09493929190613ce1565b600060405180830381600087803b1580156112ba57600080fd5b505af11580156112ce573d6000803e3d6000fd5b50505050600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600180811115611363576113626141ad565b5b81526020019081526020016000206040518061016001604052806009548152602001600180811115611398576113976141ad565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187815260200186815260200189815260200187815260200185151581525090806001815401808255809150506001900390600052602060002090600a02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836001811115611473576114726141ad565b5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a08201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060155610100820151816007015561012082015181600801556101408201518160090160006101000a81548160ff02191690831515021790555050507fcb2df66a1a7db52683240584eca4355946d7b80a59dcb7707aa8dd95463ed7446009546001338b8b8b8b8b8f8e8d6040516115ea9b9a99989796959493929190613f82565b60405180910390a16116086001600954612ee990919063ffffffff16565b6009819055505050505050505050565b611620612eff565b61162a6000612f7d565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611683613049565b6000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008560018111156116d9576116d86141ad565b5b815260200190815260200160002083815481106116f9576116f861420b565b5b90600052602060002090600b020160405180610180016040529081600082015481526020016001820160009054906101000a900460ff166001811115611742576117416141ad565b5b6001811115611754576117536141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff16151515158152602001600a820154815250509050809150509392505050565b6118c6613100565b600080600090506000600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611b4357838290600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156119cf576119ce6141ad565b5b60018111156119e1576119e06141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250508152602001906001019061197c565b505050509050611b51613100565b5b8151831015611bb65785828481518110611b6f57611b6e61420b565b5b6020026020010151600001511415611ba357818381518110611b9457611b9361420b565b5b60200260200101519050611bb6565b8280611bae90614135565b935050611b52565b80839450945050505094509492505050565b60095481565b60068181548110611bde57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b611c2a612eff565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611c76612eff565b611c7f826104bd565b15611cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb690613e0a565b60405180910390fd5b600660405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b611d74612eff565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60086020528260005260406000206020528160005260406000208181548110611de057600080fd5b90600052602060002090600b020160009250925050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff169080600a015490508c565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836001811115611f1257611f116141ad565b5b815260200190815260200160002080549050905092915050565b611f34612eff565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60076020528360005260406000206020528260005260406000206020528160005260406000208181548110611fac57600080fd5b90600052602060002090600a02016000935093505050508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154908060070154908060080154908060090160009054906101000a900460ff1690508b565b61208b613100565b6000600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600181111561211e5761211d6141ad565b5b8152602001908152602001600020848154811061213e5761213d61420b565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff166001811115612187576121866141ad565b5b6001811115612199576121986141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff161515151581525050905080915050949350505050565b612302612eff565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161236990613d8a565b60405180910390fd5b61237b81612f7d565b50565b8284838361238e848484846106f7565b6123cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123c490613d6a565b60405180910390fd5b856123d7816104bd565b612416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240d90613daa565b60405180910390fd5b85612420816104bd565b61245f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161245690613daa565b60405180910390fd5b60008a6001811115612474576124736141ad565b5b90506000600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000209050600081805490509050612518613100565b600080600090505b83811015612732578e85828154811061253c5761253b61420b565b5b90600052602060002090600a020160000154141561271f5780915084818154811061256a5761256961420b565b5b90600052602060002090600a020160405180610160016040529081600082015481526020016001820160009054906101000a900460ff1660018111156125b3576125b26141ad565b5b60018111156125c5576125c46141ad565b5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820160009054906101000a900460ff1615151515815250509250612732565b808061272a90614135565b915050612520565b50600a60009054906101000a900460ff161561295357816040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146127ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127b190613dea565b60405180910390fd5b600060018111156127ce576127cd6141ad565b5b8f60018111156127e1576127e06141ad565b5b141561288857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338460a001518560c0015160006040518563ffffffff1660e01b81526004016128519493929190613ce1565b600060405180830381600087803b15801561286b57600080fd5b505af115801561287f573d6000803e3d6000fd5b50505050612952565b60018081111561289b5761289a6141ad565b5b8f60018111156128ae576128ad6141ad565b5b141561295157600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc11a3d6338460600151856080015160006040518563ffffffff1660e01b815260040161291e9493929190613ce1565b600060405180830381600087803b15801561293857600080fd5b505af115801561294c573d6000803e3d6000fd5b505050505b5b5b60008190505b6001846129669190614094565b811015612bb35784612982600183612ee990919063ffffffff16565b815481106129935761299261420b565b5b90600052602060002090600a02018582815481106129b4576129b361420b565b5b90600052602060002090600a0201600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115612a0457612a036141ad565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff0219169083151502179055509050508080612bab90614135565b915050612959565b5083612bc9600185612ed390919063ffffffff16565b81548110612bda57612bd961420b565b5b90600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff0219169055505083805480612cc957612cc86141dc565b5b60019003818190600052602060002090600a02016000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff02191690555050905583600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020908054612e4b9291906131b0565b507fa1cc643491754200d3eca5769e524a0fd00f9b0862b18d0da7d6e7277a83dfda8e83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c6101400151604051612eba9b9a99989796959493929190613f82565b60405180910390a1505050505050505050505050505050565b60008183612ee19190614094565b905092915050565b60008183612ef7919061403e565b905092915050565b612f07613041565b73ffffffffffffffffffffffffffffffffffffffff16612f25611652565b73ffffffffffffffffffffffffffffffffffffffff1614612f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f7290613e2a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610180016040528060008152602001600060018111156130705761306f6141ad565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600081525090565b6040518061016001604052806000815260200160006001811115613127576131266141ad565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b82805482825590600052602060002090600a0281019282156133d257600052602060002091600a0282015b828111156133d1578282600082015481600001556001820160009054906101000a900460ff168160010160006101000a81548160ff02191690836001811115613227576132266141ad565b5b02179055506001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582015481600501556006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900460ff168160090160006101000a81548160ff021916908315150217905550505091600a019190600a01906131db565b5b5090506133df91906133e3565b5090565b5b808211156134c3576000808201600090556001820160006101000a81549060ff02191690556001820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090556006820160009055600782016000905560088201600090556009820160006101000a81549060ff021916905550600a016133e4565b5090565b6000813590506134d681614398565b92915050565b6000813590506134eb816143af565b92915050565b600081359050613500816143c6565b92915050565b600081359050613515816143d6565b92915050565b60008151905061352a816143d6565b92915050565b6000602082840312156135465761354561423a565b5b6000613554848285016134c7565b91505092915050565b600080600080608085870312156135775761357661423a565b5b6000613585878288016134c7565b9450506020613596878288016134c7565b93505060406135a787828801613506565b92505060606135b8878288016134f1565b91505092959194509250565b600080600080608085870312156135de576135dd61423a565b5b60006135ec878288016134c7565b94505060206135fd878288016134c7565b935050604061360e87828801613506565b925050606061361f87828801613506565b91505092959194509250565b600080604083850312156136425761364161423a565b5b6000613650858286016134c7565b9250506020613661858286016134f1565b9150509250929050565b6000806000606084860312156136845761368361423a565b5b6000613692868287016134c7565b93505060206136a3868287016134f1565b92505060406136b486828701613506565b9150509250925092565b600080604083850312156136d5576136d461423a565b5b60006136e3858286016134c7565b92505060206136f485828601613506565b9150509250929050565b60008060008060008060c0878903121561371b5761371a61423a565b5b600061372989828a016134c7565b965050602061373a89828a01613506565b955050604061374b89828a016134c7565b945050606061375c89828a01613506565b935050608061376d89828a01613506565b92505060a061377e89828a016134dc565b9150509295509295509295565b6000806000606084860312156137a4576137a361423a565b5b60006137b2868287016134c7565b93505060206137c386828701613506565b92505060406137d486828701613506565b9150509250925092565b6000806000606084860312156137f7576137f661423a565b5b6000613805868287016134f1565b9350506020613816868287016134c7565b9250506040613827868287016134c7565b9150509250925092565b6000806000806080858703121561384b5761384a61423a565b5b6000613859878288016134f1565b945050602061386a87828801613506565b935050604061387b878288016134c7565b925050606061388c878288016134c7565b91505092959194509250565b6000602082840312156138ae576138ad61423a565b5b60006138bc84828501613506565b91505092915050565b6000602082840312156138db576138da61423a565b5b60006138e98482850161351b565b91505092915050565b6000806000806080858703121561390c5761390b61423a565b5b600061391a87828801613506565b945050602061392b878288016134f1565b935050604061393c878288016134c7565b925050606061394d878288016134c7565b91505092959194509250565b613962816140c8565b82525050565b613971816140c8565b82525050565b613980816140da565b82525050565b61398f816140da565b82525050565b61399e81614123565b82525050565b6139ad81614123565b82525050565b60006139c060108361402d565b91506139cb8261423f565b602082019050919050565b60006139e360268361402d565b91506139ee82614268565b604082019050919050565b6000613a0660188361402d565b9150613a11826142b7565b602082019050919050565b6000613a2960128361402d565b9150613a34826142e0565b602082019050919050565b6000613a4c60098361402d565b9150613a5782614309565b602082019050919050565b6000613a6f60168361402d565b9150613a7a82614332565b602082019050919050565b6000613a9260208361402d565b9150613a9d8261435b565b602082019050919050565b61016082016000820151613abf6000850182613c7f565b506020820151613ad26020850182613995565b506040820151613ae56040850182613959565b506060820151613af86060850182613959565b506080820151613b0b6080850182613c7f565b5060a0820151613b1e60a0850182613959565b5060c0820151613b3160c0850182613c7f565b5060e0820151613b4460e0850182613c7f565b50610100820151613b59610100850182613c7f565b50610120820151613b6e610120850182613c7f565b50610140820151613b83610140850182613977565b50505050565b61018082016000820151613ba06000850182613c7f565b506020820151613bb36020850182613995565b506040820151613bc66040850182613959565b506060820151613bd96060850182613959565b506080820151613bec6080850182613959565b5060a0820151613bff60a0850182613c7f565b5060c0820151613c1260c0850182613c7f565b5060e0820151613c2560e0850182613c7f565b50610100820151613c3a610100850182613c7f565b50610120820151613c4f610120850182613c7f565b50610140820151613c64610140850182613977565b50610160820151613c79610160850182613c7f565b50505050565b613c8881614119565b82525050565b613c9781614119565b82525050565b6000602082019050613cb26000830184613968565b92915050565b6000604082019050613ccd6000830185613968565b613cda6020830184613968565b9392505050565b6000608082019050613cf66000830187613968565b613d036020830186613968565b613d106040830185613c8e565b613d1d6060830184613986565b95945050505050565b6000604082019050613d3b6000830185613968565b613d486020830184613c8e565b9392505050565b6000602082019050613d646000830184613986565b92915050565b60006020820190508181036000830152613d83816139b3565b9050919050565b60006020820190508181036000830152613da3816139d6565b9050919050565b60006020820190508181036000830152613dc3816139f9565b9050919050565b60006020820190508181036000830152613de381613a1c565b9050919050565b60006020820190508181036000830152613e0381613a3f565b9050919050565b60006020820190508181036000830152613e2381613a62565b9050919050565b60006020820190508181036000830152613e4381613a85565b9050919050565b600061016082019050613e606000830184613aa8565b92915050565b600061018082019050613e7c6000830185613aa8565b613e8a610160830184613c8e565b9392505050565b600061018082019050613ea76000830184613b89565b92915050565b6000602082019050613ec26000830184613c8e565b92915050565b600061018082019050613ede600083018f613c8e565b613eeb602083018e6139a4565b613ef8604083018d613968565b613f05606083018c613968565b613f12608083018b613968565b613f1f60a083018a613c8e565b613f2c60c0830189613c8e565b613f3960e0830188613c8e565b613f47610100830187613c8e565b613f55610120830186613c8e565b613f63610140830185613986565b613f71610160830184613c8e565b9d9c50505050505050505050505050565b600061016082019050613f98600083018e613c8e565b613fa5602083018d6139a4565b613fb2604083018c613968565b613fbf606083018b613968565b613fcc608083018a613c8e565b613fd960a0830189613968565b613fe660c0830188613c8e565b613ff360e0830187613c8e565b614001610100830186613c8e565b61400f610120830185613c8e565b61401d610140830184613986565b9c9b505050505050505050505050565b600082825260208201905092915050565b600061404982614119565b915061405483614119565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156140895761408861417e565b5b828201905092915050565b600061409f82614119565b91506140aa83614119565b9250828210156140bd576140bc61417e565b5b828203905092915050565b60006140d3826140f9565b9050919050565b60008115159050919050565b60008190506140f482614384565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061412e826140e6565b9050919050565b600061414082614119565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156141735761417261417e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f496e76616c6964204f7264657220494400000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e20756e617661696c61626c6520696e204445580000000000000000600082015250565b7f496e73756666696369656e742046756e64730000000000000000000000000000600082015250565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b7f546f6b656e20616c726561647920766572696669656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60028110614395576143946141ad565b5b50565b6143a1816140c8565b81146143ac57600080fd5b50565b6143b8816140da565b81146143c357600080fd5b50565b600281106143d357600080fd5b50565b6143df81614119565b81146143ea57600080fd5b5056fea2646970667358221220b4527b55633c67351cc624550c5da4a9aedbfe9d49a4846f4d61b6b219b9906f64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C07CE26 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC3364BE4 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC3364BE4 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xDAFBFE6A EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xE4C3C7CD EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xEA42F349 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xF90EF4F2 EQ PUSH2 0x4A1 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x9C07CE26 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x9EAD7222 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xAF81C5B9 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xBD8098EC EQ PUSH2 0x394 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6F4E410B GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x6F4E410B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x8F101B0E EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x92E43D3A EQ PUSH2 0x2C0 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1027B219 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x14ECA9DC EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x1F69565F EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x429D24B2 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x62C09CFA EQ PUSH2 0x212 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x3D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x37DE JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x3D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0xFFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH2 0x1618 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH2 0x162C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x3C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x1652 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x3C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x366B JUMP JUMPDEST PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x3E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x35C4 JUMP JUMPDEST PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP3 SWAP2 SWAP1 PUSH2 0x3E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x3898 JUMP JUMPDEST PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP3 SWAP2 SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1C22 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x36BE JUMP JUMPDEST PUSH2 0x1C6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1D6C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x378B JUMP JUMPDEST PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x1F2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x35C4 JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x3E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH2 0x22FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x3831 JUMP JUMPDEST PUSH2 0x237E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x568 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4FD JUMPI PUSH2 0x4FC PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x555 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x56E JUMP JUMPDEST DUP1 DUP1 PUSH2 0x560 SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4C5 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x606 JUMPI PUSH2 0x605 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x6F0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6DD JUMPI PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6C3 JUMPI PUSH2 0x6C2 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0x6F2 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x6E8 SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x629 JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x78B JUMPI PUSH2 0x78A PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x980 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80B PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x81E JUMPI PUSH2 0x81D PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x7B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x9D6 JUMPI DUP7 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9A6 JUMPI PUSH2 0x9A5 PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x9DD JUMP JUMPDEST DUP1 DUP1 PUSH2 0x9CE SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x989 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x9EF DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA25 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0xA38 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6E SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0xBE3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD8 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP11 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB85 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1B SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC86 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD49 JUMPI PUSH2 0xD48 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD7F JUMPI PUSH2 0xD7E PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE5A JUMPI PUSH2 0xE59 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x0 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0xFD1 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xFEF PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH2 0x1009 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x1048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103F SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH2 0x1052 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x1091 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1088 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH2 0x11FD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4FC121DB CALLER DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F2 SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x110A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1142 SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF7888AEC DUP13 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119F SWAP3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x123E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP1 PUSH2 0x3DCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP11 DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1363 JUMPI PUSH2 0x1362 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1473 JUMPI PUSH2 0x1472 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0xCB2DF66A1A7DB52683240584ECA4355946D7B80A59DCB7707AA8DD95463ED744 PUSH1 0x9 SLOAD PUSH1 0x1 CALLER DUP12 DUP12 DUP12 DUP12 DUP12 DUP16 DUP15 DUP14 PUSH1 0x40 MLOAD PUSH2 0x15EA SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1608 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1620 PUSH2 0x2EFF JUMP JUMPDEST PUSH2 0x162A PUSH1 0x0 PUSH2 0x2F7D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1683 PUSH2 0x3049 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x16D9 JUMPI PUSH2 0x16D8 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x16F9 JUMPI PUSH2 0x16F8 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1742 JUMPI PUSH2 0x1741 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1754 JUMPI PUSH2 0x1753 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x18C6 PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1B43 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19CF JUMPI PUSH2 0x19CE PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x19E1 JUMPI PUSH2 0x19E0 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x197C JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH2 0x1B51 PUSH2 0x3100 JUMP JUMPDEST JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x1BB6 JUMPI DUP6 DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B6F JUMPI PUSH2 0x1B6E PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x1BA3 JUMPI DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x420B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1BB6 JUMP JUMPDEST DUP3 DUP1 PUSH2 0x1BAE SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x1B52 JUMP JUMPDEST DUP1 DUP4 SWAP5 POP SWAP5 POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1C2A PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x2EFF JUMP JUMPDEST PUSH2 0x1C7F DUP3 PUSH2 0x4BD JUMP JUMPDEST ISZERO PUSH2 0x1CBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB6 SWAP1 PUSH2 0x3E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1D74 PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xB MUL ADD PUSH1 0x0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F12 JUMPI PUSH2 0x1F11 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F34 PUSH2 0x2EFF JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1FAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH2 0x208B PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x211E JUMPI PUSH2 0x211D PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x213E JUMPI PUSH2 0x213D PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2187 JUMPI PUSH2 0x2186 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2199 JUMPI PUSH2 0x2198 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2302 PUSH2 0x2EFF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2369 SWAP1 PUSH2 0x3D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x237B DUP2 PUSH2 0x2F7D JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP5 DUP4 DUP4 PUSH2 0x238E DUP5 DUP5 DUP5 DUP5 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x23CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C4 SWAP1 PUSH2 0x3D6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x23D7 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x2416 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x240D SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x2420 DUP2 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x245F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2456 SWAP1 PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2474 JUMPI PUSH2 0x2473 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x2518 PUSH2 0x3100 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2732 JUMPI DUP15 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x253C JUMPI PUSH2 0x253B PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x271F JUMPI DUP1 SWAP2 POP DUP5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x25B3 JUMPI PUSH2 0x25B2 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x25C5 JUMPI PUSH2 0x25C4 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH2 0x2732 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x272A SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2520 JUMP JUMPDEST POP PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2953 JUMPI DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B1 SWAP1 PUSH2 0x3DEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x27CE JUMPI PUSH2 0x27CD PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x27E1 JUMPI PUSH2 0x27E0 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2888 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2851 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x286B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x287F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2952 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x289B JUMPI PUSH2 0x289A PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP16 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x28AE JUMPI PUSH2 0x28AD PUSH2 0x41AD JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2951 JUMPI PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC11A3D6 CALLER DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x291E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x294C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 DUP5 PUSH2 0x2966 SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2BB3 JUMPI DUP5 PUSH2 0x2982 PUSH1 0x1 DUP4 PUSH2 0x2EE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2993 JUMPI PUSH2 0x2992 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x29B4 JUMPI PUSH2 0x29B3 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A04 JUMPI PUSH2 0x2A03 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 DUP1 PUSH2 0x2BAB SWAP1 PUSH2 0x4135 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2959 JUMP JUMPDEST POP DUP4 PUSH2 0x2BC9 PUSH1 0x1 DUP6 PUSH2 0x2ED3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2BDA JUMPI PUSH2 0x2BD9 PUSH2 0x420B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP DUP4 DUP1 SLOAD DUP1 PUSH2 0x2CC9 JUMPI PUSH2 0x2CC8 PUSH2 0x41DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP SWAP1 SSTORE DUP4 PUSH1 0x7 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 SLOAD PUSH2 0x2E4B SWAP3 SWAP2 SWAP1 PUSH2 0x31B0 JUMP JUMPDEST POP PUSH32 0xA1CC643491754200D3ECA5769E524A0FD00F9B0862B18D0DA7D6E7277A83DFDA DUP15 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD DUP11 PUSH2 0x100 ADD MLOAD DUP12 PUSH2 0x120 ADD MLOAD DUP13 PUSH2 0x140 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2EBA SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2EE1 SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2EF7 SWAP2 SWAP1 PUSH2 0x403E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F07 PUSH2 0x3041 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F25 PUSH2 0x1652 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F72 SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3070 JUMPI PUSH2 0x306F PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3127 JUMPI PUSH2 0x3126 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x33D2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xA MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x33D1 JUMPI DUP3 DUP3 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3227 JUMPI PUSH2 0x3226 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP SWAP2 PUSH1 0xA ADD SWAP2 SWAP1 PUSH1 0xA ADD SWAP1 PUSH2 0x31DB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x33DF SWAP2 SWAP1 PUSH2 0x33E3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x34C3 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP PUSH1 0xA ADD PUSH2 0x33E4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34D6 DUP2 PUSH2 0x4398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34EB DUP2 PUSH2 0x43AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3500 DUP2 PUSH2 0x43C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3515 DUP2 PUSH2 0x43D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x352A DUP2 PUSH2 0x43D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3546 JUMPI PUSH2 0x3545 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3554 DUP5 DUP3 DUP6 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3577 JUMPI PUSH2 0x3576 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3585 DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3596 DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x35A7 DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x35B8 DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x35DE JUMPI PUSH2 0x35DD PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35EC DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x35FD DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x360E DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x361F DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3642 JUMPI PUSH2 0x3641 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3650 DUP6 DUP3 DUP7 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3661 DUP6 DUP3 DUP7 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3684 JUMPI PUSH2 0x3683 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3692 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x36A3 DUP7 DUP3 DUP8 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x36B4 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x36D5 JUMPI PUSH2 0x36D4 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E3 DUP6 DUP3 DUP7 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x36F4 DUP6 DUP3 DUP7 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x371B JUMPI PUSH2 0x371A PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3729 DUP10 DUP3 DUP11 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x373A DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x374B DUP10 DUP3 DUP11 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x375C DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x376D DUP10 DUP3 DUP11 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x377E DUP10 DUP3 DUP11 ADD PUSH2 0x34DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37A4 JUMPI PUSH2 0x37A3 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B2 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x37C3 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x37D4 DUP7 DUP3 DUP8 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37F7 JUMPI PUSH2 0x37F6 PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3805 DUP7 DUP3 DUP8 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3816 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3827 DUP7 DUP3 DUP8 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x384B JUMPI PUSH2 0x384A PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3859 DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x386A DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x387B DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x388C DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38AE JUMPI PUSH2 0x38AD PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38BC DUP5 DUP3 DUP6 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38DB JUMPI PUSH2 0x38DA PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E9 DUP5 DUP3 DUP6 ADD PUSH2 0x351B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x390C JUMPI PUSH2 0x390B PUSH2 0x423A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x391A DUP8 DUP3 DUP9 ADD PUSH2 0x3506 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x392B DUP8 DUP3 DUP9 ADD PUSH2 0x34F1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x393C DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x394D DUP8 DUP3 DUP9 ADD PUSH2 0x34C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x3962 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3971 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3980 DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x398F DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x399E DUP2 PUSH2 0x4123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x39AD DUP2 PUSH2 0x4123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C0 PUSH1 0x10 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x39CB DUP3 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E3 PUSH1 0x26 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x39EE DUP3 PUSH2 0x4268 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A06 PUSH1 0x18 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A11 DUP3 PUSH2 0x42B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A29 PUSH1 0x12 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A34 DUP3 PUSH2 0x42E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4C PUSH1 0x9 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A57 DUP3 PUSH2 0x4309 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6F PUSH1 0x16 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A7A DUP3 PUSH2 0x4332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A92 PUSH1 0x20 DUP4 PUSH2 0x402D JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9D DUP3 PUSH2 0x435B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3ABF PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3AD2 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3995 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3AE5 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3AF8 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x3B0B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x3B1E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x3B31 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x3B44 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x3B59 PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x3B6E PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3B83 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x3977 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x180 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3BA0 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3BB3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3995 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3BC6 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3BD9 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x3BEC PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3959 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x3BFF PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x3C12 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x3C25 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x3C3A PUSH2 0x100 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x3C4F PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x3C64 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x3977 JUMP JUMPDEST POP PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x3C79 PUSH2 0x160 DUP6 ADD DUP3 PUSH2 0x3C7F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3C88 DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3C97 DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CCD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3CDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3968 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CF6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D03 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D10 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3D1D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3D48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D83 DUP2 PUSH2 0x39B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DA3 DUP2 PUSH2 0x39D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DC3 DUP2 PUSH2 0x39F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE3 DUP2 PUSH2 0x3A1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E03 DUP2 PUSH2 0x3A3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E23 DUP2 PUSH2 0x3A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E43 DUP2 PUSH2 0x3A85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3E60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3E7C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3AA8 JUMP JUMPDEST PUSH2 0x3E8A PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3EA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x3EDE PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3EEB PUSH1 0x20 DUP4 ADD DUP15 PUSH2 0x39A4 JUMP JUMPDEST PUSH2 0x3EF8 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F05 PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F12 PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3F1F PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F2C PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F39 PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F47 PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F55 PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3F63 PUSH2 0x140 DUP4 ADD DUP6 PUSH2 0x3986 JUMP JUMPDEST PUSH2 0x3F71 PUSH2 0x160 DUP4 ADD DUP5 PUSH2 0x3C8E JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x3F98 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FA5 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x39A4 JUMP JUMPDEST PUSH2 0x3FB2 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FBF PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FCC PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FD9 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x3968 JUMP JUMPDEST PUSH2 0x3FE6 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x3FF3 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x4001 PUSH2 0x100 DUP4 ADD DUP7 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x400F PUSH2 0x120 DUP4 ADD DUP6 PUSH2 0x3C8E JUMP JUMPDEST PUSH2 0x401D PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x3986 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4049 DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH2 0x4054 DUP4 PUSH2 0x4119 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4089 JUMPI PUSH2 0x4088 PUSH2 0x417E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409F DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH2 0x40AA DUP4 PUSH2 0x4119 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x40BD JUMPI PUSH2 0x40BC PUSH2 0x417E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D3 DUP3 PUSH2 0x40F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x40F4 DUP3 PUSH2 0x4384 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x412E DUP3 PUSH2 0x40E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4140 DUP3 PUSH2 0x4119 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x4173 JUMPI PUSH2 0x4172 PUSH2 0x417E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E76616C6964204F7264657220494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20756E617661696C61626C6520696E204445580000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742046756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74204F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920766572696669656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x4395 JUMPI PUSH2 0x4394 PUSH2 0x41AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x43A1 DUP2 PUSH2 0x40C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x43AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x43B8 DUP2 PUSH2 0x40DA JUMP JUMPDEST DUP2 EQ PUSH2 0x43C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x43D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x43DF DUP2 PUSH2 0x4119 JUMP JUMPDEST DUP2 EQ PUSH2 0x43EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 MSTORE PUSH28 0x55633C67351CC624550C5DA4A9AEDBFE9D49A4846F4D61B6B219B990 PUSH16 0x64736F6C634300080700330000000000 ","sourceMap":"375:22546:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21640:265;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19558:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21911:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21028:399;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3448:1334;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4788:1378;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:1;;;:::i;:::-;;592:36:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20243:283:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20532:490;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;990:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;677:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;22165:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21433:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22286:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;899:84;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;20062:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22451:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;797:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;19768:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6172:1839:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21640:265;21702:4;21767:9;21779:1;21767:13;;21762:115;21786:9;:16;;;;21782:1;:20;21762:115;;;21847:6;21827:26;;:9;21837:1;21827:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:26;;;21823:43;;;21862:4;21855:11;;;;;21823:43;21804:3;;;;;:::i;:::-;;;;21762:115;;;;21893:5;21886:12;;21640:265;;;;:::o;19558:204::-;19678:7;19704:11;:20;19716:7;19704:20;;;;;;;;;;;;;;;:29;19725:7;19704:29;;;;;;;;;;;;;;;:44;19742:4;19734:13;;;;;;;;:::i;:::-;;19704:44;;;;;;;;;;;:51;;;;19697:58;;19558:204;;;;;:::o;21911:248::-;21970:7;21994:9;22006:1;21994:13;;21989:164;22013:9;:16;;;;22009:1;:20;21989:164;;;22074:6;22054:26;;:9;22064:1;22054:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;;;;;;;;;;:26;;;22050:93;;;22107:9;22117:1;22107:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;22100:28;;;;;22050:93;22031:3;;;;;:::i;:::-;;;;21989:164;;;;21911:248;;;;:::o;21028:399::-;21166:4;21182:22;21207:11;:20;21219:7;21207:20;;;;;;;;;;;;;;;:29;21228:7;21207:29;;;;;;;;;;;;;;;:44;21245:4;21237:13;;;;;;;;:::i;:::-;;21207:44;;;;;;;;;;;21182:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21267:9;21262:137;21286:6;:13;21282:1;:17;21262:137;;;21340:3;21324:6;21331:1;21324:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;:19;21320:69;;;21370:4;21363:11;;;;;;21320:69;21301:3;;;;;:::i;:::-;;;;21262:137;;;;21415:5;21408:12;;;21028:399;;;;;;;:::o;3448:1334::-;3678:7;22849:23;22865:6;22849:15;:23::i;:::-;22841:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3698:7:::1;22849:23;22865:6;22849:15;:23::i;:::-;22841:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3937:8:::2;3818:115;3877:6;;;;;;;;;;;:21;;;3899:10;3911:7;3877:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3818:6;;;;;;;;;;;:16;;;3835:7;3844:10;3818:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;:115;;;;:::i;:::-;:127;;3797:192;;;;;;;;;;;;:::i;:::-;;;;;;;;;4000:6;;;;;;;;;;;:32;;;4033:10;4045:7;4054:8;4064:4;4000:69;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4080:11;:20;4092:7;4080:20;;;;;;;;;;;;;;;:29;4101:7;4080:29;;;;;;;;;;;;;;;:48;4118:8:::0;4110:17:::2;;;;;;;;:::i;:::-;;4080:48;;;;;;;;;;;4147:306;;;;;;;;4171:9;;4147:306;;;;4198:8;4147:306;;;;;;;;:::i;:::-;;;;;;4224:10;4147:306;;;;;;4252:7;4147:306;;;;;;4277:8;4147:306;;;;4303:7;4147:306;;;;;;4328:8;4147:306;;;;4354:5;4147:306;;;;4377:8;4147:306;;;;4403:8;4147:306;;;;4429:10;4147:306;;;;::::0;4080:383:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4479:257;4498:9;;4521:8;4543:10;4567:7;4588:8;4610:7;4631:8;4653:5;4672:8;4694;4716:10;4479:257;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4759:16;4773:1;4759:9;;:13;;:16;;;;:::i;:::-;4747:9;:28;;;;22911:1:::1;3448:1334:::0;;;;;;;:::o;4788:1378::-;4994:7;22849:23;22865:6;22849:15;:23::i;:::-;22841:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5014:7:::1;22849:23;22865:6;22849:15;:23::i;:::-;22841:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5270:8:::2;5151:115;5210:6;;;;;;;;;;;:21;;;5232:10;5244:7;5210:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5151:6;;;;;;;;;;;:16;;;5168:7;5177:10;5151:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;:115;;;;:::i;:::-;:127;;5130:192;;;;;;;;;;;;:::i;:::-;;;;;;;;;5381:6;;;;;;;;;;;:32;;;5414:10;5426:7;5435:8;5445:4;5381:69;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;5461:11;:20;5473:7;5461:20;;;;;;;;;;;;;;;:29;5482:7;5461:29;;;;;;;;;;;;;;;:49;5499:9;5491:18:::0;::::2;;;;;;;:::i;:::-;;5461:49;;;;;;;;;;;5529:307;;;;;;;;5553:9;;5529:307;;;;5580:9;5529:307:::0;::::2;;;;;;;:::i;:::-;;;;;;5607:10;5529:307;;;;;;5635:7;5529:307;;;;;;5660:8;5529:307;;;;5686:7;5529:307;;;;;;5711:8;5529:307;;;;5737:5;5529:307;;;;5760:8;5529:307;;;;5786:8;5529:307;;;;5812:10;5529:307;;;;::::0;5461:385:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5862:258;5881:9;;5904;5927:10;5951:7;5972:8;5994:7;6015:8;6037:5;6056:8;6078;6100:10;5862:258;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6143:16;6157:1;6143:9;;:13;;:16;;;;:::i;:::-;6131:9;:28;;;;22911:1:::1;4788:1378:::0;;;;;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;592:36:7:-;;;;;;;;;;;;;:::o;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;20243:283:7:-;20359:19;;:::i;:::-;20390:31;20424:14;:21;20439:5;20424:21;;;;;;;;;;;;;;;:36;20454:4;20446:13;;;;;;;;:::i;:::-;;20424:36;;;;;;;;;;;20474:5;20424:65;;;;;;;;:::i;:::-;;;;;;;;;;;;20390:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20507:11;20499:20;;;20243:283;;;;;:::o;20532:490::-;20679:13;;:::i;:::-;20694:7;20713:9;20725:1;20713:13;;20736:22;20761:11;:20;20773:7;20761:20;;;;;;;;;;;;;;;:29;20782:7;20761:29;;;;;;;;;;;;;;;:35;20791:4;20761:35;;;;;;;;;;;20736:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20806:19;;:::i;:::-;20835:154;20847:6;:13;20843:1;:17;20835:154;;;20901:3;20885:6;20892:1;20885:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;:19;20881:98;;;20932:6;20939:1;20932:9;;;;;;;;:::i;:::-;;;;;;;;20924:17;;20959:5;;20881:98;20862:3;;;;;:::i;:::-;;;;20835:154;;;21006:5;21013:1;20998:17;;;;;;;20532:490;;;;;;;:::o;990:28::-;;;;:::o;677:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;22165:115::-;1094:13:1;:11;:13::i;:::-;22258:14:7::1;22242:6;;:31;;;;;;;;;;;;;;;;;;22165:115:::0;:::o;21433:201::-;1094:13:1;:11;:13::i;:::-;21522:23:7::1;21538:6;21522:15;:23::i;:::-;21521:24;21513:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;21582:9;21597:29;;;;;;;;21608:6;21597:29;;;;;;21616:9;21597:29;;::::0;21582:45:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21433:201:::0;;:::o;22286:159::-;1094:13:1;:11;:13::i;:::-;22417:20:7::1;22389:12;;:49;;;;;;;;;;;;;;;;;;22286:159:::0;:::o;899:84::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;20062:175::-;20161:7;20187:14;:21;20202:5;20187:21;;;;;;;;;;;;;;;:36;20217:4;20209:13;;;;;;;;:::i;:::-;;20187:36;;;;;;;;;;;:43;;;;20180:50;;20062:175;;;;:::o;22451:119::-;1094:13:1;:11;:13::i;:::-;22550:12:7::1;22524:11;;:39;;;;;;;;;;;;;;;;;;22451:119:::0;:::o;797:95::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;19768:288::-;19905:13;;:::i;:::-;19930:19;19952:11;:20;19964:7;19952:20;;;;;;;;;;;;;;;:29;19973:7;19952:29;;;;;;;;;;;;;;;:44;19990:4;19982:13;;;;;;;;:::i;:::-;;19952:44;;;;;;;;;;;20010:5;19952:73;;;;;;;;:::i;:::-;;;;;;;;;;;;19930:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20043:5;20035:14;;;19768:288;;;;;;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6172:1839:7:-;6323:3;6328:4;6334:7;6343;22710:40;22722:3;22727:4;22733:7;22742;22710:11;:40::i;:::-;22702:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6371:7:::1;22849:23;22865:6;22849:15;:23::i;:::-;22841:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;6399:7:::2;22849:23;22865:6;22849:15;:23::i;:::-;22841:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;6422:13:::3;6446:4;6438:13;;;;;;;;:::i;:::-;;6422:29;;6461:23;6487:11;:20;6499:7;6487:20;;;;;;;;;;;;;;;:29;6508:7;6487:29;;;;;;;;;;;;;;;:36;6517:5;6487:36;;;;;;;;;;;6461:62;;6533:12;6548:6;:13;;;;6533:28;;6571:19;;:::i;:::-;6601:13;6629:9:::0;6641:1:::3;6629:13;;6624:184;6648:4;6644:1;:8;6624:184;;;6693:3;6677:6;6684:1;6677:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:12;;;:19;6673:125;;;6724:1;6716:9;;6751:6;6758:1;6751:9;;;;;;;;:::i;:::-;;;;;;;;;;;;6743:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;6778:5;;6673:125;6654:3;;;;;:::i;:::-;;;;6624:184;;;;6862:10;;;;;;;;;;;6858:601;;;6910:5;:10;;;6896:24;;:10;:24;;;6888:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;6988:8;6980:16;;;;;;;;:::i;:::-;;:4;:16;;;;;;;;:::i;:::-;;;6976:473;;;7016:6;;;;;;;;;;;:32;;;7070:10;7102:5;:12;;;7136:5;:13;;;7171:5;7016:178;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;6976:473;;;7227:9;7219:17:::0;::::3;;;;;;;:::i;:::-;;:4;:17;;;;;;;;:::i;:::-;;;7215:234;;;7256:6;;;;;;;;;;;:32;;;7310:10;7342:5;:12;;;7376:5;:13;;;7411:5;7256:178;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;7215:234;6976:473;6858:601;7474:9;7486:5;7474:17;;7469:96;7504:1;7497:4;:8;;;;:::i;:::-;7493:1;:12;7469:96;;;7538:6;7545:8;7551:1;7545;:5;;:8;;;;:::i;:::-;7538:16;;;;;;;;:::i;:::-;;;;;;;;;;;;7526:6;7533:1;7526:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7507:3;;;;;:::i;:::-;;;;7469:96;;;;7581:6;7588:11;7597:1;7588:4;:8;;:11;;;;:::i;:::-;7581:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;7574:26:::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7610:6;:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7672:6;7633:11;:20;7645:7;7633:20;;;;;;;;;;;;;;;:29;7654:7;7633:29;;;;;;;;;;;;;;;:36;7663:5;7633:36;;;;;;;;;;;:45;;;;;;;;:::i;:::-;;7694:310;7714:3;7731:5;:10;;;7755:5;:10;;;7779:5;:12;;;7805:5;:13;;;7832:5;:12;;;7858:5;:13;;;7885:5;:10;;;7909:5;:21;;;7944:5;:21;;;7979:5;:15;;;7694:310;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6412:1599;;;;;22911:1:::2;22781::::1;6172:1839:::0;;;;;;;;:::o;3122:96:5:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:157::-;346:5;384:6;371:20;362:29;;400:42;436:5;400:42;:::i;:::-;291:157;;;;:::o;454:139::-;500:5;538:6;525:20;516:29;;554:33;581:5;554:33;:::i;:::-;454:139;;;;:::o;599:143::-;656:5;687:6;681:13;672:22;;703:33;730:5;703:33;:::i;:::-;599:143;;;;:::o;748:329::-;807:6;856:2;844:9;835:7;831:23;827:32;824:119;;;862:79;;:::i;:::-;824:119;982:1;1007:53;1052:7;1043:6;1032:9;1028:22;1007:53;:::i;:::-;997:63;;953:117;748:329;;;;:::o;1083:783::-;1178:6;1186;1194;1202;1251:3;1239:9;1230:7;1226:23;1222:33;1219:120;;;1258:79;;:::i;:::-;1219:120;1378:1;1403:53;1448:7;1439:6;1428:9;1424:22;1403:53;:::i;:::-;1393:63;;1349:117;1505:2;1531:53;1576:7;1567:6;1556:9;1552:22;1531:53;:::i;:::-;1521:63;;1476:118;1633:2;1659:53;1704:7;1695:6;1684:9;1680:22;1659:53;:::i;:::-;1649:63;;1604:118;1761:2;1787:62;1841:7;1832:6;1821:9;1817:22;1787:62;:::i;:::-;1777:72;;1732:127;1083:783;;;;;;;:::o;1872:765::-;1958:6;1966;1974;1982;2031:3;2019:9;2010:7;2006:23;2002:33;1999:120;;;2038:79;;:::i;:::-;1999:120;2158:1;2183:53;2228:7;2219:6;2208:9;2204:22;2183:53;:::i;:::-;2173:63;;2129:117;2285:2;2311:53;2356:7;2347:6;2336:9;2332:22;2311:53;:::i;:::-;2301:63;;2256:118;2413:2;2439:53;2484:7;2475:6;2464:9;2460:22;2439:53;:::i;:::-;2429:63;;2384:118;2541:2;2567:53;2612:7;2603:6;2592:9;2588:22;2567:53;:::i;:::-;2557:63;;2512:118;1872:765;;;;;;;:::o;2643:492::-;2720:6;2728;2777:2;2765:9;2756:7;2752:23;2748:32;2745:119;;;2783:79;;:::i;:::-;2745:119;2903:1;2928:53;2973:7;2964:6;2953:9;2949:22;2928:53;:::i;:::-;2918:63;;2874:117;3030:2;3056:62;3110:7;3101:6;3090:9;3086:22;3056:62;:::i;:::-;3046:72;;3001:127;2643:492;;;;;:::o;3141:637::-;3227:6;3235;3243;3292:2;3280:9;3271:7;3267:23;3263:32;3260:119;;;3298:79;;:::i;:::-;3260:119;3418:1;3443:53;3488:7;3479:6;3468:9;3464:22;3443:53;:::i;:::-;3433:63;;3389:117;3545:2;3571:62;3625:7;3616:6;3605:9;3601:22;3571:62;:::i;:::-;3561:72;;3516:127;3682:2;3708:53;3753:7;3744:6;3733:9;3729:22;3708:53;:::i;:::-;3698:63;;3653:118;3141:637;;;;;:::o;3784:474::-;3852:6;3860;3909:2;3897:9;3888:7;3884:23;3880:32;3877:119;;;3915:79;;:::i;:::-;3877:119;4035:1;4060:53;4105:7;4096:6;4085:9;4081:22;4060:53;:::i;:::-;4050:63;;4006:117;4162:2;4188:53;4233:7;4224:6;4213:9;4209:22;4188:53;:::i;:::-;4178:63;;4133:118;3784:474;;;;;:::o;4264:1051::-;4365:6;4373;4381;4389;4397;4405;4454:3;4442:9;4433:7;4429:23;4425:33;4422:120;;;4461:79;;:::i;:::-;4422:120;4581:1;4606:53;4651:7;4642:6;4631:9;4627:22;4606:53;:::i;:::-;4596:63;;4552:117;4708:2;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4679:118;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4964:2;4990:53;5035:7;5026:6;5015:9;5011:22;4990:53;:::i;:::-;4980:63;;4935:118;5092:3;5119:53;5164:7;5155:6;5144:9;5140:22;5119:53;:::i;:::-;5109:63;;5063:119;5221:3;5248:50;5290:7;5281:6;5270:9;5266:22;5248:50;:::i;:::-;5238:60;;5192:116;4264:1051;;;;;;;;:::o;5321:619::-;5398:6;5406;5414;5463:2;5451:9;5442:7;5438:23;5434:32;5431:119;;;5469:79;;:::i;:::-;5431:119;5589:1;5614:53;5659:7;5650:6;5639:9;5635:22;5614:53;:::i;:::-;5604:63;;5560:117;5716:2;5742:53;5787:7;5778:6;5767:9;5763:22;5742:53;:::i;:::-;5732:63;;5687:118;5844:2;5870:53;5915:7;5906:6;5895:9;5891:22;5870:53;:::i;:::-;5860:63;;5815:118;5321:619;;;;;:::o;5946:637::-;6032:6;6040;6048;6097:2;6085:9;6076:7;6072:23;6068:32;6065:119;;;6103:79;;:::i;:::-;6065:119;6223:1;6248:62;6302:7;6293:6;6282:9;6278:22;6248:62;:::i;:::-;6238:72;;6194:126;6359:2;6385:53;6430:7;6421:6;6410:9;6406:22;6385:53;:::i;:::-;6375:63;;6330:118;6487:2;6513:53;6558:7;6549:6;6538:9;6534:22;6513:53;:::i;:::-;6503:63;;6458:118;5946:637;;;;;:::o;6589:783::-;6684:6;6692;6700;6708;6757:3;6745:9;6736:7;6732:23;6728:33;6725:120;;;6764:79;;:::i;:::-;6725:120;6884:1;6909:62;6963:7;6954:6;6943:9;6939:22;6909:62;:::i;:::-;6899:72;;6855:126;7020:2;7046:53;7091:7;7082:6;7071:9;7067:22;7046:53;:::i;:::-;7036:63;;6991:118;7148:2;7174:53;7219:7;7210:6;7199:9;7195:22;7174:53;:::i;:::-;7164:63;;7119:118;7276:2;7302:53;7347:7;7338:6;7327:9;7323:22;7302:53;:::i;:::-;7292:63;;7247:118;6589:783;;;;;;;:::o;7378:329::-;7437:6;7486:2;7474:9;7465:7;7461:23;7457:32;7454:119;;;7492:79;;:::i;:::-;7454:119;7612:1;7637:53;7682:7;7673:6;7662:9;7658:22;7637:53;:::i;:::-;7627:63;;7583:117;7378:329;;;;:::o;7713:351::-;7783:6;7832:2;7820:9;7811:7;7807:23;7803:32;7800:119;;;7838:79;;:::i;:::-;7800:119;7958:1;7983:64;8039:7;8030:6;8019:9;8015:22;7983:64;:::i;:::-;7973:74;;7929:128;7713:351;;;;:::o;8070:783::-;8165:6;8173;8181;8189;8238:3;8226:9;8217:7;8213:23;8209:33;8206:120;;;8245:79;;:::i;:::-;8206:120;8365:1;8390:53;8435:7;8426:6;8415:9;8411:22;8390:53;:::i;:::-;8380:63;;8336:117;8492:2;8518:62;8572:7;8563:6;8552:9;8548:22;8518:62;:::i;:::-;8508:72;;8463:127;8629:2;8655:53;8700:7;8691:6;8680:9;8676:22;8655:53;:::i;:::-;8645:63;;8600:118;8757:2;8783:53;8828:7;8819:6;8808:9;8804:22;8783:53;:::i;:::-;8773:63;;8728:118;8070:783;;;;;;;:::o;8859:108::-;8936:24;8954:5;8936:24;:::i;:::-;8931:3;8924:37;8859:108;;:::o;8973:118::-;9060:24;9078:5;9060:24;:::i;:::-;9055:3;9048:37;8973:118;;:::o;9097:99::-;9168:21;9183:5;9168:21;:::i;:::-;9163:3;9156:34;9097:99;;:::o;9202:109::-;9283:21;9298:5;9283:21;:::i;:::-;9278:3;9271:34;9202:109;;:::o;9317:135::-;9401:44;9439:5;9401:44;:::i;:::-;9396:3;9389:57;9317:135;;:::o;9458:145::-;9552:44;9590:5;9552:44;:::i;:::-;9547:3;9540:57;9458:145;;:::o;9609:366::-;9751:3;9772:67;9836:2;9831:3;9772:67;:::i;:::-;9765:74;;9848:93;9937:3;9848:93;:::i;:::-;9966:2;9961:3;9957:12;9950:19;;9609:366;;;:::o;9981:::-;10123:3;10144:67;10208:2;10203:3;10144:67;:::i;:::-;10137:74;;10220:93;10309:3;10220:93;:::i;:::-;10338:2;10333:3;10329:12;10322:19;;9981:366;;;:::o;10353:::-;10495:3;10516:67;10580:2;10575:3;10516:67;:::i;:::-;10509:74;;10592:93;10681:3;10592:93;:::i;:::-;10710:2;10705:3;10701:12;10694:19;;10353:366;;;:::o;10725:::-;10867:3;10888:67;10952:2;10947:3;10888:67;:::i;:::-;10881:74;;10964:93;11053:3;10964:93;:::i;:::-;11082:2;11077:3;11073:12;11066:19;;10725:366;;;:::o;11097:365::-;11239:3;11260:66;11324:1;11319:3;11260:66;:::i;:::-;11253:73;;11335:93;11424:3;11335:93;:::i;:::-;11453:2;11448:3;11444:12;11437:19;;11097:365;;;:::o;11468:366::-;11610:3;11631:67;11695:2;11690:3;11631:67;:::i;:::-;11624:74;;11707:93;11796:3;11707:93;:::i;:::-;11825:2;11820:3;11816:12;11809:19;;11468:366;;;:::o;11840:::-;11982:3;12003:67;12067:2;12062:3;12003:67;:::i;:::-;11996:74;;12079:93;12168:3;12079:93;:::i;:::-;12197:2;12192:3;12188:12;12181:19;;11840:366;;;:::o;12268:2121::-;12413:6;12408:3;12404:16;12500:4;12493:5;12489:16;12483:23;12519:63;12576:4;12571:3;12567:14;12553:12;12519:63;:::i;:::-;12430:162;12674:4;12667:5;12663:16;12657:23;12693:70;12757:4;12752:3;12748:14;12734:12;12693:70;:::i;:::-;12602:171;12855:4;12848:5;12844:16;12838:23;12874:63;12931:4;12926:3;12922:14;12908:12;12874:63;:::i;:::-;12783:164;13031:4;13024:5;13020:16;13014:23;13050:63;13107:4;13102:3;13098:14;13084:12;13050:63;:::i;:::-;12957:166;13208:4;13201:5;13197:16;13191:23;13227:63;13284:4;13279:3;13275:14;13261:12;13227:63;:::i;:::-;13133:167;13384:4;13377:5;13373:16;13367:23;13403:63;13460:4;13455:3;13451:14;13437:12;13403:63;:::i;:::-;13310:166;13561:4;13554:5;13550:16;13544:23;13580:63;13637:4;13632:3;13628:14;13614:12;13580:63;:::i;:::-;13486:167;13735:4;13728:5;13724:16;13718:23;13754:63;13811:4;13806:3;13802:14;13788:12;13754:63;:::i;:::-;13663:164;13920:6;13913:5;13909:18;13903:25;13941:65;13998:6;13993:3;13989:16;13975:12;13941:65;:::i;:::-;13837:179;14109:6;14102:5;14098:18;14092:25;14130:65;14187:6;14182:3;14178:16;14164:12;14130:65;:::i;:::-;14026:179;14292:6;14285:5;14281:18;14275:25;14313:59;14364:6;14359:3;14355:16;14341:12;14313:59;:::i;:::-;14215:167;12382:2007;12268:2121;;:::o;14463:2330::-;14620:6;14615:3;14611:16;14707:4;14700:5;14696:16;14690:23;14726:63;14783:4;14778:3;14774:14;14760:12;14726:63;:::i;:::-;14637:162;14881:4;14874:5;14870:16;14864:23;14900:70;14964:4;14959:3;14955:14;14941:12;14900:70;:::i;:::-;14809:171;15062:4;15055:5;15051:16;15045:23;15081:63;15138:4;15133:3;15129:14;15115:12;15081:63;:::i;:::-;14990:164;15238:4;15231:5;15227:16;15221:23;15257:63;15314:4;15309:3;15305:14;15291:12;15257:63;:::i;:::-;15164:166;15414:4;15407:5;15403:16;15397:23;15433:63;15490:4;15485:3;15481:14;15467:12;15433:63;:::i;:::-;15340:166;15596:4;15589:5;15585:16;15579:23;15615:63;15672:4;15667:3;15663:14;15649:12;15615:63;:::i;:::-;15516:172;15774:4;15767:5;15763:16;15757:23;15793:63;15850:4;15845:3;15841:14;15827:12;15793:63;:::i;:::-;15698:168;15956:4;15949:5;15945:16;15939:23;15975:63;16032:4;16027:3;16023:14;16009:12;15975:63;:::i;:::-;15876:172;16141:6;16134:5;16130:18;16124:25;16162:65;16219:6;16214:3;16210:16;16196:12;16162:65;:::i;:::-;16058:179;16330:6;16323:5;16319:18;16313:25;16351:65;16408:6;16403:3;16399:16;16385:12;16351:65;:::i;:::-;16247:179;16514:6;16507:5;16503:18;16497:25;16535:59;16586:6;16581:3;16577:16;16563:12;16535:59;:::i;:::-;16436:168;16690:6;16683:5;16679:18;16673:25;16711:65;16768:6;16763:3;16759:16;16745:12;16711:65;:::i;:::-;16614:172;14589:2204;14463:2330;;:::o;16799:108::-;16876:24;16894:5;16876:24;:::i;:::-;16871:3;16864:37;16799:108;;:::o;16913:118::-;17000:24;17018:5;17000:24;:::i;:::-;16995:3;16988:37;16913:118;;:::o;17037:222::-;17130:4;17168:2;17157:9;17153:18;17145:26;;17181:71;17249:1;17238:9;17234:17;17225:6;17181:71;:::i;:::-;17037:222;;;;:::o;17265:332::-;17386:4;17424:2;17413:9;17409:18;17401:26;;17437:71;17505:1;17494:9;17490:17;17481:6;17437:71;:::i;:::-;17518:72;17586:2;17575:9;17571:18;17562:6;17518:72;:::i;:::-;17265:332;;;;;:::o;17603:541::-;17774:4;17812:3;17801:9;17797:19;17789:27;;17826:71;17894:1;17883:9;17879:17;17870:6;17826:71;:::i;:::-;17907:72;17975:2;17964:9;17960:18;17951:6;17907:72;:::i;:::-;17989;18057:2;18046:9;18042:18;18033:6;17989:72;:::i;:::-;18071:66;18133:2;18122:9;18118:18;18109:6;18071:66;:::i;:::-;17603:541;;;;;;;:::o;18150:332::-;18271:4;18309:2;18298:9;18294:18;18286:26;;18322:71;18390:1;18379:9;18375:17;18366:6;18322:71;:::i;:::-;18403:72;18471:2;18460:9;18456:18;18447:6;18403:72;:::i;:::-;18150:332;;;;;:::o;18488:210::-;18575:4;18613:2;18602:9;18598:18;18590:26;;18626:65;18688:1;18677:9;18673:17;18664:6;18626:65;:::i;:::-;18488:210;;;;:::o;18704:419::-;18870:4;18908:2;18897:9;18893:18;18885:26;;18957:9;18951:4;18947:20;18943:1;18932:9;18928:17;18921:47;18985:131;19111:4;18985:131;:::i;:::-;18977:139;;18704:419;;;:::o;19129:::-;19295:4;19333:2;19322:9;19318:18;19310:26;;19382:9;19376:4;19372:20;19368:1;19357:9;19353:17;19346:47;19410:131;19536:4;19410:131;:::i;:::-;19402:139;;19129:419;;;:::o;19554:::-;19720:4;19758:2;19747:9;19743:18;19735:26;;19807:9;19801:4;19797:20;19793:1;19782:9;19778:17;19771:47;19835:131;19961:4;19835:131;:::i;:::-;19827:139;;19554:419;;;:::o;19979:::-;20145:4;20183:2;20172:9;20168:18;20160:26;;20232:9;20226:4;20222:20;20218:1;20207:9;20203:17;20196:47;20260:131;20386:4;20260:131;:::i;:::-;20252:139;;19979:419;;;:::o;20404:::-;20570:4;20608:2;20597:9;20593:18;20585:26;;20657:9;20651:4;20647:20;20643:1;20632:9;20628:17;20621:47;20685:131;20811:4;20685:131;:::i;:::-;20677:139;;20404:419;;;:::o;20829:::-;20995:4;21033:2;21022:9;21018:18;21010:26;;21082:9;21076:4;21072:20;21068:1;21057:9;21053:17;21046:47;21110:131;21236:4;21110:131;:::i;:::-;21102:139;;20829:419;;;:::o;21254:::-;21420:4;21458:2;21447:9;21443:18;21435:26;;21507:9;21501:4;21497:20;21493:1;21482:9;21478:17;21471:47;21535:131;21661:4;21535:131;:::i;:::-;21527:139;;21254:419;;;:::o;21679:319::-;21820:4;21858:3;21847:9;21843:19;21835:27;;21872:119;21988:1;21977:9;21973:17;21964:6;21872:119;:::i;:::-;21679:319;;;;:::o;22004:430::-;22173:4;22211:3;22200:9;22196:19;22188:27;;22225:119;22341:1;22330:9;22326:17;22317:6;22225:119;:::i;:::-;22354:73;22422:3;22411:9;22407:19;22398:6;22354:73;:::i;:::-;22004:430;;;;;:::o;22440:343::-;22593:4;22631:3;22620:9;22616:19;22608:27;;22645:131;22773:1;22762:9;22758:17;22749:6;22645:131;:::i;:::-;22440:343;;;;:::o;22789:222::-;22882:4;22920:2;22909:9;22905:18;22897:26;;22933:71;23001:1;22990:9;22986:17;22977:6;22933:71;:::i;:::-;22789:222;;;;:::o;23017:1447::-;23421:4;23459:3;23448:9;23444:19;23436:27;;23473:71;23541:1;23530:9;23526:17;23517:6;23473:71;:::i;:::-;23554:79;23629:2;23618:9;23614:18;23605:6;23554:79;:::i;:::-;23643:72;23711:2;23700:9;23696:18;23687:6;23643:72;:::i;:::-;23725;23793:2;23782:9;23778:18;23769:6;23725:72;:::i;:::-;23807:73;23875:3;23864:9;23860:19;23851:6;23807:73;:::i;:::-;23890;23958:3;23947:9;23943:19;23934:6;23890:73;:::i;:::-;23973;24041:3;24030:9;24026:19;24017:6;23973:73;:::i;:::-;24056;24124:3;24113:9;24109:19;24100:6;24056:73;:::i;:::-;24139;24207:3;24196:9;24192:19;24183:6;24139:73;:::i;:::-;24222;24290:3;24279:9;24275:19;24266:6;24222:73;:::i;:::-;24305:68;24368:3;24357:9;24353:19;24343:7;24305:68;:::i;:::-;24383:74;24452:3;24441:9;24437:19;24427:7;24383:74;:::i;:::-;23017:1447;;;;;;;;;;;;;;;:::o;24470:1334::-;24845:4;24883:3;24872:9;24868:19;24860:27;;24897:71;24965:1;24954:9;24950:17;24941:6;24897:71;:::i;:::-;24978:79;25053:2;25042:9;25038:18;25029:6;24978:79;:::i;:::-;25067:72;25135:2;25124:9;25120:18;25111:6;25067:72;:::i;:::-;25149;25217:2;25206:9;25202:18;25193:6;25149:72;:::i;:::-;25231:73;25299:3;25288:9;25284:19;25275:6;25231:73;:::i;:::-;25314;25382:3;25371:9;25367:19;25358:6;25314:73;:::i;:::-;25397;25465:3;25454:9;25450:19;25441:6;25397:73;:::i;:::-;25480;25548:3;25537:9;25533:19;25524:6;25480:73;:::i;:::-;25563;25631:3;25620:9;25616:19;25607:6;25563:73;:::i;:::-;25646;25714:3;25703:9;25699:19;25690:6;25646:73;:::i;:::-;25729:68;25792:3;25781:9;25777:19;25767:7;25729:68;:::i;:::-;24470:1334;;;;;;;;;;;;;;:::o;25891:169::-;25975:11;26009:6;26004:3;25997:19;26049:4;26044:3;26040:14;26025:29;;25891:169;;;;:::o;26066:305::-;26106:3;26125:20;26143:1;26125:20;:::i;:::-;26120:25;;26159:20;26177:1;26159:20;:::i;:::-;26154:25;;26313:1;26245:66;26241:74;26238:1;26235:81;26232:107;;;26319:18;;:::i;:::-;26232:107;26363:1;26360;26356:9;26349:16;;26066:305;;;;:::o;26377:191::-;26417:4;26437:20;26455:1;26437:20;:::i;:::-;26432:25;;26471:20;26489:1;26471:20;:::i;:::-;26466:25;;26510:1;26507;26504:8;26501:34;;;26515:18;;:::i;:::-;26501:34;26560:1;26557;26553:9;26545:17;;26377:191;;;;:::o;26574:96::-;26611:7;26640:24;26658:5;26640:24;:::i;:::-;26629:35;;26574:96;;;:::o;26676:90::-;26710:7;26753:5;26746:13;26739:21;26728:32;;26676:90;;;:::o;26772:129::-;26818:7;26847:5;26836:16;;26853:42;26889:5;26853:42;:::i;:::-;26772:129;;;:::o;26907:126::-;26944:7;26984:42;26977:5;26973:54;26962:65;;26907:126;;;:::o;27039:77::-;27076:7;27105:5;27094:16;;27039:77;;;:::o;27122:129::-;27179:9;27212:33;27239:5;27212:33;:::i;:::-;27199:46;;27122:129;;;:::o;27257:233::-;27296:3;27319:24;27337:5;27319:24;:::i;:::-;27310:33;;27365:66;27358:5;27355:77;27352:103;;;27435:18;;:::i;:::-;27352:103;27482:1;27475:5;27471:13;27464:20;;27257:233;;;:::o;27496:180::-;27544:77;27541:1;27534:88;27641:4;27638:1;27631:15;27665:4;27662:1;27655:15;27682:180;27730:77;27727:1;27720:88;27827:4;27824:1;27817:15;27851:4;27848:1;27841:15;27868:180;27916:77;27913:1;27906:88;28013:4;28010:1;28003:15;28037:4;28034:1;28027:15;28054:180;28102:77;28099:1;28092:88;28199:4;28196:1;28189:15;28223:4;28220:1;28213:15;28363:117;28472:1;28469;28462:12;28486:166;28626:18;28622:1;28614:6;28610:14;28603:42;28486:166;:::o;28658:225::-;28798:34;28794:1;28786:6;28782:14;28775:58;28867:8;28862:2;28854:6;28850:15;28843:33;28658:225;:::o;28889:174::-;29029:26;29025:1;29017:6;29013:14;29006:50;28889:174;:::o;29069:168::-;29209:20;29205:1;29197:6;29193:14;29186:44;29069:168;:::o;29243:159::-;29383:11;29379:1;29371:6;29367:14;29360:35;29243:159;:::o;29408:172::-;29548:24;29544:1;29536:6;29532:14;29525:48;29408:172;:::o;29586:182::-;29726:34;29722:1;29714:6;29710:14;29703:58;29586:182;:::o;29774:114::-;29856:1;29849:5;29846:12;29836:46;;29862:18;;:::i;:::-;29836:46;29774:114;:::o;29894:122::-;29967:24;29985:5;29967:24;:::i;:::-;29960:5;29957:35;29947:63;;30006:1;30003;29996:12;29947:63;29894:122;:::o;30022:116::-;30092:21;30107:5;30092:21;:::i;:::-;30085:5;30082:32;30072:60;;30128:1;30125;30118:12;30072:60;30022:116;:::o;30144:108::-;30226:1;30219:5;30216:12;30206:40;;30242:1;30239;30232:12;30206:40;30144:108;:::o;30258:122::-;30331:24;30349:5;30331:24;:::i;:::-;30324:5;30321:35;30311:63;;30370:1;30367;30360:12;30311:63;30258:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3488600","executionCost":"infinite","totalCost":"infinite"},"external":{"addToken(address,uint256)":"infinite","cancelOrder(uint8,uint256,address,address)":"infinite","createLimitBuyOrder(address,uint256,address,uint256,uint256,bool)":"infinite","createLimitSellOrder(address,uint256,address,uint256,uint256,bool)":"infinite","ethToken()":"2581","getFilledOrder(address,uint8,uint256)":"infinite","getFilledOrderLength(address,uint8)":"3105","getOrder(address,address,uint256,uint8)":"infinite","getOrderFromArray(address,address,uint256,uint256)":"infinite","getOrderLength(uint8,address,address)":"infinite","getTokenInfo(address)":"infinite","isVerifiedToken(address)":"infinite","orderExists(uint256,uint8,address,address)":"infinite","owner()":"2611","renounceOwnership()":"30443","s_filledOrders(address,uint256,uint256)":"infinite","s_orderBook(address,address,uint256,uint256)":"infinite","s_orderId()":"2452","setPriceCheckerAddress(address)":"27097","setTradingFees(address)":"27030","setWalletAddress(address)":"27053","tokenList(uint256)":"infinite","transferOwnership(address)":"30857"},"internal":{"fillBuyOrders(struct Exchange._Order memory,uint256,uint256,bool,uint256)":"infinite","fillOrder(enum Exchange.Side,uint256,address,address,struct Exchange._fillOrderValues memory)":"infinite","fillSellOrders(struct Exchange._Order memory,uint256,uint256,bool,uint256)":"infinite","matchOrders(address,address,uint256,enum Exchange.Side)":"infinite"}},"methodIdentifiers":{"addToken(address,uint256)":"af81c5b9","cancelOrder(uint8,uint256,address,address)":"f90ef4f2","createLimitBuyOrder(address,uint256,address,uint256,uint256,bool)":"62c09cfa","createLimitSellOrder(address,uint256,address,uint256,uint256,bool)":"6f4e410b","ethToken()":"7bf1a627","getFilledOrder(address,uint8,uint256)":"8f101b0e","getFilledOrderLength(address,uint8)":"c3364be4","getOrder(address,address,uint256,uint8)":"ea42f349","getOrderFromArray(address,address,uint256,uint256)":"92e43d3a","getOrderLength(uint8,address,address)":"14eca9dc","getTokenInfo(address)":"1f69565f","isVerifiedToken(address)":"1027b219","orderExists(uint256,uint8,address,address)":"429d24b2","owner()":"8da5cb5b","renounceOwnership()":"715018a6","s_filledOrders(address,uint256,uint256)":"bd8098ec","s_orderBook(address,address,uint256,uint256)":"e4c3c7cd","s_orderId()":"9c07ce26","setPriceCheckerAddress(address)":"b136e39a","setTradingFees(address)":"dafbfe6a","setWalletAddress(address)":"ac1a386a","tokenList(uint256)":"9ead7222","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fees\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceChecker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"name\":\"Order\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Exchange._Order\",\"name\":\"remainingOrder\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillBuyRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"fillBuyOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Exchange._Order\",\"name\":\"remainingOrder\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillSellRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"name\":\"fillSellOrder\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_waiveFees\",\"type\":\"bool\"}],\"name\":\"createLimitBuyOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_waiveFees\",\"type\":\"bool\"}],\"name\":\"createLimitSellOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFilledOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fillRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"internalType\":\"struct Exchange._filledOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getFilledOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"internalType\":\"struct Exchange._Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"side\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getOrderFromArray\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"internalType\":\"struct Exchange._Order\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"getOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isVerifiedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"orderExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_filledOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountFilled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fillRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"feesWaived\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feesPaid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_orderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum Exchange.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originalAmountB\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"waiveFees\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_orderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PriceCheckeraddress\",\"type\":\"address\"}],\"name\":\"setPriceCheckerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tradingFees\",\"type\":\"address\"}],\"name\":\"setTradingFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Walletaddress\",\"type\":\"address\"}],\"name\":\"setWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Cancel(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Event when an order is cancelled\"},\"Order(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Event when an order is placed on an exchange\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(\\n        address account\\n    ) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(\\n        address spender,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(\\n            currentAllowance >= subtractedValue,\\n            \\\"ERC20: decreased allowance below zero\\\"\\n        );\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(\\n            fromBalance >= amount,\\n            \\\"ERC20: transfer amount exceeds balance\\\"\\n        );\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(\\n                currentAllowance >= amount,\\n                \\\"ERC20: insufficient allowance\\\"\\n            );\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa5e93048def7546de7ce959ca5f138cde21822a7645fb6e03407ee0f5f92ba5d\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceChecker.sol\\\";\\nimport \\\"./TradingFees.sol\\\";\\n\\n/// @notice Library SafeMath used to prevent overflows and underflows\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Exchange is Ownable {\\n    using SafeMath for uint256; //for prevention of integer overflow\\n    PriceChecker priceChecker;\\n    TradingFees tradingFees;\\n    Wallet wallet;\\n\\n    uint256 decimals = 10 ** 18;\\n    address public ethToken = address(0);\\n\\n    //Token Address List available in DEX\\n    _tokenInfo[] public tokenList;\\n\\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\\n    mapping(address => mapping(address => mapping(uint256 => _Order[])))\\n        public s_orderBook;\\n\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\n        public s_filledOrders;\\n\\n    uint256 public s_orderId = 0;\\n    bool private s_isManual = true;\\n\\n    struct _tokenInfo {\\n        address add;\\n        uint256 decimals;\\n    }\\n\\n    struct _fillOrderValues {\\n        uint256 rate;\\n        uint256 amount;\\n    }\\n\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\n    struct _Order {\\n        uint256 id;\\n        Side side;\\n        address user;\\n        address tokenA;\\n        uint256 amountA;\\n        address tokenB;\\n        uint256 amountB;\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\n        uint256 originalAmountA;\\n        uint256 originalAmountB;\\n        bool waiveFees;\\n    }\\n\\n    //For any order that is filled even if it is partially filled or fully filled\\n    struct _filledOrder {\\n        uint256 id;\\n        Side side;\\n        address user;\\n        address tokenA;\\n        address tokenB;\\n        uint256 amountFilled;\\n        uint256 fillRate;\\n        uint256 originalRate;\\n        uint256 originalAmountA;\\n        uint256 originalAmountB;\\n        bool feesWaived;\\n        uint256 feesPaid; //in terms of USD\\n    }\\n\\n    enum Side {\\n        BUY,\\n        SELL\\n    }\\n\\n    //add events\\n    /// @notice Event when an order is placed on an exchange\\n    event Order(\\n        uint256 id,\\n        Side side,\\n        address user,\\n        address tokenA,\\n        uint256 amountA,\\n        address tokenB,\\n        uint256 amountB,\\n        uint256 rate,\\n        uint256 originalAmountA,\\n        uint256 originalAmountB,\\n        bool waiveFees\\n    );\\n\\n    /// @notice Event when an order is cancelled\\n    event Cancel(\\n        uint256 id,\\n        Side side,\\n        address user,\\n        address tokenA,\\n        uint256 amountA,\\n        address tokenB,\\n        uint256 amountB,\\n        uint256 rate,\\n        uint256 originalAmountA,\\n        uint256 originalAmountB,\\n        bool waiveFees\\n    );\\n\\n    event fillBuyOrder(\\n        _Order remainingOrder,\\n        uint256 amountBought,\\n        uint256 fillBuyRate,\\n        bool feesWaived,\\n        uint256 feesPaid\\n    );\\n\\n    event fillSellOrder(\\n        _Order remainingOrder,\\n        uint256 amountSold,\\n        uint256 fillSellRate,\\n        bool feesWaived,\\n        uint256 feesPaid\\n    );\\n\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\n        wallet = Wallet(_wallet);\\n        tradingFees = TradingFees(_fees);\\n        priceChecker = PriceChecker(_priceChecker);\\n    }\\n\\n    function createLimitBuyOrder(\\n        // TokenA/TokenB\\n        address _tokenA,\\n        uint256 _amountA,\\n        address _tokenB,\\n        uint256 _amountB,\\n        uint256 _rate,\\n        bool _waiveFees\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\n        require(\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\n            ) >= _amountB,\\n            \\\"Insufficient Funds\\\"\\n        );\\n\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenB, _amountB, true);\\n\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\\n            _Order(\\n                s_orderId,\\n                Side.BUY,\\n                msg.sender,\\n                _tokenA,\\n                _amountA,\\n                _tokenB,\\n                _amountB,\\n                _rate,\\n                _amountA,\\n                _amountB,\\n                _waiveFees\\n            )\\n        );\\n\\n        emit Order(\\n            s_orderId,\\n            Side.BUY,\\n            msg.sender,\\n            _tokenA,\\n            _amountA,\\n            _tokenB,\\n            _amountB,\\n            _rate,\\n            _amountA,\\n            _amountB,\\n            _waiveFees\\n        );\\n\\n        s_orderId = s_orderId.add(1);\\n    }\\n\\n    function createLimitSellOrder(\\n        address _tokenA,\\n        uint256 _amountA,\\n        address _tokenB,\\n        uint256 _amountB,\\n        uint256 _rate,\\n        bool _waiveFees\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\n        require(\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\n            ) >= _amountA,\\n            \\\"Insufficient Funds\\\"\\n        );\\n\\n        //Lock the funds (tokens) in the wallet\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenA, _amountA, true);\\n\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\\n            _Order(\\n                s_orderId,\\n                Side.SELL,\\n                msg.sender,\\n                _tokenA,\\n                _amountA,\\n                _tokenB,\\n                _amountB,\\n                _rate,\\n                _amountA,\\n                _amountB,\\n                _waiveFees\\n            )\\n        );\\n\\n        emit Order(\\n            s_orderId,\\n            Side.SELL,\\n            msg.sender,\\n            _tokenA,\\n            _amountA,\\n            _tokenB,\\n            _amountB,\\n            _rate,\\n            _amountA,\\n            _amountB,\\n            _waiveFees\\n        );\\n\\n        s_orderId = s_orderId.add(1);\\n    }\\n\\n    function cancelOrder(\\n        Side side,\\n        uint256 _id,\\n        address _tokenA,\\n        address _tokenB\\n    )\\n        public\\n        validOrder(_id, side, _tokenA, _tokenB)\\n        validToken(_tokenA)\\n        validToken(_tokenB)\\n    {\\n        uint256 _side = uint256(side);\\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\\n        uint256 size = _order.length;\\n        _Order memory order;\\n\\n        uint256 index;\\n        for (uint256 i = 0; i < size; i++) {\\n            if (_order[i].id == _id) {\\n                index = i;\\n                order = _order[i];\\n                break;\\n            }\\n        }\\n\\n        //Manual cancellation of orders\\n        if (s_isManual) {\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\n\\n            //Unlock funds\\n            if (side == Side.BUY) {\\n                wallet.exchangeUpdateLockedFunds(\\n                    msg.sender,\\n                    order.tokenB,\\n                    order.amountB,\\n                    false\\n                );\\n            } else if (side == Side.SELL) {\\n                wallet.exchangeUpdateLockedFunds(\\n                    msg.sender,\\n                    order.tokenA,\\n                    order.amountA,\\n                    false\\n                );\\n            }\\n        }\\n\\n        for (uint256 j = index; j < size - 1; j++) {\\n            _order[j] = _order[j.add(1)];\\n        }\\n        delete _order[size.sub(1)];\\n        _order.pop();\\n\\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\\n\\n        emit Cancel(\\n            _id,\\n            order.side,\\n            order.user,\\n            order.tokenA,\\n            order.amountA,\\n            order.tokenB,\\n            order.amountB,\\n            order.rate,\\n            order.originalAmountA,\\n            order.originalAmountB,\\n            order.waiveFees\\n        );\\n    }\\n\\n    function fillOrder(\\n        Side side,\\n        uint256 _id,\\n        address _tokenA,\\n        address _tokenB,\\n        _fillOrderValues memory a\\n    )\\n        internal\\n        validOrder(_id, side, _tokenA, _tokenB)\\n        validToken(_tokenA)\\n        validToken(_tokenB)\\n    {\\n        uint256 _side = uint256(side);\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\n            _tokenA,\\n            _tokenB,\\n            _side,\\n            _id\\n        );\\n\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\n\\n        order.amountA = order.amountA.sub(a.amount);\\n        order.amountB = order.amountB.sub(\\n            order.rate.mul(a.amount).div(decimals)\\n        );\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountA = order.amountA;\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountB = order.amountB;\\n\\n        uint256 fees = tradingFees.calculateFees(\\n            a.amount,\\n            a.rate,\\n            order.tokenB\\n        );\\n        bool feesWaived = order.waiveFees &&\\n            tradingFees.checkSufficientaDAI(fees, order.user);\\n\\n        if (side == Side.BUY) {\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\n        } else if (side == Side.SELL) {\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\n        }\\n\\n        if (order.amountA == 0) {\\n            s_isManual = false;\\n            cancelOrder(side, order.id, order.tokenA, order.tokenB); //remove filled orders\\n            s_isManual = true;\\n        }\\n    }\\n\\n    function fillBuyOrders(\\n        _Order memory order,\\n        uint256 _amount,\\n        uint256 _rate,\\n        bool feesWaived,\\n        uint256 fees\\n    ) internal {\\n        if (feesWaived) {\\n            //Deduct aDAI\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                order.user,\\n                aDAIToDeduct,\\n                false\\n            );\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                wallet.fundWallet(),\\n                aDAIToDeduct,\\n                true\\n            );\\n\\n            //Credit Bought tokens\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                order.user,\\n                _amount,\\n                true\\n            );\\n        } else {\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\n                order.tokenA,\\n                fees\\n            );\\n            //Credit Bought tokens after minusing fees\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                order.user,\\n                _amount.sub(amountTokenToDeduct),\\n                true\\n            );\\n\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                wallet.fundWallet(),\\n                amountTokenToDeduct,\\n                true\\n            );\\n        }\\n\\n        //Original Locked Funds unlocked\\n        wallet.exchangeUpdateLockedFunds(\\n            order.user,\\n            order.tokenB,\\n            (order.rate.mul(_amount)).div(decimals),\\n            false\\n        );\\n\\n        //buyer update\\n        //Buyer balance deducted from what he paid\\n        wallet.exchangeUpdateBalance(\\n            order.tokenB,\\n            order.user,\\n            (_rate.mul(_amount)).div(decimals),\\n            false\\n        );\\n\\n        s_filledOrders[order.user][0].push(\\n            _filledOrder(\\n                order.id,\\n                order.side,\\n                order.user,\\n                order.tokenA,\\n                order.tokenB,\\n                _amount,\\n                _rate,\\n                order.rate,\\n                order.originalAmountA,\\n                order.originalAmountB,\\n                feesWaived,\\n                fees\\n            )\\n        );\\n    }\\n\\n    function fillSellOrders(\\n        _Order memory order,\\n        uint256 _amount,\\n        uint256 _rate,\\n        bool feesWaived,\\n        uint256 fees\\n    ) internal {\\n        if (feesWaived) {\\n            //Deduct aDAI\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                order.user,\\n                aDAIToDeduct,\\n                false\\n            );\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                wallet.fundWallet(),\\n                aDAIToDeduct,\\n                true\\n            );\\n\\n            //Credit Earned tokens\\n            wallet.exchangeUpdateBalance(\\n                order.tokenB,\\n                order.user,\\n                (_rate.mul(_amount)).div(decimals),\\n                true\\n            );\\n        } else {\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\n                order.tokenB,\\n                fees\\n            );\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                wallet.fundWallet(),\\n                amountTokensToDeduct,\\n                true\\n            );\\n            //Credit Earned tokens after minusing fees\\n            wallet.exchangeUpdateBalance(\\n                order.tokenB,\\n                order.user,\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\n                true\\n            );\\n        }\\n\\n        wallet.exchangeUpdateLockedFunds(\\n            order.user,\\n            order.tokenA,\\n            _amount,\\n            false\\n        );\\n        //seller update\\n        wallet.exchangeUpdateBalance(order.tokenA, order.user, _amount, false);\\n\\n        s_filledOrders[order.user][1].push(\\n            _filledOrder(\\n                order.id,\\n                order.side,\\n                order.user,\\n                order.tokenA,\\n                order.tokenB,\\n                _amount,\\n                _rate,\\n                order.rate,\\n                order.originalAmountA,\\n                order.originalAmountB,\\n                feesWaived,\\n                fees\\n            )\\n        );\\n    }\\n\\n    function matchOrders(\\n        address _tokenA,\\n        address _tokenB,\\n        uint256 _id,\\n        Side side\\n    )\\n        internal\\n        validOrder(_id, side, _tokenA, _tokenB)\\n        validToken(_tokenA)\\n        validToken(_tokenB)\\n    {\\n        uint256 saleTokenAmt;\\n\\n        if (side == Side.BUY) {\\n            //Retrieve sell order to match\\n            _Order[] memory _sellOrder = s_orderBook[_tokenA][_tokenB][1];\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\n                //Retrieve buy order to be filled\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\n                    _tokenA,\\n                    _tokenB,\\n                    uint8(side),\\n                    _id\\n                );\\n                //sell order hit buyer's limit price & tokenB matches\\n                if (\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\n                    buyOrderToFill.user != _sellOrder[i].user\\n                ) {\\n                    _Order memory sellOrder = _sellOrder[i];\\n                    //if buyer's amount to buy > seller's amount to sell\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\n                        saleTokenAmt = sellOrder.amountA;\\n                    }\\n                    //if seller's amount to sell >= buyer's amount to buy\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\n                        saleTokenAmt = buyOrderToFill.amountA;\\n                    }\\n\\n                    //Verify current balance\\n                    require(\\n                        wallet.balanceOf(\\n                            buyOrderToFill.tokenB,\\n                            buyOrderToFill.user\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\n                        \\\"Insufficient Buyer Token Balance\\\"\\n                    );\\n                    require(\\n                        wallet.balanceOf(_tokenA, sellOrder.user) >=\\n                            saleTokenAmt,\\n                        \\\"Insufficient Seller Token Balance\\\"\\n                    );\\n\\n                    //update orders\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\n                        sellOrder.rate,\\n                        saleTokenAmt\\n                    );\\n                    fillOrder(Side.BUY, _id, _tokenA, _tokenB, fillOrderValues);\\n                    fillOrder(\\n                        Side.SELL,\\n                        sellOrder.id,\\n                        _tokenA,\\n                        _tokenB,\\n                        fillOrderValues\\n                    );\\n                }\\n\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\n                if (!orderExist) break;\\n            }\\n        } else if (side == Side.SELL) {\\n            //Retrieve buy order to match\\n            _Order[] memory _buyOrder = s_orderBook[_tokenA][_tokenB][0];\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\n                //Retrieve sell order to be filled\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\n                    _tokenA,\\n                    _tokenB,\\n                    1,\\n                    _id\\n                );\\n                //sell order hit buyer's limit price\\n                if (\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\n                    _buyOrder[i].user != sellOrderToFill.user\\n                ) {\\n                    _Order memory order = _buyOrder[i];\\n\\n                    //if seller's amount to sell > buyer's amount to buy\\n                    if (sellOrderToFill.amountA > order.amountA) {\\n                        saleTokenAmt = order.amountA;\\n                    }\\n                    //if buyer's amount to buy > seller's amount to sell\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\n                        saleTokenAmt = sellOrderToFill.amountA;\\n                    }\\n                    //Verify current balance\\n                    require(\\n                        wallet.balanceOf(_tokenA, sellOrderToFill.user) >=\\n                            saleTokenAmt,\\n                        \\\"Insufficient Seller Token Balance\\\"\\n                    );\\n                    require(\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\n                        \\\"Insufficient Buyer Token Balance\\\"\\n                    );\\n\\n                    //update orders\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\n                        order.rate,\\n                        saleTokenAmt\\n                    );\\n                    fillOrder(\\n                        Side.SELL,\\n                        _id,\\n                        _tokenA,\\n                        _tokenB,\\n                        fillOrderValues\\n                    );\\n                    fillOrder(\\n                        Side.BUY,\\n                        order.id,\\n                        _tokenA,\\n                        _tokenB,\\n                        fillOrderValues\\n                    );\\n                }\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\n                if (!orderExist) break;\\n            }\\n        }\\n    }\\n\\n    function getOrderLength(\\n        Side side,\\n        address _tokenA,\\n        address _tokenB\\n    ) public view returns (uint256) {\\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\\n    }\\n\\n    function getOrder(\\n        address _tokenA,\\n        address _tokenB,\\n        uint256 index,\\n        Side side\\n    ) public view returns (_Order memory) {\\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][\\n            index\\n        ];\\n        return (order);\\n    }\\n\\n    function getFilledOrderLength(\\n        address _user,\\n        Side side\\n    ) public view returns (uint256) {\\n        return s_filledOrders[_user][uint256(side)].length;\\n    }\\n\\n    function getFilledOrder(\\n        address _user,\\n        Side side,\\n        uint256 index\\n    ) public view returns (_filledOrder memory) {\\n        _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\n            index\\n        ];\\n        return (filledOrder);\\n    }\\n\\n    function getOrderFromArray(\\n        address _tokenA,\\n        address _tokenB,\\n        uint256 side,\\n        uint256 _id\\n    ) public view returns (_Order memory, uint256) {\\n        uint256 i = 0;\\n        _Order[] memory _order = s_orderBook[_tokenA][_tokenB][side];\\n        _Order memory order;\\n        for (i; i < _order.length; i++) {\\n            if (_order[i].id == _id) {\\n                order = _order[i];\\n                break;\\n            }\\n        }\\n        return (order, i);\\n    }\\n\\n    function orderExists(\\n        uint256 _id,\\n        Side side,\\n        address _tokenA,\\n        address _tokenB\\n    ) public view returns (bool) {\\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\\n\\n        for (uint256 i = 0; i < orders.length; i++) {\\n            if (orders[i].id == _id) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\n        tokenList.push(_tokenInfo(_token, _decimals));\\n    }\\n\\n    function isVerifiedToken(address _token) public view returns (bool) {\\n        //uint256 size = tokenList.length;\\n\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\n            if (tokenList[i].add == _token) return true;\\n        }\\n        return false;\\n    }\\n\\n    function getTokenInfo(address _token) public view returns (uint256) {\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\n            if (tokenList[i].add == _token) {\\n                return tokenList[i].decimals;\\n            }\\n        }\\n    }\\n\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\n        wallet = Wallet(_Walletaddress);\\n    }\\n\\n    function setPriceCheckerAddress(\\n        address _PriceCheckeraddress\\n    ) public onlyOwner {\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\n    }\\n\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\n        tradingFees = TradingFees(_tradingFees);\\n    }\\n\\n    modifier validOrder(\\n        uint256 _id,\\n        Side side,\\n        address _tokenA,\\n        address _tokenB\\n    ) {\\n        require(orderExists(_id, side, _tokenA, _tokenB), \\\"Invalid Order ID\\\");\\n        _;\\n    }\\n\\n    modifier validToken(address _token) {\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xdf016dc3262cc3b92f32545ccbf91064c10036728e6d606dece377203897a32a\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract PriceChecker is Ownable {\\n    _priceFeed[] public priceFeeds;\\n\\n    struct _priceFeed {\\n        string name;\\n        address token;\\n        AggregatorV3Interface priceFeed;\\n    }\\n\\n    //only using PriceFeeds pegged to USD\\n    function addPriceFeed(\\n        string memory _name,\\n        address _token,\\n        address _address\\n    ) external onlyOwner {\\n        _priceFeed[] memory pricefeed = priceFeeds;\\n        bool isAdded = false;\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\n            if (\\n                keccak256(abi.encodePacked(_name)) ==\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\n            ) {\\n                isAdded = true;\\n                break;\\n            }\\n        }\\n        require(!isAdded, \\\"Price Feed already added\\\");\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\n    }\\n\\n    function getPriceFeed(\\n        address _token\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\n        _priceFeed[] memory pricefeed = priceFeeds;\\n\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\n            if (_token == pricefeed[i].token) {\\n                return pricefeed[i].priceFeed;\\n            }\\n        }\\n    }\\n\\n    function getPrice(address _address) external view returns (uint256) {\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer);\\n    }\\n}\\n\",\"keccak256\":\"0x5c9c2328d2d7e59d81ef60914824d090cca775d2bb406259e47def176d87e12d\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceChecker.sol\\\";\\nimport \\\"./Wallet.sol\\\";\\n\\n/// @notice Library SafeMath used to prevent overflows and underflows\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract TradingFees is Ownable {\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\n    //and waive trading fees\\n\\n    using SafeMath for uint256; //for prevention of integer overflow\\n\\n    uint256 decimals = 10 ** 18;\\n    address public daiToken =\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\n    PriceChecker private priceFeed;\\n    Wallet wallet;\\n\\n    constructor(address _priceCheckerAddress) {\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\n    }\\n\\n    function calculateFees(\\n        uint256 _amount,\\n        uint256 _rate,\\n        address _refToken\\n    ) public view returns (uint256) {\\n        //Calculated based on TokenB price, require actual price in 18dp\\n        //trading fees is 0.1% of trade = 0.001\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\n        //have to fetch tokenPrice from PriceFeed\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\n        uint256 value = (\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\n        ).div(decimals);\\n        uint256 fees = value.div(10 ** 4);\\n\\n        return fees; //based on USD value\\n    }\\n\\n    //Amount of DAI to deduct from fees\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\n        return uint256(amt);\\n    }\\n\\n    //Amount of Tokens to deduct from fees\\n    function amountTokensToDeduct(\\n        address _refToken,\\n        uint256 _fees\\n    ) public view returns (uint256) {\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\n        return uint256(amt);\\n    }\\n\\n    function checkSufficientaDAI(\\n        uint256 _fees,\\n        address _user\\n    ) public view returns (bool) {\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\n\\n        return balance >= amtDAI;\\n    }\\n\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\n        wallet = Wallet(_Walletaddress);\\n    }\\n\\n    function setPriceCheckerAddress(\\n        address _PriceCheckeraddress\\n    ) public onlyOwner {\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\n    }\\n}\\n\",\"keccak256\":\"0xa7188a7c778a4f831be26ba1c8173104c2d6ab869dd6d835a8e781b1595c783f\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./Exchange.sol\\\";\\n\\n/// @notice Library SafeMath used to prevent overflows and underflows\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Wallet is Ownable {\\n    using SafeMath for uint256; //for prevention of integer overflow\\n\\n    address Owner;\\n    address public fundWallet;\\n    uint256 decimals = 18;\\n    address public aDAI;\\n\\n    //For prevention of reentrancy\\n    bool private locked;\\n\\n    address public ethToken = address(0);\\n\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\n\\n    Exchange exchange;\\n    IERC20 token;\\n\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\n\\n    /// @notice Event when amount withdrawn exchange\\n    event Withdraw(\\n        address token,\\n        address user,\\n        uint256 amount,\\n        uint256 balance\\n    );\\n\\n    constructor() {\\n        Owner = msg.sender;\\n    }\\n\\n    function depositETH() external payable {\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\n\\n        emit Deposit(\\n            ethToken,\\n            msg.sender,\\n            msg.value,\\n            balanceOf(ethToken, msg.sender)\\n        );\\n    }\\n\\n    function withdrawETH(uint256 _amount) external {\\n        require(\\n            balanceOf(ethToken, msg.sender).sub(\\n                getlockedFunds(msg.sender, ethToken)\\n            ) >= _amount,\\n            \\\"Insufficient balance ETH to withdraw\\\"\\n        );\\n        require(!locked, \\\"Reentrant call detected!\\\");\\n        locked = true;\\n        updateBalance(ethToken, msg.sender, _amount, false);\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\n        require(success, \\\"failed to send amount\\\");\\n        locked = false;\\n\\n        emit Withdraw(\\n            ethToken,\\n            msg.sender,\\n            _amount,\\n            balanceOf(ethToken, msg.sender)\\n        );\\n    }\\n\\n    //from and transferFrom is from ERC20 contract\\n    //_token should be an ERC20 token\\n    function depositToken(\\n        address _token,\\n        uint256 _amount,\\n        uint256 _decimals\\n    ) external {\\n        require(_token != ethToken, \\\"Invalid Token Type\\\");\\n        require(\\n            exchange.isVerifiedToken(_token) || _token == aDAI,\\n            \\\"Token not verified on Exchange\\\"\\n        );\\n        //need to add a check to prove that it is an ERC20 token\\n        token = IERC20(_token);\\n\\n        //Requires approval first\\n        require(\\n            token.transferFrom(msg.sender, address(this), _amount),\\n            \\\"No Approval yet\\\"\\n        );\\n\\n        updateBalance(\\n            _token,\\n            msg.sender,\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\n            true\\n        );\\n\\n        emit Deposit(\\n            _token,\\n            msg.sender,\\n            _amount,\\n            balanceOf(_token, msg.sender)\\n        );\\n    }\\n\\n    function withdrawToken(\\n        address _token,\\n        uint256 _amount,\\n        uint256 _decimals\\n    ) external {\\n        require(_token != ethToken);\\n        require(\\n            exchange.isVerifiedToken(_token),\\n            \\\"Token not verified on Exchange\\\"\\n        );\\n\\n        require(\\n            balanceOf(_token, msg.sender).sub(\\n                getlockedFunds(msg.sender, _token)\\n            ) >= _amount,\\n            \\\"Insufficient Tokens to withdraw\\\"\\n        );\\n        require(!locked, \\\"Reentrant call detected!\\\");\\n        locked = true;\\n\\n        token = IERC20(_token);\\n        updateBalance(\\n            _token,\\n            msg.sender,\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\n            false\\n        );\\n        require(\\n            token.transfer(\\n                msg.sender,\\n                _amount.div(10 ** decimals.sub(_decimals))\\n            )\\n        );\\n\\n        locked = false;\\n        emit Withdraw(\\n            _token,\\n            msg.sender,\\n            _amount,\\n            balanceOf(_token, msg.sender)\\n        );\\n    }\\n\\n    function getlockedFunds(\\n        address _user,\\n        address _token\\n    ) public view returns (uint256) {\\n        return lockedFunds[_user][_token];\\n    }\\n\\n    function exchangeUpdateLockedFunds(\\n        address _user,\\n        address _token,\\n        uint256 _amount,\\n        bool isAdd\\n    ) external isExchange {\\n        updateLockedFunds(_user, _token, _amount, isAdd);\\n    }\\n\\n    function updateLockedFunds(\\n        address _user,\\n        address _token,\\n        uint256 _amount,\\n        bool isAdd\\n    ) internal {\\n        if (isAdd) {\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\n                _amount\\n            );\\n        } else if (!isAdd) {\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\n                _amount\\n            );\\n        }\\n    }\\n\\n    //balance of specific tokens in the dex owned by specific user\\n    function balanceOf(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256) {\\n        return s_tokens[_token][_user];\\n    }\\n\\n    function exchangeUpdateBalance(\\n        address _token,\\n        address _user,\\n        uint256 _amount,\\n        bool isAdd\\n    ) external isExchange {\\n        updateBalance(_token, _user, _amount, isAdd);\\n    }\\n\\n    function updateBalance(\\n        address _token,\\n        address _user,\\n        uint256 _amount,\\n        bool isAdd\\n    ) internal {\\n        if (isAdd) {\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\n        } else if (!isAdd) {\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\n        }\\n    }\\n\\n    function updateFundWallet(address _fundwallet) public onlyOwner {\\n        fundWallet = _fundwallet;\\n    }\\n\\n    function withdrawToFundWallet(address _token, uint256 _decimals) external {\\n        //Only allow fundWallet address to make the call\\n        require(\\n            msg.sender == fundWallet,\\n            \\\"Invalid FundWallet address to withdraw\\\"\\n        );\\n        uint256 totalAmount = s_tokens[_token][fundWallet];\\n        uint256 actualAmount = totalAmount.div(10 ** decimals.sub(_decimals));\\n        token = IERC20(_token);\\n\\n        require(!locked, \\\"Reentrant call detected!\\\");\\n        locked = true;\\n        updateBalance(_token, fundWallet, totalAmount, false);\\n        require(token.transfer(fundWallet, actualAmount));\\n        locked = false;\\n    }\\n\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\n        exchange = Exchange(_exchangeAddress);\\n    }\\n\\n    function updateaDaiAddress(address _address) public onlyOwner {\\n        aDAI = address(_address);\\n    }\\n\\n    modifier isExchange() {\\n        require(msg.sender == address(exchange), \\\"Not Exchange contract\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xb6878d59320d4df2cf05086e287149f3748edf8c1c68bcc96e33c4a56b58777f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/Exchange.sol:Exchange","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1197,"contract":"contracts/Exchange.sol:Exchange","label":"priceChecker","offset":0,"slot":"1","type":"t_contract(PriceChecker)3305"},{"astId":1200,"contract":"contracts/Exchange.sol:Exchange","label":"tradingFees","offset":0,"slot":"2","type":"t_contract(TradingFees)3535"},{"astId":1203,"contract":"contracts/Exchange.sol:Exchange","label":"wallet","offset":0,"slot":"3","type":"t_contract(Wallet)4195"},{"astId":1208,"contract":"contracts/Exchange.sol:Exchange","label":"decimals","offset":0,"slot":"4","type":"t_uint256"},{"astId":1214,"contract":"contracts/Exchange.sol:Exchange","label":"ethToken","offset":0,"slot":"5","type":"t_address"},{"astId":1218,"contract":"contracts/Exchange.sol:Exchange","label":"tokenList","offset":0,"slot":"6","type":"t_array(t_struct(_tokenInfo)1247_storage)dyn_storage"},{"astId":1228,"contract":"contracts/Exchange.sol:Exchange","label":"s_orderBook","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)1276_storage)dyn_storage)))"},{"astId":1236,"contract":"contracts/Exchange.sol:Exchange","label":"s_filledOrders","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_filledOrder)1302_storage)dyn_storage))"},{"astId":1239,"contract":"contracts/Exchange.sol:Exchange","label":"s_orderId","offset":0,"slot":"9","type":"t_uint256"},{"astId":1242,"contract":"contracts/Exchange.sol:Exchange","label":"s_isManual","offset":0,"slot":"10","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(_Order)1276_storage)dyn_storage":{"base":"t_struct(_Order)1276_storage","encoding":"dynamic_array","label":"struct Exchange._Order[]","numberOfBytes":"32"},"t_array(t_struct(_filledOrder)1302_storage)dyn_storage":{"base":"t_struct(_filledOrder)1302_storage","encoding":"dynamic_array","label":"struct Exchange._filledOrder[]","numberOfBytes":"32"},"t_array(t_struct(_tokenInfo)1247_storage)dyn_storage":{"base":"t_struct(_tokenInfo)1247_storage","encoding":"dynamic_array","label":"struct Exchange._tokenInfo[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(PriceChecker)3305":{"encoding":"inplace","label":"contract PriceChecker","numberOfBytes":"20"},"t_contract(TradingFees)3535":{"encoding":"inplace","label":"contract TradingFees","numberOfBytes":"20"},"t_contract(Wallet)4195":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_enum(Side)1305":{"encoding":"inplace","label":"enum Exchange.Side","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)1276_storage)dyn_storage)))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => mapping(uint256 => struct Exchange._Order[])))","numberOfBytes":"32","value":"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)1276_storage)dyn_storage))"},"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_Order)1276_storage)dyn_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Exchange._Order[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(_Order)1276_storage)dyn_storage)"},"t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(_filledOrder)1302_storage)dyn_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct Exchange._filledOrder[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_struct(_filledOrder)1302_storage)dyn_storage)"},"t_mapping(t_uint256,t_array(t_struct(_Order)1276_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Exchange._Order[])","numberOfBytes":"32","value":"t_array(t_struct(_Order)1276_storage)dyn_storage"},"t_mapping(t_uint256,t_array(t_struct(_filledOrder)1302_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Exchange._filledOrder[])","numberOfBytes":"32","value":"t_array(t_struct(_filledOrder)1302_storage)dyn_storage"},"t_struct(_Order)1276_storage":{"encoding":"inplace","label":"struct Exchange._Order","members":[{"astId":1254,"contract":"contracts/Exchange.sol:Exchange","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1257,"contract":"contracts/Exchange.sol:Exchange","label":"side","offset":0,"slot":"1","type":"t_enum(Side)1305"},{"astId":1259,"contract":"contracts/Exchange.sol:Exchange","label":"user","offset":1,"slot":"1","type":"t_address"},{"astId":1261,"contract":"contracts/Exchange.sol:Exchange","label":"tokenA","offset":0,"slot":"2","type":"t_address"},{"astId":1263,"contract":"contracts/Exchange.sol:Exchange","label":"amountA","offset":0,"slot":"3","type":"t_uint256"},{"astId":1265,"contract":"contracts/Exchange.sol:Exchange","label":"tokenB","offset":0,"slot":"4","type":"t_address"},{"astId":1267,"contract":"contracts/Exchange.sol:Exchange","label":"amountB","offset":0,"slot":"5","type":"t_uint256"},{"astId":1269,"contract":"contracts/Exchange.sol:Exchange","label":"rate","offset":0,"slot":"6","type":"t_uint256"},{"astId":1271,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountA","offset":0,"slot":"7","type":"t_uint256"},{"astId":1273,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountB","offset":0,"slot":"8","type":"t_uint256"},{"astId":1275,"contract":"contracts/Exchange.sol:Exchange","label":"waiveFees","offset":0,"slot":"9","type":"t_bool"}],"numberOfBytes":"320"},"t_struct(_filledOrder)1302_storage":{"encoding":"inplace","label":"struct Exchange._filledOrder","members":[{"astId":1278,"contract":"contracts/Exchange.sol:Exchange","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1281,"contract":"contracts/Exchange.sol:Exchange","label":"side","offset":0,"slot":"1","type":"t_enum(Side)1305"},{"astId":1283,"contract":"contracts/Exchange.sol:Exchange","label":"user","offset":1,"slot":"1","type":"t_address"},{"astId":1285,"contract":"contracts/Exchange.sol:Exchange","label":"tokenA","offset":0,"slot":"2","type":"t_address"},{"astId":1287,"contract":"contracts/Exchange.sol:Exchange","label":"tokenB","offset":0,"slot":"3","type":"t_address"},{"astId":1289,"contract":"contracts/Exchange.sol:Exchange","label":"amountFilled","offset":0,"slot":"4","type":"t_uint256"},{"astId":1291,"contract":"contracts/Exchange.sol:Exchange","label":"fillRate","offset":0,"slot":"5","type":"t_uint256"},{"astId":1293,"contract":"contracts/Exchange.sol:Exchange","label":"originalRate","offset":0,"slot":"6","type":"t_uint256"},{"astId":1295,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountA","offset":0,"slot":"7","type":"t_uint256"},{"astId":1297,"contract":"contracts/Exchange.sol:Exchange","label":"originalAmountB","offset":0,"slot":"8","type":"t_uint256"},{"astId":1299,"contract":"contracts/Exchange.sol:Exchange","label":"feesWaived","offset":0,"slot":"9","type":"t_bool"},{"astId":1301,"contract":"contracts/Exchange.sol:Exchange","label":"feesPaid","offset":0,"slot":"10","type":"t_uint256"}],"numberOfBytes":"352"},"t_struct(_tokenInfo)1247_storage":{"encoding":"inplace","label":"struct Exchange._tokenInfo","members":[{"astId":1244,"contract":"contracts/Exchange.sol:Exchange","label":"add","offset":0,"slot":"0","type":"t_address"},{"astId":1246,"contract":"contracts/Exchange.sol:Exchange","label":"decimals","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"Cancel(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)":{"notice":"Event when an order is cancelled"},"Order(uint256,uint8,address,address,uint256,address,uint256,uint256,uint256,uint256,bool)":{"notice":"Event when an order is placed on an exchange"}},"kind":"user","methods":{},"version":1}}},"contracts/PriceChecker.sol":{"PriceChecker":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_address","type":"address"}],"name":"addPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"priceFeeds","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"token","type":"address"},{"internalType":"contract AggregatorV3Interface","name":"priceFeed","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_273":{"entryPoint":50,"id":273,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":58,"id":157,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113778061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310c7f0b91461006757806341976e0914610099578063715018a6146100c95780638c35423e146100d35780638da5cb5b146100ef578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610cd3565b610129565b60405161009093929190610ead565b60405180910390f35b6100b360048036038101906100ae9190610c37565b61022b565b6040516100c09190610f4b565b60405180910390f35b6100d16102c9565b005b6100ed60048036038101906100e89190610c64565b6102dd565b005b6100f7610688565b6040516101049190610e92565b60405180910390f35b61012760048036038101906101229190610c37565b6106b1565b005b6001818154811061013957600080fd5b906000526020600020906003020160009150905080600001805461015c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610188906110b7565b80156101d55780601f106101aa576101008083540402835291602001916101d5565b820191906000526020600020905b8154815290600101906020018083116101b857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008061023783610735565b905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610d00565b5050509150508092505050919050565b6102d1610971565b6102db60006109ef565b565b6102e5610971565b60006001805480602002602001604051908101604052809291908181526020016000905b82821015610479578382906000526020600020906003020160405180606001604052908160008201805461033c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906110b7565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610309565b5050505090506000805b825181101561051a5782818151811061049f5761049e6111c1565b5b6020026020010151600001516040516020016104bb9190610e7b565b60405160208183030381529060405280519060200120866040516020016104e29190610e7b565b604051602081830303815290604052805190602001201415610507576001915061051a565b80806105129061111a565b915050610483565b50801561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610f0b565b60405180910390fd5b6000839050600160405180606001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105ef929190610abb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b9610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610eeb565b60405180910390fd5b610732816109ef565b50565b6000806001805480602002602001604051908101604052809291908181526020016000905b828210156108ca578382906000526020600020906003020160405180606001604052908160008201805461078d906110b7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906110b7565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061075a565b50505050905060005b8151811015610969578181815181106108ef576108ee6111c1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561095657818181518110610941576109406111c1565b5b6020026020010151604001519250505061096c565b80806109619061111a565b9150506108d3565b50505b919050565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff16610997610688565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906110b7565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84610f8b565b610f66565b905082815260208101848484011115610b8d57610b8c611224565b5b610b98848285611075565b509392505050565b600081359050610baf816112e5565b92915050565b600081519050610bc4816112fc565b92915050565b600082601f830112610bdf57610bde61121f565b5b8135610bef848260208601610b5e565b91505092915050565b600081359050610c0781611313565b92915050565b600081519050610c1c81611313565b92915050565b600081519050610c318161132a565b92915050565b600060208284031215610c4d57610c4c61122e565b5b6000610c5b84828501610ba0565b91505092915050565b600080600060608486031215610c7d57610c7c61122e565b5b600084013567ffffffffffffffff811115610c9b57610c9a611229565b5b610ca786828701610bca565b9350506020610cb886828701610ba0565b9250506040610cc986828701610ba0565b9150509250925092565b600060208284031215610ce957610ce861122e565b5b6000610cf784828501610bf8565b91505092915050565b600080600080600060a08688031215610d1c57610d1b61122e565b5b6000610d2a88828901610c22565b9550506020610d3b88828901610bb5565b9450506040610d4c88828901610c0d565b9350506060610d5d88828901610c0d565b9250506080610d6e88828901610c22565b9150509295509295909350565b610d8481610fe3565b82525050565b610d938161103f565b82525050565b6000610da482610fbc565b610dae8185610fc7565b9350610dbe818560208601611084565b610dc781611233565b840191505092915050565b6000610ddd82610fbc565b610de78185610fd8565b9350610df7818560208601611084565b80840191505092915050565b6000610e10602683610fc7565b9150610e1b82611244565b604082019050919050565b6000610e33601883610fc7565b9150610e3e82611293565b602082019050919050565b6000610e56602083610fc7565b9150610e61826112bc565b602082019050919050565b610e758161101f565b82525050565b6000610e878284610dd2565b915081905092915050565b6000602082019050610ea76000830184610d7b565b92915050565b60006060820190508181036000830152610ec78186610d99565b9050610ed66020830185610d7b565b610ee36040830184610d8a565b949350505050565b60006020820190508181036000830152610f0481610e03565b9050919050565b60006020820190508181036000830152610f2481610e26565b9050919050565b60006020820190508181036000830152610f4481610e49565b9050919050565b6000602082019050610f606000830184610e6c565b92915050565b6000610f70610f81565b9050610f7c82826110e9565b919050565b6000604051905090565b600067ffffffffffffffff821115610fa657610fa56111f0565b5b610faf82611233565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610fee82610fff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104a82611051565b9050919050565b600061105c82611063565b9050919050565b600061106e82610fff565b9050919050565b82818337600083830152505050565b60005b838110156110a2578082015181840152602081019050611087565b838111156110b1576000848401525b50505050565b600060028204905060018216806110cf57607f821691505b602082108114156110e3576110e2611192565b5b50919050565b6110f282611233565b810181811067ffffffffffffffff82111715611111576111106111f0565b5b80604052505050565b60006111258261101f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561115857611157611163565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5072696365204665656420616c72656164792061646465640000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6112ee81610fe3565b81146112f957600080fd5b50565b61130581610ff5565b811461131057600080fd5b50565b61131c8161101f565b811461132757600080fd5b50565b61133381611029565b811461133e57600080fd5b5056fea26469706673582212201f51547dc2d6404e5b41f4daa9b6407378acba4a482960875944b10a0cd10e7a64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1377 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8C35423E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x15C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x188 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD00 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x0 PUSH2 0x9EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E5 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x479 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x309 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x507 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x51A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x9EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8CA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x78D SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x806 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x806 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x956 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 POP POP POP PUSH2 0x96C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D3 JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xAB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB30 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB42 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0xB6C DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x1224 JUMP JUMPDEST JUMPDEST PUSH2 0xB98 DUP5 DUP3 DUP6 PUSH2 0x1075 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC4 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBDF JUMPI PUSH2 0xBDE PUSH2 0x121F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBEF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1C DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC31 DUP2 PUSH2 0x132A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x1229 JUMP JUMPDEST JUMPDEST PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xBCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCF7 DUP5 DUP3 DUP6 ADD PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1B PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD3B DUP9 DUP3 DUP10 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD4C DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD5D DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xD6E DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0x103F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDAE DUP2 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDE7 DUP2 DUP6 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x26 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 PUSH1 0x18 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH1 0x20 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC7 DUP2 DUP7 PUSH2 0xD99 JUMP JUMPDEST SWAP1 POP PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF04 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF24 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7C DUP3 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x1063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1087 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x1192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F2 DUP3 PUSH2 0x1233 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365204665656420616C72656164792061646465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12EE DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1333 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP2 EQ PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F MLOAD SLOAD PUSH30 0xC2D6404E5B41F4DAA9B6407378ACBA4A482960875944B10A0CD10E7A6473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"188:1522:8:-:0;;;;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;188:1522:8;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;188:1522:8:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":2417,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_273":{"entryPoint":2739,"id":273,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":2543,"id":157,"parameterSlots":1,"returnSlots":0},"@addPriceFeed_3236":{"entryPoint":733,"id":3236,"parameterSlots":3,"returnSlots":0},"@getPriceFeed_3278":{"entryPoint":1845,"id":3278,"parameterSlots":1,"returnSlots":1},"@getPrice_3304":{"entryPoint":555,"id":3304,"parameterSlots":1,"returnSlots":1},"@owner_86":{"entryPoint":1672,"id":86,"parameterSlots":0,"returnSlots":1},"@priceFeeds_3146":{"entryPoint":297,"id":3146,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_114":{"entryPoint":713,"id":114,"parameterSlots":0,"returnSlots":0},"@transferOwnership_137":{"entryPoint":1713,"id":137,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":2910,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":2997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":3018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3064,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_addresst_address":{"entryPoint":3172,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":3283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":3328,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3451,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack":{"entryPoint":3466,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":3587,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack":{"entryPoint":3622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":3657,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3692,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$45__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed":{"entryPoint":3757,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3819,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3883,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3915,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3942,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3969,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":3979,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4028,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4039,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4056,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":4085,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4095,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4127,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":4137,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$45_to_t_address":{"entryPoint":4159,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4177,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4195,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":4213,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":4228,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4279,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4329,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4378,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4451,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4498,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4545,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4592,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4639,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4644,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4649,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4654,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4659,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":4676,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f":{"entryPoint":4755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":4796,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4837,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":4860,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4883,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":4906,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14545:11","statements":[{"body":{"nodeType":"YulBlock","src":"91:328:11","statements":[{"nodeType":"YulAssignment","src":"101:75:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:11"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:11"},"nodeType":"YulFunctionCall","src":"126:49:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:11"},"nodeType":"YulFunctionCall","src":"110:66:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:11"},"nodeType":"YulFunctionCall","src":"185:21:11"},"nodeType":"YulExpressionStatement","src":"185:21:11"},{"nodeType":"YulVariableDeclaration","src":"215:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:11"},"nodeType":"YulFunctionCall","src":"226:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"282:77:11"},"nodeType":"YulFunctionCall","src":"282:79:11"},"nodeType":"YulExpressionStatement","src":"282:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:11"},"nodeType":"YulFunctionCall","src":"257:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:11"},"nodeType":"YulFunctionCall","src":"254:25:11"},"nodeType":"YulIf","src":"251:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"396:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"401:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"406:6:11"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"372:23:11"},"nodeType":"YulFunctionCall","src":"372:41:11"},"nodeType":"YulExpressionStatement","src":"372:41:11"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:11","type":""}],"src":"7:412:11"},{"body":{"nodeType":"YulBlock","src":"477:87:11","statements":[{"nodeType":"YulAssignment","src":"487:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"509:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"496:12:11"},"nodeType":"YulFunctionCall","src":"496:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"487:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"552:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"525:26:11"},"nodeType":"YulFunctionCall","src":"525:33:11"},"nodeType":"YulExpressionStatement","src":"525:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"455:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"463:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"471:5:11","type":""}],"src":"425:139:11"},{"body":{"nodeType":"YulBlock","src":"632:79:11","statements":[{"nodeType":"YulAssignment","src":"642:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"657:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"651:5:11"},"nodeType":"YulFunctionCall","src":"651:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"642:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"699:5:11"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"673:25:11"},"nodeType":"YulFunctionCall","src":"673:32:11"},"nodeType":"YulExpressionStatement","src":"673:32:11"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"610:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"618:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"626:5:11","type":""}],"src":"570:141:11"},{"body":{"nodeType":"YulBlock","src":"793:278:11","statements":[{"body":{"nodeType":"YulBlock","src":"842:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"844:77:11"},"nodeType":"YulFunctionCall","src":"844:79:11"},"nodeType":"YulExpressionStatement","src":"844:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"821:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"829:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:11"},"nodeType":"YulFunctionCall","src":"817:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"836:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"813:3:11"},"nodeType":"YulFunctionCall","src":"813:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"806:6:11"},"nodeType":"YulFunctionCall","src":"806:35:11"},"nodeType":"YulIf","src":"803:122:11"},{"nodeType":"YulVariableDeclaration","src":"934:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"961:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"948:12:11"},"nodeType":"YulFunctionCall","src":"948:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"938:6:11","type":""}]},{"nodeType":"YulAssignment","src":"977:88:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1038:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1046:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1034:3:11"},"nodeType":"YulFunctionCall","src":"1034:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"1053:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"1061:3:11"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"986:47:11"},"nodeType":"YulFunctionCall","src":"986:79:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"977:5:11"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"771:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"779:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"787:5:11","type":""}],"src":"731:340:11"},{"body":{"nodeType":"YulBlock","src":"1129:87:11","statements":[{"nodeType":"YulAssignment","src":"1139:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1161:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1148:12:11"},"nodeType":"YulFunctionCall","src":"1148:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1139:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1204:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1177:26:11"},"nodeType":"YulFunctionCall","src":"1177:33:11"},"nodeType":"YulExpressionStatement","src":"1177:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1107:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1115:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1123:5:11","type":""}],"src":"1077:139:11"},{"body":{"nodeType":"YulBlock","src":"1285:80:11","statements":[{"nodeType":"YulAssignment","src":"1295:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1310:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1304:5:11"},"nodeType":"YulFunctionCall","src":"1304:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1295:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1353:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1326:26:11"},"nodeType":"YulFunctionCall","src":"1326:33:11"},"nodeType":"YulExpressionStatement","src":"1326:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1263:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1271:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1279:5:11","type":""}],"src":"1222:143:11"},{"body":{"nodeType":"YulBlock","src":"1433:79:11","statements":[{"nodeType":"YulAssignment","src":"1443:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1458:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1452:5:11"},"nodeType":"YulFunctionCall","src":"1452:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1443:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1500:5:11"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"1474:25:11"},"nodeType":"YulFunctionCall","src":"1474:32:11"},"nodeType":"YulExpressionStatement","src":"1474:32:11"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1411:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1419:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1427:5:11","type":""}],"src":"1371:141:11"},{"body":{"nodeType":"YulBlock","src":"1584:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"1630:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1632:77:11"},"nodeType":"YulFunctionCall","src":"1632:79:11"},"nodeType":"YulExpressionStatement","src":"1632:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1605:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1601:3:11"},"nodeType":"YulFunctionCall","src":"1601:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1626:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1597:3:11"},"nodeType":"YulFunctionCall","src":"1597:32:11"},"nodeType":"YulIf","src":"1594:119:11"},{"nodeType":"YulBlock","src":"1723:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1738:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1752:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1742:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1767:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1802:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1798:3:11"},"nodeType":"YulFunctionCall","src":"1798:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1822:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1777:20:11"},"nodeType":"YulFunctionCall","src":"1777:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1767:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1554:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1565:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1577:6:11","type":""}],"src":"1518:329:11"},{"body":{"nodeType":"YulBlock","src":"1963:689:11","statements":[{"body":{"nodeType":"YulBlock","src":"2009:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2011:77:11"},"nodeType":"YulFunctionCall","src":"2011:79:11"},"nodeType":"YulExpressionStatement","src":"2011:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1984:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1993:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1980:3:11"},"nodeType":"YulFunctionCall","src":"1980:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2005:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1976:3:11"},"nodeType":"YulFunctionCall","src":"1976:32:11"},"nodeType":"YulIf","src":"1973:119:11"},{"nodeType":"YulBlock","src":"2102:287:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2117:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2159:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:11"},"nodeType":"YulFunctionCall","src":"2144:17:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2131:12:11"},"nodeType":"YulFunctionCall","src":"2131:31:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2121:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2209:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2211:77:11"},"nodeType":"YulFunctionCall","src":"2211:79:11"},"nodeType":"YulExpressionStatement","src":"2211:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2181:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2189:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2178:2:11"},"nodeType":"YulFunctionCall","src":"2178:30:11"},"nodeType":"YulIf","src":"2175:117:11"},{"nodeType":"YulAssignment","src":"2306:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2351:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2362:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:11"},"nodeType":"YulFunctionCall","src":"2347:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2371:7:11"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2316:30:11"},"nodeType":"YulFunctionCall","src":"2316:63:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2306:6:11"}]}]},{"nodeType":"YulBlock","src":"2399:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2414:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2428:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2418:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2444:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2479:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2490:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:11"},"nodeType":"YulFunctionCall","src":"2475:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2499:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2454:20:11"},"nodeType":"YulFunctionCall","src":"2454:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2444:6:11"}]}]},{"nodeType":"YulBlock","src":"2527:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2542:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2556:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2546:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2572:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2607:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2618:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:11"},"nodeType":"YulFunctionCall","src":"2603:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2627:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2582:20:11"},"nodeType":"YulFunctionCall","src":"2582:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2572:6:11"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1917:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1928:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1940:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1948:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1956:6:11","type":""}],"src":"1853:799:11"},{"body":{"nodeType":"YulBlock","src":"2724:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"2770:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2772:77:11"},"nodeType":"YulFunctionCall","src":"2772:79:11"},"nodeType":"YulExpressionStatement","src":"2772:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2745:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2754:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2741:3:11"},"nodeType":"YulFunctionCall","src":"2741:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2766:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2737:3:11"},"nodeType":"YulFunctionCall","src":"2737:32:11"},"nodeType":"YulIf","src":"2734:119:11"},{"nodeType":"YulBlock","src":"2863:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2878:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2892:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2882:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2907:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2942:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2953:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2938:3:11"},"nodeType":"YulFunctionCall","src":"2938:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2962:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2917:20:11"},"nodeType":"YulFunctionCall","src":"2917:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2907:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2694:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2705:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2717:6:11","type":""}],"src":"2658:329:11"},{"body":{"nodeType":"YulBlock","src":"3135:829:11","statements":[{"body":{"nodeType":"YulBlock","src":"3182:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3184:77:11"},"nodeType":"YulFunctionCall","src":"3184:79:11"},"nodeType":"YulExpressionStatement","src":"3184:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3156:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3165:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3152:3:11"},"nodeType":"YulFunctionCall","src":"3152:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3177:3:11","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3148:3:11"},"nodeType":"YulFunctionCall","src":"3148:33:11"},"nodeType":"YulIf","src":"3145:120:11"},{"nodeType":"YulBlock","src":"3275:127:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3290:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3304:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3294:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3319:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3375:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:11"},"nodeType":"YulFunctionCall","src":"3360:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3384:7:11"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"3329:30:11"},"nodeType":"YulFunctionCall","src":"3329:63:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3319:6:11"}]}]},{"nodeType":"YulBlock","src":"3412:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3427:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3441:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3431:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3457:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3502:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3513:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3498:3:11"},"nodeType":"YulFunctionCall","src":"3498:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3522:7:11"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"3467:30:11"},"nodeType":"YulFunctionCall","src":"3467:63:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3457:6:11"}]}]},{"nodeType":"YulBlock","src":"3550:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3565:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3579:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3569:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3595:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3641:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3652:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:11"},"nodeType":"YulFunctionCall","src":"3637:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3661:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3605:31:11"},"nodeType":"YulFunctionCall","src":"3605:64:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3595:6:11"}]}]},{"nodeType":"YulBlock","src":"3689:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3704:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3718:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3708:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3734:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3780:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3791:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3776:3:11"},"nodeType":"YulFunctionCall","src":"3776:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3800:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3744:31:11"},"nodeType":"YulFunctionCall","src":"3744:64:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3734:6:11"}]}]},{"nodeType":"YulBlock","src":"3828:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3843:17:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3857:3:11","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3847:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3874:73:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3919:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3930:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3915:3:11"},"nodeType":"YulFunctionCall","src":"3915:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3939:7:11"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"3884:30:11"},"nodeType":"YulFunctionCall","src":"3884:63:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3874:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3073:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3084:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3096:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3104:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3112:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3120:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3128:6:11","type":""}],"src":"2993:971:11"},{"body":{"nodeType":"YulBlock","src":"4035:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4052:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4075:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4057:17:11"},"nodeType":"YulFunctionCall","src":"4057:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4045:6:11"},"nodeType":"YulFunctionCall","src":"4045:37:11"},"nodeType":"YulExpressionStatement","src":"4045:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4023:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4030:3:11","type":""}],"src":"3970:118:11"},{"body":{"nodeType":"YulBlock","src":"4187:94:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4204:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4268:5:11"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$45_to_t_address","nodeType":"YulIdentifier","src":"4209:58:11"},"nodeType":"YulFunctionCall","src":"4209:65:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4197:6:11"},"nodeType":"YulFunctionCall","src":"4197:78:11"},"nodeType":"YulExpressionStatement","src":"4197:78:11"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4175:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4182:3:11","type":""}],"src":"4094:187:11"},{"body":{"nodeType":"YulBlock","src":"4379:272:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4389:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4436:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4403:32:11"},"nodeType":"YulFunctionCall","src":"4403:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4393:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4451:78:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4517:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"4522:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4458:58:11"},"nodeType":"YulFunctionCall","src":"4458:71:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4451:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4564:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4571:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4560:3:11"},"nodeType":"YulFunctionCall","src":"4560:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"4578:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"4583:6:11"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4538:21:11"},"nodeType":"YulFunctionCall","src":"4538:52:11"},"nodeType":"YulExpressionStatement","src":"4538:52:11"},{"nodeType":"YulAssignment","src":"4599:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4610:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4637:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4615:21:11"},"nodeType":"YulFunctionCall","src":"4615:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4606:3:11"},"nodeType":"YulFunctionCall","src":"4606:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4599:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4360:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4367:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4375:3:11","type":""}],"src":"4287:364:11"},{"body":{"nodeType":"YulBlock","src":"4767:267:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4777:53:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4824:5:11"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4791:32:11"},"nodeType":"YulFunctionCall","src":"4791:39:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4781:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4839:96:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4923:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"4928:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4846:76:11"},"nodeType":"YulFunctionCall","src":"4846:89:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4839:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4970:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4977:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4966:3:11"},"nodeType":"YulFunctionCall","src":"4966:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"4984:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"4989:6:11"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4944:21:11"},"nodeType":"YulFunctionCall","src":"4944:52:11"},"nodeType":"YulExpressionStatement","src":"4944:52:11"},{"nodeType":"YulAssignment","src":"5005:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5016:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"5021:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5012:3:11"},"nodeType":"YulFunctionCall","src":"5012:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5005:3:11"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4748:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4755:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4763:3:11","type":""}],"src":"4657:377:11"},{"body":{"nodeType":"YulBlock","src":"5186:220:11","statements":[{"nodeType":"YulAssignment","src":"5196:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5262:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5267:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5203:58:11"},"nodeType":"YulFunctionCall","src":"5203:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5196:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5368:3:11"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"5279:88:11"},"nodeType":"YulFunctionCall","src":"5279:93:11"},"nodeType":"YulExpressionStatement","src":"5279:93:11"},{"nodeType":"YulAssignment","src":"5381:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5392:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5388:3:11"},"nodeType":"YulFunctionCall","src":"5388:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5381:3:11"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5174:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5182:3:11","type":""}],"src":"5040:366:11"},{"body":{"nodeType":"YulBlock","src":"5558:220:11","statements":[{"nodeType":"YulAssignment","src":"5568:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5634:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5639:2:11","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5575:58:11"},"nodeType":"YulFunctionCall","src":"5575:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5568:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5740:3:11"}],"functionName":{"name":"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","nodeType":"YulIdentifier","src":"5651:88:11"},"nodeType":"YulFunctionCall","src":"5651:93:11"},"nodeType":"YulExpressionStatement","src":"5651:93:11"},{"nodeType":"YulAssignment","src":"5753:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5764:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5769:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5760:3:11"},"nodeType":"YulFunctionCall","src":"5760:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5753:3:11"}]}]},"name":"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5546:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5554:3:11","type":""}],"src":"5412:366:11"},{"body":{"nodeType":"YulBlock","src":"5930:220:11","statements":[{"nodeType":"YulAssignment","src":"5940:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6006:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6011:2:11","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5947:58:11"},"nodeType":"YulFunctionCall","src":"5947:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5940:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6112:3:11"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"6023:88:11"},"nodeType":"YulFunctionCall","src":"6023:93:11"},"nodeType":"YulExpressionStatement","src":"6023:93:11"},{"nodeType":"YulAssignment","src":"6125:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6136:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6132:3:11"},"nodeType":"YulFunctionCall","src":"6132:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6125:3:11"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5918:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5926:3:11","type":""}],"src":"5784:366:11"},{"body":{"nodeType":"YulBlock","src":"6221:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6238:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6261:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6243:17:11"},"nodeType":"YulFunctionCall","src":"6243:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6231:6:11"},"nodeType":"YulFunctionCall","src":"6231:37:11"},"nodeType":"YulExpressionStatement","src":"6231:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6209:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6216:3:11","type":""}],"src":"6156:118:11"},{"body":{"nodeType":"YulBlock","src":"6416:139:11","statements":[{"nodeType":"YulAssignment","src":"6427:102:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6516:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"6525:3:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6434:81:11"},"nodeType":"YulFunctionCall","src":"6434:95:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6427:3:11"}]},{"nodeType":"YulAssignment","src":"6539:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"6546:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6539:3:11"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6395:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6401:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6412:3:11","type":""}],"src":"6280:275:11"},{"body":{"nodeType":"YulBlock","src":"6659:124:11","statements":[{"nodeType":"YulAssignment","src":"6669:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6681:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6692:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6677:3:11"},"nodeType":"YulFunctionCall","src":"6677:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6669:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6749:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6762:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6773:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6758:3:11"},"nodeType":"YulFunctionCall","src":"6758:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6705:43:11"},"nodeType":"YulFunctionCall","src":"6705:71:11"},"nodeType":"YulExpressionStatement","src":"6705:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6631:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6643:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6654:4:11","type":""}],"src":"6561:222:11"},{"body":{"nodeType":"YulBlock","src":"6991:387:11","statements":[{"nodeType":"YulAssignment","src":"7001:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7013:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7024:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7009:3:11"},"nodeType":"YulFunctionCall","src":"7009:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7001:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7048:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7059:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7044:3:11"},"nodeType":"YulFunctionCall","src":"7044:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7067:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7073:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7063:3:11"},"nodeType":"YulFunctionCall","src":"7063:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7037:6:11"},"nodeType":"YulFunctionCall","src":"7037:47:11"},"nodeType":"YulExpressionStatement","src":"7037:47:11"},{"nodeType":"YulAssignment","src":"7093:86:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7165:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"7174:4:11"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7101:63:11"},"nodeType":"YulFunctionCall","src":"7101:78:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7093:4:11"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7233:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7246:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7257:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7242:3:11"},"nodeType":"YulFunctionCall","src":"7242:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7189:43:11"},"nodeType":"YulFunctionCall","src":"7189:72:11"},"nodeType":"YulExpressionStatement","src":"7189:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7343:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7356:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7352:3:11"},"nodeType":"YulFunctionCall","src":"7352:18:11"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7271:71:11"},"nodeType":"YulFunctionCall","src":"7271:100:11"},"nodeType":"YulExpressionStatement","src":"7271:100:11"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$45__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6947:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6959:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6967:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6975:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6986:4:11","type":""}],"src":"6789:589:11"},{"body":{"nodeType":"YulBlock","src":"7555:248:11","statements":[{"nodeType":"YulAssignment","src":"7565:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7577:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7588:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7573:3:11"},"nodeType":"YulFunctionCall","src":"7573:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7565:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7612:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7623:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7608:3:11"},"nodeType":"YulFunctionCall","src":"7608:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7631:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7637:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7627:3:11"},"nodeType":"YulFunctionCall","src":"7627:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7601:6:11"},"nodeType":"YulFunctionCall","src":"7601:47:11"},"nodeType":"YulExpressionStatement","src":"7601:47:11"},{"nodeType":"YulAssignment","src":"7657:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7791:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7665:124:11"},"nodeType":"YulFunctionCall","src":"7665:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7657:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7535:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7550:4:11","type":""}],"src":"7384:419:11"},{"body":{"nodeType":"YulBlock","src":"7980:248:11","statements":[{"nodeType":"YulAssignment","src":"7990:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8002:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8013:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7998:3:11"},"nodeType":"YulFunctionCall","src":"7998:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7990:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8037:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8048:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8033:3:11"},"nodeType":"YulFunctionCall","src":"8033:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8056:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8062:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8052:3:11"},"nodeType":"YulFunctionCall","src":"8052:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8026:6:11"},"nodeType":"YulFunctionCall","src":"8026:47:11"},"nodeType":"YulExpressionStatement","src":"8026:47:11"},{"nodeType":"YulAssignment","src":"8082:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8216:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8090:124:11"},"nodeType":"YulFunctionCall","src":"8090:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8082:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7960:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7975:4:11","type":""}],"src":"7809:419:11"},{"body":{"nodeType":"YulBlock","src":"8405:248:11","statements":[{"nodeType":"YulAssignment","src":"8415:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8427:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8438:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8423:3:11"},"nodeType":"YulFunctionCall","src":"8423:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8415:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8462:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8473:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8458:3:11"},"nodeType":"YulFunctionCall","src":"8458:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8481:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8487:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8477:3:11"},"nodeType":"YulFunctionCall","src":"8477:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8451:6:11"},"nodeType":"YulFunctionCall","src":"8451:47:11"},"nodeType":"YulExpressionStatement","src":"8451:47:11"},{"nodeType":"YulAssignment","src":"8507:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8641:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8515:124:11"},"nodeType":"YulFunctionCall","src":"8515:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8507:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8385:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8400:4:11","type":""}],"src":"8234:419:11"},{"body":{"nodeType":"YulBlock","src":"8757:124:11","statements":[{"nodeType":"YulAssignment","src":"8767:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8779:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8790:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8775:3:11"},"nodeType":"YulFunctionCall","src":"8775:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8767:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8847:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8860:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8871:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8856:3:11"},"nodeType":"YulFunctionCall","src":"8856:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8803:43:11"},"nodeType":"YulFunctionCall","src":"8803:71:11"},"nodeType":"YulExpressionStatement","src":"8803:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8729:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8741:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8752:4:11","type":""}],"src":"8659:222:11"},{"body":{"nodeType":"YulBlock","src":"8928:88:11","statements":[{"nodeType":"YulAssignment","src":"8938:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8948:18:11"},"nodeType":"YulFunctionCall","src":"8948:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8938:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8997:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"9005:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8977:19:11"},"nodeType":"YulFunctionCall","src":"8977:33:11"},"nodeType":"YulExpressionStatement","src":"8977:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8912:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8921:6:11","type":""}],"src":"8887:129:11"},{"body":{"nodeType":"YulBlock","src":"9062:35:11","statements":[{"nodeType":"YulAssignment","src":"9072:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9088:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9082:5:11"},"nodeType":"YulFunctionCall","src":"9082:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9072:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9055:6:11","type":""}],"src":"9022:75:11"},{"body":{"nodeType":"YulBlock","src":"9170:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"9275:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9277:16:11"},"nodeType":"YulFunctionCall","src":"9277:18:11"},"nodeType":"YulExpressionStatement","src":"9277:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9247:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"9255:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9244:2:11"},"nodeType":"YulFunctionCall","src":"9244:30:11"},"nodeType":"YulIf","src":"9241:56:11"},{"nodeType":"YulAssignment","src":"9307:37:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9337:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9315:21:11"},"nodeType":"YulFunctionCall","src":"9315:29:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9307:4:11"}]},{"nodeType":"YulAssignment","src":"9381:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9393:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"9399:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9389:3:11"},"nodeType":"YulFunctionCall","src":"9389:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9381:4:11"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9154:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9165:4:11","type":""}],"src":"9103:308:11"},{"body":{"nodeType":"YulBlock","src":"9476:40:11","statements":[{"nodeType":"YulAssignment","src":"9487:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9503:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9497:5:11"},"nodeType":"YulFunctionCall","src":"9497:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9487:6:11"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9459:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9469:6:11","type":""}],"src":"9417:99:11"},{"body":{"nodeType":"YulBlock","src":"9618:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9635:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"9640:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9628:6:11"},"nodeType":"YulFunctionCall","src":"9628:19:11"},"nodeType":"YulExpressionStatement","src":"9628:19:11"},{"nodeType":"YulAssignment","src":"9656:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9675:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"9680:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9671:3:11"},"nodeType":"YulFunctionCall","src":"9671:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9656:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9590:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"9595:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9606:11:11","type":""}],"src":"9522:169:11"},{"body":{"nodeType":"YulBlock","src":"9811:34:11","statements":[{"nodeType":"YulAssignment","src":"9821:18:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"9836:3:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9821:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9783:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"9788:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9799:11:11","type":""}],"src":"9697:148:11"},{"body":{"nodeType":"YulBlock","src":"9896:51:11","statements":[{"nodeType":"YulAssignment","src":"9906:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9935:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9917:17:11"},"nodeType":"YulFunctionCall","src":"9917:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9906:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9878:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9888:7:11","type":""}],"src":"9851:96:11"},{"body":{"nodeType":"YulBlock","src":"9997:32:11","statements":[{"nodeType":"YulAssignment","src":"10007:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"10018:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10007:7:11"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9979:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9989:7:11","type":""}],"src":"9953:76:11"},{"body":{"nodeType":"YulBlock","src":"10080:81:11","statements":[{"nodeType":"YulAssignment","src":"10090:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10105:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10112:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10101:3:11"},"nodeType":"YulFunctionCall","src":"10101:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10090:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10062:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10072:7:11","type":""}],"src":"10035:126:11"},{"body":{"nodeType":"YulBlock","src":"10212:32:11","statements":[{"nodeType":"YulAssignment","src":"10222:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"10233:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10222:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10194:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10204:7:11","type":""}],"src":"10167:77:11"},{"body":{"nodeType":"YulBlock","src":"10294:61:11","statements":[{"nodeType":"YulAssignment","src":"10304:45:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10319:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10326:22:11","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10315:3:11"},"nodeType":"YulFunctionCall","src":"10315:34:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10304:7:11"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10276:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10286:7:11","type":""}],"src":"10250:105:11"},{"body":{"nodeType":"YulBlock","src":"10449:66:11","statements":[{"nodeType":"YulAssignment","src":"10459:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10503:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10472:30:11"},"nodeType":"YulFunctionCall","src":"10472:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10459:9:11"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$45_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10429:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10439:9:11","type":""}],"src":"10361:154:11"},{"body":{"nodeType":"YulBlock","src":"10581:66:11","statements":[{"nodeType":"YulAssignment","src":"10591:50:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10635:5:11"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"10604:30:11"},"nodeType":"YulFunctionCall","src":"10604:37:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10591:9:11"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10561:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10571:9:11","type":""}],"src":"10521:126:11"},{"body":{"nodeType":"YulBlock","src":"10713:53:11","statements":[{"nodeType":"YulAssignment","src":"10723:37:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10754:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10736:17:11"},"nodeType":"YulFunctionCall","src":"10736:24:11"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10723:9:11"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10693:5:11","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10703:9:11","type":""}],"src":"10653:113:11"},{"body":{"nodeType":"YulBlock","src":"10823:103:11","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10846:3:11"},{"name":"src","nodeType":"YulIdentifier","src":"10851:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"10856:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10833:12:11"},"nodeType":"YulFunctionCall","src":"10833:30:11"},"nodeType":"YulExpressionStatement","src":"10833:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10904:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"10909:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10900:3:11"},"nodeType":"YulFunctionCall","src":"10900:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"10918:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10893:6:11"},"nodeType":"YulFunctionCall","src":"10893:27:11"},"nodeType":"YulExpressionStatement","src":"10893:27:11"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10805:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10810:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"10815:6:11","type":""}],"src":"10772:154:11"},{"body":{"nodeType":"YulBlock","src":"10981:258:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10991:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11000:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10995:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11060:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11085:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"11090:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11081:3:11"},"nodeType":"YulFunctionCall","src":"11081:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11104:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"11109:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11100:3:11"},"nodeType":"YulFunctionCall","src":"11100:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11094:5:11"},"nodeType":"YulFunctionCall","src":"11094:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11074:6:11"},"nodeType":"YulFunctionCall","src":"11074:39:11"},"nodeType":"YulExpressionStatement","src":"11074:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11021:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"11024:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11018:2:11"},"nodeType":"YulFunctionCall","src":"11018:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11032:19:11","statements":[{"nodeType":"YulAssignment","src":"11034:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11043:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"11046:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11039:3:11"},"nodeType":"YulFunctionCall","src":"11039:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11034:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"11014:3:11","statements":[]},"src":"11010:113:11"},{"body":{"nodeType":"YulBlock","src":"11157:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11207:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11212:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11203:3:11"},"nodeType":"YulFunctionCall","src":"11203:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"11221:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11196:6:11"},"nodeType":"YulFunctionCall","src":"11196:27:11"},"nodeType":"YulExpressionStatement","src":"11196:27:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11138:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"11141:6:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11135:2:11"},"nodeType":"YulFunctionCall","src":"11135:13:11"},"nodeType":"YulIf","src":"11132:101:11"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10963:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10968:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"10973:6:11","type":""}],"src":"10932:307:11"},{"body":{"nodeType":"YulBlock","src":"11296:269:11","statements":[{"nodeType":"YulAssignment","src":"11306:22:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11320:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"11326:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11316:3:11"},"nodeType":"YulFunctionCall","src":"11316:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11306:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"11337:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11367:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"11373:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11363:3:11"},"nodeType":"YulFunctionCall","src":"11363:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11341:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11414:51:11","statements":[{"nodeType":"YulAssignment","src":"11428:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11442:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11450:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11438:3:11"},"nodeType":"YulFunctionCall","src":"11438:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11428:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11394:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11387:6:11"},"nodeType":"YulFunctionCall","src":"11387:26:11"},"nodeType":"YulIf","src":"11384:81:11"},{"body":{"nodeType":"YulBlock","src":"11517:42:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11531:16:11"},"nodeType":"YulFunctionCall","src":"11531:18:11"},"nodeType":"YulExpressionStatement","src":"11531:18:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11481:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11504:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11512:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11501:2:11"},"nodeType":"YulFunctionCall","src":"11501:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11478:2:11"},"nodeType":"YulFunctionCall","src":"11478:38:11"},"nodeType":"YulIf","src":"11475:84:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11280:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11289:6:11","type":""}],"src":"11245:320:11"},{"body":{"nodeType":"YulBlock","src":"11614:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11624:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11646:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11676:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11654:21:11"},"nodeType":"YulFunctionCall","src":"11654:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11642:3:11"},"nodeType":"YulFunctionCall","src":"11642:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"11628:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11793:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11795:16:11"},"nodeType":"YulFunctionCall","src":"11795:18:11"},"nodeType":"YulExpressionStatement","src":"11795:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11736:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"11748:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11733:2:11"},"nodeType":"YulFunctionCall","src":"11733:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11772:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"11784:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11769:2:11"},"nodeType":"YulFunctionCall","src":"11769:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11730:2:11"},"nodeType":"YulFunctionCall","src":"11730:62:11"},"nodeType":"YulIf","src":"11727:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11831:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11835:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11824:6:11"},"nodeType":"YulFunctionCall","src":"11824:22:11"},"nodeType":"YulExpressionStatement","src":"11824:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11600:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"11608:4:11","type":""}],"src":"11571:281:11"},{"body":{"nodeType":"YulBlock","src":"11901:190:11","statements":[{"nodeType":"YulAssignment","src":"11911:33:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11938:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11920:17:11"},"nodeType":"YulFunctionCall","src":"11920:24:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11911:5:11"}]},{"body":{"nodeType":"YulBlock","src":"12034:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12036:16:11"},"nodeType":"YulFunctionCall","src":"12036:18:11"},"nodeType":"YulExpressionStatement","src":"12036:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11959:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"11966:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11956:2:11"},"nodeType":"YulFunctionCall","src":"11956:77:11"},"nodeType":"YulIf","src":"11953:103:11"},{"nodeType":"YulAssignment","src":"12065:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12076:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12083:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12072:3:11"},"nodeType":"YulFunctionCall","src":"12072:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12065:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11887:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11897:3:11","type":""}],"src":"11858:233:11"},{"body":{"nodeType":"YulBlock","src":"12125:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12142:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12145:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12135:6:11"},"nodeType":"YulFunctionCall","src":"12135:88:11"},"nodeType":"YulExpressionStatement","src":"12135:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12239:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12242:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12232:6:11"},"nodeType":"YulFunctionCall","src":"12232:15:11"},"nodeType":"YulExpressionStatement","src":"12232:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12263:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12266:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12256:6:11"},"nodeType":"YulFunctionCall","src":"12256:15:11"},"nodeType":"YulExpressionStatement","src":"12256:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12097:180:11"},{"body":{"nodeType":"YulBlock","src":"12311:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12328:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12331:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12321:6:11"},"nodeType":"YulFunctionCall","src":"12321:88:11"},"nodeType":"YulExpressionStatement","src":"12321:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12425:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12428:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12418:6:11"},"nodeType":"YulFunctionCall","src":"12418:15:11"},"nodeType":"YulExpressionStatement","src":"12418:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12449:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12452:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12442:6:11"},"nodeType":"YulFunctionCall","src":"12442:15:11"},"nodeType":"YulExpressionStatement","src":"12442:15:11"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12283:180:11"},{"body":{"nodeType":"YulBlock","src":"12497:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12514:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12517:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12507:6:11"},"nodeType":"YulFunctionCall","src":"12507:88:11"},"nodeType":"YulExpressionStatement","src":"12507:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12611:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12614:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12604:6:11"},"nodeType":"YulFunctionCall","src":"12604:15:11"},"nodeType":"YulExpressionStatement","src":"12604:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12635:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12638:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12628:6:11"},"nodeType":"YulFunctionCall","src":"12628:15:11"},"nodeType":"YulExpressionStatement","src":"12628:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12469:180:11"},{"body":{"nodeType":"YulBlock","src":"12683:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12700:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12703:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12693:6:11"},"nodeType":"YulFunctionCall","src":"12693:88:11"},"nodeType":"YulExpressionStatement","src":"12693:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12797:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12800:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12790:6:11"},"nodeType":"YulFunctionCall","src":"12790:15:11"},"nodeType":"YulExpressionStatement","src":"12790:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12821:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12824:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12814:6:11"},"nodeType":"YulFunctionCall","src":"12814:15:11"},"nodeType":"YulExpressionStatement","src":"12814:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"12655:180:11"},{"body":{"nodeType":"YulBlock","src":"12930:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12947:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12950:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12940:6:11"},"nodeType":"YulFunctionCall","src":"12940:12:11"},"nodeType":"YulExpressionStatement","src":"12940:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"12841:117:11"},{"body":{"nodeType":"YulBlock","src":"13053:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13070:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13073:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13063:6:11"},"nodeType":"YulFunctionCall","src":"13063:12:11"},"nodeType":"YulExpressionStatement","src":"13063:12:11"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12964:117:11"},{"body":{"nodeType":"YulBlock","src":"13176:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13193:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13196:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13186:6:11"},"nodeType":"YulFunctionCall","src":"13186:12:11"},"nodeType":"YulExpressionStatement","src":"13186:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"13087:117:11"},{"body":{"nodeType":"YulBlock","src":"13299:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13316:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13319:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13309:6:11"},"nodeType":"YulFunctionCall","src":"13309:12:11"},"nodeType":"YulExpressionStatement","src":"13309:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"13210:117:11"},{"body":{"nodeType":"YulBlock","src":"13381:54:11","statements":[{"nodeType":"YulAssignment","src":"13391:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13409:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"13416:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13405:3:11"},"nodeType":"YulFunctionCall","src":"13405:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13425:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13421:3:11"},"nodeType":"YulFunctionCall","src":"13421:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13401:3:11"},"nodeType":"YulFunctionCall","src":"13401:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13391:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13364:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13374:6:11","type":""}],"src":"13333:102:11"},{"body":{"nodeType":"YulBlock","src":"13547:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13569:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13577:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13565:3:11"},"nodeType":"YulFunctionCall","src":"13565:14:11"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"13581:34:11","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13558:6:11"},"nodeType":"YulFunctionCall","src":"13558:58:11"},"nodeType":"YulExpressionStatement","src":"13558:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13637:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13645:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13633:3:11"},"nodeType":"YulFunctionCall","src":"13633:15:11"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"13650:8:11","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13626:6:11"},"nodeType":"YulFunctionCall","src":"13626:33:11"},"nodeType":"YulExpressionStatement","src":"13626:33:11"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13539:6:11","type":""}],"src":"13441:225:11"},{"body":{"nodeType":"YulBlock","src":"13778:68:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13800:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13808:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13796:3:11"},"nodeType":"YulFunctionCall","src":"13796:14:11"},{"hexValue":"5072696365204665656420616c7265616479206164646564","kind":"string","nodeType":"YulLiteral","src":"13812:26:11","type":"","value":"Price Feed already added"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13789:6:11"},"nodeType":"YulFunctionCall","src":"13789:50:11"},"nodeType":"YulExpressionStatement","src":"13789:50:11"}]},"name":"store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13770:6:11","type":""}],"src":"13672:174:11"},{"body":{"nodeType":"YulBlock","src":"13958:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13980:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13988:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13976:3:11"},"nodeType":"YulFunctionCall","src":"13976:14:11"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"13992:34:11","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13969:6:11"},"nodeType":"YulFunctionCall","src":"13969:58:11"},"nodeType":"YulExpressionStatement","src":"13969:58:11"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13950:6:11","type":""}],"src":"13852:182:11"},{"body":{"nodeType":"YulBlock","src":"14083:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"14140:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14149:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14152:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14142:6:11"},"nodeType":"YulFunctionCall","src":"14142:12:11"},"nodeType":"YulExpressionStatement","src":"14142:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14106:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14131:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14113:17:11"},"nodeType":"YulFunctionCall","src":"14113:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14103:2:11"},"nodeType":"YulFunctionCall","src":"14103:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14096:6:11"},"nodeType":"YulFunctionCall","src":"14096:43:11"},"nodeType":"YulIf","src":"14093:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14076:5:11","type":""}],"src":"14040:122:11"},{"body":{"nodeType":"YulBlock","src":"14210:78:11","statements":[{"body":{"nodeType":"YulBlock","src":"14266:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14275:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14278:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14268:6:11"},"nodeType":"YulFunctionCall","src":"14268:12:11"},"nodeType":"YulExpressionStatement","src":"14268:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14233:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14257:5:11"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"14240:16:11"},"nodeType":"YulFunctionCall","src":"14240:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14230:2:11"},"nodeType":"YulFunctionCall","src":"14230:34:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14223:6:11"},"nodeType":"YulFunctionCall","src":"14223:42:11"},"nodeType":"YulIf","src":"14220:62:11"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14203:5:11","type":""}],"src":"14168:120:11"},{"body":{"nodeType":"YulBlock","src":"14337:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"14394:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14403:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14406:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14396:6:11"},"nodeType":"YulFunctionCall","src":"14396:12:11"},"nodeType":"YulExpressionStatement","src":"14396:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14360:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14385:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14367:17:11"},"nodeType":"YulFunctionCall","src":"14367:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14357:2:11"},"nodeType":"YulFunctionCall","src":"14357:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14350:6:11"},"nodeType":"YulFunctionCall","src":"14350:43:11"},"nodeType":"YulIf","src":"14347:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14330:5:11","type":""}],"src":"14294:122:11"},{"body":{"nodeType":"YulBlock","src":"14464:78:11","statements":[{"body":{"nodeType":"YulBlock","src":"14520:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14529:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14532:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14522:6:11"},"nodeType":"YulFunctionCall","src":"14522:12:11"},"nodeType":"YulExpressionStatement","src":"14522:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14487:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14511:5:11"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"14494:16:11"},"nodeType":"YulFunctionCall","src":"14494:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14484:2:11"},"nodeType":"YulFunctionCall","src":"14484:34:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14477:6:11"},"nodeType":"YulFunctionCall","src":"14477:42:11"},"nodeType":"YulIf","src":"14474:62:11"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14457:5:11","type":""}],"src":"14422:120:11"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_contract$_AggregatorV3Interface_$45__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_83f1820d168ab6f2a8d695bfcde6c8a91f0ee73e675d4e9fd132237004c3466f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price Feed already added\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c806310c7f0b91461006757806341976e0914610099578063715018a6146100c95780638c35423e146100d35780638da5cb5b146100ef578063f2fde38b1461010d575b600080fd5b610081600480360381019061007c9190610cd3565b610129565b60405161009093929190610ead565b60405180910390f35b6100b360048036038101906100ae9190610c37565b61022b565b6040516100c09190610f4b565b60405180910390f35b6100d16102c9565b005b6100ed60048036038101906100e89190610c64565b6102dd565b005b6100f7610688565b6040516101049190610e92565b60405180910390f35b61012760048036038101906101229190610c37565b6106b1565b005b6001818154811061013957600080fd5b906000526020600020906003020160009150905080600001805461015c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610188906110b7565b80156101d55780601f106101aa576101008083540402835291602001916101d5565b820191906000526020600020905b8154815290600101906020018083116101b857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60008061023783610735565b905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610d00565b5050509150508092505050919050565b6102d1610971565b6102db60006109ef565b565b6102e5610971565b60006001805480602002602001604051908101604052809291908181526020016000905b82821015610479578382906000526020600020906003020160405180606001604052908160008201805461033c906110b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906110b7565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610309565b5050505090506000805b825181101561051a5782818151811061049f5761049e6111c1565b5b6020026020010151600001516040516020016104bb9190610e7b565b60405160208183030381529060405280519060200120866040516020016104e29190610e7b565b604051602081830303815290604052805190602001201415610507576001915061051a565b80806105129061111a565b915050610483565b50801561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610f0b565b60405180910390fd5b6000839050600160405180606001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105ef929190610abb565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b9610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610eeb565b60405180910390fd5b610732816109ef565b50565b6000806001805480602002602001604051908101604052809291908181526020016000905b828210156108ca578382906000526020600020906003020160405180606001604052908160008201805461078d906110b7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b9906110b7565b80156108065780601f106107db57610100808354040283529160200191610806565b820191906000526020600020905b8154815290600101906020018083116107e957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061075a565b50505050905060005b8151811015610969578181815181106108ef576108ee6111c1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561095657818181518110610941576109406111c1565b5b6020026020010151604001519250505061096c565b80806109619061111a565b9150506108d3565b50505b919050565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff16610997610688565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906110b7565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84610f8b565b610f66565b905082815260208101848484011115610b8d57610b8c611224565b5b610b98848285611075565b509392505050565b600081359050610baf816112e5565b92915050565b600081519050610bc4816112fc565b92915050565b600082601f830112610bdf57610bde61121f565b5b8135610bef848260208601610b5e565b91505092915050565b600081359050610c0781611313565b92915050565b600081519050610c1c81611313565b92915050565b600081519050610c318161132a565b92915050565b600060208284031215610c4d57610c4c61122e565b5b6000610c5b84828501610ba0565b91505092915050565b600080600060608486031215610c7d57610c7c61122e565b5b600084013567ffffffffffffffff811115610c9b57610c9a611229565b5b610ca786828701610bca565b9350506020610cb886828701610ba0565b9250506040610cc986828701610ba0565b9150509250925092565b600060208284031215610ce957610ce861122e565b5b6000610cf784828501610bf8565b91505092915050565b600080600080600060a08688031215610d1c57610d1b61122e565b5b6000610d2a88828901610c22565b9550506020610d3b88828901610bb5565b9450506040610d4c88828901610c0d565b9350506060610d5d88828901610c0d565b9250506080610d6e88828901610c22565b9150509295509295909350565b610d8481610fe3565b82525050565b610d938161103f565b82525050565b6000610da482610fbc565b610dae8185610fc7565b9350610dbe818560208601611084565b610dc781611233565b840191505092915050565b6000610ddd82610fbc565b610de78185610fd8565b9350610df7818560208601611084565b80840191505092915050565b6000610e10602683610fc7565b9150610e1b82611244565b604082019050919050565b6000610e33601883610fc7565b9150610e3e82611293565b602082019050919050565b6000610e56602083610fc7565b9150610e61826112bc565b602082019050919050565b610e758161101f565b82525050565b6000610e878284610dd2565b915081905092915050565b6000602082019050610ea76000830184610d7b565b92915050565b60006060820190508181036000830152610ec78186610d99565b9050610ed66020830185610d7b565b610ee36040830184610d8a565b949350505050565b60006020820190508181036000830152610f0481610e03565b9050919050565b60006020820190508181036000830152610f2481610e26565b9050919050565b60006020820190508181036000830152610f4481610e49565b9050919050565b6000602082019050610f606000830184610e6c565b92915050565b6000610f70610f81565b9050610f7c82826110e9565b919050565b6000604051905090565b600067ffffffffffffffff821115610fa657610fa56111f0565b5b610faf82611233565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610fee82610fff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061104a82611051565b9050919050565b600061105c82611063565b9050919050565b600061106e82610fff565b9050919050565b82818337600083830152505050565b60005b838110156110a2578082015181840152602081019050611087565b838111156110b1576000848401525b50505050565b600060028204905060018216806110cf57607f821691505b602082108114156110e3576110e2611192565b5b50919050565b6110f282611233565b810181811067ffffffffffffffff82111715611111576111106111f0565b5b80604052505050565b60006111258261101f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561115857611157611163565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5072696365204665656420616c72656164792061646465640000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6112ee81610fe3565b81146112f957600080fd5b50565b61130581610ff5565b811461131057600080fd5b50565b61131c8161101f565b811461132757600080fd5b50565b61133381611029565b811461133e57600080fd5b5056fea26469706673582212201f51547dc2d6404e5b41f4daa9b6407378acba4a482960875944b10a0cd10e7a64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8C35423E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x2C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x15C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x188 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x237 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xD00 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x0 PUSH2 0x9EF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2E5 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x479 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x33C SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x398 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x309 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x507 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x51A JUMP JUMPDEST DUP1 DUP1 PUSH2 0x512 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x483 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5EF SWAP3 SWAP2 SWAP1 PUSH2 0xABB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x9EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8CA JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x78D SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x806 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x806 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x75A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x969 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x956 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x11C1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 POP POP POP PUSH2 0x96C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x961 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D3 JUMP JUMPDEST POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xAB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x688 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAC7 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB30 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB14 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB42 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB71 PUSH2 0xB6C DUP5 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x1224 JUMP JUMPDEST JUMPDEST PUSH2 0xB98 DUP5 DUP3 DUP6 PUSH2 0x1075 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBAF DUP2 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC4 DUP2 PUSH2 0x12FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBDF JUMPI PUSH2 0xBDE PUSH2 0x121F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBEF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC1C DUP2 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC31 DUP2 PUSH2 0x132A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC5B DUP5 DUP3 DUP6 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x1229 JUMP JUMPDEST JUMPDEST PUSH2 0xCA7 DUP7 DUP3 DUP8 ADD PUSH2 0xBCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCB8 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCC9 DUP7 DUP3 DUP8 ADD PUSH2 0xBA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCF7 DUP5 DUP3 DUP6 ADD PUSH2 0xBF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1B PUSH2 0x122E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xD3B DUP9 DUP3 DUP10 ADD PUSH2 0xBB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xD4C DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xD5D DUP9 DUP3 DUP10 ADD PUSH2 0xC0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xD6E DUP9 DUP3 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD93 DUP2 PUSH2 0x103F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDAE DUP2 DUP6 PUSH2 0xFC7 JUMP JUMPDEST SWAP4 POP PUSH2 0xDBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0x1233 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDD DUP3 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xDE7 DUP2 DUP6 PUSH2 0xFD8 JUMP JUMPDEST SWAP4 POP PUSH2 0xDF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1084 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x26 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE1B DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE33 PUSH1 0x18 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH1 0x20 DUP4 PUSH2 0xFC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0x101F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE87 DUP3 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC7 DUP2 DUP7 PUSH2 0xD99 JUMP JUMPDEST SWAP1 POP PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF04 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF24 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF44 DUP2 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF70 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7C DUP3 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFA6 JUMPI PUSH2 0xFA5 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST PUSH2 0xFAF DUP3 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104A DUP3 PUSH2 0x1051 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105C DUP3 PUSH2 0x1063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106E DUP3 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1087 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x1192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F2 DUP3 PUSH2 0x1233 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1163 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5072696365204665656420616C72656164792061646465640000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12EE DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1305 DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x101F JUMP JUMPDEST DUP2 EQ PUSH2 0x1327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1333 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP2 EQ PUSH2 0x133E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F MLOAD SLOAD PUSH30 0xC2D6404E5B41F4DAA9B6407378ACBA4A482960875944B10A0CD10E7A6473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"188:1522:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;227:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1472:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;:::i;:::-;;422:694:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;227:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1472:236::-;1531:7;1550:31;1584:22;1597:8;1584:12;:22::i;:::-;1550:56;;1619:13;1642:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1616:53;;;;;;1694:6;1679:22;;;;1472:236;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;422:694:8:-;1094:13:1;:11;:13::i;:::-;558:29:8::1;590:10;558:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;610:12;645:9:::0;640:277:::1;664:9;:16;660:1;:20;640:277;;;803:9;813:1;803:12;;;;;;;;:::i;:::-;;;;;;;;:17;;;786:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;776:46;;;;;;749:5;732:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;722:34;;;;;;:100;701:206;;;865:4;855:14;;887:5;;701:206;682:3;;;;;:::i;:::-;;;;640:277;;;;935:7;934:8;926:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;981:31;1037:8;981:65;;1056:10;1072:36;;;;;;;;1083:5;1072:36;;;;1090:6;1072:36;;;;;;1098:9;1072:36;;;;::::0;1056:53:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;548:568;;;422:694:::0;;;:::o;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1122:344:8:-;1197:31;1240:29;1272:10;1240:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1298:9;1293:167;1317:9;:16;1313:1;:20;1293:167;;;1368:9;1378:1;1368:12;;;;;;;;:::i;:::-;;;;;;;;:18;;;1358:28;;:6;:28;;;1354:96;;;1413:9;1423:1;1413:12;;;;;;;;:::i;:::-;;;;;;;;:22;;;1406:29;;;;;;1354:96;1335:3;;;;;:::i;:::-;;;;1293:167;;;;1230:236;1122:344;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:11:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:112;;;282:79;;:::i;:::-;251:112;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;7:412;;;;;:::o;425:139::-;471:5;509:6;496:20;487:29;;525:33;552:5;525:33;:::i;:::-;425:139;;;;:::o;570:141::-;626:5;657:6;651:13;642:22;;673:32;699:5;673:32;:::i;:::-;570:141;;;;:::o;731:340::-;787:5;836:3;829:4;821:6;817:17;813:27;803:122;;844:79;;:::i;:::-;803:122;961:6;948:20;986:79;1061:3;1053:6;1046:4;1038:6;1034:17;986:79;:::i;:::-;977:88;;793:278;731:340;;;;:::o;1077:139::-;1123:5;1161:6;1148:20;1139:29;;1177:33;1204:5;1177:33;:::i;:::-;1077:139;;;;:::o;1222:143::-;1279:5;1310:6;1304:13;1295:22;;1326:33;1353:5;1326:33;:::i;:::-;1222:143;;;;:::o;1371:141::-;1427:5;1458:6;1452:13;1443:22;;1474:32;1500:5;1474:32;:::i;:::-;1371:141;;;;:::o;1518:329::-;1577:6;1626:2;1614:9;1605:7;1601:23;1597:32;1594:119;;;1632:79;;:::i;:::-;1594:119;1752:1;1777:53;1822:7;1813:6;1802:9;1798:22;1777:53;:::i;:::-;1767:63;;1723:117;1518:329;;;;:::o;1853:799::-;1940:6;1948;1956;2005:2;1993:9;1984:7;1980:23;1976:32;1973:119;;;2011:79;;:::i;:::-;1973:119;2159:1;2148:9;2144:17;2131:31;2189:18;2181:6;2178:30;2175:117;;;2211:79;;:::i;:::-;2175:117;2316:63;2371:7;2362:6;2351:9;2347:22;2316:63;:::i;:::-;2306:73;;2102:287;2428:2;2454:53;2499:7;2490:6;2479:9;2475:22;2454:53;:::i;:::-;2444:63;;2399:118;2556:2;2582:53;2627:7;2618:6;2607:9;2603:22;2582:53;:::i;:::-;2572:63;;2527:118;1853:799;;;;;:::o;2658:329::-;2717:6;2766:2;2754:9;2745:7;2741:23;2737:32;2734:119;;;2772:79;;:::i;:::-;2734:119;2892:1;2917:53;2962:7;2953:6;2942:9;2938:22;2917:53;:::i;:::-;2907:63;;2863:117;2658:329;;;;:::o;2993:971::-;3096:6;3104;3112;3120;3128;3177:3;3165:9;3156:7;3152:23;3148:33;3145:120;;;3184:79;;:::i;:::-;3145:120;3304:1;3329:63;3384:7;3375:6;3364:9;3360:22;3329:63;:::i;:::-;3319:73;;3275:127;3441:2;3467:63;3522:7;3513:6;3502:9;3498:22;3467:63;:::i;:::-;3457:73;;3412:128;3579:2;3605:64;3661:7;3652:6;3641:9;3637:22;3605:64;:::i;:::-;3595:74;;3550:129;3718:2;3744:64;3800:7;3791:6;3780:9;3776:22;3744:64;:::i;:::-;3734:74;;3689:129;3857:3;3884:63;3939:7;3930:6;3919:9;3915:22;3884:63;:::i;:::-;3874:73;;3828:129;2993:971;;;;;;;;:::o;3970:118::-;4057:24;4075:5;4057:24;:::i;:::-;4052:3;4045:37;3970:118;;:::o;4094:187::-;4209:65;4268:5;4209:65;:::i;:::-;4204:3;4197:78;4094:187;;:::o;4287:364::-;4375:3;4403:39;4436:5;4403:39;:::i;:::-;4458:71;4522:6;4517:3;4458:71;:::i;:::-;4451:78;;4538:52;4583:6;4578:3;4571:4;4564:5;4560:16;4538:52;:::i;:::-;4615:29;4637:6;4615:29;:::i;:::-;4610:3;4606:39;4599:46;;4379:272;4287:364;;;;:::o;4657:377::-;4763:3;4791:39;4824:5;4791:39;:::i;:::-;4846:89;4928:6;4923:3;4846:89;:::i;:::-;4839:96;;4944:52;4989:6;4984:3;4977:4;4970:5;4966:16;4944:52;:::i;:::-;5021:6;5016:3;5012:16;5005:23;;4767:267;4657:377;;;;:::o;5040:366::-;5182:3;5203:67;5267:2;5262:3;5203:67;:::i;:::-;5196:74;;5279:93;5368:3;5279:93;:::i;:::-;5397:2;5392:3;5388:12;5381:19;;5040:366;;;:::o;5412:::-;5554:3;5575:67;5639:2;5634:3;5575:67;:::i;:::-;5568:74;;5651:93;5740:3;5651:93;:::i;:::-;5769:2;5764:3;5760:12;5753:19;;5412:366;;;:::o;5784:::-;5926:3;5947:67;6011:2;6006:3;5947:67;:::i;:::-;5940:74;;6023:93;6112:3;6023:93;:::i;:::-;6141:2;6136:3;6132:12;6125:19;;5784:366;;;:::o;6156:118::-;6243:24;6261:5;6243:24;:::i;:::-;6238:3;6231:37;6156:118;;:::o;6280:275::-;6412:3;6434:95;6525:3;6516:6;6434:95;:::i;:::-;6427:102;;6546:3;6539:10;;6280:275;;;;:::o;6561:222::-;6654:4;6692:2;6681:9;6677:18;6669:26;;6705:71;6773:1;6762:9;6758:17;6749:6;6705:71;:::i;:::-;6561:222;;;;:::o;6789:589::-;6986:4;7024:2;7013:9;7009:18;7001:26;;7073:9;7067:4;7063:20;7059:1;7048:9;7044:17;7037:47;7101:78;7174:4;7165:6;7101:78;:::i;:::-;7093:86;;7189:72;7257:2;7246:9;7242:18;7233:6;7189:72;:::i;:::-;7271:100;7367:2;7356:9;7352:18;7343:6;7271:100;:::i;:::-;6789:589;;;;;;:::o;7384:419::-;7550:4;7588:2;7577:9;7573:18;7565:26;;7637:9;7631:4;7627:20;7623:1;7612:9;7608:17;7601:47;7665:131;7791:4;7665:131;:::i;:::-;7657:139;;7384:419;;;:::o;7809:::-;7975:4;8013:2;8002:9;7998:18;7990:26;;8062:9;8056:4;8052:20;8048:1;8037:9;8033:17;8026:47;8090:131;8216:4;8090:131;:::i;:::-;8082:139;;7809:419;;;:::o;8234:::-;8400:4;8438:2;8427:9;8423:18;8415:26;;8487:9;8481:4;8477:20;8473:1;8462:9;8458:17;8451:47;8515:131;8641:4;8515:131;:::i;:::-;8507:139;;8234:419;;;:::o;8659:222::-;8752:4;8790:2;8779:9;8775:18;8767:26;;8803:71;8871:1;8860:9;8856:17;8847:6;8803:71;:::i;:::-;8659:222;;;;:::o;8887:129::-;8921:6;8948:20;;:::i;:::-;8938:30;;8977:33;9005:4;8997:6;8977:33;:::i;:::-;8887:129;;;:::o;9022:75::-;9055:6;9088:2;9082:9;9072:19;;9022:75;:::o;9103:308::-;9165:4;9255:18;9247:6;9244:30;9241:56;;;9277:18;;:::i;:::-;9241:56;9315:29;9337:6;9315:29;:::i;:::-;9307:37;;9399:4;9393;9389:15;9381:23;;9103:308;;;:::o;9417:99::-;9469:6;9503:5;9497:12;9487:22;;9417:99;;;:::o;9522:169::-;9606:11;9640:6;9635:3;9628:19;9680:4;9675:3;9671:14;9656:29;;9522:169;;;;:::o;9697:148::-;9799:11;9836:3;9821:18;;9697:148;;;;:::o;9851:96::-;9888:7;9917:24;9935:5;9917:24;:::i;:::-;9906:35;;9851:96;;;:::o;9953:76::-;9989:7;10018:5;10007:16;;9953:76;;;:::o;10035:126::-;10072:7;10112:42;10105:5;10101:54;10090:65;;10035:126;;;:::o;10167:77::-;10204:7;10233:5;10222:16;;10167:77;;;:::o;10250:105::-;10286:7;10326:22;10319:5;10315:34;10304:45;;10250:105;;;:::o;10361:154::-;10439:9;10472:37;10503:5;10472:37;:::i;:::-;10459:50;;10361:154;;;:::o;10521:126::-;10571:9;10604:37;10635:5;10604:37;:::i;:::-;10591:50;;10521:126;;;:::o;10653:113::-;10703:9;10736:24;10754:5;10736:24;:::i;:::-;10723:37;;10653:113;;;:::o;10772:154::-;10856:6;10851:3;10846;10833:30;10918:1;10909:6;10904:3;10900:16;10893:27;10772:154;;;:::o;10932:307::-;11000:1;11010:113;11024:6;11021:1;11018:13;11010:113;;;11109:1;11104:3;11100:11;11094:18;11090:1;11085:3;11081:11;11074:39;11046:2;11043:1;11039:10;11034:15;;11010:113;;;11141:6;11138:1;11135:13;11132:101;;;11221:1;11212:6;11207:3;11203:16;11196:27;11132:101;10981:258;10932:307;;;:::o;11245:320::-;11289:6;11326:1;11320:4;11316:12;11306:22;;11373:1;11367:4;11363:12;11394:18;11384:81;;11450:4;11442:6;11438:17;11428:27;;11384:81;11512:2;11504:6;11501:14;11481:18;11478:38;11475:84;;;11531:18;;:::i;:::-;11475:84;11296:269;11245:320;;;:::o;11571:281::-;11654:27;11676:4;11654:27;:::i;:::-;11646:6;11642:40;11784:6;11772:10;11769:22;11748:18;11736:10;11733:34;11730:62;11727:88;;;11795:18;;:::i;:::-;11727:88;11835:10;11831:2;11824:22;11614:238;11571:281;;:::o;11858:233::-;11897:3;11920:24;11938:5;11920:24;:::i;:::-;11911:33;;11966:66;11959:5;11956:77;11953:103;;;12036:18;;:::i;:::-;11953:103;12083:1;12076:5;12072:13;12065:20;;11858:233;;;:::o;12097:180::-;12145:77;12142:1;12135:88;12242:4;12239:1;12232:15;12266:4;12263:1;12256:15;12283:180;12331:77;12328:1;12321:88;12428:4;12425:1;12418:15;12452:4;12449:1;12442:15;12469:180;12517:77;12514:1;12507:88;12614:4;12611:1;12604:15;12638:4;12635:1;12628:15;12655:180;12703:77;12700:1;12693:88;12800:4;12797:1;12790:15;12824:4;12821:1;12814:15;12841:117;12950:1;12947;12940:12;12964:117;13073:1;13070;13063:12;13087:117;13196:1;13193;13186:12;13210:117;13319:1;13316;13309:12;13333:102;13374:6;13425:2;13421:7;13416:2;13409:5;13405:14;13401:28;13391:38;;13333:102;;;:::o;13441:225::-;13581:34;13577:1;13569:6;13565:14;13558:58;13650:8;13645:2;13637:6;13633:15;13626:33;13441:225;:::o;13672:174::-;13812:26;13808:1;13800:6;13796:14;13789:50;13672:174;:::o;13852:182::-;13992:34;13988:1;13980:6;13976:14;13969:58;13852:182;:::o;14040:122::-;14113:24;14131:5;14113:24;:::i;:::-;14106:5;14103:35;14093:63;;14152:1;14149;14142:12;14093:63;14040:122;:::o;14168:120::-;14240:23;14257:5;14240:23;:::i;:::-;14233:5;14230:34;14220:62;;14278:1;14275;14268:12;14220:62;14168:120;:::o;14294:122::-;14367:24;14385:5;14367:24;:::i;:::-;14360:5;14357:35;14347:63;;14406:1;14403;14396:12;14347:63;14294:122;:::o;14422:120::-;14494:23;14511:5;14494:23;:::i;:::-;14487:5;14484:34;14474:62;;14532:1;14529;14522:12;14474:62;14422:120;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"996600","executionCost":"infinite","totalCost":"infinite"},"external":{"addPriceFeed(string,address,address)":"infinite","getPrice(address)":"infinite","owner()":"2588","priceFeeds(uint256)":"infinite","renounceOwnership()":"30420","transferOwnership(address)":"30835"},"internal":{"getPriceFeed(address)":"infinite"}},"methodIdentifiers":{"addPriceFeed(string,address,address)":"8c35423e","getPrice(address)":"41976e09","owner()":"8da5cb5b","priceFeeds(uint256)":"10c7f0b9","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceChecker.sol\":\"PriceChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract PriceChecker is Ownable {\\n    _priceFeed[] public priceFeeds;\\n\\n    struct _priceFeed {\\n        string name;\\n        address token;\\n        AggregatorV3Interface priceFeed;\\n    }\\n\\n    //only using PriceFeeds pegged to USD\\n    function addPriceFeed(\\n        string memory _name,\\n        address _token,\\n        address _address\\n    ) external onlyOwner {\\n        _priceFeed[] memory pricefeed = priceFeeds;\\n        bool isAdded = false;\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\n            if (\\n                keccak256(abi.encodePacked(_name)) ==\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\n            ) {\\n                isAdded = true;\\n                break;\\n            }\\n        }\\n        require(!isAdded, \\\"Price Feed already added\\\");\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\n    }\\n\\n    function getPriceFeed(\\n        address _token\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\n        _priceFeed[] memory pricefeed = priceFeeds;\\n\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\n            if (_token == pricefeed[i].token) {\\n                return pricefeed[i].priceFeed;\\n            }\\n        }\\n    }\\n\\n    function getPrice(address _address) external view returns (uint256) {\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer);\\n    }\\n}\\n\",\"keccak256\":\"0x5c9c2328d2d7e59d81ef60914824d090cca775d2bb406259e47def176d87e12d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":3146,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"priceFeeds","offset":0,"slot":"1","type":"t_array(t_struct(_priceFeed)3154_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(_priceFeed)3154_storage)dyn_storage":{"base":"t_struct(_priceFeed)3154_storage","encoding":"dynamic_array","label":"struct PriceChecker._priceFeed[]","numberOfBytes":"32"},"t_contract(AggregatorV3Interface)45":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(_priceFeed)3154_storage":{"encoding":"inplace","label":"struct PriceChecker._priceFeed","members":[{"astId":3148,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3150,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"token","offset":0,"slot":"1","type":"t_address"},{"astId":3153,"contract":"contracts/PriceChecker.sol:PriceChecker","label":"priceFeed","offset":0,"slot":"2","type":"t_contract(AggregatorV3Interface)45"}],"numberOfBytes":"96"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TradingFees.sol":{"TradingFees":{"abi":[{"inputs":[{"internalType":"address","name":"_priceCheckerAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"aDAI","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_refToken","type":"address"},{"internalType":"uint256","name":"_fees","type":"uint256"}],"name":"amountTokensToDeduct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fees","type":"uint256"}],"name":"amountaDAIToDeduct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_rate","type":"uint256"},{"internalType":"address","name":"_refToken","type":"address"}],"name":"calculateFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fees","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"checkSufficientaDAI","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"daiToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_PriceCheckeraddress","type":"address"}],"name":"setPriceCheckerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_Walletaddress","type":"address"}],"name":"setWalletAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3352":{"entryPoint":null,"id":3352,"parameterSlots":1,"returnSlots":0},"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_273":{"entryPoint":341,"id":273,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":349,"id":157,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":568,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":618,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":638,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":670,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":675,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:11","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:11","statements":[{"nodeType":"YulAssignment","src":"80:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:11"},"nodeType":"YulFunctionCall","src":"89:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:11"},"nodeType":"YulFunctionCall","src":"111:33:11"},"nodeType":"YulExpressionStatement","src":"111:33:11"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:11","type":""}],"src":"7:143:11"},{"body":{"nodeType":"YulBlock","src":"233:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"279:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"281:77:11"},"nodeType":"YulFunctionCall","src":"281:79:11"},"nodeType":"YulExpressionStatement","src":"281:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:11"},"nodeType":"YulFunctionCall","src":"250:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:11"},"nodeType":"YulFunctionCall","src":"246:32:11"},"nodeType":"YulIf","src":"243:119:11"},{"nodeType":"YulBlock","src":"372:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"387:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"401:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"391:6:11","type":""}]},{"nodeType":"YulAssignment","src":"416:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:11"},"nodeType":"YulFunctionCall","src":"458:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"426:31:11"},"nodeType":"YulFunctionCall","src":"426:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:11"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:11","type":""}],"src":"156:351:11"},{"body":{"nodeType":"YulBlock","src":"553:35:11","statements":[{"nodeType":"YulAssignment","src":"563:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"579:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"573:5:11"},"nodeType":"YulFunctionCall","src":"573:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"563:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"546:6:11","type":""}],"src":"513:75:11"},{"body":{"nodeType":"YulBlock","src":"639:51:11","statements":[{"nodeType":"YulAssignment","src":"649:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"678:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"660:17:11"},"nodeType":"YulFunctionCall","src":"660:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"649:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"621:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"631:7:11","type":""}],"src":"594:96:11"},{"body":{"nodeType":"YulBlock","src":"741:81:11","statements":[{"nodeType":"YulAssignment","src":"751:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"766:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"773:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"762:3:11"},"nodeType":"YulFunctionCall","src":"762:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"751:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"723:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"733:7:11","type":""}],"src":"696:126:11"},{"body":{"nodeType":"YulBlock","src":"917:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"934:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"937:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"927:6:11"},"nodeType":"YulFunctionCall","src":"927:12:11"},"nodeType":"YulExpressionStatement","src":"927:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"828:117:11"},{"body":{"nodeType":"YulBlock","src":"1040:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1057:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1060:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1050:6:11"},"nodeType":"YulFunctionCall","src":"1050:12:11"},"nodeType":"YulExpressionStatement","src":"1050:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"951:117:11"},{"body":{"nodeType":"YulBlock","src":"1117:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"1174:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1186:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1176:6:11"},"nodeType":"YulFunctionCall","src":"1176:12:11"},"nodeType":"YulExpressionStatement","src":"1176:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1140:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1165:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1147:17:11"},"nodeType":"YulFunctionCall","src":"1147:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1137:2:11"},"nodeType":"YulFunctionCall","src":"1137:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1130:6:11"},"nodeType":"YulFunctionCall","src":"1130:43:11"},"nodeType":"YulIf","src":"1127:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1110:5:11","type":""}],"src":"1074:122:11"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052670de0b6b3a764000060015573ba8dced3512925e52fe67b1b5329187589072a55600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073add98b0342e4094ec32f3b67ccfd3242c876ff7a600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015620000c757600080fd5b506040516200113f3803806200113f8339818101604052810190620000ed919062000238565b6200010d620001016200015560201b60201c565b6200015d60201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002bd565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200023281620002a3565b92915050565b6000602082840312156200025157620002506200029e565b5b6000620002618482850162000221565b91505092915050565b600062000277826200027e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620002ae816200026a565b8114620002ba57600080fd5b50565b610e7280620002cd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ac1a386a11610071578063ac1a386a14610154578063b136e39a14610170578063b98ee4191461018c578063be22f546146101bc578063ca8963f1146101da578063f2fde38b1461020a576100a9565b80631a38a4fb146100ae578063513ffedd146100cc578063715018a6146100fc5780638da5cb5b14610106578063a42963e914610124575b600080fd5b6100b6610226565b6040516100c39190610b95565b60405180910390f35b6100e660048036038101906100e19190610acf565b61024c565b6040516100f39190610c34565b60405180910390f35b61010461038a565b005b61010e61039e565b60405161011b9190610b95565b60405180910390f35b61013e60048036038101906101399190610a35565b6103c7565b60405161014b9190610c34565b60405180910390f35b61016e600480360381019061016991906109c8565b6104e5565b005b61018a600480360381019061018591906109c8565b610531565b005b6101a660048036038101906101a191906109f5565b61057d565b6040516101b39190610c34565b60405180910390f35b6101c461067a565b6040516101d19190610b95565b60405180910390f35b6101f460048036038101906101ef9190610a8f565b6106a0565b6040516102019190610bd9565b60405180910390f35b610224600480360381019061021f91906109c8565b61078f565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09846040518263ffffffff1660e01b81526004016102aa9190610b95565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610a62565b9050600061036260015461035461031f6402540be4008661081390919063ffffffff16565b6103466001546103388b8d61081390919063ffffffff16565b61082990919063ffffffff16565b61081390919063ffffffff16565b61082990919063ffffffff16565b9050600061037b6127108361082990919063ffffffff16565b90508093505050509392505050565b61039261083f565b61039c60006108bd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104479190610b95565b60206040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610a62565b905060006104d96104b66402540be4008461081390919063ffffffff16565b6104cb6001548761081390919063ffffffff16565b61082990919063ffffffff16565b90508092505050919050565b6104ed61083f565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61053961083f565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09856040518263ffffffff1660e01b81526004016105db9190610b95565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610a62565b9050600061066d61064a6402540be4008461081390919063ffffffff16565b61065f6001548761081390919063ffffffff16565b61082990919063ffffffff16565b9050809250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ac846103c7565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd5d767c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b815260040161072f929190610bb0565b60206040518083038186803b15801561074757600080fd5b505afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610a62565b9050818110159250505092915050565b61079761083f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90610bf4565b60405180910390fd5b610810816108bd565b50565b600081836108219190610c91565b905092915050565b600081836108379190610c60565b905092915050565b610847610981565b73ffffffffffffffffffffffffffffffffffffffff1661086561039e565b73ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610c14565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061099881610e0e565b92915050565b6000813590506109ad81610e25565b92915050565b6000815190506109c281610e25565b92915050565b6000602082840312156109de576109dd610d91565b5b60006109ec84828501610989565b91505092915050565b60008060408385031215610a0c57610a0b610d91565b5b6000610a1a85828601610989565b9250506020610a2b8582860161099e565b9150509250929050565b600060208284031215610a4b57610a4a610d91565b5b6000610a598482850161099e565b91505092915050565b600060208284031215610a7857610a77610d91565b5b6000610a86848285016109b3565b91505092915050565b60008060408385031215610aa657610aa5610d91565b5b6000610ab48582860161099e565b9250506020610ac585828601610989565b9150509250929050565b600080600060608486031215610ae857610ae7610d91565b5b6000610af68682870161099e565b9350506020610b078682870161099e565b9250506040610b1886828701610989565b9150509250925092565b610b2b81610ceb565b82525050565b610b3a81610cfd565b82525050565b6000610b4d602683610c4f565b9150610b5882610d96565b604082019050919050565b6000610b70602083610c4f565b9150610b7b82610de5565b602082019050919050565b610b8f81610d29565b82525050565b6000602082019050610baa6000830184610b22565b92915050565b6000604082019050610bc56000830185610b22565b610bd26020830184610b22565b9392505050565b6000602082019050610bee6000830184610b31565b92915050565b60006020820190508181036000830152610c0d81610b40565b9050919050565b60006020820190508181036000830152610c2d81610b63565b9050919050565b6000602082019050610c496000830184610b86565b92915050565b600082825260208201905092915050565b6000610c6b82610d29565b9150610c7683610d29565b925082610c8657610c85610d62565b5b828204905092915050565b6000610c9c82610d29565b9150610ca783610d29565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce057610cdf610d33565b5b828202905092915050565b6000610cf682610d09565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e1781610ceb565b8114610e2257600080fd5b50565b610e2e81610d29565b8114610e3957600080fd5b5056fea2646970667358221220a25cacb8b5243b5b1626b529fd57d7688f171ea62c7f0be5d3f6f641d82e884464736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SSTORE PUSH20 0xBA8DCED3512925E52FE67B1B5329187589072A55 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xADD98B0342E4094EC32F3B67CCFD3242C876FF7A PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x113F CODESIZE SUB DUP1 PUSH3 0x113F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xED SWAP2 SWAP1 PUSH3 0x238 JUMP JUMPDEST PUSH3 0x10D PUSH3 0x101 PUSH3 0x155 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x15D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x232 DUP2 PUSH3 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x29E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x261 DUP5 DUP3 DUP6 ADD PUSH3 0x221 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x277 DUP3 PUSH3 0x27E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2AE DUP2 PUSH3 0x26A JUMP JUMPDEST DUP2 EQ PUSH3 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE72 DUP1 PUSH3 0x2CD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC1A386A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xB98EE419 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xCA8963F1 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x513FFEDD EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA42963E9 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x362 PUSH1 0x1 SLOAD PUSH2 0x354 PUSH2 0x31F PUSH5 0x2540BE400 DUP7 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x346 PUSH1 0x1 SLOAD PUSH2 0x338 DUP12 DUP14 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37B PUSH2 0x2710 DUP4 PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x39C PUSH1 0x0 PUSH2 0x8BD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 PUSH2 0x4B6 PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4CB PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x539 PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x66D PUSH2 0x64A PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x65F PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6AC DUP5 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD5D767C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x847 PUSH2 0x981 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x865 PUSH2 0x39E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9AD DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C2 DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2B DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP3 DUP6 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA77 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA86 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB4 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC5 DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF6 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB07 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB18 DUP7 DUP3 DUP8 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D PUSH1 0x26 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB58 DUP3 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 PUSH1 0x20 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB7B DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0xBD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0D DUP2 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6B DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xC76 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xD62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCDF PUSH2 0xD33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF6 DUP3 PUSH2 0xD09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE2E DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP2 EQ PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0x5C 0xAC 0xB8 0xB5 0x24 EXTCODESIZE JUMPDEST AND 0x26 0xB5 0x29 REVERT JUMPI 0xD7 PUSH9 0x8F171EA62C7F0BE5D3 0xF6 0xF6 COINBASE 0xD8 0x2E DUP9 DIFFICULTY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"370:2899:9:-:0;;;988:8;969:27;;1044:42;1002:85;;;;;;;;;;;;;;;;;;;;1148:42;1118:73;;;;;;;;;;;;;;;;;;;;1278:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1355:20:9;1330:9;;:46;;;;;;;;;;;;;;;;;;1278:105;370:2899;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:11:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;370:2899:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":2111,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_273":{"entryPoint":2433,"id":273,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":2237,"id":157,"parameterSlots":1,"returnSlots":0},"@aDAI_3334":{"entryPoint":550,"id":3334,"parameterSlots":0,"returnSlots":0},"@amountTokensToDeduct_3478":{"entryPoint":1405,"id":3478,"parameterSlots":2,"returnSlots":1},"@amountaDAIToDeduct_3441":{"entryPoint":967,"id":3441,"parameterSlots":1,"returnSlots":1},"@calculateFees_3406":{"entryPoint":588,"id":3406,"parameterSlots":3,"returnSlots":1},"@checkSufficientaDAI_3506":{"entryPoint":1696,"id":3506,"parameterSlots":2,"returnSlots":1},"@daiToken_3328":{"entryPoint":1658,"id":3328,"parameterSlots":0,"returnSlots":0},"@div_504":{"entryPoint":2089,"id":504,"parameterSlots":2,"returnSlots":1},"@mul_489":{"entryPoint":2067,"id":489,"parameterSlots":2,"returnSlots":1},"@owner_86":{"entryPoint":926,"id":86,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":906,"id":114,"parameterSlots":0,"returnSlots":0},"@setPriceCheckerAddress_3534":{"entryPoint":1329,"id":3534,"parameterSlots":1,"returnSlots":0},"@setWalletAddress_3520":{"entryPoint":1253,"id":3520,"parameterSlots":1,"returnSlots":0},"@transferOwnership_137":{"entryPoint":1935,"id":137,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2549,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":2703,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_address":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2850,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2865,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":2915,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2950,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":2992,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3060,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3124,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3168,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3217,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3307,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3325,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3337,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3369,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3379,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3426,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3473,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":3478,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3557,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3598,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3621,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8529:11","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:11","statements":[{"nodeType":"YulAssignment","src":"69:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:11"},"nodeType":"YulFunctionCall","src":"78:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:11"},"nodeType":"YulFunctionCall","src":"107:33:11"},"nodeType":"YulExpressionStatement","src":"107:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:11","type":""}],"src":"7:139:11"},{"body":{"nodeType":"YulBlock","src":"204:87:11","statements":[{"nodeType":"YulAssignment","src":"214:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:11"},"nodeType":"YulFunctionCall","src":"223:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:11"},"nodeType":"YulFunctionCall","src":"252:33:11"},"nodeType":"YulExpressionStatement","src":"252:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:11","type":""}],"src":"152:139:11"},{"body":{"nodeType":"YulBlock","src":"360:80:11","statements":[{"nodeType":"YulAssignment","src":"370:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"385:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"379:5:11"},"nodeType":"YulFunctionCall","src":"379:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"370:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"428:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"401:26:11"},"nodeType":"YulFunctionCall","src":"401:33:11"},"nodeType":"YulExpressionStatement","src":"401:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"338:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"346:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"354:5:11","type":""}],"src":"297:143:11"},{"body":{"nodeType":"YulBlock","src":"512:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"558:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"560:77:11"},"nodeType":"YulFunctionCall","src":"560:79:11"},"nodeType":"YulExpressionStatement","src":"560:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"533:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"542:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"529:3:11"},"nodeType":"YulFunctionCall","src":"529:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"554:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"525:3:11"},"nodeType":"YulFunctionCall","src":"525:32:11"},"nodeType":"YulIf","src":"522:119:11"},{"nodeType":"YulBlock","src":"651:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"666:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"680:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"670:6:11","type":""}]},{"nodeType":"YulAssignment","src":"695:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"730:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"741:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:11"},"nodeType":"YulFunctionCall","src":"726:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"750:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"705:20:11"},"nodeType":"YulFunctionCall","src":"705:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"695:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"482:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"493:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"505:6:11","type":""}],"src":"446:329:11"},{"body":{"nodeType":"YulBlock","src":"864:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"910:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"912:77:11"},"nodeType":"YulFunctionCall","src":"912:79:11"},"nodeType":"YulExpressionStatement","src":"912:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"885:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"894:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"881:3:11"},"nodeType":"YulFunctionCall","src":"881:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"906:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"877:3:11"},"nodeType":"YulFunctionCall","src":"877:32:11"},"nodeType":"YulIf","src":"874:119:11"},{"nodeType":"YulBlock","src":"1003:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1018:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1032:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1022:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1047:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1082:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1093:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1078:3:11"},"nodeType":"YulFunctionCall","src":"1078:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1102:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1057:20:11"},"nodeType":"YulFunctionCall","src":"1057:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1047:6:11"}]}]},{"nodeType":"YulBlock","src":"1130:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1145:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1159:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1149:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1175:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1210:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1221:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1206:3:11"},"nodeType":"YulFunctionCall","src":"1206:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1230:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1185:20:11"},"nodeType":"YulFunctionCall","src":"1185:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1175:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"826:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"837:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"849:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"857:6:11","type":""}],"src":"781:474:11"},{"body":{"nodeType":"YulBlock","src":"1327:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"1373:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1375:77:11"},"nodeType":"YulFunctionCall","src":"1375:79:11"},"nodeType":"YulExpressionStatement","src":"1375:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1348:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1344:3:11"},"nodeType":"YulFunctionCall","src":"1344:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1369:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1340:3:11"},"nodeType":"YulFunctionCall","src":"1340:32:11"},"nodeType":"YulIf","src":"1337:119:11"},{"nodeType":"YulBlock","src":"1466:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1481:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1495:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1485:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1510:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1545:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1556:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1541:3:11"},"nodeType":"YulFunctionCall","src":"1541:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1565:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1520:20:11"},"nodeType":"YulFunctionCall","src":"1520:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1510:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1297:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1308:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1320:6:11","type":""}],"src":"1261:329:11"},{"body":{"nodeType":"YulBlock","src":"1673:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"1719:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1721:77:11"},"nodeType":"YulFunctionCall","src":"1721:79:11"},"nodeType":"YulExpressionStatement","src":"1721:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1694:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1703:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1690:3:11"},"nodeType":"YulFunctionCall","src":"1690:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1715:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1686:3:11"},"nodeType":"YulFunctionCall","src":"1686:32:11"},"nodeType":"YulIf","src":"1683:119:11"},{"nodeType":"YulBlock","src":"1812:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1827:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1841:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1831:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1856:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1902:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1913:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:11"},"nodeType":"YulFunctionCall","src":"1898:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1922:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1866:31:11"},"nodeType":"YulFunctionCall","src":"1866:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1856:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1643:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1654:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1666:6:11","type":""}],"src":"1596:351:11"},{"body":{"nodeType":"YulBlock","src":"2036:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2082:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2084:77:11"},"nodeType":"YulFunctionCall","src":"2084:79:11"},"nodeType":"YulExpressionStatement","src":"2084:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2057:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2066:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2053:3:11"},"nodeType":"YulFunctionCall","src":"2053:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2078:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2049:3:11"},"nodeType":"YulFunctionCall","src":"2049:32:11"},"nodeType":"YulIf","src":"2046:119:11"},{"nodeType":"YulBlock","src":"2175:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2190:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2204:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2194:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2219:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2254:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2265:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2250:3:11"},"nodeType":"YulFunctionCall","src":"2250:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2274:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2229:20:11"},"nodeType":"YulFunctionCall","src":"2229:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2219:6:11"}]}]},{"nodeType":"YulBlock","src":"2302:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2317:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2331:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2321:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2347:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:11"},"nodeType":"YulFunctionCall","src":"2378:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2402:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2357:20:11"},"nodeType":"YulFunctionCall","src":"2357:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2347:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1998:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2009:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2021:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2029:6:11","type":""}],"src":"1953:474:11"},{"body":{"nodeType":"YulBlock","src":"2533:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"2579:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2581:77:11"},"nodeType":"YulFunctionCall","src":"2581:79:11"},"nodeType":"YulExpressionStatement","src":"2581:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2554:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2563:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2550:3:11"},"nodeType":"YulFunctionCall","src":"2550:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2575:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2546:3:11"},"nodeType":"YulFunctionCall","src":"2546:32:11"},"nodeType":"YulIf","src":"2543:119:11"},{"nodeType":"YulBlock","src":"2672:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2687:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2701:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2691:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2716:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2751:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2762:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2747:3:11"},"nodeType":"YulFunctionCall","src":"2747:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2771:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2726:20:11"},"nodeType":"YulFunctionCall","src":"2726:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2716:6:11"}]}]},{"nodeType":"YulBlock","src":"2799:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2814:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2828:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2818:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2844:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2879:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2890:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2875:3:11"},"nodeType":"YulFunctionCall","src":"2875:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2899:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2854:20:11"},"nodeType":"YulFunctionCall","src":"2854:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2844:6:11"}]}]},{"nodeType":"YulBlock","src":"2927:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2942:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2956:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2946:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2972:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3007:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3018:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3003:3:11"},"nodeType":"YulFunctionCall","src":"3003:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3027:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2982:20:11"},"nodeType":"YulFunctionCall","src":"2982:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2972:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2487:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2498:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2510:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2518:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2526:6:11","type":""}],"src":"2433:619:11"},{"body":{"nodeType":"YulBlock","src":"3123:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3140:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3163:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3145:17:11"},"nodeType":"YulFunctionCall","src":"3145:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3133:6:11"},"nodeType":"YulFunctionCall","src":"3133:37:11"},"nodeType":"YulExpressionStatement","src":"3133:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3111:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3118:3:11","type":""}],"src":"3058:118:11"},{"body":{"nodeType":"YulBlock","src":"3241:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3258:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3278:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3263:14:11"},"nodeType":"YulFunctionCall","src":"3263:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3251:6:11"},"nodeType":"YulFunctionCall","src":"3251:34:11"},"nodeType":"YulExpressionStatement","src":"3251:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3229:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3236:3:11","type":""}],"src":"3182:109:11"},{"body":{"nodeType":"YulBlock","src":"3443:220:11","statements":[{"nodeType":"YulAssignment","src":"3453:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3519:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3524:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3460:58:11"},"nodeType":"YulFunctionCall","src":"3460:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3453:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3625:3:11"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"3536:88:11"},"nodeType":"YulFunctionCall","src":"3536:93:11"},"nodeType":"YulExpressionStatement","src":"3536:93:11"},{"nodeType":"YulAssignment","src":"3638:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3649:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3654:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3645:3:11"},"nodeType":"YulFunctionCall","src":"3645:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3638:3:11"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3431:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3439:3:11","type":""}],"src":"3297:366:11"},{"body":{"nodeType":"YulBlock","src":"3815:220:11","statements":[{"nodeType":"YulAssignment","src":"3825:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3891:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3896:2:11","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3832:58:11"},"nodeType":"YulFunctionCall","src":"3832:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3825:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3997:3:11"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"3908:88:11"},"nodeType":"YulFunctionCall","src":"3908:93:11"},"nodeType":"YulExpressionStatement","src":"3908:93:11"},{"nodeType":"YulAssignment","src":"4010:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4021:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4026:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4017:3:11"},"nodeType":"YulFunctionCall","src":"4017:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4010:3:11"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3803:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3811:3:11","type":""}],"src":"3669:366:11"},{"body":{"nodeType":"YulBlock","src":"4106:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4123:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4146:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4128:17:11"},"nodeType":"YulFunctionCall","src":"4128:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4116:6:11"},"nodeType":"YulFunctionCall","src":"4116:37:11"},"nodeType":"YulExpressionStatement","src":"4116:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4094:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4101:3:11","type":""}],"src":"4041:118:11"},{"body":{"nodeType":"YulBlock","src":"4263:124:11","statements":[{"nodeType":"YulAssignment","src":"4273:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4285:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4296:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4281:3:11"},"nodeType":"YulFunctionCall","src":"4281:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4273:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4353:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4366:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4377:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4362:3:11"},"nodeType":"YulFunctionCall","src":"4362:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4309:43:11"},"nodeType":"YulFunctionCall","src":"4309:71:11"},"nodeType":"YulExpressionStatement","src":"4309:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4235:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4247:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4258:4:11","type":""}],"src":"4165:222:11"},{"body":{"nodeType":"YulBlock","src":"4519:206:11","statements":[{"nodeType":"YulAssignment","src":"4529:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4541:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4552:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4537:3:11"},"nodeType":"YulFunctionCall","src":"4537:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4529:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4609:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4622:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4633:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4618:3:11"},"nodeType":"YulFunctionCall","src":"4618:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4565:43:11"},"nodeType":"YulFunctionCall","src":"4565:71:11"},"nodeType":"YulExpressionStatement","src":"4565:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4690:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4703:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4714:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4699:3:11"},"nodeType":"YulFunctionCall","src":"4699:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4646:43:11"},"nodeType":"YulFunctionCall","src":"4646:72:11"},"nodeType":"YulExpressionStatement","src":"4646:72:11"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4483:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4495:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4503:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4514:4:11","type":""}],"src":"4393:332:11"},{"body":{"nodeType":"YulBlock","src":"4823:118:11","statements":[{"nodeType":"YulAssignment","src":"4833:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4845:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4856:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4841:3:11"},"nodeType":"YulFunctionCall","src":"4841:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4833:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4907:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4931:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:11"},"nodeType":"YulFunctionCall","src":"4916:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4869:37:11"},"nodeType":"YulFunctionCall","src":"4869:65:11"},"nodeType":"YulExpressionStatement","src":"4869:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4795:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4807:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4818:4:11","type":""}],"src":"4731:210:11"},{"body":{"nodeType":"YulBlock","src":"5118:248:11","statements":[{"nodeType":"YulAssignment","src":"5128:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5140:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5151:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5136:3:11"},"nodeType":"YulFunctionCall","src":"5136:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5128:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5175:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5186:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5171:3:11"},"nodeType":"YulFunctionCall","src":"5171:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5194:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5200:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5190:3:11"},"nodeType":"YulFunctionCall","src":"5190:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5164:6:11"},"nodeType":"YulFunctionCall","src":"5164:47:11"},"nodeType":"YulExpressionStatement","src":"5164:47:11"},{"nodeType":"YulAssignment","src":"5220:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5354:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5228:124:11"},"nodeType":"YulFunctionCall","src":"5228:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5220:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5098:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5113:4:11","type":""}],"src":"4947:419:11"},{"body":{"nodeType":"YulBlock","src":"5543:248:11","statements":[{"nodeType":"YulAssignment","src":"5553:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5565:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5576:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5561:3:11"},"nodeType":"YulFunctionCall","src":"5561:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5553:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5600:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5611:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5596:3:11"},"nodeType":"YulFunctionCall","src":"5596:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5619:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5625:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5615:3:11"},"nodeType":"YulFunctionCall","src":"5615:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5589:6:11"},"nodeType":"YulFunctionCall","src":"5589:47:11"},"nodeType":"YulExpressionStatement","src":"5589:47:11"},{"nodeType":"YulAssignment","src":"5645:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5779:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5653:124:11"},"nodeType":"YulFunctionCall","src":"5653:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5645:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5523:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5538:4:11","type":""}],"src":"5372:419:11"},{"body":{"nodeType":"YulBlock","src":"5895:124:11","statements":[{"nodeType":"YulAssignment","src":"5905:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5917:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5928:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5913:3:11"},"nodeType":"YulFunctionCall","src":"5913:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5905:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5985:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5998:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6009:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5994:3:11"},"nodeType":"YulFunctionCall","src":"5994:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5941:43:11"},"nodeType":"YulFunctionCall","src":"5941:71:11"},"nodeType":"YulExpressionStatement","src":"5941:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5867:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5879:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5890:4:11","type":""}],"src":"5797:222:11"},{"body":{"nodeType":"YulBlock","src":"6065:35:11","statements":[{"nodeType":"YulAssignment","src":"6075:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6091:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6085:5:11"},"nodeType":"YulFunctionCall","src":"6085:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6075:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6058:6:11","type":""}],"src":"6025:75:11"},{"body":{"nodeType":"YulBlock","src":"6202:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6219:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"6224:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6212:6:11"},"nodeType":"YulFunctionCall","src":"6212:19:11"},"nodeType":"YulExpressionStatement","src":"6212:19:11"},{"nodeType":"YulAssignment","src":"6240:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6259:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6264:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6255:3:11"},"nodeType":"YulFunctionCall","src":"6255:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6240:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6174:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"6179:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6190:11:11","type":""}],"src":"6106:169:11"},{"body":{"nodeType":"YulBlock","src":"6323:143:11","statements":[{"nodeType":"YulAssignment","src":"6333:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6356:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6338:17:11"},"nodeType":"YulFunctionCall","src":"6338:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6333:1:11"}]},{"nodeType":"YulAssignment","src":"6367:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6390:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6372:17:11"},"nodeType":"YulFunctionCall","src":"6372:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6367:1:11"}]},{"body":{"nodeType":"YulBlock","src":"6414:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6416:16:11"},"nodeType":"YulFunctionCall","src":"6416:18:11"},"nodeType":"YulExpressionStatement","src":"6416:18:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6411:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6404:6:11"},"nodeType":"YulFunctionCall","src":"6404:9:11"},"nodeType":"YulIf","src":"6401:35:11"},{"nodeType":"YulAssignment","src":"6446:14:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6455:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"6458:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6451:3:11"},"nodeType":"YulFunctionCall","src":"6451:9:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6446:1:11"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6312:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"6315:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6321:1:11","type":""}],"src":"6281:185:11"},{"body":{"nodeType":"YulBlock","src":"6520:300:11","statements":[{"nodeType":"YulAssignment","src":"6530:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6553:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6535:17:11"},"nodeType":"YulFunctionCall","src":"6535:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6530:1:11"}]},{"nodeType":"YulAssignment","src":"6564:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6587:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6569:17:11"},"nodeType":"YulFunctionCall","src":"6569:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6564:1:11"}]},{"body":{"nodeType":"YulBlock","src":"6762:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6764:16:11"},"nodeType":"YulFunctionCall","src":"6764:18:11"},"nodeType":"YulExpressionStatement","src":"6764:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6674:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6667:6:11"},"nodeType":"YulFunctionCall","src":"6667:9:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6660:6:11"},"nodeType":"YulFunctionCall","src":"6660:17:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6682:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6689:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"6757:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6685:3:11"},"nodeType":"YulFunctionCall","src":"6685:74:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6679:2:11"},"nodeType":"YulFunctionCall","src":"6679:81:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6656:3:11"},"nodeType":"YulFunctionCall","src":"6656:105:11"},"nodeType":"YulIf","src":"6653:131:11"},{"nodeType":"YulAssignment","src":"6794:20:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6809:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"6812:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6805:3:11"},"nodeType":"YulFunctionCall","src":"6805:9:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6794:7:11"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6503:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"6506:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6512:7:11","type":""}],"src":"6472:348:11"},{"body":{"nodeType":"YulBlock","src":"6871:51:11","statements":[{"nodeType":"YulAssignment","src":"6881:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6910:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6892:17:11"},"nodeType":"YulFunctionCall","src":"6892:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6881:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6853:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6863:7:11","type":""}],"src":"6826:96:11"},{"body":{"nodeType":"YulBlock","src":"6970:48:11","statements":[{"nodeType":"YulAssignment","src":"6980:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7005:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6998:6:11"},"nodeType":"YulFunctionCall","src":"6998:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6991:6:11"},"nodeType":"YulFunctionCall","src":"6991:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6980:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6952:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6962:7:11","type":""}],"src":"6928:90:11"},{"body":{"nodeType":"YulBlock","src":"7069:81:11","statements":[{"nodeType":"YulAssignment","src":"7079:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7094:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"7101:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7090:3:11"},"nodeType":"YulFunctionCall","src":"7090:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7079:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7051:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7061:7:11","type":""}],"src":"7024:126:11"},{"body":{"nodeType":"YulBlock","src":"7201:32:11","statements":[{"nodeType":"YulAssignment","src":"7211:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"7222:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7211:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7183:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7193:7:11","type":""}],"src":"7156:77:11"},{"body":{"nodeType":"YulBlock","src":"7267:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7284:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7287:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7277:6:11"},"nodeType":"YulFunctionCall","src":"7277:88:11"},"nodeType":"YulExpressionStatement","src":"7277:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7381:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7384:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7374:6:11"},"nodeType":"YulFunctionCall","src":"7374:15:11"},"nodeType":"YulExpressionStatement","src":"7374:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7405:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7408:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7398:6:11"},"nodeType":"YulFunctionCall","src":"7398:15:11"},"nodeType":"YulExpressionStatement","src":"7398:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7239:180:11"},{"body":{"nodeType":"YulBlock","src":"7453:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7470:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7473:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7463:6:11"},"nodeType":"YulFunctionCall","src":"7463:88:11"},"nodeType":"YulExpressionStatement","src":"7463:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7567:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7570:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7560:6:11"},"nodeType":"YulFunctionCall","src":"7560:15:11"},"nodeType":"YulExpressionStatement","src":"7560:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7591:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7594:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7584:6:11"},"nodeType":"YulFunctionCall","src":"7584:15:11"},"nodeType":"YulExpressionStatement","src":"7584:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7425:180:11"},{"body":{"nodeType":"YulBlock","src":"7700:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7717:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7720:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7710:6:11"},"nodeType":"YulFunctionCall","src":"7710:12:11"},"nodeType":"YulExpressionStatement","src":"7710:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"7611:117:11"},{"body":{"nodeType":"YulBlock","src":"7823:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7840:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7843:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7833:6:11"},"nodeType":"YulFunctionCall","src":"7833:12:11"},"nodeType":"YulExpressionStatement","src":"7833:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"7734:117:11"},{"body":{"nodeType":"YulBlock","src":"7963:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7985:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7993:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7981:3:11"},"nodeType":"YulFunctionCall","src":"7981:14:11"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7997:34:11","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7974:6:11"},"nodeType":"YulFunctionCall","src":"7974:58:11"},"nodeType":"YulExpressionStatement","src":"7974:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8053:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8061:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8049:3:11"},"nodeType":"YulFunctionCall","src":"8049:15:11"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8066:8:11","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8042:6:11"},"nodeType":"YulFunctionCall","src":"8042:33:11"},"nodeType":"YulExpressionStatement","src":"8042:33:11"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7955:6:11","type":""}],"src":"7857:225:11"},{"body":{"nodeType":"YulBlock","src":"8194:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8216:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8224:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8212:3:11"},"nodeType":"YulFunctionCall","src":"8212:14:11"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8228:34:11","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8205:6:11"},"nodeType":"YulFunctionCall","src":"8205:58:11"},"nodeType":"YulExpressionStatement","src":"8205:58:11"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8186:6:11","type":""}],"src":"8088:182:11"},{"body":{"nodeType":"YulBlock","src":"8319:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"8376:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8385:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8388:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8378:6:11"},"nodeType":"YulFunctionCall","src":"8378:12:11"},"nodeType":"YulExpressionStatement","src":"8378:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8342:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8367:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8349:17:11"},"nodeType":"YulFunctionCall","src":"8349:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8339:2:11"},"nodeType":"YulFunctionCall","src":"8339:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8332:6:11"},"nodeType":"YulFunctionCall","src":"8332:43:11"},"nodeType":"YulIf","src":"8329:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8312:5:11","type":""}],"src":"8276:122:11"},{"body":{"nodeType":"YulBlock","src":"8447:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"8504:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8513:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8516:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8506:6:11"},"nodeType":"YulFunctionCall","src":"8506:12:11"},"nodeType":"YulExpressionStatement","src":"8506:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8470:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8495:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8477:17:11"},"nodeType":"YulFunctionCall","src":"8477:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8467:2:11"},"nodeType":"YulFunctionCall","src":"8467:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8460:6:11"},"nodeType":"YulFunctionCall","src":"8460:43:11"},"nodeType":"YulIf","src":"8457:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8440:5:11","type":""}],"src":"8404:122:11"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ac1a386a11610071578063ac1a386a14610154578063b136e39a14610170578063b98ee4191461018c578063be22f546146101bc578063ca8963f1146101da578063f2fde38b1461020a576100a9565b80631a38a4fb146100ae578063513ffedd146100cc578063715018a6146100fc5780638da5cb5b14610106578063a42963e914610124575b600080fd5b6100b6610226565b6040516100c39190610b95565b60405180910390f35b6100e660048036038101906100e19190610acf565b61024c565b6040516100f39190610c34565b60405180910390f35b61010461038a565b005b61010e61039e565b60405161011b9190610b95565b60405180910390f35b61013e60048036038101906101399190610a35565b6103c7565b60405161014b9190610c34565b60405180910390f35b61016e600480360381019061016991906109c8565b6104e5565b005b61018a600480360381019061018591906109c8565b610531565b005b6101a660048036038101906101a191906109f5565b61057d565b6040516101b39190610c34565b60405180910390f35b6101c461067a565b6040516101d19190610b95565b60405180910390f35b6101f460048036038101906101ef9190610a8f565b6106a0565b6040516102019190610bd9565b60405180910390f35b610224600480360381019061021f91906109c8565b61078f565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09846040518263ffffffff1660e01b81526004016102aa9190610b95565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610a62565b9050600061036260015461035461031f6402540be4008661081390919063ffffffff16565b6103466001546103388b8d61081390919063ffffffff16565b61082990919063ffffffff16565b61081390919063ffffffff16565b61082990919063ffffffff16565b9050600061037b6127108361082990919063ffffffff16565b90508093505050509392505050565b61039261083f565b61039c60006108bd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016104479190610b95565b60206040518083038186803b15801561045f57600080fd5b505afa158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190610a62565b905060006104d96104b66402540be4008461081390919063ffffffff16565b6104cb6001548761081390919063ffffffff16565b61082990919063ffffffff16565b90508092505050919050565b6104ed61083f565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61053961083f565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341976e09856040518263ffffffff1660e01b81526004016105db9190610b95565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610a62565b9050600061066d61064a6402540be4008461081390919063ffffffff16565b61065f6001548761081390919063ffffffff16565b61082990919063ffffffff16565b9050809250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ac846103c7565b90506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd5d767c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b815260040161072f929190610bb0565b60206040518083038186803b15801561074757600080fd5b505afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610a62565b9050818110159250505092915050565b61079761083f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90610bf4565b60405180910390fd5b610810816108bd565b50565b600081836108219190610c91565b905092915050565b600081836108379190610c60565b905092915050565b610847610981565b73ffffffffffffffffffffffffffffffffffffffff1661086561039e565b73ffffffffffffffffffffffffffffffffffffffff16146108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290610c14565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061099881610e0e565b92915050565b6000813590506109ad81610e25565b92915050565b6000815190506109c281610e25565b92915050565b6000602082840312156109de576109dd610d91565b5b60006109ec84828501610989565b91505092915050565b60008060408385031215610a0c57610a0b610d91565b5b6000610a1a85828601610989565b9250506020610a2b8582860161099e565b9150509250929050565b600060208284031215610a4b57610a4a610d91565b5b6000610a598482850161099e565b91505092915050565b600060208284031215610a7857610a77610d91565b5b6000610a86848285016109b3565b91505092915050565b60008060408385031215610aa657610aa5610d91565b5b6000610ab48582860161099e565b9250506020610ac585828601610989565b9150509250929050565b600080600060608486031215610ae857610ae7610d91565b5b6000610af68682870161099e565b9350506020610b078682870161099e565b9250506040610b1886828701610989565b9150509250925092565b610b2b81610ceb565b82525050565b610b3a81610cfd565b82525050565b6000610b4d602683610c4f565b9150610b5882610d96565b604082019050919050565b6000610b70602083610c4f565b9150610b7b82610de5565b602082019050919050565b610b8f81610d29565b82525050565b6000602082019050610baa6000830184610b22565b92915050565b6000604082019050610bc56000830185610b22565b610bd26020830184610b22565b9392505050565b6000602082019050610bee6000830184610b31565b92915050565b60006020820190508181036000830152610c0d81610b40565b9050919050565b60006020820190508181036000830152610c2d81610b63565b9050919050565b6000602082019050610c496000830184610b86565b92915050565b600082825260208201905092915050565b6000610c6b82610d29565b9150610c7683610d29565b925082610c8657610c85610d62565b5b828204905092915050565b6000610c9c82610d29565b9150610ca783610d29565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce057610cdf610d33565b5b828202905092915050565b6000610cf682610d09565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e1781610ceb565b8114610e2257600080fd5b50565b610e2e81610d29565b8114610e3957600080fd5b5056fea2646970667358221220a25cacb8b5243b5b1626b529fd57d7688f171ea62c7f0be5d3f6f641d82e884464736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC1A386A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC1A386A EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xB136E39A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xB98EE419 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xBE22F546 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xCA8963F1 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x513FFEDD EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA42963E9 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xBD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x362 PUSH1 0x1 SLOAD PUSH2 0x354 PUSH2 0x31F PUSH5 0x2540BE400 DUP7 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x346 PUSH1 0x1 SLOAD PUSH2 0x338 DUP12 DUP14 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37B PUSH2 0x2710 DUP4 PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x39C PUSH1 0x0 PUSH2 0x8BD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4D9 PUSH2 0x4B6 PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4CB PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x539 PUSH2 0x83F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41976E09 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x66D PUSH2 0x64A PUSH5 0x2540BE400 DUP5 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x65F PUSH1 0x1 SLOAD DUP8 PUSH2 0x813 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x829 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6AC DUP5 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD5D767C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP1 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xC60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x847 PUSH2 0x981 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x865 PUSH2 0x39E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9AD DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C2 DUP2 PUSH2 0xE25 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9EC DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA1A DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA2B DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP3 DUP6 ADD PUSH2 0x99E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA77 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA86 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA6 JUMPI PUSH2 0xAA5 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB4 DUP6 DUP3 DUP7 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC5 DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE8 JUMPI PUSH2 0xAE7 PUSH2 0xD91 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF6 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB07 DUP7 DUP3 DUP8 ADD PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB18 DUP7 DUP3 DUP8 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB3A DUP2 PUSH2 0xCFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D PUSH1 0x26 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB58 DUP3 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB70 PUSH1 0x20 DUP4 PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP PUSH2 0xB7B DUP3 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBC5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0xBD2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC0D DUP2 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6B DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xC76 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xD62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9C DUP3 PUSH2 0xD29 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA7 DUP4 PUSH2 0xD29 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCE0 JUMPI PUSH2 0xCDF PUSH2 0xD33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF6 DUP3 PUSH2 0xD09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE2E DUP2 PUSH2 0xD29 JUMP JUMPDEST DUP2 EQ PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0x5C 0xAC 0xB8 0xB5 0x24 EXTCODESIZE JUMPDEST AND 0x26 0xB5 0x29 REVERT JUMPI 0xD7 PUSH9 0x8F171EA62C7F0BE5D3 0xF6 0xF6 COINBASE 0xD8 0x2E DUP9 DIFFICULTY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"370:2899:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1389:664;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2099:268:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2990:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3111:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2416:304;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1002:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2726:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1118:73:9;;;;;;;;;;;;;:::o;1389:664::-;1514:7;1756:20;1779:9;;;;;;;;;;;:18;;;1798:9;1779:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1756:52;;1838:13;1854:106;1951:8;;1868:68;1909:26;1926:8;1909:12;:16;;:26;;;;:::i;:::-;1869:34;1894:8;;1870:18;1882:5;1870:7;:11;;:18;;;;:::i;:::-;1869:24;;:34;;;;:::i;:::-;1868:40;;:68;;;;:::i;:::-;1854:96;;:106;;;;:::i;:::-;1838:122;;1970:12;1985:18;1995:7;1985:5;:9;;:18;;;;:::i;:::-;1970:33;;2021:4;2014:11;;;;;1389:664;;;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2099:268:9:-;2163:7;2182:18;2203:9;;;;;;;;;;;:18;;;2222:8;;;;;;;;;;;2203:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2182:49;;2268:11;2282:49;2306:24;2321:8;2306:10;:14;;:24;;;;:::i;:::-;2282:19;2292:8;;2282:5;:9;;:19;;;;:::i;:::-;:23;;:49;;;;:::i;:::-;2268:63;;2356:3;2341:19;;;;2099:268;;;:::o;2990:115::-;1094:13:1;:11;:13::i;:::-;3083:14:9::1;3067:6;;:31;;;;;;;;;;;;;;;;;;2990:115:::0;:::o;3111:156::-;1094:13:1;:11;:13::i;:::-;3239:20:9::1;3214:9;;:46;;;;;;;;;;;;;;;;;;3111:156:::0;:::o;2416:304::-;2523:7;2542:20;2565:9;;;;;;;;;;;:18;;;2584:9;2565:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2542:52;;2619:11;2633:51;2657:26;2674:8;2657:12;:16;;:26;;;;:::i;:::-;2633:19;2643:8;;2633:5;:9;;:19;;;;:::i;:::-;:23;;:51;;;;:::i;:::-;2619:65;;2709:3;2694:19;;;;2416:304;;;;:::o;1002:85::-;;;;;;;;;;;;;:::o;2726:258::-;2828:4;2844:14;2861:25;2880:5;2861:18;:25::i;:::-;2844:42;;2896:15;2914:6;;;;;;;;;;;:15;;;2930:4;;;;;;;;;;;2936:5;2914:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2896:46;;2971:6;2960:7;:17;;2953:24;;;;2726:258;;;;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3465:96:5:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:143::-;354:5;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;297:143;;;;:::o;446:329::-;505:6;554:2;542:9;533:7;529:23;525:32;522:119;;;560:79;;:::i;:::-;522:119;680:1;705:53;750:7;741:6;730:9;726:22;705:53;:::i;:::-;695:63;;651:117;446:329;;;;:::o;781:474::-;849:6;857;906:2;894:9;885:7;881:23;877:32;874:119;;;912:79;;:::i;:::-;874:119;1032:1;1057:53;1102:7;1093:6;1082:9;1078:22;1057:53;:::i;:::-;1047:63;;1003:117;1159:2;1185:53;1230:7;1221:6;1210:9;1206:22;1185:53;:::i;:::-;1175:63;;1130:118;781:474;;;;;:::o;1261:329::-;1320:6;1369:2;1357:9;1348:7;1344:23;1340:32;1337:119;;;1375:79;;:::i;:::-;1337:119;1495:1;1520:53;1565:7;1556:6;1545:9;1541:22;1520:53;:::i;:::-;1510:63;;1466:117;1261:329;;;;:::o;1596:351::-;1666:6;1715:2;1703:9;1694:7;1690:23;1686:32;1683:119;;;1721:79;;:::i;:::-;1683:119;1841:1;1866:64;1922:7;1913:6;1902:9;1898:22;1866:64;:::i;:::-;1856:74;;1812:128;1596:351;;;;:::o;1953:474::-;2021:6;2029;2078:2;2066:9;2057:7;2053:23;2049:32;2046:119;;;2084:79;;:::i;:::-;2046:119;2204:1;2229:53;2274:7;2265:6;2254:9;2250:22;2229:53;:::i;:::-;2219:63;;2175:117;2331:2;2357:53;2402:7;2393:6;2382:9;2378:22;2357:53;:::i;:::-;2347:63;;2302:118;1953:474;;;;;:::o;2433:619::-;2510:6;2518;2526;2575:2;2563:9;2554:7;2550:23;2546:32;2543:119;;;2581:79;;:::i;:::-;2543:119;2701:1;2726:53;2771:7;2762:6;2751:9;2747:22;2726:53;:::i;:::-;2716:63;;2672:117;2828:2;2854:53;2899:7;2890:6;2879:9;2875:22;2854:53;:::i;:::-;2844:63;;2799:118;2956:2;2982:53;3027:7;3018:6;3007:9;3003:22;2982:53;:::i;:::-;2972:63;;2927:118;2433:619;;;;;:::o;3058:118::-;3145:24;3163:5;3145:24;:::i;:::-;3140:3;3133:37;3058:118;;:::o;3182:109::-;3263:21;3278:5;3263:21;:::i;:::-;3258:3;3251:34;3182:109;;:::o;3297:366::-;3439:3;3460:67;3524:2;3519:3;3460:67;:::i;:::-;3453:74;;3536:93;3625:3;3536:93;:::i;:::-;3654:2;3649:3;3645:12;3638:19;;3297:366;;;:::o;3669:::-;3811:3;3832:67;3896:2;3891:3;3832:67;:::i;:::-;3825:74;;3908:93;3997:3;3908:93;:::i;:::-;4026:2;4021:3;4017:12;4010:19;;3669:366;;;:::o;4041:118::-;4128:24;4146:5;4128:24;:::i;:::-;4123:3;4116:37;4041:118;;:::o;4165:222::-;4258:4;4296:2;4285:9;4281:18;4273:26;;4309:71;4377:1;4366:9;4362:17;4353:6;4309:71;:::i;:::-;4165:222;;;;:::o;4393:332::-;4514:4;4552:2;4541:9;4537:18;4529:26;;4565:71;4633:1;4622:9;4618:17;4609:6;4565:71;:::i;:::-;4646:72;4714:2;4703:9;4699:18;4690:6;4646:72;:::i;:::-;4393:332;;;;;:::o;4731:210::-;4818:4;4856:2;4845:9;4841:18;4833:26;;4869:65;4931:1;4920:9;4916:17;4907:6;4869:65;:::i;:::-;4731:210;;;;:::o;4947:419::-;5113:4;5151:2;5140:9;5136:18;5128:26;;5200:9;5194:4;5190:20;5186:1;5175:9;5171:17;5164:47;5228:131;5354:4;5228:131;:::i;:::-;5220:139;;4947:419;;;:::o;5372:::-;5538:4;5576:2;5565:9;5561:18;5553:26;;5625:9;5619:4;5615:20;5611:1;5600:9;5596:17;5589:47;5653:131;5779:4;5653:131;:::i;:::-;5645:139;;5372:419;;;:::o;5797:222::-;5890:4;5928:2;5917:9;5913:18;5905:26;;5941:71;6009:1;5998:9;5994:17;5985:6;5941:71;:::i;:::-;5797:222;;;;:::o;6106:169::-;6190:11;6224:6;6219:3;6212:19;6264:4;6259:3;6255:14;6240:29;;6106:169;;;;:::o;6281:185::-;6321:1;6338:20;6356:1;6338:20;:::i;:::-;6333:25;;6372:20;6390:1;6372:20;:::i;:::-;6367:25;;6411:1;6401:35;;6416:18;;:::i;:::-;6401:35;6458:1;6455;6451:9;6446:14;;6281:185;;;;:::o;6472:348::-;6512:7;6535:20;6553:1;6535:20;:::i;:::-;6530:25;;6569:20;6587:1;6569:20;:::i;:::-;6564:25;;6757:1;6689:66;6685:74;6682:1;6679:81;6674:1;6667:9;6660:17;6656:105;6653:131;;;6764:18;;:::i;:::-;6653:131;6812:1;6809;6805:9;6794:20;;6472:348;;;;:::o;6826:96::-;6863:7;6892:24;6910:5;6892:24;:::i;:::-;6881:35;;6826:96;;;:::o;6928:90::-;6962:7;7005:5;6998:13;6991:21;6980:32;;6928:90;;;:::o;7024:126::-;7061:7;7101:42;7094:5;7090:54;7079:65;;7024:126;;;:::o;7156:77::-;7193:7;7222:5;7211:16;;7156:77;;;:::o;7239:180::-;7287:77;7284:1;7277:88;7384:4;7381:1;7374:15;7408:4;7405:1;7398:15;7425:180;7473:77;7470:1;7463:88;7570:4;7567:1;7560:15;7594:4;7591:1;7584:15;7734:117;7843:1;7840;7833:12;7857:225;7997:34;7993:1;7985:6;7981:14;7974:58;8066:8;8061:2;8053:6;8049:15;8042:33;7857:225;:::o;8088:182::-;8228:34;8224:1;8216:6;8212:14;8205:58;8088:182;:::o;8276:122::-;8349:24;8367:5;8349:24;:::i;:::-;8342:5;8339:35;8329:63;;8388:1;8385;8378:12;8329:63;8276:122;:::o;8404:::-;8477:24;8495:5;8477:24;:::i;:::-;8470:5;8467:35;8457:63;;8516:1;8513;8506:12;8457:63;8404:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"739600","executionCost":"infinite","totalCost":"infinite"},"external":{"aDAI()":"2515","amountTokensToDeduct(address,uint256)":"infinite","amountaDAIToDeduct(uint256)":"infinite","calculateFees(uint256,uint256,address)":"infinite","checkSufficientaDAI(uint256,address)":"infinite","daiToken()":"2580","owner()":"2589","renounceOwnership()":"30443","setPriceCheckerAddress(address)":"27008","setWalletAddress(address)":"26986","transferOwnership(address)":"30857"}},"methodIdentifiers":{"aDAI()":"1a38a4fb","amountTokensToDeduct(address,uint256)":"b98ee419","amountaDAIToDeduct(uint256)":"a42963e9","calculateFees(uint256,uint256,address)":"513ffedd","checkSufficientaDAI(uint256,address)":"ca8963f1","daiToken()":"be22f546","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setPriceCheckerAddress(address)":"b136e39a","setWalletAddress(address)":"ac1a386a","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceCheckerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aDAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"amountTokensToDeduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"}],\"name\":\"amountaDAIToDeduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_refToken\",\"type\":\"address\"}],\"name\":\"calculateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fees\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkSufficientaDAI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PriceCheckeraddress\",\"type\":\"address\"}],\"name\":\"setPriceCheckerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Walletaddress\",\"type\":\"address\"}],\"name\":\"setWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TradingFees.sol\":\"TradingFees\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(\\n        address account\\n    ) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(\\n        address spender,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(\\n            currentAllowance >= subtractedValue,\\n            \\\"ERC20: decreased allowance below zero\\\"\\n        );\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(\\n            fromBalance >= amount,\\n            \\\"ERC20: transfer amount exceeds balance\\\"\\n        );\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(\\n                currentAllowance >= amount,\\n                \\\"ERC20: insufficient allowance\\\"\\n            );\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa5e93048def7546de7ce959ca5f138cde21822a7645fb6e03407ee0f5f92ba5d\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceChecker.sol\\\";\\nimport \\\"./TradingFees.sol\\\";\\n\\n/// @notice Library SafeMath used to prevent overflows and underflows\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Exchange is Ownable {\\n    using SafeMath for uint256; //for prevention of integer overflow\\n    PriceChecker priceChecker;\\n    TradingFees tradingFees;\\n    Wallet wallet;\\n\\n    uint256 decimals = 10 ** 18;\\n    address public ethToken = address(0);\\n\\n    //Token Address List available in DEX\\n    _tokenInfo[] public tokenList;\\n\\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\\n    mapping(address => mapping(address => mapping(uint256 => _Order[])))\\n        public s_orderBook;\\n\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\n        public s_filledOrders;\\n\\n    uint256 public s_orderId = 0;\\n    bool private s_isManual = true;\\n\\n    struct _tokenInfo {\\n        address add;\\n        uint256 decimals;\\n    }\\n\\n    struct _fillOrderValues {\\n        uint256 rate;\\n        uint256 amount;\\n    }\\n\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\n    struct _Order {\\n        uint256 id;\\n        Side side;\\n        address user;\\n        address tokenA;\\n        uint256 amountA;\\n        address tokenB;\\n        uint256 amountB;\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\n        uint256 originalAmountA;\\n        uint256 originalAmountB;\\n        bool waiveFees;\\n    }\\n\\n    //For any order that is filled even if it is partially filled or fully filled\\n    struct _filledOrder {\\n        uint256 id;\\n        Side side;\\n        address user;\\n        address tokenA;\\n        address tokenB;\\n        uint256 amountFilled;\\n        uint256 fillRate;\\n        uint256 originalRate;\\n        uint256 originalAmountA;\\n        uint256 originalAmountB;\\n        bool feesWaived;\\n        uint256 feesPaid; //in terms of USD\\n    }\\n\\n    enum Side {\\n        BUY,\\n        SELL\\n    }\\n\\n    //add events\\n    /// @notice Event when an order is placed on an exchange\\n    event Order(\\n        uint256 id,\\n        Side side,\\n        address user,\\n        address tokenA,\\n        uint256 amountA,\\n        address tokenB,\\n        uint256 amountB,\\n        uint256 rate,\\n        uint256 originalAmountA,\\n        uint256 originalAmountB,\\n        bool waiveFees\\n    );\\n\\n    /// @notice Event when an order is cancelled\\n    event Cancel(\\n        uint256 id,\\n        Side side,\\n        address user,\\n        address tokenA,\\n        uint256 amountA,\\n        address tokenB,\\n        uint256 amountB,\\n        uint256 rate,\\n        uint256 originalAmountA,\\n        uint256 originalAmountB,\\n        bool waiveFees\\n    );\\n\\n    event fillBuyOrder(\\n        _Order remainingOrder,\\n        uint256 amountBought,\\n        uint256 fillBuyRate,\\n        bool feesWaived,\\n        uint256 feesPaid\\n    );\\n\\n    event fillSellOrder(\\n        _Order remainingOrder,\\n        uint256 amountSold,\\n        uint256 fillSellRate,\\n        bool feesWaived,\\n        uint256 feesPaid\\n    );\\n\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\n        wallet = Wallet(_wallet);\\n        tradingFees = TradingFees(_fees);\\n        priceChecker = PriceChecker(_priceChecker);\\n    }\\n\\n    function createLimitBuyOrder(\\n        // TokenA/TokenB\\n        address _tokenA,\\n        uint256 _amountA,\\n        address _tokenB,\\n        uint256 _amountB,\\n        uint256 _rate,\\n        bool _waiveFees\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\n        require(\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\n            ) >= _amountB,\\n            \\\"Insufficient Funds\\\"\\n        );\\n\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenB, _amountB, true);\\n\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\\n            _Order(\\n                s_orderId,\\n                Side.BUY,\\n                msg.sender,\\n                _tokenA,\\n                _amountA,\\n                _tokenB,\\n                _amountB,\\n                _rate,\\n                _amountA,\\n                _amountB,\\n                _waiveFees\\n            )\\n        );\\n\\n        emit Order(\\n            s_orderId,\\n            Side.BUY,\\n            msg.sender,\\n            _tokenA,\\n            _amountA,\\n            _tokenB,\\n            _amountB,\\n            _rate,\\n            _amountA,\\n            _amountB,\\n            _waiveFees\\n        );\\n\\n        s_orderId = s_orderId.add(1);\\n    }\\n\\n    function createLimitSellOrder(\\n        address _tokenA,\\n        uint256 _amountA,\\n        address _tokenB,\\n        uint256 _amountB,\\n        uint256 _rate,\\n        bool _waiveFees\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\n        require(\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\n            ) >= _amountA,\\n            \\\"Insufficient Funds\\\"\\n        );\\n\\n        //Lock the funds (tokens) in the wallet\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenA, _amountA, true);\\n\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\\n            _Order(\\n                s_orderId,\\n                Side.SELL,\\n                msg.sender,\\n                _tokenA,\\n                _amountA,\\n                _tokenB,\\n                _amountB,\\n                _rate,\\n                _amountA,\\n                _amountB,\\n                _waiveFees\\n            )\\n        );\\n\\n        emit Order(\\n            s_orderId,\\n            Side.SELL,\\n            msg.sender,\\n            _tokenA,\\n            _amountA,\\n            _tokenB,\\n            _amountB,\\n            _rate,\\n            _amountA,\\n            _amountB,\\n            _waiveFees\\n        );\\n\\n        s_orderId = s_orderId.add(1);\\n    }\\n\\n    function cancelOrder(\\n        Side side,\\n        uint256 _id,\\n        address _tokenA,\\n        address _tokenB\\n    )\\n        public\\n        validOrder(_id, side, _tokenA, _tokenB)\\n        validToken(_tokenA)\\n        validToken(_tokenB)\\n    {\\n        uint256 _side = uint256(side);\\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\\n        uint256 size = _order.length;\\n        _Order memory order;\\n\\n        uint256 index;\\n        for (uint256 i = 0; i < size; i++) {\\n            if (_order[i].id == _id) {\\n                index = i;\\n                order = _order[i];\\n                break;\\n            }\\n        }\\n\\n        //Manual cancellation of orders\\n        if (s_isManual) {\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\n\\n            //Unlock funds\\n            if (side == Side.BUY) {\\n                wallet.exchangeUpdateLockedFunds(\\n                    msg.sender,\\n                    order.tokenB,\\n                    order.amountB,\\n                    false\\n                );\\n            } else if (side == Side.SELL) {\\n                wallet.exchangeUpdateLockedFunds(\\n                    msg.sender,\\n                    order.tokenA,\\n                    order.amountA,\\n                    false\\n                );\\n            }\\n        }\\n\\n        for (uint256 j = index; j < size - 1; j++) {\\n            _order[j] = _order[j.add(1)];\\n        }\\n        delete _order[size.sub(1)];\\n        _order.pop();\\n\\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\\n\\n        emit Cancel(\\n            _id,\\n            order.side,\\n            order.user,\\n            order.tokenA,\\n            order.amountA,\\n            order.tokenB,\\n            order.amountB,\\n            order.rate,\\n            order.originalAmountA,\\n            order.originalAmountB,\\n            order.waiveFees\\n        );\\n    }\\n\\n    function fillOrder(\\n        Side side,\\n        uint256 _id,\\n        address _tokenA,\\n        address _tokenB,\\n        _fillOrderValues memory a\\n    )\\n        internal\\n        validOrder(_id, side, _tokenA, _tokenB)\\n        validToken(_tokenA)\\n        validToken(_tokenB)\\n    {\\n        uint256 _side = uint256(side);\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\n            _tokenA,\\n            _tokenB,\\n            _side,\\n            _id\\n        );\\n\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\n\\n        order.amountA = order.amountA.sub(a.amount);\\n        order.amountB = order.amountB.sub(\\n            order.rate.mul(a.amount).div(decimals)\\n        );\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountA = order.amountA;\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountB = order.amountB;\\n\\n        uint256 fees = tradingFees.calculateFees(\\n            a.amount,\\n            a.rate,\\n            order.tokenB\\n        );\\n        bool feesWaived = order.waiveFees &&\\n            tradingFees.checkSufficientaDAI(fees, order.user);\\n\\n        if (side == Side.BUY) {\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\n        } else if (side == Side.SELL) {\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\n        }\\n\\n        if (order.amountA == 0) {\\n            s_isManual = false;\\n            cancelOrder(side, order.id, order.tokenA, order.tokenB); //remove filled orders\\n            s_isManual = true;\\n        }\\n    }\\n\\n    function fillBuyOrders(\\n        _Order memory order,\\n        uint256 _amount,\\n        uint256 _rate,\\n        bool feesWaived,\\n        uint256 fees\\n    ) internal {\\n        if (feesWaived) {\\n            //Deduct aDAI\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                order.user,\\n                aDAIToDeduct,\\n                false\\n            );\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                wallet.fundWallet(),\\n                aDAIToDeduct,\\n                true\\n            );\\n\\n            //Credit Bought tokens\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                order.user,\\n                _amount,\\n                true\\n            );\\n        } else {\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\n                order.tokenA,\\n                fees\\n            );\\n            //Credit Bought tokens after minusing fees\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                order.user,\\n                _amount.sub(amountTokenToDeduct),\\n                true\\n            );\\n\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                wallet.fundWallet(),\\n                amountTokenToDeduct,\\n                true\\n            );\\n        }\\n\\n        //Original Locked Funds unlocked\\n        wallet.exchangeUpdateLockedFunds(\\n            order.user,\\n            order.tokenB,\\n            (order.rate.mul(_amount)).div(decimals),\\n            false\\n        );\\n\\n        //buyer update\\n        //Buyer balance deducted from what he paid\\n        wallet.exchangeUpdateBalance(\\n            order.tokenB,\\n            order.user,\\n            (_rate.mul(_amount)).div(decimals),\\n            false\\n        );\\n\\n        s_filledOrders[order.user][0].push(\\n            _filledOrder(\\n                order.id,\\n                order.side,\\n                order.user,\\n                order.tokenA,\\n                order.tokenB,\\n                _amount,\\n                _rate,\\n                order.rate,\\n                order.originalAmountA,\\n                order.originalAmountB,\\n                feesWaived,\\n                fees\\n            )\\n        );\\n    }\\n\\n    function fillSellOrders(\\n        _Order memory order,\\n        uint256 _amount,\\n        uint256 _rate,\\n        bool feesWaived,\\n        uint256 fees\\n    ) internal {\\n        if (feesWaived) {\\n            //Deduct aDAI\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                order.user,\\n                aDAIToDeduct,\\n                false\\n            );\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                wallet.fundWallet(),\\n                aDAIToDeduct,\\n                true\\n            );\\n\\n            //Credit Earned tokens\\n            wallet.exchangeUpdateBalance(\\n                order.tokenB,\\n                order.user,\\n                (_rate.mul(_amount)).div(decimals),\\n                true\\n            );\\n        } else {\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\n                order.tokenB,\\n                fees\\n            );\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                wallet.fundWallet(),\\n                amountTokensToDeduct,\\n                true\\n            );\\n            //Credit Earned tokens after minusing fees\\n            wallet.exchangeUpdateBalance(\\n                order.tokenB,\\n                order.user,\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\n                true\\n            );\\n        }\\n\\n        wallet.exchangeUpdateLockedFunds(\\n            order.user,\\n            order.tokenA,\\n            _amount,\\n            false\\n        );\\n        //seller update\\n        wallet.exchangeUpdateBalance(order.tokenA, order.user, _amount, false);\\n\\n        s_filledOrders[order.user][1].push(\\n            _filledOrder(\\n                order.id,\\n                order.side,\\n                order.user,\\n                order.tokenA,\\n                order.tokenB,\\n                _amount,\\n                _rate,\\n                order.rate,\\n                order.originalAmountA,\\n                order.originalAmountB,\\n                feesWaived,\\n                fees\\n            )\\n        );\\n    }\\n\\n    function matchOrders(\\n        address _tokenA,\\n        address _tokenB,\\n        uint256 _id,\\n        Side side\\n    )\\n        internal\\n        validOrder(_id, side, _tokenA, _tokenB)\\n        validToken(_tokenA)\\n        validToken(_tokenB)\\n    {\\n        uint256 saleTokenAmt;\\n\\n        if (side == Side.BUY) {\\n            //Retrieve sell order to match\\n            _Order[] memory _sellOrder = s_orderBook[_tokenA][_tokenB][1];\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\n                //Retrieve buy order to be filled\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\n                    _tokenA,\\n                    _tokenB,\\n                    uint8(side),\\n                    _id\\n                );\\n                //sell order hit buyer's limit price & tokenB matches\\n                if (\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\n                    buyOrderToFill.user != _sellOrder[i].user\\n                ) {\\n                    _Order memory sellOrder = _sellOrder[i];\\n                    //if buyer's amount to buy > seller's amount to sell\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\n                        saleTokenAmt = sellOrder.amountA;\\n                    }\\n                    //if seller's amount to sell >= buyer's amount to buy\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\n                        saleTokenAmt = buyOrderToFill.amountA;\\n                    }\\n\\n                    //Verify current balance\\n                    require(\\n                        wallet.balanceOf(\\n                            buyOrderToFill.tokenB,\\n                            buyOrderToFill.user\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\n                        \\\"Insufficient Buyer Token Balance\\\"\\n                    );\\n                    require(\\n                        wallet.balanceOf(_tokenA, sellOrder.user) >=\\n                            saleTokenAmt,\\n                        \\\"Insufficient Seller Token Balance\\\"\\n                    );\\n\\n                    //update orders\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\n                        sellOrder.rate,\\n                        saleTokenAmt\\n                    );\\n                    fillOrder(Side.BUY, _id, _tokenA, _tokenB, fillOrderValues);\\n                    fillOrder(\\n                        Side.SELL,\\n                        sellOrder.id,\\n                        _tokenA,\\n                        _tokenB,\\n                        fillOrderValues\\n                    );\\n                }\\n\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\n                if (!orderExist) break;\\n            }\\n        } else if (side == Side.SELL) {\\n            //Retrieve buy order to match\\n            _Order[] memory _buyOrder = s_orderBook[_tokenA][_tokenB][0];\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\n                //Retrieve sell order to be filled\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\n                    _tokenA,\\n                    _tokenB,\\n                    1,\\n                    _id\\n                );\\n                //sell order hit buyer's limit price\\n                if (\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\n                    _buyOrder[i].user != sellOrderToFill.user\\n                ) {\\n                    _Order memory order = _buyOrder[i];\\n\\n                    //if seller's amount to sell > buyer's amount to buy\\n                    if (sellOrderToFill.amountA > order.amountA) {\\n                        saleTokenAmt = order.amountA;\\n                    }\\n                    //if buyer's amount to buy > seller's amount to sell\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\n                        saleTokenAmt = sellOrderToFill.amountA;\\n                    }\\n                    //Verify current balance\\n                    require(\\n                        wallet.balanceOf(_tokenA, sellOrderToFill.user) >=\\n                            saleTokenAmt,\\n                        \\\"Insufficient Seller Token Balance\\\"\\n                    );\\n                    require(\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\n                        \\\"Insufficient Buyer Token Balance\\\"\\n                    );\\n\\n                    //update orders\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\n                        order.rate,\\n                        saleTokenAmt\\n                    );\\n                    fillOrder(\\n                        Side.SELL,\\n                        _id,\\n                        _tokenA,\\n                        _tokenB,\\n                        fillOrderValues\\n                    );\\n                    fillOrder(\\n                        Side.BUY,\\n                        order.id,\\n                        _tokenA,\\n                        _tokenB,\\n                        fillOrderValues\\n                    );\\n                }\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\n                if (!orderExist) break;\\n            }\\n        }\\n    }\\n\\n    function getOrderLength(\\n        Side side,\\n        address _tokenA,\\n        address _tokenB\\n    ) public view returns (uint256) {\\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\\n    }\\n\\n    function getOrder(\\n        address _tokenA,\\n        address _tokenB,\\n        uint256 index,\\n        Side side\\n    ) public view returns (_Order memory) {\\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][\\n            index\\n        ];\\n        return (order);\\n    }\\n\\n    function getFilledOrderLength(\\n        address _user,\\n        Side side\\n    ) public view returns (uint256) {\\n        return s_filledOrders[_user][uint256(side)].length;\\n    }\\n\\n    function getFilledOrder(\\n        address _user,\\n        Side side,\\n        uint256 index\\n    ) public view returns (_filledOrder memory) {\\n        _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\n            index\\n        ];\\n        return (filledOrder);\\n    }\\n\\n    function getOrderFromArray(\\n        address _tokenA,\\n        address _tokenB,\\n        uint256 side,\\n        uint256 _id\\n    ) public view returns (_Order memory, uint256) {\\n        uint256 i = 0;\\n        _Order[] memory _order = s_orderBook[_tokenA][_tokenB][side];\\n        _Order memory order;\\n        for (i; i < _order.length; i++) {\\n            if (_order[i].id == _id) {\\n                order = _order[i];\\n                break;\\n            }\\n        }\\n        return (order, i);\\n    }\\n\\n    function orderExists(\\n        uint256 _id,\\n        Side side,\\n        address _tokenA,\\n        address _tokenB\\n    ) public view returns (bool) {\\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\\n\\n        for (uint256 i = 0; i < orders.length; i++) {\\n            if (orders[i].id == _id) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\n        tokenList.push(_tokenInfo(_token, _decimals));\\n    }\\n\\n    function isVerifiedToken(address _token) public view returns (bool) {\\n        //uint256 size = tokenList.length;\\n\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\n            if (tokenList[i].add == _token) return true;\\n        }\\n        return false;\\n    }\\n\\n    function getTokenInfo(address _token) public view returns (uint256) {\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\n            if (tokenList[i].add == _token) {\\n                return tokenList[i].decimals;\\n            }\\n        }\\n    }\\n\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\n        wallet = Wallet(_Walletaddress);\\n    }\\n\\n    function setPriceCheckerAddress(\\n        address _PriceCheckeraddress\\n    ) public onlyOwner {\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\n    }\\n\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\n        tradingFees = TradingFees(_tradingFees);\\n    }\\n\\n    modifier validOrder(\\n        uint256 _id,\\n        Side side,\\n        address _tokenA,\\n        address _tokenB\\n    ) {\\n        require(orderExists(_id, side, _tokenA, _tokenB), \\\"Invalid Order ID\\\");\\n        _;\\n    }\\n\\n    modifier validToken(address _token) {\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xdf016dc3262cc3b92f32545ccbf91064c10036728e6d606dece377203897a32a\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract PriceChecker is Ownable {\\n    _priceFeed[] public priceFeeds;\\n\\n    struct _priceFeed {\\n        string name;\\n        address token;\\n        AggregatorV3Interface priceFeed;\\n    }\\n\\n    //only using PriceFeeds pegged to USD\\n    function addPriceFeed(\\n        string memory _name,\\n        address _token,\\n        address _address\\n    ) external onlyOwner {\\n        _priceFeed[] memory pricefeed = priceFeeds;\\n        bool isAdded = false;\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\n            if (\\n                keccak256(abi.encodePacked(_name)) ==\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\n            ) {\\n                isAdded = true;\\n                break;\\n            }\\n        }\\n        require(!isAdded, \\\"Price Feed already added\\\");\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\n    }\\n\\n    function getPriceFeed(\\n        address _token\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\n        _priceFeed[] memory pricefeed = priceFeeds;\\n\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\n            if (_token == pricefeed[i].token) {\\n                return pricefeed[i].priceFeed;\\n            }\\n        }\\n    }\\n\\n    function getPrice(address _address) external view returns (uint256) {\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer);\\n    }\\n}\\n\",\"keccak256\":\"0x5c9c2328d2d7e59d81ef60914824d090cca775d2bb406259e47def176d87e12d\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceChecker.sol\\\";\\nimport \\\"./Wallet.sol\\\";\\n\\n/// @notice Library SafeMath used to prevent overflows and underflows\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract TradingFees is Ownable {\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\n    //and waive trading fees\\n\\n    using SafeMath for uint256; //for prevention of integer overflow\\n\\n    uint256 decimals = 10 ** 18;\\n    address public daiToken =\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\n    PriceChecker private priceFeed;\\n    Wallet wallet;\\n\\n    constructor(address _priceCheckerAddress) {\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\n    }\\n\\n    function calculateFees(\\n        uint256 _amount,\\n        uint256 _rate,\\n        address _refToken\\n    ) public view returns (uint256) {\\n        //Calculated based on TokenB price, require actual price in 18dp\\n        //trading fees is 0.1% of trade = 0.001\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\n        //have to fetch tokenPrice from PriceFeed\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\n        uint256 value = (\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\n        ).div(decimals);\\n        uint256 fees = value.div(10 ** 4);\\n\\n        return fees; //based on USD value\\n    }\\n\\n    //Amount of DAI to deduct from fees\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\n        return uint256(amt);\\n    }\\n\\n    //Amount of Tokens to deduct from fees\\n    function amountTokensToDeduct(\\n        address _refToken,\\n        uint256 _fees\\n    ) public view returns (uint256) {\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\n        return uint256(amt);\\n    }\\n\\n    function checkSufficientaDAI(\\n        uint256 _fees,\\n        address _user\\n    ) public view returns (bool) {\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\n\\n        return balance >= amtDAI;\\n    }\\n\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\n        wallet = Wallet(_Walletaddress);\\n    }\\n\\n    function setPriceCheckerAddress(\\n        address _PriceCheckeraddress\\n    ) public onlyOwner {\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\n    }\\n}\\n\",\"keccak256\":\"0xa7188a7c778a4f831be26ba1c8173104c2d6ab869dd6d835a8e781b1595c783f\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./Exchange.sol\\\";\\n\\n/// @notice Library SafeMath used to prevent overflows and underflows\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Wallet is Ownable {\\n    using SafeMath for uint256; //for prevention of integer overflow\\n\\n    address Owner;\\n    address public fundWallet;\\n    uint256 decimals = 18;\\n    address public aDAI;\\n\\n    //For prevention of reentrancy\\n    bool private locked;\\n\\n    address public ethToken = address(0);\\n\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\n\\n    Exchange exchange;\\n    IERC20 token;\\n\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\n\\n    /// @notice Event when amount withdrawn exchange\\n    event Withdraw(\\n        address token,\\n        address user,\\n        uint256 amount,\\n        uint256 balance\\n    );\\n\\n    constructor() {\\n        Owner = msg.sender;\\n    }\\n\\n    function depositETH() external payable {\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\n\\n        emit Deposit(\\n            ethToken,\\n            msg.sender,\\n            msg.value,\\n            balanceOf(ethToken, msg.sender)\\n        );\\n    }\\n\\n    function withdrawETH(uint256 _amount) external {\\n        require(\\n            balanceOf(ethToken, msg.sender).sub(\\n                getlockedFunds(msg.sender, ethToken)\\n            ) >= _amount,\\n            \\\"Insufficient balance ETH to withdraw\\\"\\n        );\\n        require(!locked, \\\"Reentrant call detected!\\\");\\n        locked = true;\\n        updateBalance(ethToken, msg.sender, _amount, false);\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\n        require(success, \\\"failed to send amount\\\");\\n        locked = false;\\n\\n        emit Withdraw(\\n            ethToken,\\n            msg.sender,\\n            _amount,\\n            balanceOf(ethToken, msg.sender)\\n        );\\n    }\\n\\n    //from and transferFrom is from ERC20 contract\\n    //_token should be an ERC20 token\\n    function depositToken(\\n        address _token,\\n        uint256 _amount,\\n        uint256 _decimals\\n    ) external {\\n        require(_token != ethToken, \\\"Invalid Token Type\\\");\\n        require(\\n            exchange.isVerifiedToken(_token) || _token == aDAI,\\n            \\\"Token not verified on Exchange\\\"\\n        );\\n        //need to add a check to prove that it is an ERC20 token\\n        token = IERC20(_token);\\n\\n        //Requires approval first\\n        require(\\n            token.transferFrom(msg.sender, address(this), _amount),\\n            \\\"No Approval yet\\\"\\n        );\\n\\n        updateBalance(\\n            _token,\\n            msg.sender,\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\n            true\\n        );\\n\\n        emit Deposit(\\n            _token,\\n            msg.sender,\\n            _amount,\\n            balanceOf(_token, msg.sender)\\n        );\\n    }\\n\\n    function withdrawToken(\\n        address _token,\\n        uint256 _amount,\\n        uint256 _decimals\\n    ) external {\\n        require(_token != ethToken);\\n        require(\\n            exchange.isVerifiedToken(_token),\\n            \\\"Token not verified on Exchange\\\"\\n        );\\n\\n        require(\\n            balanceOf(_token, msg.sender).sub(\\n                getlockedFunds(msg.sender, _token)\\n            ) >= _amount,\\n            \\\"Insufficient Tokens to withdraw\\\"\\n        );\\n        require(!locked, \\\"Reentrant call detected!\\\");\\n        locked = true;\\n\\n        token = IERC20(_token);\\n        updateBalance(\\n            _token,\\n            msg.sender,\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\n            false\\n        );\\n        require(\\n            token.transfer(\\n                msg.sender,\\n                _amount.div(10 ** decimals.sub(_decimals))\\n            )\\n        );\\n\\n        locked = false;\\n        emit Withdraw(\\n            _token,\\n            msg.sender,\\n            _amount,\\n            balanceOf(_token, msg.sender)\\n        );\\n    }\\n\\n    function getlockedFunds(\\n        address _user,\\n        address _token\\n    ) public view returns (uint256) {\\n        return lockedFunds[_user][_token];\\n    }\\n\\n    function exchangeUpdateLockedFunds(\\n        address _user,\\n        address _token,\\n        uint256 _amount,\\n        bool isAdd\\n    ) external isExchange {\\n        updateLockedFunds(_user, _token, _amount, isAdd);\\n    }\\n\\n    function updateLockedFunds(\\n        address _user,\\n        address _token,\\n        uint256 _amount,\\n        bool isAdd\\n    ) internal {\\n        if (isAdd) {\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\n                _amount\\n            );\\n        } else if (!isAdd) {\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\n                _amount\\n            );\\n        }\\n    }\\n\\n    //balance of specific tokens in the dex owned by specific user\\n    function balanceOf(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256) {\\n        return s_tokens[_token][_user];\\n    }\\n\\n    function exchangeUpdateBalance(\\n        address _token,\\n        address _user,\\n        uint256 _amount,\\n        bool isAdd\\n    ) external isExchange {\\n        updateBalance(_token, _user, _amount, isAdd);\\n    }\\n\\n    function updateBalance(\\n        address _token,\\n        address _user,\\n        uint256 _amount,\\n        bool isAdd\\n    ) internal {\\n        if (isAdd) {\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\n        } else if (!isAdd) {\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\n        }\\n    }\\n\\n    function updateFundWallet(address _fundwallet) public onlyOwner {\\n        fundWallet = _fundwallet;\\n    }\\n\\n    function withdrawToFundWallet(address _token, uint256 _decimals) external {\\n        //Only allow fundWallet address to make the call\\n        require(\\n            msg.sender == fundWallet,\\n            \\\"Invalid FundWallet address to withdraw\\\"\\n        );\\n        uint256 totalAmount = s_tokens[_token][fundWallet];\\n        uint256 actualAmount = totalAmount.div(10 ** decimals.sub(_decimals));\\n        token = IERC20(_token);\\n\\n        require(!locked, \\\"Reentrant call detected!\\\");\\n        locked = true;\\n        updateBalance(_token, fundWallet, totalAmount, false);\\n        require(token.transfer(fundWallet, actualAmount));\\n        locked = false;\\n    }\\n\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\n        exchange = Exchange(_exchangeAddress);\\n    }\\n\\n    function updateaDaiAddress(address _address) public onlyOwner {\\n        aDAI = address(_address);\\n    }\\n\\n    modifier isExchange() {\\n        require(msg.sender == address(exchange), \\\"Not Exchange contract\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xb6878d59320d4df2cf05086e287149f3748edf8c1c68bcc96e33c4a56b58777f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/TradingFees.sol:TradingFees","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":3322,"contract":"contracts/TradingFees.sol:TradingFees","label":"decimals","offset":0,"slot":"1","type":"t_uint256"},{"astId":3328,"contract":"contracts/TradingFees.sol:TradingFees","label":"daiToken","offset":0,"slot":"2","type":"t_address"},{"astId":3334,"contract":"contracts/TradingFees.sol:TradingFees","label":"aDAI","offset":0,"slot":"3","type":"t_address"},{"astId":3337,"contract":"contracts/TradingFees.sol:TradingFees","label":"priceFeed","offset":0,"slot":"4","type":"t_contract(PriceChecker)3305"},{"astId":3340,"contract":"contracts/TradingFees.sol:TradingFees","label":"wallet","offset":0,"slot":"5","type":"t_contract(Wallet)4195"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(PriceChecker)3305":{"encoding":"inplace","label":"contract PriceChecker","numberOfBytes":"20"},"t_contract(Wallet)4195":{"encoding":"inplace","label":"contract Wallet","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Wallet.sol":{"Wallet":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"aDAI","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"depositToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ethToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"isAdd","type":"bool"}],"name":"exchangeUpdateBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"isAdd","type":"bool"}],"name":"exchangeUpdateLockedFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fundWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"name":"getlockedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"lockedFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"s_tokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_exchangeAddress","type":"address"}],"name":"updateExchangeAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_fundwallet","type":"address"}],"name":"updateFundWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"updateaDaiAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"withdrawToFundWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3612":{"entryPoint":null,"id":3612,"parameterSlots":0,"returnSlots":0},"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_273":{"entryPoint":192,"id":273,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":200,"id":157,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405260126003556000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200005857600080fd5b50620000796200006d620000c060201b60201c565b620000c860201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200018c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61297e806200019c6000396000f3fe60806040526004361061011f5760003560e01c80637bf1a627116100a0578063f14210a611610064578063f14210a6146103bd578063f2fde38b146103e6578063f6326fb31461040f578063f7888aec14610419578063fc11a3d6146104565761011f565b80637bf1a627146102d85780638da5cb5b1461030357806396c0ec551461032e57806399c6d2de14610357578063cd5d767c146103805761011f565b8063545e0157116100e7578063545e01571461021b5780635dfbfffd146102445780635ec38bec1461026d578063664a1ad614610296578063715018a6146102c15761011f565b8063126b9c5d146101245780631a38a4fb1461014d57806331415a65146101785780634bdde1cf146101a15780634fc121db146101de575b600080fd5b34801561013057600080fd5b5061014b60048036038101906101469190611e0b565b61047f565b005b34801561015957600080fd5b50610162610521565b60405161016f9190612136565b60405180910390f35b34801561018457600080fd5b5061019f600480360381019061019a9190611d9e565b610547565b005b3480156101ad57600080fd5b506101c860048036038101906101c39190611dcb565b610593565b6040516101d59190612356565b60405180910390f35b3480156101ea57600080fd5b5061020560048036038101906102009190611dcb565b6105b8565b6040516102129190612356565b60405180910390f35b34801561022757600080fd5b50610242600480360381019061023d9190611d9e565b61063f565b005b34801561025057600080fd5b5061026b60048036038101906102669190611e72565b61068b565b005b34801561027957600080fd5b50610294600480360381019061028f9190611d9e565b6109cb565b005b3480156102a257600080fd5b506102ab610a17565b6040516102b89190612136565b60405180910390f35b3480156102cd57600080fd5b506102d6610a3d565b005b3480156102e457600080fd5b506102ed610a51565b6040516102fa9190612136565b60405180910390f35b34801561030f57600080fd5b50610318610a77565b6040516103259190612136565b60405180910390f35b34801561033a57600080fd5b5061035560048036038101906103509190611eb2565b610aa0565b005b34801561036357600080fd5b5061037e60048036038101906103799190611eb2565b610e87565b005b34801561038c57600080fd5b506103a760048036038101906103a29190611dcb565b611215565b6040516103b49190612356565b60405180910390f35b3480156103c957600080fd5b506103e460048036038101906103df9190611f32565b61123a565b005b3480156103f257600080fd5b5061040d60048036038101906104089190611d9e565b6114d4565b005b610417611558565b005b34801561042557600080fd5b50610440600480360381019061043b9190611dcb565b611613565b60405161044d9190612356565b60405180910390f35b34801561046257600080fd5b5061047d60048036038101906104789190611e0b565b61169a565b005b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610506906122b6565b60405180910390fd5b61051b8484848461173c565b50505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61054f611972565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6007602052816000526040600020602052806000526040600020600091509150505481565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610647611972565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610712906122d6565b60405180910390fd5b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006107f36107d8846003546119f090919063ffffffff16565b600a6107e49190612467565b83611a0690919063ffffffff16565b905083600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460149054906101000a900460ff1615610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d906121f6565b60405180910390fd5b6001600460146101000a81548160ff0219169083151502179055506108d084600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600061173c565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161094f9291906121cd565b602060405180830381600087803b15801561096957600080fd5b505af115801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a19190611f05565b6109aa57600080fd5b6000600460146101000a81548160ff02191690831515021790555050505050565b6109d3611972565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a45611972565b610a4f6000611a1c565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610afb57600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b8152600401610b569190612136565b60206040518083038186803b158015610b6e57600080fd5b505afa158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba69190611f05565b610be5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdc90612296565b60405180910390fd5b81610c0b610bf333866105b8565b610bfd8633611613565b6119f090919063ffffffff16565b1015610c4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4390612316565b60405180910390fd5b600460149054906101000a900460ff1615610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c93906121f6565b60405180910390fd5b6001600460146101000a81548160ff02191690831515021790555082600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d378333610d30610d15856003546119f090919063ffffffff16565b600a610d219190612467565b86611ae090919063ffffffff16565b600061173c565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33610da9610d8e856003546119f090919063ffffffff16565b600a610d9a9190612467565b86611a0690919063ffffffff16565b6040518363ffffffff1660e01b8152600401610dc69291906121cd565b602060405180830381600087803b158015610de057600080fd5b505af1158015610df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e189190611f05565b610e2157600080fd5b6000600460146101000a81548160ff0219169083151502179055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567833384610e6a8733611613565b604051610e7a9493929190612188565b60405180910390a1505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0f90612236565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b8152600401610f739190612136565b60206040518083038186803b158015610f8b57600080fd5b505afa158015610f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc39190611f05565b8061101b5750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b61105a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105190612296565b60405180910390fd5b82600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016110fa93929190612151565b602060405180830381600087803b15801561111457600080fd5b505af1158015611128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114c9190611f05565b61118b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118290612336565b60405180910390fd5b6111ca83336111c36111a8856003546119f090919063ffffffff16565b600a6111b49190612467565b86611ae090919063ffffffff16565b600161173c565b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78333846111f88733611613565b6040516112089493929190612188565b60405180910390a1505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b806112a461126a33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166105b8565b611296600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633611613565b6119f090919063ffffffff16565b10156112e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dc90612276565b60405180910390fd5b600460149054906101000a900460ff1615611335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132c906121f6565b60405180910390fd5b6001600460146101000a81548160ff02191690831515021790555061137f600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600061173c565b60003373ffffffffffffffffffffffffffffffffffffffff16826040516113a590612121565b60006040518083038185875af1925050503d80600081146113e2576040519150601f19603f3d011682016040523d82523d6000602084013e6113e7565b606091505b505090508061142b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142290612256565b60405180910390fd5b6000600460146101000a81548160ff0219169083151502179055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846114b8600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633611613565b6040516114c89493929190612188565b60405180910390a15050565b6114dc611972565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561154c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154390612216565b60405180910390fd5b61155581611a1c565b50565b611587600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163334600161173c565b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633346115f9600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633611613565b6040516116099493929190612188565b60405180910390a1565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461172a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611721906122b6565b60405180910390fd5b61173684848484611af6565b50505050565b8015611856576117d182600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2c90919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061196c565b8061196b576118ea82600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119f090919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b61197a611d42565b73ffffffffffffffffffffffffffffffffffffffff16611998610a77565b73ffffffffffffffffffffffffffffffffffffffff16146119ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e5906122f6565b60405180910390fd5b565b600081836119fe91906125df565b905092915050565b60008183611a1491906123e3565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183611aee9190612585565b905092915050565b8015611c1057611b8b82600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2c90919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d26565b80611d2557611ca482600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119f090919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b60008183611d3a919061238d565b905092915050565b600033905090565b600081359050611d5981612903565b92915050565b600081359050611d6e8161291a565b92915050565b600081519050611d838161291a565b92915050565b600081359050611d9881612931565b92915050565b600060208284031215611db457611db36126b9565b5b6000611dc284828501611d4a565b91505092915050565b60008060408385031215611de257611de16126b9565b5b6000611df085828601611d4a565b9250506020611e0185828601611d4a565b9150509250929050565b60008060008060808587031215611e2557611e246126b9565b5b6000611e3387828801611d4a565b9450506020611e4487828801611d4a565b9350506040611e5587828801611d89565b9250506060611e6687828801611d5f565b91505092959194509250565b60008060408385031215611e8957611e886126b9565b5b6000611e9785828601611d4a565b9250506020611ea885828601611d89565b9150509250929050565b600080600060608486031215611ecb57611eca6126b9565b5b6000611ed986828701611d4a565b9350506020611eea86828701611d89565b9250506040611efb86828701611d89565b9150509250925092565b600060208284031215611f1b57611f1a6126b9565b5b6000611f2984828501611d74565b91505092915050565b600060208284031215611f4857611f476126b9565b5b6000611f5684828501611d89565b91505092915050565b611f6881612613565b82525050565b6000611f7b60188361237c565b9150611f86826126cb565b602082019050919050565b6000611f9e60268361237c565b9150611fa9826126f4565b604082019050919050565b6000611fc160128361237c565b9150611fcc82612743565b602082019050919050565b6000611fe460158361237c565b9150611fef8261276c565b602082019050919050565b600061200760248361237c565b915061201282612795565b604082019050919050565b600061202a601e8361237c565b9150612035826127e4565b602082019050919050565b600061204d60158361237c565b91506120588261280d565b602082019050919050565b600061207060268361237c565b915061207b82612836565b604082019050919050565b600061209360208361237c565b915061209e82612885565b602082019050919050565b60006120b6601f8361237c565b91506120c1826128ae565b602082019050919050565b60006120d9600083612371565b91506120e4826128d7565b600082019050919050565b60006120fc600f8361237c565b9150612107826128da565b602082019050919050565b61211b81612651565b82525050565b600061212c826120cc565b9150819050919050565b600060208201905061214b6000830184611f5f565b92915050565b60006060820190506121666000830186611f5f565b6121736020830185611f5f565b6121806040830184612112565b949350505050565b600060808201905061219d6000830187611f5f565b6121aa6020830186611f5f565b6121b76040830185612112565b6121c46060830184612112565b95945050505050565b60006040820190506121e26000830185611f5f565b6121ef6020830184612112565b9392505050565b6000602082019050818103600083015261220f81611f6e565b9050919050565b6000602082019050818103600083015261222f81611f91565b9050919050565b6000602082019050818103600083015261224f81611fb4565b9050919050565b6000602082019050818103600083015261226f81611fd7565b9050919050565b6000602082019050818103600083015261228f81611ffa565b9050919050565b600060208201905081810360008301526122af8161201d565b9050919050565b600060208201905081810360008301526122cf81612040565b9050919050565b600060208201905081810360008301526122ef81612063565b9050919050565b6000602082019050818103600083015261230f81612086565b9050919050565b6000602082019050818103600083015261232f816120a9565b9050919050565b6000602082019050818103600083015261234f816120ef565b9050919050565b600060208201905061236b6000830184612112565b92915050565b600081905092915050565b600082825260208201905092915050565b600061239882612651565b91506123a383612651565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123d8576123d761265b565b5b828201905092915050565b60006123ee82612651565b91506123f983612651565b9250826124095761240861268a565b5b828204905092915050565b6000808291508390505b600185111561245e5780860481111561243a5761243961265b565b5b60018516156124495780820291505b8081029050612457856126be565b945061241e565b94509492505050565b600061247282612651565b915061247d83612651565b92506124aa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846124b2565b905092915050565b6000826124c2576001905061257e565b816124d0576000905061257e565b81600181146124e657600281146124f05761251f565b600191505061257e565b60ff8411156125025761250161265b565b5b8360020a9150848211156125195761251861265b565b5b5061257e565b5060208310610133831016604e8410600b84101617156125545782820a90508381111561254f5761254e61265b565b5b61257e565b6125618484846001612414565b925090508184048111156125785761257761265b565b5b81810290505b9392505050565b600061259082612651565b915061259b83612651565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156125d4576125d361265b565b5b828202905092915050565b60006125ea82612651565b91506125f583612651565b9250828210156126085761260761265b565b5b828203905092915050565b600061261e82612631565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f5265656e7472616e742063616c6c206465746563746564210000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420546f6b656e20547970650000000000000000000000000000600082015250565b7f6661696c656420746f2073656e6420616d6f756e740000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e63652045544820746f207769746860008201527f6472617700000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e206e6f74207665726966696564206f6e2045786368616e67650000600082015250565b7f4e6f742045786368616e676520636f6e74726163740000000000000000000000600082015250565b7f496e76616c69642046756e6457616c6c6574206164647265737320746f20776960008201527f7468647261770000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e73756666696369656e7420546f6b656e7320746f20776974686472617700600082015250565b50565b7f4e6f20417070726f76616c207965740000000000000000000000000000000000600082015250565b61290c81612613565b811461291757600080fd5b50565b61292381612625565b811461292e57600080fd5b50565b61293a81612651565b811461294557600080fd5b5056fea26469706673582212204a9427714fafe153fedb3574f4588e5c1c4f631a2aef97c4ab6b018f6c15db4d64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x12 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x79 PUSH3 0x6D PUSH3 0xC0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x18C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x297E DUP1 PUSH3 0x19C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BF1A627 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF14210A6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xFC11A3D6 EQ PUSH2 0x456 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x96C0EC55 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x99C6D2DE EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xCD5D767C EQ PUSH2 0x380 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x545E0157 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x545E0157 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x5DFBFFFD EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x5EC38BEC EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x664A1AD6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C1 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x126B9C5D EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x31415A65 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x4BDDE1CF EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x4FC121DB EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0xA3D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH2 0x123A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x14D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH2 0x1558 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0x169A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x506 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51B DUP5 DUP5 DUP5 DUP5 PUSH2 0x173C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1972 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x647 PUSH2 0x1972 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x712 SWAP1 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x7F3 PUSH2 0x7D8 DUP5 PUSH1 0x3 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST DUP4 PUSH2 0x1A06 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87D SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8D0 DUP5 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94F SWAP3 SWAP2 SWAP1 PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0x1972 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA45 PUSH2 0x1972 JUMP JUMPDEST PUSH2 0xA4F PUSH1 0x0 PUSH2 0x1A1C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA6 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDC SWAP1 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xC0B PUSH2 0xBF3 CALLER DUP7 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0xBFD DUP7 CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xC4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP1 PUSH2 0x2316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xD37 DUP4 CALLER PUSH2 0xD30 PUSH2 0xD15 DUP6 PUSH1 0x3 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xD21 SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST DUP7 PUSH2 0x1AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0xDA9 PUSH2 0xD8E DUP6 PUSH1 0x3 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xD9A SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST DUP7 PUSH2 0x1A06 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP3 SWAP2 SWAP1 PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP4 CALLER DUP5 PUSH2 0xE6A DUP8 CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST DUP1 PUSH2 0x101B JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x105A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP1 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1128 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x114C SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x118B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1182 SWAP1 PUSH2 0x2336 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11CA DUP4 CALLER PUSH2 0x11C3 PUSH2 0x11A8 DUP6 PUSH1 0x3 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0x11B4 SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST DUP7 PUSH2 0x1AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH2 0x173C JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 CALLER DUP5 PUSH2 0x11F8 DUP8 CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1208 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH2 0x12A4 PUSH2 0x126A CALLER PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x1296 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP1 PUSH2 0x2276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1335 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132C SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x137F PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x0 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x13A5 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x142B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1422 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x14B8 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x14DC PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1543 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1555 DUP2 PUSH2 0x1A1C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1587 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH1 0x1 PUSH2 0x173C JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH2 0x15F9 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1609 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x172A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1721 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1736 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1AF6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1856 JUMPI PUSH2 0x17D1 DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D2C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x196C JUMP JUMPDEST DUP1 PUSH2 0x196B JUMPI PUSH2 0x18EA DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x197A PUSH2 0x1D42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1998 PUSH2 0xA77 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E5 SWAP1 PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A14 SWAP2 SWAP1 PUSH2 0x23E3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1AEE SWAP2 SWAP1 PUSH2 0x2585 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C10 JUMPI PUSH2 0x1B8B DUP3 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D2C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1D26 JUMP JUMPDEST DUP1 PUSH2 0x1D25 JUMPI PUSH2 0x1CA4 DUP3 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1D3A SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D59 DUP2 PUSH2 0x2903 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D6E DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D83 DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D98 DUP2 PUSH2 0x2931 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DB4 JUMPI PUSH2 0x1DB3 PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DC2 DUP5 DUP3 DUP6 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DE2 JUMPI PUSH2 0x1DE1 PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DF0 DUP6 DUP3 DUP7 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E01 DUP6 DUP3 DUP7 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E25 JUMPI PUSH2 0x1E24 PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E33 DUP8 DUP3 DUP9 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E44 DUP8 DUP3 DUP9 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1E55 DUP8 DUP3 DUP9 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1E66 DUP8 DUP3 DUP9 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E88 PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E97 DUP6 DUP3 DUP7 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EA8 DUP6 DUP3 DUP7 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ECB JUMPI PUSH2 0x1ECA PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED9 DUP7 DUP3 DUP8 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EEA DUP7 DUP3 DUP8 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1EFB DUP7 DUP3 DUP8 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1F1A PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F29 DUP5 DUP3 DUP6 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F56 DUP5 DUP3 DUP6 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F68 DUP2 PUSH2 0x2613 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7B PUSH1 0x18 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F86 DUP3 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9E PUSH1 0x26 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA9 DUP3 PUSH2 0x26F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC1 PUSH1 0x12 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCC DUP3 PUSH2 0x2743 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE4 PUSH1 0x15 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEF DUP3 PUSH2 0x276C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2007 PUSH1 0x24 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x2012 DUP3 PUSH2 0x2795 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202A PUSH1 0x1E DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x2035 DUP3 PUSH2 0x27E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204D PUSH1 0x15 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x2058 DUP3 PUSH2 0x280D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2070 PUSH1 0x26 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x207B DUP3 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2093 PUSH1 0x20 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x209E DUP3 PUSH2 0x2885 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B6 PUSH1 0x1F DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x20C1 DUP3 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D9 PUSH1 0x0 DUP4 PUSH2 0x2371 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E4 DUP3 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FC PUSH1 0xF DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x2107 DUP3 PUSH2 0x28DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x211B DUP2 PUSH2 0x2651 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212C DUP3 PUSH2 0x20CC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x214B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2166 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x2173 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x2180 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x219D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x21AA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x21B7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x21C4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x21EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x220F DUP2 PUSH2 0x1F6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x222F DUP2 PUSH2 0x1F91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x224F DUP2 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x226F DUP2 PUSH2 0x1FD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x228F DUP2 PUSH2 0x1FFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22AF DUP2 PUSH2 0x201D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22CF DUP2 PUSH2 0x2040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22EF DUP2 PUSH2 0x2063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x230F DUP2 PUSH2 0x2086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232F DUP2 PUSH2 0x20A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x234F DUP2 PUSH2 0x20EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x236B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2398 DUP3 PUSH2 0x2651 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A3 DUP4 PUSH2 0x2651 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x23D8 JUMPI PUSH2 0x23D7 PUSH2 0x265B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EE DUP3 PUSH2 0x2651 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F9 DUP4 PUSH2 0x2651 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2409 JUMPI PUSH2 0x2408 PUSH2 0x268A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x245E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x243A JUMPI PUSH2 0x2439 PUSH2 0x265B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2449 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2457 DUP6 PUSH2 0x26BE JUMP JUMPDEST SWAP5 POP PUSH2 0x241E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2472 DUP3 PUSH2 0x2651 JUMP JUMPDEST SWAP2 POP PUSH2 0x247D DUP4 PUSH2 0x2651 JUMP JUMPDEST SWAP3 POP PUSH2 0x24AA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x24B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24C2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x257E JUMP JUMPDEST DUP2 PUSH2 0x24D0 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x257E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x24E6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x24F0 JUMPI PUSH2 0x251F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x257E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2502 JUMPI PUSH2 0x2501 PUSH2 0x265B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2519 JUMPI PUSH2 0x2518 PUSH2 0x265B JUMP JUMPDEST JUMPDEST POP PUSH2 0x257E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2554 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x254F JUMPI PUSH2 0x254E PUSH2 0x265B JUMP JUMPDEST JUMPDEST PUSH2 0x257E JUMP JUMPDEST PUSH2 0x2561 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2414 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2578 JUMPI PUSH2 0x2577 PUSH2 0x265B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2590 DUP3 PUSH2 0x2651 JUMP JUMPDEST SWAP2 POP PUSH2 0x259B DUP4 PUSH2 0x2651 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x25D4 JUMPI PUSH2 0x25D3 PUSH2 0x265B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EA DUP3 PUSH2 0x2651 JUMP JUMPDEST SWAP2 POP PUSH2 0x25F5 DUP4 PUSH2 0x2651 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2608 JUMPI PUSH2 0x2607 PUSH2 0x265B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x261E DUP3 PUSH2 0x2631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420546F6B656E20547970650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E6420616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652045544820746F2077697468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F74207665726966696564206F6E2045786368616E67650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F742045786368616E676520636F6E74726163740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642046756E6457616C6C6574206164647265737320746F207769 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7468647261770000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E7320746F20776974686472617700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E6F20417070726F76616C207965740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x290C DUP2 PUSH2 0x2613 JUMP JUMPDEST DUP2 EQ PUSH2 0x2917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2923 DUP2 PUSH2 0x2625 JUMP JUMPDEST DUP2 EQ PUSH2 0x292E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x293A DUP2 PUSH2 0x2651 JUMP JUMPDEST DUP2 EQ PUSH2 0x2945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP5 0x27 PUSH18 0x4FAFE153FEDB3574F4588E5C1C4F631A2AEF SWAP8 0xC4 0xAB PUSH12 0x18F6C15DB4D64736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"365:6565:10:-:0;;;537:2;518:21;;666:1;632:36;;;;;;;;;;;;;;;;;;;;1155:49;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1187:10:10;1179:5;;:18;;;;;;;;;;;;;;;;;;365:6565;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;365:6565:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_100":{"entryPoint":6514,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_273":{"entryPoint":7490,"id":273,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":6684,"id":157,"parameterSlots":1,"returnSlots":0},"@aDAI_3556":{"entryPoint":1313,"id":3556,"parameterSlots":0,"returnSlots":0},"@add_459":{"entryPoint":7468,"id":459,"parameterSlots":2,"returnSlots":1},"@balanceOf_3997":{"entryPoint":5651,"id":3997,"parameterSlots":2,"returnSlots":1},"@depositETH_3638":{"entryPoint":5464,"id":3638,"parameterSlots":0,"returnSlots":0},"@depositToken_3788":{"entryPoint":3719,"id":3788,"parameterSlots":3,"returnSlots":0},"@div_504":{"entryPoint":6662,"id":504,"parameterSlots":2,"returnSlots":1},"@ethToken_3564":{"entryPoint":2641,"id":3564,"parameterSlots":0,"returnSlots":0},"@exchangeUpdateBalance_4018":{"entryPoint":1151,"id":4018,"parameterSlots":4,"returnSlots":0},"@exchangeUpdateLockedFunds_3932":{"entryPoint":5786,"id":3932,"parameterSlots":4,"returnSlots":0},"@fundWallet_3551":{"entryPoint":2583,"id":3551,"parameterSlots":0,"returnSlots":0},"@getlockedFunds_3911":{"entryPoint":1464,"id":3911,"parameterSlots":2,"returnSlots":1},"@lockedFunds_3576":{"entryPoint":1427,"id":3576,"parameterSlots":0,"returnSlots":0},"@mul_489":{"entryPoint":6880,"id":489,"parameterSlots":2,"returnSlots":1},"@owner_86":{"entryPoint":2679,"id":86,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":2621,"id":114,"parameterSlots":0,"returnSlots":0},"@s_tokens_3570":{"entryPoint":4629,"id":3570,"parameterSlots":0,"returnSlots":0},"@sub_474":{"entryPoint":6640,"id":474,"parameterSlots":2,"returnSlots":1},"@transferOwnership_137":{"entryPoint":5332,"id":137,"parameterSlots":1,"returnSlots":0},"@updateBalance_4067":{"entryPoint":5948,"id":4067,"parameterSlots":4,"returnSlots":0},"@updateExchangeAddress_4164":{"entryPoint":1351,"id":4164,"parameterSlots":1,"returnSlots":0},"@updateFundWallet_4079":{"entryPoint":2507,"id":4079,"parameterSlots":1,"returnSlots":0},"@updateLockedFunds_3981":{"entryPoint":6902,"id":3981,"parameterSlots":4,"returnSlots":0},"@updateaDaiAddress_4179":{"entryPoint":1599,"id":4179,"parameterSlots":1,"returnSlots":0},"@withdrawETH_3711":{"entryPoint":4666,"id":3711,"parameterSlots":1,"returnSlots":0},"@withdrawToFundWallet_4150":{"entryPoint":1675,"id":4150,"parameterSlots":2,"returnSlots":0},"@withdrawToken_3895":{"entryPoint":2720,"id":3895,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address":{"entryPoint":7498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":7540,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7627,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256t_bool":{"entryPoint":7691,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7794,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":7858,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7941,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7986,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8031,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack":{"entryPoint":8046,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":8081,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca_to_t_string_memory_ptr_fromStack":{"entryPoint":8116,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack":{"entryPoint":8151,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack":{"entryPoint":8186,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack":{"entryPoint":8221,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa_to_t_string_memory_ptr_fromStack":{"entryPoint":8256,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57_to_t_string_memory_ptr_fromStack":{"entryPoint":8291,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":8326,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack":{"entryPoint":8361,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8396,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack":{"entryPoint":8431,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8466,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8481,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":8529,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8584,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8653,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8694,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8758,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8790,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8822,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8854,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8886,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8918,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8950,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8982,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9014,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9046,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9073,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9084,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9101,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":9187,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":9236,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":9319,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":9394,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":9605,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9695,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9747,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9765,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9777,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9809,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9819,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":9866,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9913,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_1_unsigned":{"entryPoint":9918,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210":{"entryPoint":9931,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":9972,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca":{"entryPoint":10051,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4":{"entryPoint":10092,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4":{"entryPoint":10133,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a":{"entryPoint":10212,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa":{"entryPoint":10253,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57":{"entryPoint":10294,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":10373,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9":{"entryPoint":10414,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":10455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba":{"entryPoint":10458,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10499,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10522,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10545,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23006:11","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:11","statements":[{"nodeType":"YulAssignment","src":"69:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:11"},"nodeType":"YulFunctionCall","src":"78:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:11"},"nodeType":"YulFunctionCall","src":"107:33:11"},"nodeType":"YulExpressionStatement","src":"107:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:11","type":""}],"src":"7:139:11"},{"body":{"nodeType":"YulBlock","src":"201:84:11","statements":[{"nodeType":"YulAssignment","src":"211:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"233:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"220:12:11"},"nodeType":"YulFunctionCall","src":"220:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"211:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"249:23:11"},"nodeType":"YulFunctionCall","src":"249:30:11"},"nodeType":"YulExpressionStatement","src":"249:30:11"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"179:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"187:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"195:5:11","type":""}],"src":"152:133:11"},{"body":{"nodeType":"YulBlock","src":"351:77:11","statements":[{"nodeType":"YulAssignment","src":"361:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"376:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"370:5:11"},"nodeType":"YulFunctionCall","src":"370:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"361:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"416:5:11"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"392:23:11"},"nodeType":"YulFunctionCall","src":"392:30:11"},"nodeType":"YulExpressionStatement","src":"392:30:11"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"329:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"337:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"345:5:11","type":""}],"src":"291:137:11"},{"body":{"nodeType":"YulBlock","src":"486:87:11","statements":[{"nodeType":"YulAssignment","src":"496:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"518:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"505:12:11"},"nodeType":"YulFunctionCall","src":"505:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"496:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"561:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"534:26:11"},"nodeType":"YulFunctionCall","src":"534:33:11"},"nodeType":"YulExpressionStatement","src":"534:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"464:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"472:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"480:5:11","type":""}],"src":"434:139:11"},{"body":{"nodeType":"YulBlock","src":"645:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"691:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"693:77:11"},"nodeType":"YulFunctionCall","src":"693:79:11"},"nodeType":"YulExpressionStatement","src":"693:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"666:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"675:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"662:3:11"},"nodeType":"YulFunctionCall","src":"662:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"687:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"658:3:11"},"nodeType":"YulFunctionCall","src":"658:32:11"},"nodeType":"YulIf","src":"655:119:11"},{"nodeType":"YulBlock","src":"784:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"799:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"813:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"803:6:11","type":""}]},{"nodeType":"YulAssignment","src":"828:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"863:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"874:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"859:3:11"},"nodeType":"YulFunctionCall","src":"859:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"883:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"838:20:11"},"nodeType":"YulFunctionCall","src":"838:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"828:6:11"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"615:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"626:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"638:6:11","type":""}],"src":"579:329:11"},{"body":{"nodeType":"YulBlock","src":"997:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"1043:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1045:77:11"},"nodeType":"YulFunctionCall","src":"1045:79:11"},"nodeType":"YulExpressionStatement","src":"1045:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1018:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1014:3:11"},"nodeType":"YulFunctionCall","src":"1014:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1039:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1010:3:11"},"nodeType":"YulFunctionCall","src":"1010:32:11"},"nodeType":"YulIf","src":"1007:119:11"},{"nodeType":"YulBlock","src":"1136:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1151:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1165:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1155:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1180:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1215:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1226:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1211:3:11"},"nodeType":"YulFunctionCall","src":"1211:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1235:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1190:20:11"},"nodeType":"YulFunctionCall","src":"1190:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1180:6:11"}]}]},{"nodeType":"YulBlock","src":"1263:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1278:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1292:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1282:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1308:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1343:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1354:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:11"},"nodeType":"YulFunctionCall","src":"1339:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1363:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1318:20:11"},"nodeType":"YulFunctionCall","src":"1318:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1308:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"959:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"970:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"982:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"990:6:11","type":""}],"src":"914:474:11"},{"body":{"nodeType":"YulBlock","src":"1508:645:11","statements":[{"body":{"nodeType":"YulBlock","src":"1555:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1557:77:11"},"nodeType":"YulFunctionCall","src":"1557:79:11"},"nodeType":"YulExpressionStatement","src":"1557:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1529:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1538:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1525:3:11"},"nodeType":"YulFunctionCall","src":"1525:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1550:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1521:3:11"},"nodeType":"YulFunctionCall","src":"1521:33:11"},"nodeType":"YulIf","src":"1518:120:11"},{"nodeType":"YulBlock","src":"1648:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1663:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1677:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1667:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1692:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1727:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1738:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1723:3:11"},"nodeType":"YulFunctionCall","src":"1723:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1747:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1702:20:11"},"nodeType":"YulFunctionCall","src":"1702:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1692:6:11"}]}]},{"nodeType":"YulBlock","src":"1775:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1790:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1804:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1794:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1820:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1855:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1866:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1851:3:11"},"nodeType":"YulFunctionCall","src":"1851:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1875:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1830:20:11"},"nodeType":"YulFunctionCall","src":"1830:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1820:6:11"}]}]},{"nodeType":"YulBlock","src":"1903:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1918:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1932:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1922:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1948:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1983:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1994:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:11"},"nodeType":"YulFunctionCall","src":"1979:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2003:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1958:20:11"},"nodeType":"YulFunctionCall","src":"1958:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1948:6:11"}]}]},{"nodeType":"YulBlock","src":"2031:115:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2046:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2060:2:11","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2050:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2076:60:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2108:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2119:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2104:3:11"},"nodeType":"YulFunctionCall","src":"2104:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2128:7:11"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"2086:17:11"},"nodeType":"YulFunctionCall","src":"2086:50:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2076:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1454:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1465:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1477:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1485:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1493:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1501:6:11","type":""}],"src":"1394:759:11"},{"body":{"nodeType":"YulBlock","src":"2242:391:11","statements":[{"body":{"nodeType":"YulBlock","src":"2288:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2290:77:11"},"nodeType":"YulFunctionCall","src":"2290:79:11"},"nodeType":"YulExpressionStatement","src":"2290:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2263:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2272:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2259:3:11"},"nodeType":"YulFunctionCall","src":"2259:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2284:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2255:3:11"},"nodeType":"YulFunctionCall","src":"2255:32:11"},"nodeType":"YulIf","src":"2252:119:11"},{"nodeType":"YulBlock","src":"2381:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2396:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2410:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2400:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2425:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2460:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2471:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2456:3:11"},"nodeType":"YulFunctionCall","src":"2456:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2480:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2435:20:11"},"nodeType":"YulFunctionCall","src":"2435:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2425:6:11"}]}]},{"nodeType":"YulBlock","src":"2508:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2523:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2537:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2527:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2553:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2588:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2599:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:11"},"nodeType":"YulFunctionCall","src":"2584:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2608:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2563:20:11"},"nodeType":"YulFunctionCall","src":"2563:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2553:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2204:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2215:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2227:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2235:6:11","type":""}],"src":"2159:474:11"},{"body":{"nodeType":"YulBlock","src":"2739:519:11","statements":[{"body":{"nodeType":"YulBlock","src":"2785:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2787:77:11"},"nodeType":"YulFunctionCall","src":"2787:79:11"},"nodeType":"YulExpressionStatement","src":"2787:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2760:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2769:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2756:3:11"},"nodeType":"YulFunctionCall","src":"2756:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2781:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2752:3:11"},"nodeType":"YulFunctionCall","src":"2752:32:11"},"nodeType":"YulIf","src":"2749:119:11"},{"nodeType":"YulBlock","src":"2878:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2893:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2907:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2897:6:11","type":""}]},{"nodeType":"YulAssignment","src":"2922:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2957:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2968:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2953:3:11"},"nodeType":"YulFunctionCall","src":"2953:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2977:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2932:20:11"},"nodeType":"YulFunctionCall","src":"2932:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2922:6:11"}]}]},{"nodeType":"YulBlock","src":"3005:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3020:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3034:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3024:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3050:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3085:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3096:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3081:3:11"},"nodeType":"YulFunctionCall","src":"3081:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3105:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3060:20:11"},"nodeType":"YulFunctionCall","src":"3060:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3050:6:11"}]}]},{"nodeType":"YulBlock","src":"3133:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3148:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3162:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3152:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3178:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3213:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3224:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3209:3:11"},"nodeType":"YulFunctionCall","src":"3209:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3233:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3188:20:11"},"nodeType":"YulFunctionCall","src":"3188:53:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3178:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2693:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2704:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2716:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2724:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2732:6:11","type":""}],"src":"2639:619:11"},{"body":{"nodeType":"YulBlock","src":"3338:271:11","statements":[{"body":{"nodeType":"YulBlock","src":"3384:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3386:77:11"},"nodeType":"YulFunctionCall","src":"3386:79:11"},"nodeType":"YulExpressionStatement","src":"3386:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3359:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3368:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3355:3:11"},"nodeType":"YulFunctionCall","src":"3355:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3380:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3351:3:11"},"nodeType":"YulFunctionCall","src":"3351:32:11"},"nodeType":"YulIf","src":"3348:119:11"},{"nodeType":"YulBlock","src":"3477:125:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3492:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3506:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3496:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3521:71:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3564:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3575:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3560:3:11"},"nodeType":"YulFunctionCall","src":"3560:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3584:7:11"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"3531:28:11"},"nodeType":"YulFunctionCall","src":"3531:61:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3521:6:11"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3308:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3319:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3331:6:11","type":""}],"src":"3264:345:11"},{"body":{"nodeType":"YulBlock","src":"3681:263:11","statements":[{"body":{"nodeType":"YulBlock","src":"3727:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3729:77:11"},"nodeType":"YulFunctionCall","src":"3729:79:11"},"nodeType":"YulExpressionStatement","src":"3729:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3702:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3711:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3698:3:11"},"nodeType":"YulFunctionCall","src":"3698:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3723:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3694:3:11"},"nodeType":"YulFunctionCall","src":"3694:32:11"},"nodeType":"YulIf","src":"3691:119:11"},{"nodeType":"YulBlock","src":"3820:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3835:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3849:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3839:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3864:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3899:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3910:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3895:3:11"},"nodeType":"YulFunctionCall","src":"3895:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3874:20:11"},"nodeType":"YulFunctionCall","src":"3874:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3864:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3651:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3662:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3674:6:11","type":""}],"src":"3615:329:11"},{"body":{"nodeType":"YulBlock","src":"4015:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4032:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4055:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4037:17:11"},"nodeType":"YulFunctionCall","src":"4037:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4025:6:11"},"nodeType":"YulFunctionCall","src":"4025:37:11"},"nodeType":"YulExpressionStatement","src":"4025:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4003:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4010:3:11","type":""}],"src":"3950:118:11"},{"body":{"nodeType":"YulBlock","src":"4220:220:11","statements":[{"nodeType":"YulAssignment","src":"4230:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4296:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4301:2:11","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4237:58:11"},"nodeType":"YulFunctionCall","src":"4237:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4230:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4402:3:11"}],"functionName":{"name":"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","nodeType":"YulIdentifier","src":"4313:88:11"},"nodeType":"YulFunctionCall","src":"4313:93:11"},"nodeType":"YulExpressionStatement","src":"4313:93:11"},{"nodeType":"YulAssignment","src":"4415:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4426:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4431:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4422:3:11"},"nodeType":"YulFunctionCall","src":"4422:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4415:3:11"}]}]},"name":"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4208:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4216:3:11","type":""}],"src":"4074:366:11"},{"body":{"nodeType":"YulBlock","src":"4592:220:11","statements":[{"nodeType":"YulAssignment","src":"4602:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4668:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4673:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4609:58:11"},"nodeType":"YulFunctionCall","src":"4609:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4602:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4774:3:11"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"4685:88:11"},"nodeType":"YulFunctionCall","src":"4685:93:11"},"nodeType":"YulExpressionStatement","src":"4685:93:11"},{"nodeType":"YulAssignment","src":"4787:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4798:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4803:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4794:3:11"},"nodeType":"YulFunctionCall","src":"4794:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4787:3:11"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4580:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4588:3:11","type":""}],"src":"4446:366:11"},{"body":{"nodeType":"YulBlock","src":"4964:220:11","statements":[{"nodeType":"YulAssignment","src":"4974:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5040:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5045:2:11","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4981:58:11"},"nodeType":"YulFunctionCall","src":"4981:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4974:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5146:3:11"}],"functionName":{"name":"store_literal_in_memory_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca","nodeType":"YulIdentifier","src":"5057:88:11"},"nodeType":"YulFunctionCall","src":"5057:93:11"},"nodeType":"YulExpressionStatement","src":"5057:93:11"},{"nodeType":"YulAssignment","src":"5159:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5170:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5175:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5166:3:11"},"nodeType":"YulFunctionCall","src":"5166:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5159:3:11"}]}]},"name":"abi_encode_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4952:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4960:3:11","type":""}],"src":"4818:366:11"},{"body":{"nodeType":"YulBlock","src":"5336:220:11","statements":[{"nodeType":"YulAssignment","src":"5346:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5412:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5417:2:11","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5353:58:11"},"nodeType":"YulFunctionCall","src":"5353:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5346:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5518:3:11"}],"functionName":{"name":"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","nodeType":"YulIdentifier","src":"5429:88:11"},"nodeType":"YulFunctionCall","src":"5429:93:11"},"nodeType":"YulExpressionStatement","src":"5429:93:11"},{"nodeType":"YulAssignment","src":"5531:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5542:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5547:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5538:3:11"},"nodeType":"YulFunctionCall","src":"5538:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5531:3:11"}]}]},"name":"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5324:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5332:3:11","type":""}],"src":"5190:366:11"},{"body":{"nodeType":"YulBlock","src":"5708:220:11","statements":[{"nodeType":"YulAssignment","src":"5718:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5784:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5789:2:11","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5725:58:11"},"nodeType":"YulFunctionCall","src":"5725:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5718:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5890:3:11"}],"functionName":{"name":"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","nodeType":"YulIdentifier","src":"5801:88:11"},"nodeType":"YulFunctionCall","src":"5801:93:11"},"nodeType":"YulExpressionStatement","src":"5801:93:11"},{"nodeType":"YulAssignment","src":"5903:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5914:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"5919:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5910:3:11"},"nodeType":"YulFunctionCall","src":"5910:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5903:3:11"}]}]},"name":"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5696:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5704:3:11","type":""}],"src":"5562:366:11"},{"body":{"nodeType":"YulBlock","src":"6080:220:11","statements":[{"nodeType":"YulAssignment","src":"6090:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6156:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6161:2:11","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6097:58:11"},"nodeType":"YulFunctionCall","src":"6097:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6090:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6262:3:11"}],"functionName":{"name":"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","nodeType":"YulIdentifier","src":"6173:88:11"},"nodeType":"YulFunctionCall","src":"6173:93:11"},"nodeType":"YulExpressionStatement","src":"6173:93:11"},{"nodeType":"YulAssignment","src":"6275:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6286:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6291:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6282:3:11"},"nodeType":"YulFunctionCall","src":"6282:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6275:3:11"}]}]},"name":"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6068:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6076:3:11","type":""}],"src":"5934:366:11"},{"body":{"nodeType":"YulBlock","src":"6452:220:11","statements":[{"nodeType":"YulAssignment","src":"6462:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6528:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6533:2:11","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6469:58:11"},"nodeType":"YulFunctionCall","src":"6469:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6462:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:11"}],"functionName":{"name":"store_literal_in_memory_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa","nodeType":"YulIdentifier","src":"6545:88:11"},"nodeType":"YulFunctionCall","src":"6545:93:11"},"nodeType":"YulExpressionStatement","src":"6545:93:11"},{"nodeType":"YulAssignment","src":"6647:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6658:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6663:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6654:3:11"},"nodeType":"YulFunctionCall","src":"6654:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6647:3:11"}]}]},"name":"abi_encode_t_stringliteral_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6440:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6448:3:11","type":""}],"src":"6306:366:11"},{"body":{"nodeType":"YulBlock","src":"6824:220:11","statements":[{"nodeType":"YulAssignment","src":"6834:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6900:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"6905:2:11","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6841:58:11"},"nodeType":"YulFunctionCall","src":"6841:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6834:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7006:3:11"}],"functionName":{"name":"store_literal_in_memory_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57","nodeType":"YulIdentifier","src":"6917:88:11"},"nodeType":"YulFunctionCall","src":"6917:93:11"},"nodeType":"YulExpressionStatement","src":"6917:93:11"},{"nodeType":"YulAssignment","src":"7019:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7030:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7035:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7026:3:11"},"nodeType":"YulFunctionCall","src":"7026:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7019:3:11"}]}]},"name":"abi_encode_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6812:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6820:3:11","type":""}],"src":"6678:366:11"},{"body":{"nodeType":"YulBlock","src":"7196:220:11","statements":[{"nodeType":"YulAssignment","src":"7206:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7272:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7277:2:11","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7213:58:11"},"nodeType":"YulFunctionCall","src":"7213:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7206:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7378:3:11"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"7289:88:11"},"nodeType":"YulFunctionCall","src":"7289:93:11"},"nodeType":"YulExpressionStatement","src":"7289:93:11"},{"nodeType":"YulAssignment","src":"7391:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7402:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7407:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7398:3:11"},"nodeType":"YulFunctionCall","src":"7398:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7391:3:11"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7184:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7192:3:11","type":""}],"src":"7050:366:11"},{"body":{"nodeType":"YulBlock","src":"7568:220:11","statements":[{"nodeType":"YulAssignment","src":"7578:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7644:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7649:2:11","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7585:58:11"},"nodeType":"YulFunctionCall","src":"7585:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7578:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7750:3:11"}],"functionName":{"name":"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","nodeType":"YulIdentifier","src":"7661:88:11"},"nodeType":"YulFunctionCall","src":"7661:93:11"},"nodeType":"YulExpressionStatement","src":"7661:93:11"},{"nodeType":"YulAssignment","src":"7763:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7774:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"7779:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7770:3:11"},"nodeType":"YulFunctionCall","src":"7770:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7763:3:11"}]}]},"name":"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7556:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7564:3:11","type":""}],"src":"7422:366:11"},{"body":{"nodeType":"YulBlock","src":"7957:235:11","statements":[{"nodeType":"YulAssignment","src":"7967:90:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8050:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8055:1:11","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7974:75:11"},"nodeType":"YulFunctionCall","src":"7974:83:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7967:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8155:3:11"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"8066:88:11"},"nodeType":"YulFunctionCall","src":"8066:93:11"},"nodeType":"YulExpressionStatement","src":"8066:93:11"},{"nodeType":"YulAssignment","src":"8168:18:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8179:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8184:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8175:3:11"},"nodeType":"YulFunctionCall","src":"8175:11:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8168:3:11"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7945:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7953:3:11","type":""}],"src":"7794:398:11"},{"body":{"nodeType":"YulBlock","src":"8344:220:11","statements":[{"nodeType":"YulAssignment","src":"8354:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8420:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8425:2:11","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8361:58:11"},"nodeType":"YulFunctionCall","src":"8361:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8354:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8526:3:11"}],"functionName":{"name":"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","nodeType":"YulIdentifier","src":"8437:88:11"},"nodeType":"YulFunctionCall","src":"8437:93:11"},"nodeType":"YulExpressionStatement","src":"8437:93:11"},{"nodeType":"YulAssignment","src":"8539:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8550:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8555:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8546:3:11"},"nodeType":"YulFunctionCall","src":"8546:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8539:3:11"}]}]},"name":"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8332:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8340:3:11","type":""}],"src":"8198:366:11"},{"body":{"nodeType":"YulBlock","src":"8635:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8652:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8675:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8657:17:11"},"nodeType":"YulFunctionCall","src":"8657:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8645:6:11"},"nodeType":"YulFunctionCall","src":"8645:37:11"},"nodeType":"YulExpressionStatement","src":"8645:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8623:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8630:3:11","type":""}],"src":"8570:118:11"},{"body":{"nodeType":"YulBlock","src":"8882:191:11","statements":[{"nodeType":"YulAssignment","src":"8893:154:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9043:3:11"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8900:141:11"},"nodeType":"YulFunctionCall","src":"8900:147:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8893:3:11"}]},{"nodeType":"YulAssignment","src":"9057:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"9064:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9057:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8869:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8878:3:11","type":""}],"src":"8694:379:11"},{"body":{"nodeType":"YulBlock","src":"9177:124:11","statements":[{"nodeType":"YulAssignment","src":"9187:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9199:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9210:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9195:3:11"},"nodeType":"YulFunctionCall","src":"9195:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9187:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9267:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9280:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9291:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9276:3:11"},"nodeType":"YulFunctionCall","src":"9276:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9223:43:11"},"nodeType":"YulFunctionCall","src":"9223:71:11"},"nodeType":"YulExpressionStatement","src":"9223:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9149:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9161:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9172:4:11","type":""}],"src":"9079:222:11"},{"body":{"nodeType":"YulBlock","src":"9461:288:11","statements":[{"nodeType":"YulAssignment","src":"9471:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9483:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9494:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9479:3:11"},"nodeType":"YulFunctionCall","src":"9479:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9471:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9551:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9564:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9575:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9560:3:11"},"nodeType":"YulFunctionCall","src":"9560:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9507:43:11"},"nodeType":"YulFunctionCall","src":"9507:71:11"},"nodeType":"YulExpressionStatement","src":"9507:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9632:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9645:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9656:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9641:3:11"},"nodeType":"YulFunctionCall","src":"9641:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9588:43:11"},"nodeType":"YulFunctionCall","src":"9588:72:11"},"nodeType":"YulExpressionStatement","src":"9588:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9714:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9727:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9738:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9723:3:11"},"nodeType":"YulFunctionCall","src":"9723:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9670:43:11"},"nodeType":"YulFunctionCall","src":"9670:72:11"},"nodeType":"YulExpressionStatement","src":"9670:72:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9417:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9429:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9437:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9445:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9456:4:11","type":""}],"src":"9307:442:11"},{"body":{"nodeType":"YulBlock","src":"9937:371:11","statements":[{"nodeType":"YulAssignment","src":"9947:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9959:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9970:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9955:3:11"},"nodeType":"YulFunctionCall","src":"9955:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9947:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10028:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10041:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10052:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10037:3:11"},"nodeType":"YulFunctionCall","src":"10037:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9984:43:11"},"nodeType":"YulFunctionCall","src":"9984:71:11"},"nodeType":"YulExpressionStatement","src":"9984:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10109:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10122:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10133:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10118:3:11"},"nodeType":"YulFunctionCall","src":"10118:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10065:43:11"},"nodeType":"YulFunctionCall","src":"10065:72:11"},"nodeType":"YulExpressionStatement","src":"10065:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10191:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10204:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10215:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10200:3:11"},"nodeType":"YulFunctionCall","src":"10200:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10147:43:11"},"nodeType":"YulFunctionCall","src":"10147:72:11"},"nodeType":"YulExpressionStatement","src":"10147:72:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10273:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10286:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10297:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10282:3:11"},"nodeType":"YulFunctionCall","src":"10282:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10229:43:11"},"nodeType":"YulFunctionCall","src":"10229:72:11"},"nodeType":"YulExpressionStatement","src":"10229:72:11"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9885:9:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9897:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9905:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9913:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9921:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9932:4:11","type":""}],"src":"9755:553:11"},{"body":{"nodeType":"YulBlock","src":"10440:206:11","statements":[{"nodeType":"YulAssignment","src":"10450:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10462:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10473:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10458:3:11"},"nodeType":"YulFunctionCall","src":"10458:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10450:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10530:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10543:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10554:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10539:3:11"},"nodeType":"YulFunctionCall","src":"10539:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10486:43:11"},"nodeType":"YulFunctionCall","src":"10486:71:11"},"nodeType":"YulExpressionStatement","src":"10486:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10611:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10624:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10635:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10620:3:11"},"nodeType":"YulFunctionCall","src":"10620:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10567:43:11"},"nodeType":"YulFunctionCall","src":"10567:72:11"},"nodeType":"YulExpressionStatement","src":"10567:72:11"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10404:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10416:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10424:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10435:4:11","type":""}],"src":"10314:332:11"},{"body":{"nodeType":"YulBlock","src":"10823:248:11","statements":[{"nodeType":"YulAssignment","src":"10833:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10845:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10856:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10841:3:11"},"nodeType":"YulFunctionCall","src":"10841:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10833:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10880:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10891:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10876:3:11"},"nodeType":"YulFunctionCall","src":"10876:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10899:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10905:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10895:3:11"},"nodeType":"YulFunctionCall","src":"10895:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10869:6:11"},"nodeType":"YulFunctionCall","src":"10869:47:11"},"nodeType":"YulExpressionStatement","src":"10869:47:11"},{"nodeType":"YulAssignment","src":"10925:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11059:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10933:124:11"},"nodeType":"YulFunctionCall","src":"10933:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10925:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10803:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10818:4:11","type":""}],"src":"10652:419:11"},{"body":{"nodeType":"YulBlock","src":"11248:248:11","statements":[{"nodeType":"YulAssignment","src":"11258:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11270:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11281:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11266:3:11"},"nodeType":"YulFunctionCall","src":"11266:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11258:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11305:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11316:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11301:3:11"},"nodeType":"YulFunctionCall","src":"11301:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11324:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11330:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11320:3:11"},"nodeType":"YulFunctionCall","src":"11320:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11294:6:11"},"nodeType":"YulFunctionCall","src":"11294:47:11"},"nodeType":"YulExpressionStatement","src":"11294:47:11"},{"nodeType":"YulAssignment","src":"11350:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11484:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11358:124:11"},"nodeType":"YulFunctionCall","src":"11358:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11350:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11228:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11243:4:11","type":""}],"src":"11077:419:11"},{"body":{"nodeType":"YulBlock","src":"11673:248:11","statements":[{"nodeType":"YulAssignment","src":"11683:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11695:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11706:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11691:3:11"},"nodeType":"YulFunctionCall","src":"11691:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11683:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11730:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11741:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11726:3:11"},"nodeType":"YulFunctionCall","src":"11726:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11749:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11755:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11745:3:11"},"nodeType":"YulFunctionCall","src":"11745:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11719:6:11"},"nodeType":"YulFunctionCall","src":"11719:47:11"},"nodeType":"YulExpressionStatement","src":"11719:47:11"},{"nodeType":"YulAssignment","src":"11775:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11909:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11783:124:11"},"nodeType":"YulFunctionCall","src":"11783:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11775:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11653:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11668:4:11","type":""}],"src":"11502:419:11"},{"body":{"nodeType":"YulBlock","src":"12098:248:11","statements":[{"nodeType":"YulAssignment","src":"12108:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12120:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12131:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12116:3:11"},"nodeType":"YulFunctionCall","src":"12116:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12108:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12155:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12166:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12151:3:11"},"nodeType":"YulFunctionCall","src":"12151:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12174:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12180:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12170:3:11"},"nodeType":"YulFunctionCall","src":"12170:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12144:6:11"},"nodeType":"YulFunctionCall","src":"12144:47:11"},"nodeType":"YulExpressionStatement","src":"12144:47:11"},{"nodeType":"YulAssignment","src":"12200:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12334:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12208:124:11"},"nodeType":"YulFunctionCall","src":"12208:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12200:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12078:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12093:4:11","type":""}],"src":"11927:419:11"},{"body":{"nodeType":"YulBlock","src":"12523:248:11","statements":[{"nodeType":"YulAssignment","src":"12533:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12545:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12556:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12541:3:11"},"nodeType":"YulFunctionCall","src":"12541:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12533:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12580:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12591:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12576:3:11"},"nodeType":"YulFunctionCall","src":"12576:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12599:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12605:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12595:3:11"},"nodeType":"YulFunctionCall","src":"12595:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12569:6:11"},"nodeType":"YulFunctionCall","src":"12569:47:11"},"nodeType":"YulExpressionStatement","src":"12569:47:11"},{"nodeType":"YulAssignment","src":"12625:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12759:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12633:124:11"},"nodeType":"YulFunctionCall","src":"12633:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12625:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12503:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12518:4:11","type":""}],"src":"12352:419:11"},{"body":{"nodeType":"YulBlock","src":"12948:248:11","statements":[{"nodeType":"YulAssignment","src":"12958:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12970:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12981:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12966:3:11"},"nodeType":"YulFunctionCall","src":"12966:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12958:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13005:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13016:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13001:3:11"},"nodeType":"YulFunctionCall","src":"13001:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13024:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13030:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13020:3:11"},"nodeType":"YulFunctionCall","src":"13020:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12994:6:11"},"nodeType":"YulFunctionCall","src":"12994:47:11"},"nodeType":"YulExpressionStatement","src":"12994:47:11"},{"nodeType":"YulAssignment","src":"13050:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13184:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13058:124:11"},"nodeType":"YulFunctionCall","src":"13058:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13050:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12928:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12943:4:11","type":""}],"src":"12777:419:11"},{"body":{"nodeType":"YulBlock","src":"13373:248:11","statements":[{"nodeType":"YulAssignment","src":"13383:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13395:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13406:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13391:3:11"},"nodeType":"YulFunctionCall","src":"13391:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13383:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13430:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13441:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13426:3:11"},"nodeType":"YulFunctionCall","src":"13426:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13449:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13455:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13445:3:11"},"nodeType":"YulFunctionCall","src":"13445:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13419:6:11"},"nodeType":"YulFunctionCall","src":"13419:47:11"},"nodeType":"YulExpressionStatement","src":"13419:47:11"},{"nodeType":"YulAssignment","src":"13475:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13609:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13483:124:11"},"nodeType":"YulFunctionCall","src":"13483:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13475:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13353:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13368:4:11","type":""}],"src":"13202:419:11"},{"body":{"nodeType":"YulBlock","src":"13798:248:11","statements":[{"nodeType":"YulAssignment","src":"13808:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13820:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13831:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13816:3:11"},"nodeType":"YulFunctionCall","src":"13816:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13808:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13855:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13866:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13851:3:11"},"nodeType":"YulFunctionCall","src":"13851:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13874:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13880:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13870:3:11"},"nodeType":"YulFunctionCall","src":"13870:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13844:6:11"},"nodeType":"YulFunctionCall","src":"13844:47:11"},"nodeType":"YulExpressionStatement","src":"13844:47:11"},{"nodeType":"YulAssignment","src":"13900:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14034:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13908:124:11"},"nodeType":"YulFunctionCall","src":"13908:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13900:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13778:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13793:4:11","type":""}],"src":"13627:419:11"},{"body":{"nodeType":"YulBlock","src":"14223:248:11","statements":[{"nodeType":"YulAssignment","src":"14233:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14245:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14256:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14241:3:11"},"nodeType":"YulFunctionCall","src":"14241:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14233:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14280:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14291:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14276:3:11"},"nodeType":"YulFunctionCall","src":"14276:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14299:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14305:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14295:3:11"},"nodeType":"YulFunctionCall","src":"14295:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14269:6:11"},"nodeType":"YulFunctionCall","src":"14269:47:11"},"nodeType":"YulExpressionStatement","src":"14269:47:11"},{"nodeType":"YulAssignment","src":"14325:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14459:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14333:124:11"},"nodeType":"YulFunctionCall","src":"14333:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14325:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14203:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14218:4:11","type":""}],"src":"14052:419:11"},{"body":{"nodeType":"YulBlock","src":"14648:248:11","statements":[{"nodeType":"YulAssignment","src":"14658:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14670:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14681:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14666:3:11"},"nodeType":"YulFunctionCall","src":"14666:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14658:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14705:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14716:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14701:3:11"},"nodeType":"YulFunctionCall","src":"14701:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14724:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"14730:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14720:3:11"},"nodeType":"YulFunctionCall","src":"14720:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14694:6:11"},"nodeType":"YulFunctionCall","src":"14694:47:11"},"nodeType":"YulExpressionStatement","src":"14694:47:11"},{"nodeType":"YulAssignment","src":"14750:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14884:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14758:124:11"},"nodeType":"YulFunctionCall","src":"14758:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14750:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14628:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14643:4:11","type":""}],"src":"14477:419:11"},{"body":{"nodeType":"YulBlock","src":"15073:248:11","statements":[{"nodeType":"YulAssignment","src":"15083:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15095:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15106:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15091:3:11"},"nodeType":"YulFunctionCall","src":"15091:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15083:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15130:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15141:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15126:3:11"},"nodeType":"YulFunctionCall","src":"15126:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15149:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15155:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15145:3:11"},"nodeType":"YulFunctionCall","src":"15145:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15119:6:11"},"nodeType":"YulFunctionCall","src":"15119:47:11"},"nodeType":"YulExpressionStatement","src":"15119:47:11"},{"nodeType":"YulAssignment","src":"15175:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15309:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15183:124:11"},"nodeType":"YulFunctionCall","src":"15183:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15175:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15053:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15068:4:11","type":""}],"src":"14902:419:11"},{"body":{"nodeType":"YulBlock","src":"15425:124:11","statements":[{"nodeType":"YulAssignment","src":"15435:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15447:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15458:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15443:3:11"},"nodeType":"YulFunctionCall","src":"15443:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15435:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15515:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15528:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15539:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15524:3:11"},"nodeType":"YulFunctionCall","src":"15524:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15471:43:11"},"nodeType":"YulFunctionCall","src":"15471:71:11"},"nodeType":"YulExpressionStatement","src":"15471:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15397:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15409:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15420:4:11","type":""}],"src":"15327:222:11"},{"body":{"nodeType":"YulBlock","src":"15595:35:11","statements":[{"nodeType":"YulAssignment","src":"15605:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15621:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15615:5:11"},"nodeType":"YulFunctionCall","src":"15615:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15605:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15588:6:11","type":""}],"src":"15555:75:11"},{"body":{"nodeType":"YulBlock","src":"15749:34:11","statements":[{"nodeType":"YulAssignment","src":"15759:18:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"15774:3:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15759:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15721:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"15726:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15737:11:11","type":""}],"src":"15636:147:11"},{"body":{"nodeType":"YulBlock","src":"15885:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15902:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"15907:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15895:6:11"},"nodeType":"YulFunctionCall","src":"15895:19:11"},"nodeType":"YulExpressionStatement","src":"15895:19:11"},{"nodeType":"YulAssignment","src":"15923:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15942:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15947:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15938:3:11"},"nodeType":"YulFunctionCall","src":"15938:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15923:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15857:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"15862:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15873:11:11","type":""}],"src":"15789:169:11"},{"body":{"nodeType":"YulBlock","src":"16008:261:11","statements":[{"nodeType":"YulAssignment","src":"16018:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16041:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16023:17:11"},"nodeType":"YulFunctionCall","src":"16023:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16018:1:11"}]},{"nodeType":"YulAssignment","src":"16052:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16075:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16057:17:11"},"nodeType":"YulFunctionCall","src":"16057:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16052:1:11"}]},{"body":{"nodeType":"YulBlock","src":"16215:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16217:16:11"},"nodeType":"YulFunctionCall","src":"16217:18:11"},"nodeType":"YulExpressionStatement","src":"16217:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16136:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16143:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"16211:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16139:3:11"},"nodeType":"YulFunctionCall","src":"16139:74:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16133:2:11"},"nodeType":"YulFunctionCall","src":"16133:81:11"},"nodeType":"YulIf","src":"16130:107:11"},{"nodeType":"YulAssignment","src":"16247:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16258:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"16261:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16254:3:11"},"nodeType":"YulFunctionCall","src":"16254:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16247:3:11"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15995:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"15998:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16004:3:11","type":""}],"src":"15964:305:11"},{"body":{"nodeType":"YulBlock","src":"16317:143:11","statements":[{"nodeType":"YulAssignment","src":"16327:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16350:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16332:17:11"},"nodeType":"YulFunctionCall","src":"16332:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16327:1:11"}]},{"nodeType":"YulAssignment","src":"16361:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16384:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16366:17:11"},"nodeType":"YulFunctionCall","src":"16366:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16361:1:11"}]},{"body":{"nodeType":"YulBlock","src":"16408:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"16410:16:11"},"nodeType":"YulFunctionCall","src":"16410:18:11"},"nodeType":"YulExpressionStatement","src":"16410:18:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16405:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16398:6:11"},"nodeType":"YulFunctionCall","src":"16398:9:11"},"nodeType":"YulIf","src":"16395:35:11"},{"nodeType":"YulAssignment","src":"16440:14:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16449:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"16452:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16445:3:11"},"nodeType":"YulFunctionCall","src":"16445:9:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"16440:1:11"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16306:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"16309:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"16315:1:11","type":""}],"src":"16275:185:11"},{"body":{"nodeType":"YulBlock","src":"16539:775:11","statements":[{"nodeType":"YulAssignment","src":"16549:15:11","value":{"name":"_power","nodeType":"YulIdentifier","src":"16558:6:11"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16549:5:11"}]},{"nodeType":"YulAssignment","src":"16573:14:11","value":{"name":"_base","nodeType":"YulIdentifier","src":"16582:5:11"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"16573:4:11"}]},{"body":{"nodeType":"YulBlock","src":"16631:677:11","statements":[{"body":{"nodeType":"YulBlock","src":"16719:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16721:16:11"},"nodeType":"YulFunctionCall","src":"16721:18:11"},"nodeType":"YulExpressionStatement","src":"16721:18:11"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16697:4:11"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"16707:3:11"},{"name":"base","nodeType":"YulIdentifier","src":"16712:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16703:3:11"},"nodeType":"YulFunctionCall","src":"16703:14:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16694:2:11"},"nodeType":"YulFunctionCall","src":"16694:24:11"},"nodeType":"YulIf","src":"16691:50:11"},{"body":{"nodeType":"YulBlock","src":"16786:419:11","statements":[{"nodeType":"YulAssignment","src":"17166:25:11","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"17179:5:11"},{"name":"base","nodeType":"YulIdentifier","src":"17186:4:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17175:3:11"},"nodeType":"YulFunctionCall","src":"17175:16:11"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17166:5:11"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16761:8:11"},{"kind":"number","nodeType":"YulLiteral","src":"16771:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16757:3:11"},"nodeType":"YulFunctionCall","src":"16757:16:11"},"nodeType":"YulIf","src":"16754:451:11"},{"nodeType":"YulAssignment","src":"17218:23:11","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17230:4:11"},{"name":"base","nodeType":"YulIdentifier","src":"17236:4:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17226:3:11"},"nodeType":"YulFunctionCall","src":"17226:15:11"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"17218:4:11"}]},{"nodeType":"YulAssignment","src":"17254:44:11","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17289:8:11"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"17266:22:11"},"nodeType":"YulFunctionCall","src":"17266:32:11"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"17254:8:11"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16607:8:11"},{"kind":"number","nodeType":"YulLiteral","src":"16617:1:11","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16604:2:11"},"nodeType":"YulFunctionCall","src":"16604:15:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16620:2:11","statements":[]},"pre":{"nodeType":"YulBlock","src":"16600:3:11","statements":[]},"src":"16596:712:11"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"16494:6:11","type":""},{"name":"_base","nodeType":"YulTypedName","src":"16502:5:11","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"16509:8:11","type":""},{"name":"max","nodeType":"YulTypedName","src":"16519:3:11","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"16527:5:11","type":""},{"name":"base","nodeType":"YulTypedName","src":"16534:4:11","type":""}],"src":"16466:848:11"},{"body":{"nodeType":"YulBlock","src":"17386:219:11","statements":[{"nodeType":"YulAssignment","src":"17396:31:11","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17422:4:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17404:17:11"},"nodeType":"YulFunctionCall","src":"17404:23:11"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"17396:4:11"}]},{"nodeType":"YulAssignment","src":"17436:39:11","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17466:8:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17448:17:11"},"nodeType":"YulFunctionCall","src":"17448:27:11"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"17436:8:11"}]},{"nodeType":"YulAssignment","src":"17485:113:11","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17515:4:11"},{"name":"exponent","nodeType":"YulIdentifier","src":"17521:8:11"},{"kind":"number","nodeType":"YulLiteral","src":"17531:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"17494:20:11"},"nodeType":"YulFunctionCall","src":"17494:104:11"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17485:5:11"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"17361:4:11","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17367:8:11","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17380:5:11","type":""}],"src":"17320:285:11"},{"body":{"nodeType":"YulBlock","src":"17671:1013:11","statements":[{"body":{"nodeType":"YulBlock","src":"17866:20:11","statements":[{"nodeType":"YulAssignment","src":"17868:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17877:1:11","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17868:5:11"}]},{"nodeType":"YulLeave","src":"17879:5:11"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17856:8:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17849:6:11"},"nodeType":"YulFunctionCall","src":"17849:16:11"},"nodeType":"YulIf","src":"17846:40:11"},{"body":{"nodeType":"YulBlock","src":"17911:20:11","statements":[{"nodeType":"YulAssignment","src":"17913:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17922:1:11","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17913:5:11"}]},{"nodeType":"YulLeave","src":"17924:5:11"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17905:4:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17898:6:11"},"nodeType":"YulFunctionCall","src":"17898:12:11"},"nodeType":"YulIf","src":"17895:36:11"},{"cases":[{"body":{"nodeType":"YulBlock","src":"18041:20:11","statements":[{"nodeType":"YulAssignment","src":"18043:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18052:1:11","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18043:5:11"}]},{"nodeType":"YulLeave","src":"18054:5:11"}]},"nodeType":"YulCase","src":"18034:27:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18039:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18085:176:11","statements":[{"body":{"nodeType":"YulBlock","src":"18120:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18122:16:11"},"nodeType":"YulFunctionCall","src":"18122:18:11"},"nodeType":"YulExpressionStatement","src":"18122:18:11"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18105:8:11"},{"kind":"number","nodeType":"YulLiteral","src":"18115:3:11","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18102:2:11"},"nodeType":"YulFunctionCall","src":"18102:17:11"},"nodeType":"YulIf","src":"18099:43:11"},{"nodeType":"YulAssignment","src":"18155:25:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18168:1:11","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"18171:8:11"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"18164:3:11"},"nodeType":"YulFunctionCall","src":"18164:16:11"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18155:5:11"}]},{"body":{"nodeType":"YulBlock","src":"18211:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18213:16:11"},"nodeType":"YulFunctionCall","src":"18213:18:11"},"nodeType":"YulExpressionStatement","src":"18213:18:11"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"18199:5:11"},{"name":"max","nodeType":"YulIdentifier","src":"18206:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18196:2:11"},"nodeType":"YulFunctionCall","src":"18196:14:11"},"nodeType":"YulIf","src":"18193:40:11"},{"nodeType":"YulLeave","src":"18246:5:11"}]},"nodeType":"YulCase","src":"18070:191:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18075:1:11","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"17991:4:11"},"nodeType":"YulSwitch","src":"17984:277:11"},{"body":{"nodeType":"YulBlock","src":"18393:123:11","statements":[{"nodeType":"YulAssignment","src":"18407:28:11","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18420:4:11"},{"name":"exponent","nodeType":"YulIdentifier","src":"18426:8:11"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"18416:3:11"},"nodeType":"YulFunctionCall","src":"18416:19:11"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18407:5:11"}]},{"body":{"nodeType":"YulBlock","src":"18466:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18468:16:11"},"nodeType":"YulFunctionCall","src":"18468:18:11"},"nodeType":"YulExpressionStatement","src":"18468:18:11"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"18454:5:11"},{"name":"max","nodeType":"YulIdentifier","src":"18461:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18451:2:11"},"nodeType":"YulFunctionCall","src":"18451:14:11"},"nodeType":"YulIf","src":"18448:40:11"},{"nodeType":"YulLeave","src":"18501:5:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18296:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"18302:2:11","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18293:2:11"},"nodeType":"YulFunctionCall","src":"18293:12:11"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18310:8:11"},{"kind":"number","nodeType":"YulLiteral","src":"18320:2:11","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18307:2:11"},"nodeType":"YulFunctionCall","src":"18307:16:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18289:3:11"},"nodeType":"YulFunctionCall","src":"18289:35:11"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18345:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"18351:3:11","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18342:2:11"},"nodeType":"YulFunctionCall","src":"18342:13:11"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18360:8:11"},{"kind":"number","nodeType":"YulLiteral","src":"18370:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18357:2:11"},"nodeType":"YulFunctionCall","src":"18357:16:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18338:3:11"},"nodeType":"YulFunctionCall","src":"18338:36:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18273:2:11"},"nodeType":"YulFunctionCall","src":"18273:111:11"},"nodeType":"YulIf","src":"18270:246:11"},{"nodeType":"YulAssignment","src":"18526:57:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:1:11","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"18563:4:11"},{"name":"exponent","nodeType":"YulIdentifier","src":"18569:8:11"},{"name":"max","nodeType":"YulIdentifier","src":"18579:3:11"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"18541:18:11"},"nodeType":"YulFunctionCall","src":"18541:42:11"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18526:5:11"},{"name":"base","nodeType":"YulIdentifier","src":"18533:4:11"}]},{"body":{"nodeType":"YulBlock","src":"18622:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18624:16:11"},"nodeType":"YulFunctionCall","src":"18624:18:11"},"nodeType":"YulExpressionStatement","src":"18624:18:11"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"18599:5:11"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"18610:3:11"},{"name":"base","nodeType":"YulIdentifier","src":"18615:4:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18606:3:11"},"nodeType":"YulFunctionCall","src":"18606:14:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18596:2:11"},"nodeType":"YulFunctionCall","src":"18596:25:11"},"nodeType":"YulIf","src":"18593:51:11"},{"nodeType":"YulAssignment","src":"18653:25:11","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"18666:5:11"},{"name":"base","nodeType":"YulIdentifier","src":"18673:4:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18662:3:11"},"nodeType":"YulFunctionCall","src":"18662:16:11"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18653:5:11"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"17641:4:11","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17647:8:11","type":""},{"name":"max","nodeType":"YulTypedName","src":"17657:3:11","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17665:5:11","type":""}],"src":"17611:1073:11"},{"body":{"nodeType":"YulBlock","src":"18738:300:11","statements":[{"nodeType":"YulAssignment","src":"18748:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18771:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18753:17:11"},"nodeType":"YulFunctionCall","src":"18753:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18748:1:11"}]},{"nodeType":"YulAssignment","src":"18782:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18805:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18787:17:11"},"nodeType":"YulFunctionCall","src":"18787:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18782:1:11"}]},{"body":{"nodeType":"YulBlock","src":"18980:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18982:16:11"},"nodeType":"YulFunctionCall","src":"18982:18:11"},"nodeType":"YulExpressionStatement","src":"18982:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18892:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18885:6:11"},"nodeType":"YulFunctionCall","src":"18885:9:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18878:6:11"},"nodeType":"YulFunctionCall","src":"18878:17:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18900:1:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18907:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"18975:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18903:3:11"},"nodeType":"YulFunctionCall","src":"18903:74:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18897:2:11"},"nodeType":"YulFunctionCall","src":"18897:81:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18874:3:11"},"nodeType":"YulFunctionCall","src":"18874:105:11"},"nodeType":"YulIf","src":"18871:131:11"},{"nodeType":"YulAssignment","src":"19012:20:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19027:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"19030:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19023:3:11"},"nodeType":"YulFunctionCall","src":"19023:9:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"19012:7:11"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18721:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"18724:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"18730:7:11","type":""}],"src":"18690:348:11"},{"body":{"nodeType":"YulBlock","src":"19089:146:11","statements":[{"nodeType":"YulAssignment","src":"19099:25:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19122:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19104:17:11"},"nodeType":"YulFunctionCall","src":"19104:20:11"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19099:1:11"}]},{"nodeType":"YulAssignment","src":"19133:25:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19156:1:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19138:17:11"},"nodeType":"YulFunctionCall","src":"19138:20:11"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19133:1:11"}]},{"body":{"nodeType":"YulBlock","src":"19180:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19182:16:11"},"nodeType":"YulFunctionCall","src":"19182:18:11"},"nodeType":"YulExpressionStatement","src":"19182:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19174:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"19177:1:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19171:2:11"},"nodeType":"YulFunctionCall","src":"19171:8:11"},"nodeType":"YulIf","src":"19168:34:11"},{"nodeType":"YulAssignment","src":"19212:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19224:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"19227:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19220:3:11"},"nodeType":"YulFunctionCall","src":"19220:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19212:4:11"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19075:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"19078:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19084:4:11","type":""}],"src":"19044:191:11"},{"body":{"nodeType":"YulBlock","src":"19286:51:11","statements":[{"nodeType":"YulAssignment","src":"19296:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19325:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"19307:17:11"},"nodeType":"YulFunctionCall","src":"19307:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19296:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19268:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19278:7:11","type":""}],"src":"19241:96:11"},{"body":{"nodeType":"YulBlock","src":"19385:48:11","statements":[{"nodeType":"YulAssignment","src":"19395:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19420:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19413:6:11"},"nodeType":"YulFunctionCall","src":"19413:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19406:6:11"},"nodeType":"YulFunctionCall","src":"19406:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19395:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19367:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19377:7:11","type":""}],"src":"19343:90:11"},{"body":{"nodeType":"YulBlock","src":"19484:81:11","statements":[{"nodeType":"YulAssignment","src":"19494:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19509:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"19516:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19505:3:11"},"nodeType":"YulFunctionCall","src":"19505:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19494:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19466:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19476:7:11","type":""}],"src":"19439:126:11"},{"body":{"nodeType":"YulBlock","src":"19616:32:11","statements":[{"nodeType":"YulAssignment","src":"19626:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"19637:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19626:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19598:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19608:7:11","type":""}],"src":"19571:77:11"},{"body":{"nodeType":"YulBlock","src":"19682:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19699:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19702:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19692:6:11"},"nodeType":"YulFunctionCall","src":"19692:88:11"},"nodeType":"YulExpressionStatement","src":"19692:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19796:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19799:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:11"},"nodeType":"YulFunctionCall","src":"19789:15:11"},"nodeType":"YulExpressionStatement","src":"19789:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19820:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19823:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19813:6:11"},"nodeType":"YulFunctionCall","src":"19813:15:11"},"nodeType":"YulExpressionStatement","src":"19813:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19654:180:11"},{"body":{"nodeType":"YulBlock","src":"19868:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19885:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19888:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19878:6:11"},"nodeType":"YulFunctionCall","src":"19878:88:11"},"nodeType":"YulExpressionStatement","src":"19878:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19982:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19985:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19975:6:11"},"nodeType":"YulFunctionCall","src":"19975:15:11"},"nodeType":"YulExpressionStatement","src":"19975:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20006:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20009:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19999:6:11"},"nodeType":"YulFunctionCall","src":"19999:15:11"},"nodeType":"YulExpressionStatement","src":"19999:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"19840:180:11"},{"body":{"nodeType":"YulBlock","src":"20115:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20132:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20135:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20125:6:11"},"nodeType":"YulFunctionCall","src":"20125:12:11"},"nodeType":"YulExpressionStatement","src":"20125:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20026:117:11"},{"body":{"nodeType":"YulBlock","src":"20238:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20255:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20258:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20248:6:11"},"nodeType":"YulFunctionCall","src":"20248:12:11"},"nodeType":"YulExpressionStatement","src":"20248:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"20149:117:11"},{"body":{"nodeType":"YulBlock","src":"20323:51:11","statements":[{"nodeType":"YulAssignment","src":"20333:34:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20358:1:11","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"20361:5:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20354:3:11"},"nodeType":"YulFunctionCall","src":"20354:13:11"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"20333:8:11"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20304:5:11","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"20314:8:11","type":""}],"src":"20272:102:11"},{"body":{"nodeType":"YulBlock","src":"20486:68:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20508:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20516:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20504:3:11"},"nodeType":"YulFunctionCall","src":"20504:14:11"},{"hexValue":"5265656e7472616e742063616c6c20646574656374656421","kind":"string","nodeType":"YulLiteral","src":"20520:26:11","type":"","value":"Reentrant call detected!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20497:6:11"},"nodeType":"YulFunctionCall","src":"20497:50:11"},"nodeType":"YulExpressionStatement","src":"20497:50:11"}]},"name":"store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20478:6:11","type":""}],"src":"20380:174:11"},{"body":{"nodeType":"YulBlock","src":"20666:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20688:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20696:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20684:3:11"},"nodeType":"YulFunctionCall","src":"20684:14:11"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"20700:34:11","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20677:6:11"},"nodeType":"YulFunctionCall","src":"20677:58:11"},"nodeType":"YulExpressionStatement","src":"20677:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20756:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20764:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20752:3:11"},"nodeType":"YulFunctionCall","src":"20752:15:11"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"20769:8:11","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20745:6:11"},"nodeType":"YulFunctionCall","src":"20745:33:11"},"nodeType":"YulExpressionStatement","src":"20745:33:11"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20658:6:11","type":""}],"src":"20560:225:11"},{"body":{"nodeType":"YulBlock","src":"20897:62:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20919:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20927:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20915:3:11"},"nodeType":"YulFunctionCall","src":"20915:14:11"},{"hexValue":"496e76616c696420546f6b656e2054797065","kind":"string","nodeType":"YulLiteral","src":"20931:20:11","type":"","value":"Invalid Token Type"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20908:6:11"},"nodeType":"YulFunctionCall","src":"20908:44:11"},"nodeType":"YulExpressionStatement","src":"20908:44:11"}]},"name":"store_literal_in_memory_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20889:6:11","type":""}],"src":"20791:168:11"},{"body":{"nodeType":"YulBlock","src":"21071:65:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21093:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21101:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21089:3:11"},"nodeType":"YulFunctionCall","src":"21089:14:11"},{"hexValue":"6661696c656420746f2073656e6420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"21105:23:11","type":"","value":"failed to send amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21082:6:11"},"nodeType":"YulFunctionCall","src":"21082:47:11"},"nodeType":"YulExpressionStatement","src":"21082:47:11"}]},"name":"store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21063:6:11","type":""}],"src":"20965:171:11"},{"body":{"nodeType":"YulBlock","src":"21248:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21270:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21278:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21266:3:11"},"nodeType":"YulFunctionCall","src":"21266:14:11"},{"hexValue":"496e73756666696369656e742062616c616e63652045544820746f2077697468","kind":"string","nodeType":"YulLiteral","src":"21282:34:11","type":"","value":"Insufficient balance ETH to with"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21259:6:11"},"nodeType":"YulFunctionCall","src":"21259:58:11"},"nodeType":"YulExpressionStatement","src":"21259:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21338:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21346:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21334:3:11"},"nodeType":"YulFunctionCall","src":"21334:15:11"},{"hexValue":"64726177","kind":"string","nodeType":"YulLiteral","src":"21351:6:11","type":"","value":"draw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21327:6:11"},"nodeType":"YulFunctionCall","src":"21327:31:11"},"nodeType":"YulExpressionStatement","src":"21327:31:11"}]},"name":"store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21240:6:11","type":""}],"src":"21142:223:11"},{"body":{"nodeType":"YulBlock","src":"21477:74:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21499:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21507:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21495:3:11"},"nodeType":"YulFunctionCall","src":"21495:14:11"},{"hexValue":"546f6b656e206e6f74207665726966696564206f6e2045786368616e6765","kind":"string","nodeType":"YulLiteral","src":"21511:32:11","type":"","value":"Token not verified on Exchange"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21488:6:11"},"nodeType":"YulFunctionCall","src":"21488:56:11"},"nodeType":"YulExpressionStatement","src":"21488:56:11"}]},"name":"store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21469:6:11","type":""}],"src":"21371:180:11"},{"body":{"nodeType":"YulBlock","src":"21663:65:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21685:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21693:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21681:3:11"},"nodeType":"YulFunctionCall","src":"21681:14:11"},{"hexValue":"4e6f742045786368616e676520636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"21697:23:11","type":"","value":"Not Exchange contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21674:6:11"},"nodeType":"YulFunctionCall","src":"21674:47:11"},"nodeType":"YulExpressionStatement","src":"21674:47:11"}]},"name":"store_literal_in_memory_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21655:6:11","type":""}],"src":"21557:171:11"},{"body":{"nodeType":"YulBlock","src":"21840:119:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21862:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21870:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21858:3:11"},"nodeType":"YulFunctionCall","src":"21858:14:11"},{"hexValue":"496e76616c69642046756e6457616c6c6574206164647265737320746f207769","kind":"string","nodeType":"YulLiteral","src":"21874:34:11","type":"","value":"Invalid FundWallet address to wi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21851:6:11"},"nodeType":"YulFunctionCall","src":"21851:58:11"},"nodeType":"YulExpressionStatement","src":"21851:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21930:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21938:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21926:3:11"},"nodeType":"YulFunctionCall","src":"21926:15:11"},{"hexValue":"746864726177","kind":"string","nodeType":"YulLiteral","src":"21943:8:11","type":"","value":"thdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21919:6:11"},"nodeType":"YulFunctionCall","src":"21919:33:11"},"nodeType":"YulExpressionStatement","src":"21919:33:11"}]},"name":"store_literal_in_memory_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21832:6:11","type":""}],"src":"21734:225:11"},{"body":{"nodeType":"YulBlock","src":"22071:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22093:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22101:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22089:3:11"},"nodeType":"YulFunctionCall","src":"22089:14:11"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22105:34:11","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22082:6:11"},"nodeType":"YulFunctionCall","src":"22082:58:11"},"nodeType":"YulExpressionStatement","src":"22082:58:11"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22063:6:11","type":""}],"src":"21965:182:11"},{"body":{"nodeType":"YulBlock","src":"22259:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22281:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22289:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22277:3:11"},"nodeType":"YulFunctionCall","src":"22277:14:11"},{"hexValue":"496e73756666696369656e7420546f6b656e7320746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"22293:33:11","type":"","value":"Insufficient Tokens to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22270:6:11"},"nodeType":"YulFunctionCall","src":"22270:57:11"},"nodeType":"YulExpressionStatement","src":"22270:57:11"}]},"name":"store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22251:6:11","type":""}],"src":"22153:181:11"},{"body":{"nodeType":"YulBlock","src":"22446:8:11","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22438:6:11","type":""}],"src":"22340:114:11"},{"body":{"nodeType":"YulBlock","src":"22566:59:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22588:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22596:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22584:3:11"},"nodeType":"YulFunctionCall","src":"22584:14:11"},{"hexValue":"4e6f20417070726f76616c20796574","kind":"string","nodeType":"YulLiteral","src":"22600:17:11","type":"","value":"No Approval yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22577:6:11"},"nodeType":"YulFunctionCall","src":"22577:41:11"},"nodeType":"YulExpressionStatement","src":"22577:41:11"}]},"name":"store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22558:6:11","type":""}],"src":"22460:165:11"},{"body":{"nodeType":"YulBlock","src":"22674:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"22731:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22740:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22743:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22733:6:11"},"nodeType":"YulFunctionCall","src":"22733:12:11"},"nodeType":"YulExpressionStatement","src":"22733:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22697:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22722:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"22704:17:11"},"nodeType":"YulFunctionCall","src":"22704:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22694:2:11"},"nodeType":"YulFunctionCall","src":"22694:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22687:6:11"},"nodeType":"YulFunctionCall","src":"22687:43:11"},"nodeType":"YulIf","src":"22684:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22667:5:11","type":""}],"src":"22631:122:11"},{"body":{"nodeType":"YulBlock","src":"22799:76:11","statements":[{"body":{"nodeType":"YulBlock","src":"22853:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22862:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22865:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22855:6:11"},"nodeType":"YulFunctionCall","src":"22855:12:11"},"nodeType":"YulExpressionStatement","src":"22855:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22822:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22844:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22829:14:11"},"nodeType":"YulFunctionCall","src":"22829:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22819:2:11"},"nodeType":"YulFunctionCall","src":"22819:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22812:6:11"},"nodeType":"YulFunctionCall","src":"22812:40:11"},"nodeType":"YulIf","src":"22809:60:11"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22792:5:11","type":""}],"src":"22759:116:11"},{"body":{"nodeType":"YulBlock","src":"22924:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"22981:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22990:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22993:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22983:6:11"},"nodeType":"YulFunctionCall","src":"22983:12:11"},"nodeType":"YulExpressionStatement","src":"22983:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22947:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22972:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22954:17:11"},"nodeType":"YulFunctionCall","src":"22954:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22944:2:11"},"nodeType":"YulFunctionCall","src":"22944:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22937:6:11"},"nodeType":"YulFunctionCall","src":"22937:43:11"},"nodeType":"YulIf","src":"22934:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22917:5:11","type":""}],"src":"22881:122:11"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_1587fa2b24bb478f797ce1d6fede20e032153de39023777b43eba780fbfdd210(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reentrant call detected!\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_42fcdc820cc1d244967c956a0639bc35848e6711f606dde65963507734cd39ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Token Type\")\n\n    }\n\n    function store_literal_in_memory_4aaeaa5f850c69199880840ebab5dee2ea77a1b0aa830b32a35da95f0c1453f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"failed to send amount\")\n\n    }\n\n    function store_literal_in_memory_5d417b2edf87cdc95de9f2d1a835c7c985f2b0ba8deb1653461ad10b57e7b7d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance ETH to with\")\n\n        mstore(add(memPtr, 32), \"draw\")\n\n    }\n\n    function store_literal_in_memory_75d7c4bc0238dea89872c0cfde0962b7a73c7dcbd419fcf2ce8471306dbd744a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not verified on Exchange\")\n\n    }\n\n    function store_literal_in_memory_8867bd48a3950c30d6561be6e445d74d4fd67bb996b123b417ee7485b95f3daa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Exchange contract\")\n\n    }\n\n    function store_literal_in_memory_949de9939d1520512c245b4f5429cf0d6cd3ff44fd3ea7a45affbe5ba64dac57(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid FundWallet address to wi\")\n\n        mstore(add(memPtr, 32), \"thdraw\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a5e55981b6c48ffb7ed46956ad8af92e446957d94bdeb87cad82561ee25d12b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Tokens to withdraw\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_e82edfa02471e201bd0552161922a5b96825275773886049ea98c947523134ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Approval yet\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061011f5760003560e01c80637bf1a627116100a0578063f14210a611610064578063f14210a6146103bd578063f2fde38b146103e6578063f6326fb31461040f578063f7888aec14610419578063fc11a3d6146104565761011f565b80637bf1a627146102d85780638da5cb5b1461030357806396c0ec551461032e57806399c6d2de14610357578063cd5d767c146103805761011f565b8063545e0157116100e7578063545e01571461021b5780635dfbfffd146102445780635ec38bec1461026d578063664a1ad614610296578063715018a6146102c15761011f565b8063126b9c5d146101245780631a38a4fb1461014d57806331415a65146101785780634bdde1cf146101a15780634fc121db146101de575b600080fd5b34801561013057600080fd5b5061014b60048036038101906101469190611e0b565b61047f565b005b34801561015957600080fd5b50610162610521565b60405161016f9190612136565b60405180910390f35b34801561018457600080fd5b5061019f600480360381019061019a9190611d9e565b610547565b005b3480156101ad57600080fd5b506101c860048036038101906101c39190611dcb565b610593565b6040516101d59190612356565b60405180910390f35b3480156101ea57600080fd5b5061020560048036038101906102009190611dcb565b6105b8565b6040516102129190612356565b60405180910390f35b34801561022757600080fd5b50610242600480360381019061023d9190611d9e565b61063f565b005b34801561025057600080fd5b5061026b60048036038101906102669190611e72565b61068b565b005b34801561027957600080fd5b50610294600480360381019061028f9190611d9e565b6109cb565b005b3480156102a257600080fd5b506102ab610a17565b6040516102b89190612136565b60405180910390f35b3480156102cd57600080fd5b506102d6610a3d565b005b3480156102e457600080fd5b506102ed610a51565b6040516102fa9190612136565b60405180910390f35b34801561030f57600080fd5b50610318610a77565b6040516103259190612136565b60405180910390f35b34801561033a57600080fd5b5061035560048036038101906103509190611eb2565b610aa0565b005b34801561036357600080fd5b5061037e60048036038101906103799190611eb2565b610e87565b005b34801561038c57600080fd5b506103a760048036038101906103a29190611dcb565b611215565b6040516103b49190612356565b60405180910390f35b3480156103c957600080fd5b506103e460048036038101906103df9190611f32565b61123a565b005b3480156103f257600080fd5b5061040d60048036038101906104089190611d9e565b6114d4565b005b610417611558565b005b34801561042557600080fd5b50610440600480360381019061043b9190611dcb565b611613565b60405161044d9190612356565b60405180910390f35b34801561046257600080fd5b5061047d60048036038101906104789190611e0b565b61169a565b005b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610506906122b6565b60405180910390fd5b61051b8484848461173c565b50505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61054f611972565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6007602052816000526040600020602052806000526040600020600091509150505481565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610647611972565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610712906122d6565b60405180910390fd5b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006107f36107d8846003546119f090919063ffffffff16565b600a6107e49190612467565b83611a0690919063ffffffff16565b905083600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460149054906101000a900460ff1615610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d906121f6565b60405180910390fd5b6001600460146101000a81548160ff0219169083151502179055506108d084600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600061173c565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161094f9291906121cd565b602060405180830381600087803b15801561096957600080fd5b505af115801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a19190611f05565b6109aa57600080fd5b6000600460146101000a81548160ff02191690831515021790555050505050565b6109d3611972565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a45611972565b610a4f6000611a1c565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610afb57600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b8152600401610b569190612136565b60206040518083038186803b158015610b6e57600080fd5b505afa158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba69190611f05565b610be5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdc90612296565b60405180910390fd5b81610c0b610bf333866105b8565b610bfd8633611613565b6119f090919063ffffffff16565b1015610c4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4390612316565b60405180910390fd5b600460149054906101000a900460ff1615610c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c93906121f6565b60405180910390fd5b6001600460146101000a81548160ff02191690831515021790555082600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d378333610d30610d15856003546119f090919063ffffffff16565b600a610d219190612467565b86611ae090919063ffffffff16565b600061173c565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33610da9610d8e856003546119f090919063ffffffff16565b600a610d9a9190612467565b86611a0690919063ffffffff16565b6040518363ffffffff1660e01b8152600401610dc69291906121cd565b602060405180830381600087803b158015610de057600080fd5b505af1158015610df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e189190611f05565b610e2157600080fd5b6000600460146101000a81548160ff0219169083151502179055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567833384610e6a8733611613565b604051610e7a9493929190612188565b60405180910390a1505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0f90612236565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631027b219846040518263ffffffff1660e01b8152600401610f739190612136565b60206040518083038186803b158015610f8b57600080fd5b505afa158015610f9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc39190611f05565b8061101b5750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b61105a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105190612296565b60405180910390fd5b82600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016110fa93929190612151565b602060405180830381600087803b15801561111457600080fd5b505af1158015611128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114c9190611f05565b61118b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118290612336565b60405180910390fd5b6111ca83336111c36111a8856003546119f090919063ffffffff16565b600a6111b49190612467565b86611ae090919063ffffffff16565b600161173c565b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78333846111f88733611613565b6040516112089493929190612188565b60405180910390a1505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b806112a461126a33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166105b8565b611296600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633611613565b6119f090919063ffffffff16565b10156112e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dc90612276565b60405180910390fd5b600460149054906101000a900460ff1615611335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132c906121f6565b60405180910390fd5b6001600460146101000a81548160ff02191690831515021790555061137f600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383600061173c565b60003373ffffffffffffffffffffffffffffffffffffffff16826040516113a590612121565b60006040518083038185875af1925050503d80600081146113e2576040519150601f19603f3d011682016040523d82523d6000602084013e6113e7565b606091505b505090508061142b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142290612256565b60405180910390fd5b6000600460146101000a81548160ff0219169083151502179055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846114b8600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633611613565b6040516114c89493929190612188565b60405180910390a15050565b6114dc611972565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561154c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154390612216565b60405180910390fd5b61155581611a1c565b50565b611587600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163334600161173c565b7fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633346115f9600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633611613565b6040516116099493929190612188565b60405180910390a1565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461172a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611721906122b6565b60405180910390fd5b61173684848484611af6565b50505050565b8015611856576117d182600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2c90919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061196c565b8061196b576118ea82600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119f090919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b61197a611d42565b73ffffffffffffffffffffffffffffffffffffffff16611998610a77565b73ffffffffffffffffffffffffffffffffffffffff16146119ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e5906122f6565b60405180910390fd5b565b600081836119fe91906125df565b905092915050565b60008183611a1491906123e3565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183611aee9190612585565b905092915050565b8015611c1057611b8b82600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d2c90919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d26565b80611d2557611ca482600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119f090919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b50505050565b60008183611d3a919061238d565b905092915050565b600033905090565b600081359050611d5981612903565b92915050565b600081359050611d6e8161291a565b92915050565b600081519050611d838161291a565b92915050565b600081359050611d9881612931565b92915050565b600060208284031215611db457611db36126b9565b5b6000611dc284828501611d4a565b91505092915050565b60008060408385031215611de257611de16126b9565b5b6000611df085828601611d4a565b9250506020611e0185828601611d4a565b9150509250929050565b60008060008060808587031215611e2557611e246126b9565b5b6000611e3387828801611d4a565b9450506020611e4487828801611d4a565b9350506040611e5587828801611d89565b9250506060611e6687828801611d5f565b91505092959194509250565b60008060408385031215611e8957611e886126b9565b5b6000611e9785828601611d4a565b9250506020611ea885828601611d89565b9150509250929050565b600080600060608486031215611ecb57611eca6126b9565b5b6000611ed986828701611d4a565b9350506020611eea86828701611d89565b9250506040611efb86828701611d89565b9150509250925092565b600060208284031215611f1b57611f1a6126b9565b5b6000611f2984828501611d74565b91505092915050565b600060208284031215611f4857611f476126b9565b5b6000611f5684828501611d89565b91505092915050565b611f6881612613565b82525050565b6000611f7b60188361237c565b9150611f86826126cb565b602082019050919050565b6000611f9e60268361237c565b9150611fa9826126f4565b604082019050919050565b6000611fc160128361237c565b9150611fcc82612743565b602082019050919050565b6000611fe460158361237c565b9150611fef8261276c565b602082019050919050565b600061200760248361237c565b915061201282612795565b604082019050919050565b600061202a601e8361237c565b9150612035826127e4565b602082019050919050565b600061204d60158361237c565b91506120588261280d565b602082019050919050565b600061207060268361237c565b915061207b82612836565b604082019050919050565b600061209360208361237c565b915061209e82612885565b602082019050919050565b60006120b6601f8361237c565b91506120c1826128ae565b602082019050919050565b60006120d9600083612371565b91506120e4826128d7565b600082019050919050565b60006120fc600f8361237c565b9150612107826128da565b602082019050919050565b61211b81612651565b82525050565b600061212c826120cc565b9150819050919050565b600060208201905061214b6000830184611f5f565b92915050565b60006060820190506121666000830186611f5f565b6121736020830185611f5f565b6121806040830184612112565b949350505050565b600060808201905061219d6000830187611f5f565b6121aa6020830186611f5f565b6121b76040830185612112565b6121c46060830184612112565b95945050505050565b60006040820190506121e26000830185611f5f565b6121ef6020830184612112565b9392505050565b6000602082019050818103600083015261220f81611f6e565b9050919050565b6000602082019050818103600083015261222f81611f91565b9050919050565b6000602082019050818103600083015261224f81611fb4565b9050919050565b6000602082019050818103600083015261226f81611fd7565b9050919050565b6000602082019050818103600083015261228f81611ffa565b9050919050565b600060208201905081810360008301526122af8161201d565b9050919050565b600060208201905081810360008301526122cf81612040565b9050919050565b600060208201905081810360008301526122ef81612063565b9050919050565b6000602082019050818103600083015261230f81612086565b9050919050565b6000602082019050818103600083015261232f816120a9565b9050919050565b6000602082019050818103600083015261234f816120ef565b9050919050565b600060208201905061236b6000830184612112565b92915050565b600081905092915050565b600082825260208201905092915050565b600061239882612651565b91506123a383612651565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123d8576123d761265b565b5b828201905092915050565b60006123ee82612651565b91506123f983612651565b9250826124095761240861268a565b5b828204905092915050565b6000808291508390505b600185111561245e5780860481111561243a5761243961265b565b5b60018516156124495780820291505b8081029050612457856126be565b945061241e565b94509492505050565b600061247282612651565b915061247d83612651565b92506124aa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846124b2565b905092915050565b6000826124c2576001905061257e565b816124d0576000905061257e565b81600181146124e657600281146124f05761251f565b600191505061257e565b60ff8411156125025761250161265b565b5b8360020a9150848211156125195761251861265b565b5b5061257e565b5060208310610133831016604e8410600b84101617156125545782820a90508381111561254f5761254e61265b565b5b61257e565b6125618484846001612414565b925090508184048111156125785761257761265b565b5b81810290505b9392505050565b600061259082612651565b915061259b83612651565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156125d4576125d361265b565b5b828202905092915050565b60006125ea82612651565b91506125f583612651565b9250828210156126085761260761265b565b5b828203905092915050565b600061261e82612631565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f5265656e7472616e742063616c6c206465746563746564210000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420546f6b656e20547970650000000000000000000000000000600082015250565b7f6661696c656420746f2073656e6420616d6f756e740000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e63652045544820746f207769746860008201527f6472617700000000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e206e6f74207665726966696564206f6e2045786368616e67650000600082015250565b7f4e6f742045786368616e676520636f6e74726163740000000000000000000000600082015250565b7f496e76616c69642046756e6457616c6c6574206164647265737320746f20776960008201527f7468647261770000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e73756666696369656e7420546f6b656e7320746f20776974686472617700600082015250565b50565b7f4e6f20417070726f76616c207965740000000000000000000000000000000000600082015250565b61290c81612613565b811461291757600080fd5b50565b61292381612625565b811461292e57600080fd5b50565b61293a81612651565b811461294557600080fd5b5056fea26469706673582212204a9427714fafe153fedb3574f4588e5c1c4f631a2aef97c4ab6b018f6c15db4d64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BF1A627 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF14210A6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xF7888AEC EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xFC11A3D6 EQ PUSH2 0x456 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x7BF1A627 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x96C0EC55 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x99C6D2DE EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xCD5D767C EQ PUSH2 0x380 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x545E0157 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x545E0157 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x5DFBFFFD EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x5EC38BEC EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x664A1AD6 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C1 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x126B9C5D EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x1A38A4FB EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x31415A65 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x4BDDE1CF EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x4FC121DB EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AB PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH2 0xA3D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH2 0x123A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x14D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH2 0x1558 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1E0B JUMP JUMPDEST PUSH2 0x169A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x506 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51B DUP5 DUP5 DUP5 DUP5 PUSH2 0x173C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1972 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x647 PUSH2 0x1972 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x712 SWAP1 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x7F3 PUSH2 0x7D8 DUP5 PUSH1 0x3 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST DUP4 PUSH2 0x1A06 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87D SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8D0 DUP5 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94F SWAP3 SWAP2 SWAP1 PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0x1972 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA45 PUSH2 0x1972 JUMP JUMPDEST PUSH2 0xA4F PUSH1 0x0 PUSH2 0x1A1C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA6 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDC SWAP1 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xC0B PUSH2 0xBF3 CALLER DUP7 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0xBFD DUP7 CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xC4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP1 PUSH2 0x2316 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC93 SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xD37 DUP4 CALLER PUSH2 0xD30 PUSH2 0xD15 DUP6 PUSH1 0x3 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xD21 SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST DUP7 PUSH2 0x1AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0xDA9 PUSH2 0xD8E DUP6 PUSH1 0x3 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xD9A SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST DUP7 PUSH2 0x1A06 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP3 SWAP2 SWAP1 PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 DUP4 CALLER DUP5 PUSH2 0xE6A DUP8 CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0F SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1027B219 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST DUP1 PUSH2 0x101B JUMPI POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x105A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP1 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1128 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x114C SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x118B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1182 SWAP1 PUSH2 0x2336 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11CA DUP4 CALLER PUSH2 0x11C3 PUSH2 0x11A8 DUP6 PUSH1 0x3 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0x11B4 SWAP2 SWAP1 PUSH2 0x2467 JUMP JUMPDEST DUP7 PUSH2 0x1AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH2 0x173C JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 CALLER DUP5 PUSH2 0x11F8 DUP8 CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1208 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH2 0x12A4 PUSH2 0x126A CALLER PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x1296 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP1 PUSH2 0x2276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1335 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132C SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x137F PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x0 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x13A5 SWAP1 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x142B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1422 SWAP1 PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH2 0x14B8 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x14DC PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1543 SWAP1 PUSH2 0x2216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1555 DUP2 PUSH2 0x1A1C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1587 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH1 0x1 PUSH2 0x173C JUMP JUMPDEST PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER CALLVALUE PUSH2 0x15F9 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1609 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x172A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1721 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1736 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1AF6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1856 JUMPI PUSH2 0x17D1 DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D2C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x196C JUMP JUMPDEST DUP1 PUSH2 0x196B JUMPI PUSH2 0x18EA DUP3 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x197A PUSH2 0x1D42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1998 PUSH2 0xA77 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E5 SWAP1 PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19FE SWAP2 SWAP1 PUSH2 0x25DF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A14 SWAP2 SWAP1 PUSH2 0x23E3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1AEE SWAP2 SWAP1 PUSH2 0x2585 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C10 JUMPI PUSH2 0x1B8B DUP3 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D2C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1D26 JUMP JUMPDEST DUP1 PUSH2 0x1D25 JUMPI PUSH2 0x1CA4 DUP3 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1D3A SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D59 DUP2 PUSH2 0x2903 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D6E DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D83 DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D98 DUP2 PUSH2 0x2931 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DB4 JUMPI PUSH2 0x1DB3 PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DC2 DUP5 DUP3 DUP6 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DE2 JUMPI PUSH2 0x1DE1 PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DF0 DUP6 DUP3 DUP7 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E01 DUP6 DUP3 DUP7 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E25 JUMPI PUSH2 0x1E24 PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E33 DUP8 DUP3 DUP9 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E44 DUP8 DUP3 DUP9 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1E55 DUP8 DUP3 DUP9 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1E66 DUP8 DUP3 DUP9 ADD PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E88 PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E97 DUP6 DUP3 DUP7 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EA8 DUP6 DUP3 DUP7 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ECB JUMPI PUSH2 0x1ECA PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED9 DUP7 DUP3 DUP8 ADD PUSH2 0x1D4A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EEA DUP7 DUP3 DUP8 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1EFB DUP7 DUP3 DUP8 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1F1A PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F29 DUP5 DUP3 DUP6 ADD PUSH2 0x1D74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x26B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F56 DUP5 DUP3 DUP6 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F68 DUP2 PUSH2 0x2613 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7B PUSH1 0x18 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F86 DUP3 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9E PUSH1 0x26 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA9 DUP3 PUSH2 0x26F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC1 PUSH1 0x12 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCC DUP3 PUSH2 0x2743 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE4 PUSH1 0x15 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEF DUP3 PUSH2 0x276C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2007 PUSH1 0x24 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x2012 DUP3 PUSH2 0x2795 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202A PUSH1 0x1E DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x2035 DUP3 PUSH2 0x27E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204D PUSH1 0x15 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x2058 DUP3 PUSH2 0x280D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2070 PUSH1 0x26 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x207B DUP3 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2093 PUSH1 0x20 DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x209E DUP3 PUSH2 0x2885 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B6 PUSH1 0x1F DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x20C1 DUP3 PUSH2 0x28AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D9 PUSH1 0x0 DUP4 PUSH2 0x2371 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E4 DUP3 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FC PUSH1 0xF DUP4 PUSH2 0x237C JUMP JUMPDEST SWAP2 POP PUSH2 0x2107 DUP3 PUSH2 0x28DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x211B DUP2 PUSH2 0x2651 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212C DUP3 PUSH2 0x20CC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x214B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2166 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x2173 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x2180 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x219D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x21AA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x21B7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x21C4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x21EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x220F DUP2 PUSH2 0x1F6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x222F DUP2 PUSH2 0x1F91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x224F DUP2 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x226F DUP2 PUSH2 0x1FD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x228F DUP2 PUSH2 0x1FFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22AF DUP2 PUSH2 0x201D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22CF DUP2 PUSH2 0x2040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22EF DUP2 PUSH2 0x2063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x230F DUP2 PUSH2 0x2086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232F DUP2 PUSH2 0x20A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x234F DUP2 PUSH2 0x20EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x236B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2398 DUP3 PUSH2 0x2651 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A3 DUP4 PUSH2 0x2651 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x23D8 JUMPI PUSH2 0x23D7 PUSH2 0x265B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EE DUP3 PUSH2 0x2651 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F9 DUP4 PUSH2 0x2651 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2409 JUMPI PUSH2 0x2408 PUSH2 0x268A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x245E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x243A JUMPI PUSH2 0x2439 PUSH2 0x265B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2449 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2457 DUP6 PUSH2 0x26BE JUMP JUMPDEST SWAP5 POP PUSH2 0x241E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2472 DUP3 PUSH2 0x2651 JUMP JUMPDEST SWAP2 POP PUSH2 0x247D DUP4 PUSH2 0x2651 JUMP JUMPDEST SWAP3 POP PUSH2 0x24AA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x24B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24C2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x257E JUMP JUMPDEST DUP2 PUSH2 0x24D0 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x257E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x24E6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x24F0 JUMPI PUSH2 0x251F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x257E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2502 JUMPI PUSH2 0x2501 PUSH2 0x265B JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2519 JUMPI PUSH2 0x2518 PUSH2 0x265B JUMP JUMPDEST JUMPDEST POP PUSH2 0x257E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2554 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x254F JUMPI PUSH2 0x254E PUSH2 0x265B JUMP JUMPDEST JUMPDEST PUSH2 0x257E JUMP JUMPDEST PUSH2 0x2561 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2414 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2578 JUMPI PUSH2 0x2577 PUSH2 0x265B JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2590 DUP3 PUSH2 0x2651 JUMP JUMPDEST SWAP2 POP PUSH2 0x259B DUP4 PUSH2 0x2651 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x25D4 JUMPI PUSH2 0x25D3 PUSH2 0x265B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EA DUP3 PUSH2 0x2651 JUMP JUMPDEST SWAP2 POP PUSH2 0x25F5 DUP4 PUSH2 0x2651 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2608 JUMPI PUSH2 0x2607 PUSH2 0x265B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x261E DUP3 PUSH2 0x2631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E742063616C6C206465746563746564210000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420546F6B656E20547970650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E6420616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652045544820746F2077697468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472617700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F74207665726966696564206F6E2045786368616E67650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F742045786368616E676520636F6E74726163740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642046756E6457616C6C6574206164647265737320746F207769 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7468647261770000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E7320746F20776974686472617700 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E6F20417070726F76616C207965740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x290C DUP2 PUSH2 0x2613 JUMP JUMPDEST DUP2 EQ PUSH2 0x2917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2923 DUP2 PUSH2 0x2625 JUMP JUMPDEST DUP2 EQ PUSH2 0x292E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x293A DUP2 PUSH2 0x2651 JUMP JUMPDEST DUP2 EQ PUSH2 0x2945 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP5 0x27 PUSH18 0x4FAFE153FEDB3574F4588E5C1C4F631A2AEF SWAP8 0xC4 0xAB PUSH12 0x18F6C15DB4D64736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"365:6565:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5230:210;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;545:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6570:128;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;784:66;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4190:157;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6704:103;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5912:652;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5801:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;487:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;;;;;;;;;;;:::i;:::-;;632:36:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3123:1061:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2250:867;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;675:63;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1471:684;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:255:10;;;:::i;:::-;;5075:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4353:218;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5230:210;6875:8;;;;;;;;;;;6853:31;;:10;:31;;;6845:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5389:44:::1;5403:6;5411:5;5418:7;5427:5;5389:13;:44::i;:::-;5230:210:::0;;;;:::o;545:19::-;;;;;;;;;;;;;:::o;6570:128::-;1094:13:1;:11;:13::i;:::-;6674:16:10::1;6654:8;;:37;;;;;;;;;;;;;;;;;;6570:128:::0;:::o;784:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4190:157::-;4288:7;4314:11;:18;4326:5;4314:18;;;;;;;;;;;;;;;:26;4333:6;4314:26;;;;;;;;;;;;;;;;4307:33;;4190:157;;;;:::o;6704:103::-;1094:13:1;:11;:13::i;:::-;6791:8:10::1;6776:4;;:24;;;;;;;;;;;;;;;;;;6704:103:::0;:::o;5912:652::-;6088:10;;;;;;;;;;;6074:24;;:10;:24;;;6053:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;6172:19;6194:8;:16;6203:6;6194:16;;;;;;;;;;;;;;;:28;6211:10;;;;;;;;;;;6194:28;;;;;;;;;;;;;;;;6172:50;;6232:20;6255:46;6277:23;6290:9;6277:8;;:12;;:23;;;;:::i;:::-;6271:2;:29;;;;:::i;:::-;6255:11;:15;;:46;;;;:::i;:::-;6232:69;;6326:6;6311:5;;:22;;;;;;;;;;;;;;;;;;6353:6;;;;;;;;;;;6352:7;6344:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;6407:4;6398:6;;:13;;;;;;;;;;;;;;;;;;6421:53;6435:6;6443:10;;;;;;;;;;;6455:11;6468:5;6421:13;:53::i;:::-;6492:5;;;;;;;;;;;:14;;;6507:10;;;;;;;;;;;6519:12;6492:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6484:49;;;;;;6552:5;6543:6;;:14;;;;;;;;;;;;;;;;;;5986:578;;5912:652;;:::o;5801:105::-;1094:13:1;:11;:13::i;:::-;5888:11:10::1;5875:10;;:24;;;;;;;;;;;;;;;;;;5801:105:::0;:::o;487:25::-;;;;;;;;;;;;;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;632:36:10:-;;;;;;;;;;;;;:::o;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3123:1061:10:-;3265:8;;;;;;;;;;;3255:18;;:6;:18;;;;3247:27;;;;;;3305:8;;;;;;;;;;;:24;;;3330:6;3305:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3284:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3528:7;3425:99;3476:34;3491:10;3503:6;3476:14;:34::i;:::-;3425:29;3435:6;3443:10;3425:9;:29::i;:::-;:33;;:99;;;;:::i;:::-;:110;;3404:188;;;;;;;;;;;;:::i;:::-;;;;;;;;;3611:6;;;;;;;;;;;3610:7;3602:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3665:4;3656:6;;:13;;;;;;;;;;;;;;;;;;3695:6;3680:5;;:22;;;;;;;;;;;;;;;;;;3712:142;3739:6;3759:10;3783:42;3801:23;3814:9;3801:8;;:12;;:23;;;;:::i;:::-;3795:2;:29;;;;:::i;:::-;3783:7;:11;;:42;;;;:::i;:::-;3839:5;3712:13;:142::i;:::-;3885:5;;;;;;;;;;;:14;;;3917:10;3945:42;3963:23;3976:9;3963:8;;:12;;:23;;;;:::i;:::-;3957:2;:29;;;;:::i;:::-;3945:7;:11;;:42;;;;:::i;:::-;3885:116;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3864:147;;;;;;4031:5;4022:6;;:14;;;;;;;;;;;;;;;;;;4051:126;4073:6;4093:10;4117:7;4138:29;4148:6;4156:10;4138:9;:29::i;:::-;4051:126;;;;;;;;;:::i;:::-;;;;;;;;3123:1061;;;:::o;2250:867::-;2391:8;;;;;;;;;;;2381:18;;:6;:18;;;;2373:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2453:8;;;;;;;;;;;:24;;;2478:6;2453:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;;;2499:4;;;;;;;;;;;2489:14;;:6;:14;;;2453:50;2432:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;2649:6;2634:5;;:22;;;;;;;;;;;;;;;;;;2722:5;;;;;;;;;;;:18;;;2741:10;2761:4;2768:7;2722:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2701:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;2828:141;2855:6;2875:10;2899:42;2917:23;2930:9;2917:8;;:12;;:23;;;;:::i;:::-;2911:2;:29;;;;:::i;:::-;2899:7;:11;;:42;;;;:::i;:::-;2955:4;2828:13;:141::i;:::-;2985:125;3006:6;3026:10;3050:7;3071:29;3081:6;3089:10;3071:9;:29::i;:::-;2985:125;;;;;;;;;:::i;:::-;;;;;;;;2250:867;;;:::o;675:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1471:684::-;1656:7;1549:103;1602:36;1617:10;1629:8;;;;;;;;;;;1602:14;:36::i;:::-;1549:31;1559:8;;;;;;;;;;;1569:10;1549:9;:31::i;:::-;:35;;:103;;;;:::i;:::-;:114;;1528:197;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:6;;;;;;;;;;;1743:7;1735:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1798:4;1789:6;;:13;;;;;;;;;;;;;;;;;;1812:51;1826:8;;;;;;;;;;;1836:10;1848:7;1857:5;1812:13;:51::i;:::-;1874:12;1892:10;:15;;1915:7;1892:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:54;;;1945:7;1937:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1997:5;1988:6;;:14;;;;;;;;;;;;;;;;;;2018:130;2040:8;;;;;;;;;;;2062:10;2086:7;2107:31;2117:8;;;;;;;;;;;2127:10;2107:9;:31::i;:::-;2018:130;;;;;;;;;:::i;:::-;;;;;;;;1518:637;1471:684;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1210:255:10:-;1259:52;1273:8;;;;;;;;;;;1283:10;1295:9;1306:4;1259:13;:52::i;:::-;1327:131;1348:8;;;;;;;;;;;1370:10;1394:9;1417:31;1427:8;;;;;;;;;;;1437:10;1417:9;:31::i;:::-;1327:131;;;;;;;;;:::i;:::-;;;;;;;;1210:255::o;5075:149::-;5168:7;5194:8;:16;5203:6;5194:16;;;;;;;;;;;;;;;:23;5211:5;5194:23;;;;;;;;;;;;;;;;5187:30;;5075:149;;;;:::o;4353:218::-;6875:8;;;;;;;;;;;6853:31;;:10;:31;;;6845:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;4516:48:::1;4534:5;4541:6;4549:7;4558:5;4516:17;:48::i;:::-;4353:218:::0;;;;:::o;5446:349::-;5590:5;5586:203;;;5637:36;5665:7;5637:8;:16;5646:6;5637:16;;;;;;;;;;;;;;;:23;5654:5;5637:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5611:8;:16;5620:6;5611:16;;;;;;;;;;;;;;;:23;5628:5;5611:23;;;;;;;;;;;;;;;:62;;;;5586:203;;;5695:5;5690:99;;5742:36;5770:7;5742:8;:16;5751:6;5742:16;;;;;;;;;;;;;;;:23;5759:5;5742:23;;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;5716:8;:16;5725:6;5716:16;;;;;;;;;;;;;;;:23;5733:5;5716:23;;;;;;;;;;;;;;;:62;;;;5690:99;5586:203;5446:349;;;;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;3122:96:5:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3465:96:5:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;4577:425:10:-;4725:5;4721:275;;;4775:69;4823:7;4775:11;:18;4787:5;4775:18;;;;;;;;;;;;;;;:26;4794:6;4775:26;;;;;;;;;;;;;;;;:30;;:69;;;;:::i;:::-;4746:11;:18;4758:5;4746:18;;;;;;;;;;;;;;;:26;4765:6;4746:26;;;;;;;;;;;;;;;:98;;;;4721:275;;;4866:5;4861:135;;4916:69;4964:7;4916:11;:18;4928:5;4916:18;;;;;;;;;;;;;;;:26;4935:6;4916:26;;;;;;;;;;;;;;;;:30;;:69;;;;:::i;:::-;4887:11;:18;4899:5;4887:18;;;;;;;;;;;;;;;:26;4906:6;4887:26;;;;;;;;;;;;;;;:98;;;;4861:135;4721:275;4577:425;;;;:::o;2755:96:5:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;640::4:-;693:7;719:10;712:17;;640:96;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:137::-;345:5;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;291:137;;;;:::o;434:139::-;480:5;518:6;505:20;496:29;;534:33;561:5;534:33;:::i;:::-;434:139;;;;:::o;579:329::-;638:6;687:2;675:9;666:7;662:23;658:32;655:119;;;693:79;;:::i;:::-;655:119;813:1;838:53;883:7;874:6;863:9;859:22;838:53;:::i;:::-;828:63;;784:117;579:329;;;;:::o;914:474::-;982:6;990;1039:2;1027:9;1018:7;1014:23;1010:32;1007:119;;;1045:79;;:::i;:::-;1007:119;1165:1;1190:53;1235:7;1226:6;1215:9;1211:22;1190:53;:::i;:::-;1180:63;;1136:117;1292:2;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1263:118;914:474;;;;;:::o;1394:759::-;1477:6;1485;1493;1501;1550:3;1538:9;1529:7;1525:23;1521:33;1518:120;;;1557:79;;:::i;:::-;1518:120;1677:1;1702:53;1747:7;1738:6;1727:9;1723:22;1702:53;:::i;:::-;1692:63;;1648:117;1804:2;1830:53;1875:7;1866:6;1855:9;1851:22;1830:53;:::i;:::-;1820:63;;1775:118;1932:2;1958:53;2003:7;1994:6;1983:9;1979:22;1958:53;:::i;:::-;1948:63;;1903:118;2060:2;2086:50;2128:7;2119:6;2108:9;2104:22;2086:50;:::i;:::-;2076:60;;2031:115;1394:759;;;;;;;:::o;2159:474::-;2227:6;2235;2284:2;2272:9;2263:7;2259:23;2255:32;2252:119;;;2290:79;;:::i;:::-;2252:119;2410:1;2435:53;2480:7;2471:6;2460:9;2456:22;2435:53;:::i;:::-;2425:63;;2381:117;2537:2;2563:53;2608:7;2599:6;2588:9;2584:22;2563:53;:::i;:::-;2553:63;;2508:118;2159:474;;;;;:::o;2639:619::-;2716:6;2724;2732;2781:2;2769:9;2760:7;2756:23;2752:32;2749:119;;;2787:79;;:::i;:::-;2749:119;2907:1;2932:53;2977:7;2968:6;2957:9;2953:22;2932:53;:::i;:::-;2922:63;;2878:117;3034:2;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3005:118;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2639:619;;;;;:::o;3264:345::-;3331:6;3380:2;3368:9;3359:7;3355:23;3351:32;3348:119;;;3386:79;;:::i;:::-;3348:119;3506:1;3531:61;3584:7;3575:6;3564:9;3560:22;3531:61;:::i;:::-;3521:71;;3477:125;3264:345;;;;:::o;3615:329::-;3674:6;3723:2;3711:9;3702:7;3698:23;3694:32;3691:119;;;3729:79;;:::i;:::-;3691:119;3849:1;3874:53;3919:7;3910:6;3899:9;3895:22;3874:53;:::i;:::-;3864:63;;3820:117;3615:329;;;;:::o;3950:118::-;4037:24;4055:5;4037:24;:::i;:::-;4032:3;4025:37;3950:118;;:::o;4074:366::-;4216:3;4237:67;4301:2;4296:3;4237:67;:::i;:::-;4230:74;;4313:93;4402:3;4313:93;:::i;:::-;4431:2;4426:3;4422:12;4415:19;;4074:366;;;:::o;4446:::-;4588:3;4609:67;4673:2;4668:3;4609:67;:::i;:::-;4602:74;;4685:93;4774:3;4685:93;:::i;:::-;4803:2;4798:3;4794:12;4787:19;;4446:366;;;:::o;4818:::-;4960:3;4981:67;5045:2;5040:3;4981:67;:::i;:::-;4974:74;;5057:93;5146:3;5057:93;:::i;:::-;5175:2;5170:3;5166:12;5159:19;;4818:366;;;:::o;5190:::-;5332:3;5353:67;5417:2;5412:3;5353:67;:::i;:::-;5346:74;;5429:93;5518:3;5429:93;:::i;:::-;5547:2;5542:3;5538:12;5531:19;;5190:366;;;:::o;5562:::-;5704:3;5725:67;5789:2;5784:3;5725:67;:::i;:::-;5718:74;;5801:93;5890:3;5801:93;:::i;:::-;5919:2;5914:3;5910:12;5903:19;;5562:366;;;:::o;5934:::-;6076:3;6097:67;6161:2;6156:3;6097:67;:::i;:::-;6090:74;;6173:93;6262:3;6173:93;:::i;:::-;6291:2;6286:3;6282:12;6275:19;;5934:366;;;:::o;6306:::-;6448:3;6469:67;6533:2;6528:3;6469:67;:::i;:::-;6462:74;;6545:93;6634:3;6545:93;:::i;:::-;6663:2;6658:3;6654:12;6647:19;;6306:366;;;:::o;6678:::-;6820:3;6841:67;6905:2;6900:3;6841:67;:::i;:::-;6834:74;;6917:93;7006:3;6917:93;:::i;:::-;7035:2;7030:3;7026:12;7019:19;;6678:366;;;:::o;7050:::-;7192:3;7213:67;7277:2;7272:3;7213:67;:::i;:::-;7206:74;;7289:93;7378:3;7289:93;:::i;:::-;7407:2;7402:3;7398:12;7391:19;;7050:366;;;:::o;7422:::-;7564:3;7585:67;7649:2;7644:3;7585:67;:::i;:::-;7578:74;;7661:93;7750:3;7661:93;:::i;:::-;7779:2;7774:3;7770:12;7763:19;;7422:366;;;:::o;7794:398::-;7953:3;7974:83;8055:1;8050:3;7974:83;:::i;:::-;7967:90;;8066:93;8155:3;8066:93;:::i;:::-;8184:1;8179:3;8175:11;8168:18;;7794:398;;;:::o;8198:366::-;8340:3;8361:67;8425:2;8420:3;8361:67;:::i;:::-;8354:74;;8437:93;8526:3;8437:93;:::i;:::-;8555:2;8550:3;8546:12;8539:19;;8198:366;;;:::o;8570:118::-;8657:24;8675:5;8657:24;:::i;:::-;8652:3;8645:37;8570:118;;:::o;8694:379::-;8878:3;8900:147;9043:3;8900:147;:::i;:::-;8893:154;;9064:3;9057:10;;8694:379;;;:::o;9079:222::-;9172:4;9210:2;9199:9;9195:18;9187:26;;9223:71;9291:1;9280:9;9276:17;9267:6;9223:71;:::i;:::-;9079:222;;;;:::o;9307:442::-;9456:4;9494:2;9483:9;9479:18;9471:26;;9507:71;9575:1;9564:9;9560:17;9551:6;9507:71;:::i;:::-;9588:72;9656:2;9645:9;9641:18;9632:6;9588:72;:::i;:::-;9670;9738:2;9727:9;9723:18;9714:6;9670:72;:::i;:::-;9307:442;;;;;;:::o;9755:553::-;9932:4;9970:3;9959:9;9955:19;9947:27;;9984:71;10052:1;10041:9;10037:17;10028:6;9984:71;:::i;:::-;10065:72;10133:2;10122:9;10118:18;10109:6;10065:72;:::i;:::-;10147;10215:2;10204:9;10200:18;10191:6;10147:72;:::i;:::-;10229;10297:2;10286:9;10282:18;10273:6;10229:72;:::i;:::-;9755:553;;;;;;;:::o;10314:332::-;10435:4;10473:2;10462:9;10458:18;10450:26;;10486:71;10554:1;10543:9;10539:17;10530:6;10486:71;:::i;:::-;10567:72;10635:2;10624:9;10620:18;10611:6;10567:72;:::i;:::-;10314:332;;;;;:::o;10652:419::-;10818:4;10856:2;10845:9;10841:18;10833:26;;10905:9;10899:4;10895:20;10891:1;10880:9;10876:17;10869:47;10933:131;11059:4;10933:131;:::i;:::-;10925:139;;10652:419;;;:::o;11077:::-;11243:4;11281:2;11270:9;11266:18;11258:26;;11330:9;11324:4;11320:20;11316:1;11305:9;11301:17;11294:47;11358:131;11484:4;11358:131;:::i;:::-;11350:139;;11077:419;;;:::o;11502:::-;11668:4;11706:2;11695:9;11691:18;11683:26;;11755:9;11749:4;11745:20;11741:1;11730:9;11726:17;11719:47;11783:131;11909:4;11783:131;:::i;:::-;11775:139;;11502:419;;;:::o;11927:::-;12093:4;12131:2;12120:9;12116:18;12108:26;;12180:9;12174:4;12170:20;12166:1;12155:9;12151:17;12144:47;12208:131;12334:4;12208:131;:::i;:::-;12200:139;;11927:419;;;:::o;12352:::-;12518:4;12556:2;12545:9;12541:18;12533:26;;12605:9;12599:4;12595:20;12591:1;12580:9;12576:17;12569:47;12633:131;12759:4;12633:131;:::i;:::-;12625:139;;12352:419;;;:::o;12777:::-;12943:4;12981:2;12970:9;12966:18;12958:26;;13030:9;13024:4;13020:20;13016:1;13005:9;13001:17;12994:47;13058:131;13184:4;13058:131;:::i;:::-;13050:139;;12777:419;;;:::o;13202:::-;13368:4;13406:2;13395:9;13391:18;13383:26;;13455:9;13449:4;13445:20;13441:1;13430:9;13426:17;13419:47;13483:131;13609:4;13483:131;:::i;:::-;13475:139;;13202:419;;;:::o;13627:::-;13793:4;13831:2;13820:9;13816:18;13808:26;;13880:9;13874:4;13870:20;13866:1;13855:9;13851:17;13844:47;13908:131;14034:4;13908:131;:::i;:::-;13900:139;;13627:419;;;:::o;14052:::-;14218:4;14256:2;14245:9;14241:18;14233:26;;14305:9;14299:4;14295:20;14291:1;14280:9;14276:17;14269:47;14333:131;14459:4;14333:131;:::i;:::-;14325:139;;14052:419;;;:::o;14477:::-;14643:4;14681:2;14670:9;14666:18;14658:26;;14730:9;14724:4;14720:20;14716:1;14705:9;14701:17;14694:47;14758:131;14884:4;14758:131;:::i;:::-;14750:139;;14477:419;;;:::o;14902:::-;15068:4;15106:2;15095:9;15091:18;15083:26;;15155:9;15149:4;15145:20;15141:1;15130:9;15126:17;15119:47;15183:131;15309:4;15183:131;:::i;:::-;15175:139;;14902:419;;;:::o;15327:222::-;15420:4;15458:2;15447:9;15443:18;15435:26;;15471:71;15539:1;15528:9;15524:17;15515:6;15471:71;:::i;:::-;15327:222;;;;:::o;15636:147::-;15737:11;15774:3;15759:18;;15636:147;;;;:::o;15789:169::-;15873:11;15907:6;15902:3;15895:19;15947:4;15942:3;15938:14;15923:29;;15789:169;;;;:::o;15964:305::-;16004:3;16023:20;16041:1;16023:20;:::i;:::-;16018:25;;16057:20;16075:1;16057:20;:::i;:::-;16052:25;;16211:1;16143:66;16139:74;16136:1;16133:81;16130:107;;;16217:18;;:::i;:::-;16130:107;16261:1;16258;16254:9;16247:16;;15964:305;;;;:::o;16275:185::-;16315:1;16332:20;16350:1;16332:20;:::i;:::-;16327:25;;16366:20;16384:1;16366:20;:::i;:::-;16361:25;;16405:1;16395:35;;16410:18;;:::i;:::-;16395:35;16452:1;16449;16445:9;16440:14;;16275:185;;;;:::o;16466:848::-;16527:5;16534:4;16558:6;16549:15;;16582:5;16573:14;;16596:712;16617:1;16607:8;16604:15;16596:712;;;16712:4;16707:3;16703:14;16697:4;16694:24;16691:50;;;16721:18;;:::i;:::-;16691:50;16771:1;16761:8;16757:16;16754:451;;;17186:4;17179:5;17175:16;17166:25;;16754:451;17236:4;17230;17226:15;17218:23;;17266:32;17289:8;17266:32;:::i;:::-;17254:44;;16596:712;;;16466:848;;;;;;;:::o;17320:285::-;17380:5;17404:23;17422:4;17404:23;:::i;:::-;17396:31;;17448:27;17466:8;17448:27;:::i;:::-;17436:39;;17494:104;17531:66;17521:8;17515:4;17494:104;:::i;:::-;17485:113;;17320:285;;;;:::o;17611:1073::-;17665:5;17856:8;17846:40;;17877:1;17868:10;;17879:5;;17846:40;17905:4;17895:36;;17922:1;17913:10;;17924:5;;17895:36;17991:4;18039:1;18034:27;;;;18075:1;18070:191;;;;17984:277;;18034:27;18052:1;18043:10;;18054:5;;;18070:191;18115:3;18105:8;18102:17;18099:43;;;18122:18;;:::i;:::-;18099:43;18171:8;18168:1;18164:16;18155:25;;18206:3;18199:5;18196:14;18193:40;;;18213:18;;:::i;:::-;18193:40;18246:5;;;17984:277;;18370:2;18360:8;18357:16;18351:3;18345:4;18342:13;18338:36;18320:2;18310:8;18307:16;18302:2;18296:4;18293:12;18289:35;18273:111;18270:246;;;18426:8;18420:4;18416:19;18407:28;;18461:3;18454:5;18451:14;18448:40;;;18468:18;;:::i;:::-;18448:40;18501:5;;18270:246;18541:42;18579:3;18569:8;18563:4;18560:1;18541:42;:::i;:::-;18526:57;;;;18615:4;18610:3;18606:14;18599:5;18596:25;18593:51;;;18624:18;;:::i;:::-;18593:51;18673:4;18666:5;18662:16;18653:25;;17611:1073;;;;;;:::o;18690:348::-;18730:7;18753:20;18771:1;18753:20;:::i;:::-;18748:25;;18787:20;18805:1;18787:20;:::i;:::-;18782:25;;18975:1;18907:66;18903:74;18900:1;18897:81;18892:1;18885:9;18878:17;18874:105;18871:131;;;18982:18;;:::i;:::-;18871:131;19030:1;19027;19023:9;19012:20;;18690:348;;;;:::o;19044:191::-;19084:4;19104:20;19122:1;19104:20;:::i;:::-;19099:25;;19138:20;19156:1;19138:20;:::i;:::-;19133:25;;19177:1;19174;19171:8;19168:34;;;19182:18;;:::i;:::-;19168:34;19227:1;19224;19220:9;19212:17;;19044:191;;;;:::o;19241:96::-;19278:7;19307:24;19325:5;19307:24;:::i;:::-;19296:35;;19241:96;;;:::o;19343:90::-;19377:7;19420:5;19413:13;19406:21;19395:32;;19343:90;;;:::o;19439:126::-;19476:7;19516:42;19509:5;19505:54;19494:65;;19439:126;;;:::o;19571:77::-;19608:7;19637:5;19626:16;;19571:77;;;:::o;19654:180::-;19702:77;19699:1;19692:88;19799:4;19796:1;19789:15;19823:4;19820:1;19813:15;19840:180;19888:77;19885:1;19878:88;19985:4;19982:1;19975:15;20009:4;20006:1;19999:15;20149:117;20258:1;20255;20248:12;20272:102;20314:8;20361:5;20358:1;20354:13;20333:34;;20272:102;;;:::o;20380:174::-;20520:26;20516:1;20508:6;20504:14;20497:50;20380:174;:::o;20560:225::-;20700:34;20696:1;20688:6;20684:14;20677:58;20769:8;20764:2;20756:6;20752:15;20745:33;20560:225;:::o;20791:168::-;20931:20;20927:1;20919:6;20915:14;20908:44;20791:168;:::o;20965:171::-;21105:23;21101:1;21093:6;21089:14;21082:47;20965:171;:::o;21142:223::-;21282:34;21278:1;21270:6;21266:14;21259:58;21351:6;21346:2;21338:6;21334:15;21327:31;21142:223;:::o;21371:180::-;21511:32;21507:1;21499:6;21495:14;21488:56;21371:180;:::o;21557:171::-;21697:23;21693:1;21685:6;21681:14;21674:47;21557:171;:::o;21734:225::-;21874:34;21870:1;21862:6;21858:14;21851:58;21943:8;21938:2;21930:6;21926:15;21919:33;21734:225;:::o;21965:182::-;22105:34;22101:1;22093:6;22089:14;22082:58;21965:182;:::o;22153:181::-;22293:33;22289:1;22281:6;22277:14;22270:57;22153:181;:::o;22340:114::-;;:::o;22460:165::-;22600:17;22596:1;22588:6;22584:14;22577:41;22460:165;:::o;22631:122::-;22704:24;22722:5;22704:24;:::i;:::-;22697:5;22694:35;22684:63;;22743:1;22740;22733:12;22684:63;22631:122;:::o;22759:116::-;22829:21;22844:5;22829:21;:::i;:::-;22822:5;22819:32;22809:60;;22865:1;22862;22855:12;22809:60;22759:116;:::o;22881:122::-;22954:24;22972:5;22954:24;:::i;:::-;22947:5;22944:35;22934:63;;22993:1;22990;22983:12;22934:63;22881:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2124400","executionCost":"infinite","totalCost":"infinite"},"external":{"aDAI()":"2560","balanceOf(address,address)":"infinite","depositETH()":"infinite","depositToken(address,uint256,uint256)":"infinite","ethToken()":"2537","exchangeUpdateBalance(address,address,uint256,bool)":"infinite","exchangeUpdateLockedFunds(address,address,uint256,bool)":"infinite","fundWallet()":"2603","getlockedFunds(address,address)":"infinite","lockedFunds(address,address)":"infinite","owner()":"2567","renounceOwnership()":"30509","s_tokens(address,address)":"infinite","transferOwnership(address)":"30791","updateExchangeAddress(address)":"27054","updateFundWallet(address)":"27053","updateaDaiAddress(address)":"27009","withdrawETH(uint256)":"infinite","withdrawToFundWallet(address,uint256)":"infinite","withdrawToken(address,uint256,uint256)":"infinite"},"internal":{"updateBalance(address,address,uint256,bool)":"infinite","updateLockedFunds(address,address,uint256,bool)":"infinite"}},"methodIdentifiers":{"aDAI()":"1a38a4fb","balanceOf(address,address)":"f7888aec","depositETH()":"f6326fb3","depositToken(address,uint256,uint256)":"99c6d2de","ethToken()":"7bf1a627","exchangeUpdateBalance(address,address,uint256,bool)":"126b9c5d","exchangeUpdateLockedFunds(address,address,uint256,bool)":"fc11a3d6","fundWallet()":"664a1ad6","getlockedFunds(address,address)":"4fc121db","lockedFunds(address,address)":"4bdde1cf","owner()":"8da5cb5b","renounceOwnership()":"715018a6","s_tokens(address,address)":"cd5d767c","transferOwnership(address)":"f2fde38b","updateExchangeAddress(address)":"31415a65","updateFundWallet(address)":"5ec38bec","updateaDaiAddress(address)":"545e0157","withdrawETH(uint256)":"f14210a6","withdrawToFundWallet(address,uint256)":"5dfbfffd","withdrawToken(address,uint256,uint256)":"96c0ec55"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aDAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"exchangeUpdateBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"exchangeUpdateLockedFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getlockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchangeAddress\",\"type\":\"address\"}],\"name\":\"updateExchangeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fundwallet\",\"type\":\"address\"}],\"name\":\"updateFundWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"updateaDaiAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"withdrawToFundWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Withdraw(address,address,uint256,uint256)\":{\"notice\":\"Event when amount withdrawn exchange\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(\\n        address account\\n    ) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(\\n        address spender,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(\\n            currentAllowance >= subtractedValue,\\n            \\\"ERC20: decreased allowance below zero\\\"\\n        );\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(\\n            fromBalance >= amount,\\n            \\\"ERC20: transfer amount exceeds balance\\\"\\n        );\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(\\n                currentAllowance >= amount,\\n                \\\"ERC20: insufficient allowance\\\"\\n            );\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa5e93048def7546de7ce959ca5f138cde21822a7645fb6e03407ee0f5f92ba5d\",\"license\":\"MIT\"},\"contracts/Exchange.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceChecker.sol\\\";\\nimport \\\"./TradingFees.sol\\\";\\n\\n/// @notice Library SafeMath used to prevent overflows and underflows\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Exchange is Ownable {\\n    using SafeMath for uint256; //for prevention of integer overflow\\n    PriceChecker priceChecker;\\n    TradingFees tradingFees;\\n    Wallet wallet;\\n\\n    uint256 decimals = 10 ** 18;\\n    address public ethToken = address(0);\\n\\n    //Token Address List available in DEX\\n    _tokenInfo[] public tokenList;\\n\\n    //s_orderBook mappping: tokenA Address -> tokenB Address -> Side -> Order Array\\n    mapping(address => mapping(address => mapping(uint256 => _Order[])))\\n        public s_orderBook;\\n\\n    mapping(address => mapping(uint256 => _filledOrder[]))\\n        public s_filledOrders;\\n\\n    uint256 public s_orderId = 0;\\n    bool private s_isManual = true;\\n\\n    struct _tokenInfo {\\n        address add;\\n        uint256 decimals;\\n    }\\n\\n    struct _fillOrderValues {\\n        uint256 rate;\\n        uint256 amount;\\n    }\\n\\n    //Structs representing an order that has unique id, user and amounts to give and get between two tokens to exchange\\n    struct _Order {\\n        uint256 id;\\n        Side side;\\n        address user;\\n        address tokenA;\\n        uint256 amountA;\\n        address tokenB;\\n        uint256 amountB;\\n        uint256 rate; // TokenB/TokenA = price in terms of TokenB\\n        uint256 originalAmountA;\\n        uint256 originalAmountB;\\n        bool waiveFees;\\n    }\\n\\n    //For any order that is filled even if it is partially filled or fully filled\\n    struct _filledOrder {\\n        uint256 id;\\n        Side side;\\n        address user;\\n        address tokenA;\\n        address tokenB;\\n        uint256 amountFilled;\\n        uint256 fillRate;\\n        uint256 originalRate;\\n        uint256 originalAmountA;\\n        uint256 originalAmountB;\\n        bool feesWaived;\\n        uint256 feesPaid; //in terms of USD\\n    }\\n\\n    enum Side {\\n        BUY,\\n        SELL\\n    }\\n\\n    //add events\\n    /// @notice Event when an order is placed on an exchange\\n    event Order(\\n        uint256 id,\\n        Side side,\\n        address user,\\n        address tokenA,\\n        uint256 amountA,\\n        address tokenB,\\n        uint256 amountB,\\n        uint256 rate,\\n        uint256 originalAmountA,\\n        uint256 originalAmountB,\\n        bool waiveFees\\n    );\\n\\n    /// @notice Event when an order is cancelled\\n    event Cancel(\\n        uint256 id,\\n        Side side,\\n        address user,\\n        address tokenA,\\n        uint256 amountA,\\n        address tokenB,\\n        uint256 amountB,\\n        uint256 rate,\\n        uint256 originalAmountA,\\n        uint256 originalAmountB,\\n        bool waiveFees\\n    );\\n\\n    event fillBuyOrder(\\n        _Order remainingOrder,\\n        uint256 amountBought,\\n        uint256 fillBuyRate,\\n        bool feesWaived,\\n        uint256 feesPaid\\n    );\\n\\n    event fillSellOrder(\\n        _Order remainingOrder,\\n        uint256 amountSold,\\n        uint256 fillSellRate,\\n        bool feesWaived,\\n        uint256 feesPaid\\n    );\\n\\n    constructor(address _wallet, address _fees, address _priceChecker) {\\n        wallet = Wallet(_wallet);\\n        tradingFees = TradingFees(_fees);\\n        priceChecker = PriceChecker(_priceChecker);\\n    }\\n\\n    function createLimitBuyOrder(\\n        // TokenA/TokenB\\n        address _tokenA,\\n        uint256 _amountA,\\n        address _tokenB,\\n        uint256 _amountB,\\n        uint256 _rate,\\n        bool _waiveFees\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\n        //Amount user has deposited in the DEX must be >= value he wants to buy\\n        require(\\n            wallet.balanceOf(_tokenB, msg.sender).sub(\\n                wallet.getlockedFunds(msg.sender, _tokenB)\\n            ) >= _amountB,\\n            \\\"Insufficient Funds\\\"\\n        );\\n\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenB, _amountB, true);\\n\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.BUY)].push(\\n            _Order(\\n                s_orderId,\\n                Side.BUY,\\n                msg.sender,\\n                _tokenA,\\n                _amountA,\\n                _tokenB,\\n                _amountB,\\n                _rate,\\n                _amountA,\\n                _amountB,\\n                _waiveFees\\n            )\\n        );\\n\\n        emit Order(\\n            s_orderId,\\n            Side.BUY,\\n            msg.sender,\\n            _tokenA,\\n            _amountA,\\n            _tokenB,\\n            _amountB,\\n            _rate,\\n            _amountA,\\n            _amountB,\\n            _waiveFees\\n        );\\n\\n        s_orderId = s_orderId.add(1);\\n    }\\n\\n    function createLimitSellOrder(\\n        address _tokenA,\\n        uint256 _amountA,\\n        address _tokenB,\\n        uint256 _amountB,\\n        uint256 _rate,\\n        bool _waiveFees\\n    ) external validToken(_tokenA) validToken(_tokenB) {\\n        //Amount of tokens user deposit in DEX must be >= the amount of tokens they want to sell\\n        require(\\n            wallet.balanceOf(_tokenA, msg.sender).sub(\\n                wallet.getlockedFunds(msg.sender, _tokenA)\\n            ) >= _amountA,\\n            \\\"Insufficient Funds\\\"\\n        );\\n\\n        //Lock the funds (tokens) in the wallet\\n        wallet.exchangeUpdateLockedFunds(msg.sender, _tokenA, _amountA, true);\\n\\n        s_orderBook[_tokenA][_tokenB][uint256(Side.SELL)].push(\\n            _Order(\\n                s_orderId,\\n                Side.SELL,\\n                msg.sender,\\n                _tokenA,\\n                _amountA,\\n                _tokenB,\\n                _amountB,\\n                _rate,\\n                _amountA,\\n                _amountB,\\n                _waiveFees\\n            )\\n        );\\n\\n        emit Order(\\n            s_orderId,\\n            Side.SELL,\\n            msg.sender,\\n            _tokenA,\\n            _amountA,\\n            _tokenB,\\n            _amountB,\\n            _rate,\\n            _amountA,\\n            _amountB,\\n            _waiveFees\\n        );\\n\\n        s_orderId = s_orderId.add(1);\\n    }\\n\\n    function cancelOrder(\\n        Side side,\\n        uint256 _id,\\n        address _tokenA,\\n        address _tokenB\\n    )\\n        public\\n        validOrder(_id, side, _tokenA, _tokenB)\\n        validToken(_tokenA)\\n        validToken(_tokenB)\\n    {\\n        uint256 _side = uint256(side);\\n        _Order[] storage _order = s_orderBook[_tokenA][_tokenB][_side];\\n        uint256 size = _order.length;\\n        _Order memory order;\\n\\n        uint256 index;\\n        for (uint256 i = 0; i < size; i++) {\\n            if (_order[i].id == _id) {\\n                index = i;\\n                order = _order[i];\\n                break;\\n            }\\n        }\\n\\n        //Manual cancellation of orders\\n        if (s_isManual) {\\n            require(msg.sender == order.user, \\\"Not Owner\\\");\\n\\n            //Unlock funds\\n            if (side == Side.BUY) {\\n                wallet.exchangeUpdateLockedFunds(\\n                    msg.sender,\\n                    order.tokenB,\\n                    order.amountB,\\n                    false\\n                );\\n            } else if (side == Side.SELL) {\\n                wallet.exchangeUpdateLockedFunds(\\n                    msg.sender,\\n                    order.tokenA,\\n                    order.amountA,\\n                    false\\n                );\\n            }\\n        }\\n\\n        for (uint256 j = index; j < size - 1; j++) {\\n            _order[j] = _order[j.add(1)];\\n        }\\n        delete _order[size.sub(1)];\\n        _order.pop();\\n\\n        s_orderBook[_tokenA][_tokenB][_side] = _order;\\n\\n        emit Cancel(\\n            _id,\\n            order.side,\\n            order.user,\\n            order.tokenA,\\n            order.amountA,\\n            order.tokenB,\\n            order.amountB,\\n            order.rate,\\n            order.originalAmountA,\\n            order.originalAmountB,\\n            order.waiveFees\\n        );\\n    }\\n\\n    function fillOrder(\\n        Side side,\\n        uint256 _id,\\n        address _tokenA,\\n        address _tokenB,\\n        _fillOrderValues memory a\\n    )\\n        internal\\n        validOrder(_id, side, _tokenA, _tokenB)\\n        validToken(_tokenA)\\n        validToken(_tokenB)\\n    {\\n        uint256 _side = uint256(side);\\n        (_Order memory order, uint256 index) = getOrderFromArray(\\n            _tokenA,\\n            _tokenB,\\n            _side,\\n            _id\\n        );\\n\\n        require(order.amountA >= a.amount, \\\"Invalid Order Amount to fill\\\");\\n\\n        order.amountA = order.amountA.sub(a.amount);\\n        order.amountB = order.amountB.sub(\\n            order.rate.mul(a.amount).div(decimals)\\n        );\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountA = order.amountA;\\n        s_orderBook[_tokenA][_tokenB][_side][index].amountB = order.amountB;\\n\\n        uint256 fees = tradingFees.calculateFees(\\n            a.amount,\\n            a.rate,\\n            order.tokenB\\n        );\\n        bool feesWaived = order.waiveFees &&\\n            tradingFees.checkSufficientaDAI(fees, order.user);\\n\\n        if (side == Side.BUY) {\\n            fillBuyOrders(order, a.amount, a.rate, feesWaived, fees);\\n            emit fillBuyOrder(order, a.amount, a.rate, feesWaived, fees);\\n        } else if (side == Side.SELL) {\\n            fillSellOrders(order, a.amount, a.rate, feesWaived, fees);\\n            emit fillSellOrder(order, a.amount, a.rate, feesWaived, fees);\\n        }\\n\\n        if (order.amountA == 0) {\\n            s_isManual = false;\\n            cancelOrder(side, order.id, order.tokenA, order.tokenB); //remove filled orders\\n            s_isManual = true;\\n        }\\n    }\\n\\n    function fillBuyOrders(\\n        _Order memory order,\\n        uint256 _amount,\\n        uint256 _rate,\\n        bool feesWaived,\\n        uint256 fees\\n    ) internal {\\n        if (feesWaived) {\\n            //Deduct aDAI\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                order.user,\\n                aDAIToDeduct,\\n                false\\n            );\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                wallet.fundWallet(),\\n                aDAIToDeduct,\\n                true\\n            );\\n\\n            //Credit Bought tokens\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                order.user,\\n                _amount,\\n                true\\n            );\\n        } else {\\n            uint256 amountTokenToDeduct = tradingFees.amountTokensToDeduct(\\n                order.tokenA,\\n                fees\\n            );\\n            //Credit Bought tokens after minusing fees\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                order.user,\\n                _amount.sub(amountTokenToDeduct),\\n                true\\n            );\\n\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                wallet.fundWallet(),\\n                amountTokenToDeduct,\\n                true\\n            );\\n        }\\n\\n        //Original Locked Funds unlocked\\n        wallet.exchangeUpdateLockedFunds(\\n            order.user,\\n            order.tokenB,\\n            (order.rate.mul(_amount)).div(decimals),\\n            false\\n        );\\n\\n        //buyer update\\n        //Buyer balance deducted from what he paid\\n        wallet.exchangeUpdateBalance(\\n            order.tokenB,\\n            order.user,\\n            (_rate.mul(_amount)).div(decimals),\\n            false\\n        );\\n\\n        s_filledOrders[order.user][0].push(\\n            _filledOrder(\\n                order.id,\\n                order.side,\\n                order.user,\\n                order.tokenA,\\n                order.tokenB,\\n                _amount,\\n                _rate,\\n                order.rate,\\n                order.originalAmountA,\\n                order.originalAmountB,\\n                feesWaived,\\n                fees\\n            )\\n        );\\n    }\\n\\n    function fillSellOrders(\\n        _Order memory order,\\n        uint256 _amount,\\n        uint256 _rate,\\n        bool feesWaived,\\n        uint256 fees\\n    ) internal {\\n        if (feesWaived) {\\n            //Deduct aDAI\\n            uint256 aDAIToDeduct = tradingFees.amountaDAIToDeduct(fees);\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                order.user,\\n                aDAIToDeduct,\\n                false\\n            );\\n            wallet.exchangeUpdateBalance(\\n                tradingFees.aDAI(),\\n                wallet.fundWallet(),\\n                aDAIToDeduct,\\n                true\\n            );\\n\\n            //Credit Earned tokens\\n            wallet.exchangeUpdateBalance(\\n                order.tokenB,\\n                order.user,\\n                (_rate.mul(_amount)).div(decimals),\\n                true\\n            );\\n        } else {\\n            uint256 amountTokensToDeduct = tradingFees.amountTokensToDeduct(\\n                order.tokenB,\\n                fees\\n            );\\n            wallet.exchangeUpdateBalance(\\n                order.tokenA,\\n                wallet.fundWallet(),\\n                amountTokensToDeduct,\\n                true\\n            );\\n            //Credit Earned tokens after minusing fees\\n            wallet.exchangeUpdateBalance(\\n                order.tokenB,\\n                order.user,\\n                (_rate.mul(_amount)).div(decimals).sub(amountTokensToDeduct),\\n                true\\n            );\\n        }\\n\\n        wallet.exchangeUpdateLockedFunds(\\n            order.user,\\n            order.tokenA,\\n            _amount,\\n            false\\n        );\\n        //seller update\\n        wallet.exchangeUpdateBalance(order.tokenA, order.user, _amount, false);\\n\\n        s_filledOrders[order.user][1].push(\\n            _filledOrder(\\n                order.id,\\n                order.side,\\n                order.user,\\n                order.tokenA,\\n                order.tokenB,\\n                _amount,\\n                _rate,\\n                order.rate,\\n                order.originalAmountA,\\n                order.originalAmountB,\\n                feesWaived,\\n                fees\\n            )\\n        );\\n    }\\n\\n    function matchOrders(\\n        address _tokenA,\\n        address _tokenB,\\n        uint256 _id,\\n        Side side\\n    )\\n        internal\\n        validOrder(_id, side, _tokenA, _tokenB)\\n        validToken(_tokenA)\\n        validToken(_tokenB)\\n    {\\n        uint256 saleTokenAmt;\\n\\n        if (side == Side.BUY) {\\n            //Retrieve sell order to match\\n            _Order[] memory _sellOrder = s_orderBook[_tokenA][_tokenB][1];\\n            for (uint256 i = 0; i < _sellOrder.length; i++) {\\n                //Retrieve buy order to be filled\\n                (_Order memory buyOrderToFill, ) = getOrderFromArray(\\n                    _tokenA,\\n                    _tokenB,\\n                    uint8(side),\\n                    _id\\n                );\\n                //sell order hit buyer's limit price & tokenB matches\\n                if (\\n                    _sellOrder[i].rate <= buyOrderToFill.rate &&\\n                    buyOrderToFill.user != _sellOrder[i].user\\n                ) {\\n                    _Order memory sellOrder = _sellOrder[i];\\n                    //if buyer's amount to buy > seller's amount to sell\\n                    if (buyOrderToFill.amountA > sellOrder.amountA) {\\n                        saleTokenAmt = sellOrder.amountA;\\n                    }\\n                    //if seller's amount to sell >= buyer's amount to buy\\n                    else if (buyOrderToFill.amountA <= sellOrder.amountA) {\\n                        saleTokenAmt = buyOrderToFill.amountA;\\n                    }\\n\\n                    //Verify current balance\\n                    require(\\n                        wallet.balanceOf(\\n                            buyOrderToFill.tokenB,\\n                            buyOrderToFill.user\\n                        ) >= (saleTokenAmt.mul(sellOrder.rate)).div(decimals),\\n                        \\\"Insufficient Buyer Token Balance\\\"\\n                    );\\n                    require(\\n                        wallet.balanceOf(_tokenA, sellOrder.user) >=\\n                            saleTokenAmt,\\n                        \\\"Insufficient Seller Token Balance\\\"\\n                    );\\n\\n                    //update orders\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\n                        sellOrder.rate,\\n                        saleTokenAmt\\n                    );\\n                    fillOrder(Side.BUY, _id, _tokenA, _tokenB, fillOrderValues);\\n                    fillOrder(\\n                        Side.SELL,\\n                        sellOrder.id,\\n                        _tokenA,\\n                        _tokenB,\\n                        fillOrderValues\\n                    );\\n                }\\n\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\n                if (!orderExist) break;\\n            }\\n        } else if (side == Side.SELL) {\\n            //Retrieve buy order to match\\n            _Order[] memory _buyOrder = s_orderBook[_tokenA][_tokenB][0];\\n            for (uint256 i = 0; i < _buyOrder.length; i++) {\\n                //Retrieve sell order to be filled\\n                (_Order memory sellOrderToFill, ) = getOrderFromArray(\\n                    _tokenA,\\n                    _tokenB,\\n                    1,\\n                    _id\\n                );\\n                //sell order hit buyer's limit price\\n                if (\\n                    _buyOrder[i].rate >= sellOrderToFill.rate &&\\n                    _buyOrder[i].user != sellOrderToFill.user\\n                ) {\\n                    _Order memory order = _buyOrder[i];\\n\\n                    //if seller's amount to sell > buyer's amount to buy\\n                    if (sellOrderToFill.amountA > order.amountA) {\\n                        saleTokenAmt = order.amountA;\\n                    }\\n                    //if buyer's amount to buy > seller's amount to sell\\n                    else if (sellOrderToFill.amountA <= order.amountA) {\\n                        saleTokenAmt = sellOrderToFill.amountA;\\n                    }\\n                    //Verify current balance\\n                    require(\\n                        wallet.balanceOf(_tokenA, sellOrderToFill.user) >=\\n                            saleTokenAmt,\\n                        \\\"Insufficient Seller Token Balance\\\"\\n                    );\\n                    require(\\n                        wallet.balanceOf(order.tokenB, order.user) >=\\n                            (saleTokenAmt.mul(order.rate)).div(decimals),\\n                        \\\"Insufficient Buyer Token Balance\\\"\\n                    );\\n\\n                    //update orders\\n                    _fillOrderValues memory fillOrderValues = _fillOrderValues(\\n                        order.rate,\\n                        saleTokenAmt\\n                    );\\n                    fillOrder(\\n                        Side.SELL,\\n                        _id,\\n                        _tokenA,\\n                        _tokenB,\\n                        fillOrderValues\\n                    );\\n                    fillOrder(\\n                        Side.BUY,\\n                        order.id,\\n                        _tokenA,\\n                        _tokenB,\\n                        fillOrderValues\\n                    );\\n                }\\n                bool orderExist = orderExists(_id, side, _tokenA, _tokenB);\\n                if (!orderExist) break;\\n            }\\n        }\\n    }\\n\\n    function getOrderLength(\\n        Side side,\\n        address _tokenA,\\n        address _tokenB\\n    ) public view returns (uint256) {\\n        return s_orderBook[_tokenA][_tokenB][uint256(side)].length;\\n    }\\n\\n    function getOrder(\\n        address _tokenA,\\n        address _tokenB,\\n        uint256 index,\\n        Side side\\n    ) public view returns (_Order memory) {\\n        _Order memory order = s_orderBook[_tokenA][_tokenB][uint256(side)][\\n            index\\n        ];\\n        return (order);\\n    }\\n\\n    function getFilledOrderLength(\\n        address _user,\\n        Side side\\n    ) public view returns (uint256) {\\n        return s_filledOrders[_user][uint256(side)].length;\\n    }\\n\\n    function getFilledOrder(\\n        address _user,\\n        Side side,\\n        uint256 index\\n    ) public view returns (_filledOrder memory) {\\n        _filledOrder memory filledOrder = s_filledOrders[_user][uint256(side)][\\n            index\\n        ];\\n        return (filledOrder);\\n    }\\n\\n    function getOrderFromArray(\\n        address _tokenA,\\n        address _tokenB,\\n        uint256 side,\\n        uint256 _id\\n    ) public view returns (_Order memory, uint256) {\\n        uint256 i = 0;\\n        _Order[] memory _order = s_orderBook[_tokenA][_tokenB][side];\\n        _Order memory order;\\n        for (i; i < _order.length; i++) {\\n            if (_order[i].id == _id) {\\n                order = _order[i];\\n                break;\\n            }\\n        }\\n        return (order, i);\\n    }\\n\\n    function orderExists(\\n        uint256 _id,\\n        Side side,\\n        address _tokenA,\\n        address _tokenB\\n    ) public view returns (bool) {\\n        _Order[] memory orders = s_orderBook[_tokenA][_tokenB][uint256(side)];\\n\\n        for (uint256 i = 0; i < orders.length; i++) {\\n            if (orders[i].id == _id) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function addToken(address _token, uint256 _decimals) public onlyOwner {\\n        require(!isVerifiedToken(_token), \\\"Token already verified\\\");\\n        tokenList.push(_tokenInfo(_token, _decimals));\\n    }\\n\\n    function isVerifiedToken(address _token) public view returns (bool) {\\n        //uint256 size = tokenList.length;\\n\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\n            if (tokenList[i].add == _token) return true;\\n        }\\n        return false;\\n    }\\n\\n    function getTokenInfo(address _token) public view returns (uint256) {\\n        for (uint256 i = 0; i < tokenList.length; i++) {\\n            if (tokenList[i].add == _token) {\\n                return tokenList[i].decimals;\\n            }\\n        }\\n    }\\n\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\n        wallet = Wallet(_Walletaddress);\\n    }\\n\\n    function setPriceCheckerAddress(\\n        address _PriceCheckeraddress\\n    ) public onlyOwner {\\n        priceChecker = PriceChecker(_PriceCheckeraddress);\\n    }\\n\\n    function setTradingFees(address _tradingFees) public onlyOwner {\\n        tradingFees = TradingFees(_tradingFees);\\n    }\\n\\n    modifier validOrder(\\n        uint256 _id,\\n        Side side,\\n        address _tokenA,\\n        address _tokenB\\n    ) {\\n        require(orderExists(_id, side, _tokenA, _tokenB), \\\"Invalid Order ID\\\");\\n        _;\\n    }\\n\\n    modifier validToken(address _token) {\\n        require(isVerifiedToken(_token), \\\"Token unavailable in DEX\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xdf016dc3262cc3b92f32545ccbf91064c10036728e6d606dece377203897a32a\",\"license\":\"MIT\"},\"contracts/PriceChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract PriceChecker is Ownable {\\n    _priceFeed[] public priceFeeds;\\n\\n    struct _priceFeed {\\n        string name;\\n        address token;\\n        AggregatorV3Interface priceFeed;\\n    }\\n\\n    //only using PriceFeeds pegged to USD\\n    function addPriceFeed(\\n        string memory _name,\\n        address _token,\\n        address _address\\n    ) external onlyOwner {\\n        _priceFeed[] memory pricefeed = priceFeeds;\\n        bool isAdded = false;\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\n            if (\\n                keccak256(abi.encodePacked(_name)) ==\\n                keccak256(abi.encodePacked(pricefeed[i].name))\\n            ) {\\n                isAdded = true;\\n                break;\\n            }\\n        }\\n        require(!isAdded, \\\"Price Feed already added\\\");\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_address);\\n        priceFeeds.push(_priceFeed(_name, _token, priceFeed));\\n    }\\n\\n    function getPriceFeed(\\n        address _token\\n    ) internal view returns (AggregatorV3Interface priceFeed) {\\n        _priceFeed[] memory pricefeed = priceFeeds;\\n\\n        for (uint256 i = 0; i < pricefeed.length; i++) {\\n            if (_token == pricefeed[i].token) {\\n                return pricefeed[i].priceFeed;\\n            }\\n        }\\n    }\\n\\n    function getPrice(address _address) external view returns (uint256) {\\n        AggregatorV3Interface priceFeed = getPriceFeed(_address);\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer);\\n    }\\n}\\n\",\"keccak256\":\"0x5c9c2328d2d7e59d81ef60914824d090cca775d2bb406259e47def176d87e12d\",\"license\":\"MIT\"},\"contracts/TradingFees.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceChecker.sol\\\";\\nimport \\\"./Wallet.sol\\\";\\n\\n/// @notice Library SafeMath used to prevent overflows and underflows\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract TradingFees is Ownable {\\n    //When trading, have an option toggle to waive trading fees or not using deposited aETH\\n    //Users have to first deposit aETH tokens into the Exchange contract to waive, aETH tokens are not for trading\\n    //When a trade order goes through, trading fees of the trade fulfilled  = trade amount x trade price x 0.01,\\n    //contract checks how much aETH is deposited and what is the value of aETH, if sufficient to waive fees fully, deduct balance in deposit\\n    //and waive trading fees\\n\\n    using SafeMath for uint256; //for prevention of integer overflow\\n\\n    uint256 decimals = 10 ** 18;\\n    address public daiToken =\\n        address(0xBa8DCeD3512925e52FE67b1b5329187589072A55); //based on Aave contract\\n    address public aDAI = address(0xADD98B0342e4094Ec32f3b67Ccfd3242C876ff7a); //based on Aave contract\\n    PriceChecker private priceFeed;\\n    Wallet wallet;\\n\\n    constructor(address _priceCheckerAddress) {\\n        priceFeed = PriceChecker(_priceCheckerAddress);\\n    }\\n\\n    function calculateFees(\\n        uint256 _amount,\\n        uint256 _rate,\\n        address _refToken\\n    ) public view returns (uint256) {\\n        //Calculated based on TokenB price, require actual price in 18dp\\n        //trading fees is 0.1% of trade = 0.001\\n        //moving up 18dp is 0.001 x 10**18 = 10**14\\n        //have to fetch tokenPrice from PriceFeed\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8dp originally\\n        uint256 value = (\\n            ((_amount.mul(_rate)).div(decimals)).mul(priceOfToken.mul(10 ** 10))\\n        ).div(decimals);\\n        uint256 fees = value.div(10 ** 4);\\n\\n        return fees; //based on USD value\\n    }\\n\\n    //Amount of DAI to deduct from fees\\n    function amountaDAIToDeduct(uint256 _fees) public view returns (uint256) {\\n        uint256 aDAI_Price = priceFeed.getPrice(daiToken); // in 8 decimals initially\\n        uint256 amt = _fees.mul(decimals).div(aDAI_Price.mul(10 ** 10));\\n        return uint256(amt);\\n    }\\n\\n    //Amount of Tokens to deduct from fees\\n    function amountTokensToDeduct(\\n        address _refToken,\\n        uint256 _fees\\n    ) public view returns (uint256) {\\n        uint256 priceOfToken = priceFeed.getPrice(_refToken); //in 8decimals\\n        uint256 amt = _fees.mul(decimals).div(priceOfToken.mul(10 ** 10));\\n        return uint256(amt);\\n    }\\n\\n    function checkSufficientaDAI(\\n        uint256 _fees,\\n        address _user\\n    ) public view returns (bool) {\\n        uint256 amtDAI = amountaDAIToDeduct(_fees);\\n        uint256 balance = wallet.s_tokens(aDAI, _user);\\n\\n        return balance >= amtDAI;\\n    }\\n\\n    function setWalletAddress(address _Walletaddress) public onlyOwner {\\n        wallet = Wallet(_Walletaddress);\\n    }\\n\\n    function setPriceCheckerAddress(\\n        address _PriceCheckeraddress\\n    ) public onlyOwner {\\n        priceFeed = PriceChecker(_PriceCheckeraddress);\\n    }\\n}\\n\",\"keccak256\":\"0xa7188a7c778a4f831be26ba1c8173104c2d6ab869dd6d835a8e781b1595c783f\",\"license\":\"MIT\"},\"contracts/Wallet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"./Exchange.sol\\\";\\n\\n/// @notice Library SafeMath used to prevent overflows and underflows\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Wallet is Ownable {\\n    using SafeMath for uint256; //for prevention of integer overflow\\n\\n    address Owner;\\n    address public fundWallet;\\n    uint256 decimals = 18;\\n    address public aDAI;\\n\\n    //For prevention of reentrancy\\n    bool private locked;\\n\\n    address public ethToken = address(0);\\n\\n    mapping(address => mapping(address => uint256)) public s_tokens; //tokenAdress -> msg.sender -> tokenAmt\\n    mapping(address => mapping(address => uint256)) public lockedFunds;\\n\\n    Exchange exchange;\\n    IERC20 token;\\n\\n    event Deposit(address token, address user, uint256 amount, uint256 balance);\\n\\n    /// @notice Event when amount withdrawn exchange\\n    event Withdraw(\\n        address token,\\n        address user,\\n        uint256 amount,\\n        uint256 balance\\n    );\\n\\n    constructor() {\\n        Owner = msg.sender;\\n    }\\n\\n    function depositETH() external payable {\\n        updateBalance(ethToken, msg.sender, msg.value, true);\\n\\n        emit Deposit(\\n            ethToken,\\n            msg.sender,\\n            msg.value,\\n            balanceOf(ethToken, msg.sender)\\n        );\\n    }\\n\\n    function withdrawETH(uint256 _amount) external {\\n        require(\\n            balanceOf(ethToken, msg.sender).sub(\\n                getlockedFunds(msg.sender, ethToken)\\n            ) >= _amount,\\n            \\\"Insufficient balance ETH to withdraw\\\"\\n        );\\n        require(!locked, \\\"Reentrant call detected!\\\");\\n        locked = true;\\n        updateBalance(ethToken, msg.sender, _amount, false);\\n        (bool success, ) = msg.sender.call{value: _amount}(\\\"\\\");\\n        require(success, \\\"failed to send amount\\\");\\n        locked = false;\\n\\n        emit Withdraw(\\n            ethToken,\\n            msg.sender,\\n            _amount,\\n            balanceOf(ethToken, msg.sender)\\n        );\\n    }\\n\\n    //from and transferFrom is from ERC20 contract\\n    //_token should be an ERC20 token\\n    function depositToken(\\n        address _token,\\n        uint256 _amount,\\n        uint256 _decimals\\n    ) external {\\n        require(_token != ethToken, \\\"Invalid Token Type\\\");\\n        require(\\n            exchange.isVerifiedToken(_token) || _token == aDAI,\\n            \\\"Token not verified on Exchange\\\"\\n        );\\n        //need to add a check to prove that it is an ERC20 token\\n        token = IERC20(_token);\\n\\n        //Requires approval first\\n        require(\\n            token.transferFrom(msg.sender, address(this), _amount),\\n            \\\"No Approval yet\\\"\\n        );\\n\\n        updateBalance(\\n            _token,\\n            msg.sender,\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\n            true\\n        );\\n\\n        emit Deposit(\\n            _token,\\n            msg.sender,\\n            _amount,\\n            balanceOf(_token, msg.sender)\\n        );\\n    }\\n\\n    function withdrawToken(\\n        address _token,\\n        uint256 _amount,\\n        uint256 _decimals\\n    ) external {\\n        require(_token != ethToken);\\n        require(\\n            exchange.isVerifiedToken(_token),\\n            \\\"Token not verified on Exchange\\\"\\n        );\\n\\n        require(\\n            balanceOf(_token, msg.sender).sub(\\n                getlockedFunds(msg.sender, _token)\\n            ) >= _amount,\\n            \\\"Insufficient Tokens to withdraw\\\"\\n        );\\n        require(!locked, \\\"Reentrant call detected!\\\");\\n        locked = true;\\n\\n        token = IERC20(_token);\\n        updateBalance(\\n            _token,\\n            msg.sender,\\n            _amount.mul(10 ** decimals.sub(_decimals)),\\n            false\\n        );\\n        require(\\n            token.transfer(\\n                msg.sender,\\n                _amount.div(10 ** decimals.sub(_decimals))\\n            )\\n        );\\n\\n        locked = false;\\n        emit Withdraw(\\n            _token,\\n            msg.sender,\\n            _amount,\\n            balanceOf(_token, msg.sender)\\n        );\\n    }\\n\\n    function getlockedFunds(\\n        address _user,\\n        address _token\\n    ) public view returns (uint256) {\\n        return lockedFunds[_user][_token];\\n    }\\n\\n    function exchangeUpdateLockedFunds(\\n        address _user,\\n        address _token,\\n        uint256 _amount,\\n        bool isAdd\\n    ) external isExchange {\\n        updateLockedFunds(_user, _token, _amount, isAdd);\\n    }\\n\\n    function updateLockedFunds(\\n        address _user,\\n        address _token,\\n        uint256 _amount,\\n        bool isAdd\\n    ) internal {\\n        if (isAdd) {\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].add(\\n                _amount\\n            );\\n        } else if (!isAdd) {\\n            lockedFunds[_user][_token] = lockedFunds[_user][_token].sub(\\n                _amount\\n            );\\n        }\\n    }\\n\\n    //balance of specific tokens in the dex owned by specific user\\n    function balanceOf(\\n        address _token,\\n        address _user\\n    ) public view returns (uint256) {\\n        return s_tokens[_token][_user];\\n    }\\n\\n    function exchangeUpdateBalance(\\n        address _token,\\n        address _user,\\n        uint256 _amount,\\n        bool isAdd\\n    ) external isExchange {\\n        updateBalance(_token, _user, _amount, isAdd);\\n    }\\n\\n    function updateBalance(\\n        address _token,\\n        address _user,\\n        uint256 _amount,\\n        bool isAdd\\n    ) internal {\\n        if (isAdd) {\\n            s_tokens[_token][_user] = s_tokens[_token][_user].add(_amount);\\n        } else if (!isAdd) {\\n            s_tokens[_token][_user] = s_tokens[_token][_user].sub(_amount);\\n        }\\n    }\\n\\n    function updateFundWallet(address _fundwallet) public onlyOwner {\\n        fundWallet = _fundwallet;\\n    }\\n\\n    function withdrawToFundWallet(address _token, uint256 _decimals) external {\\n        //Only allow fundWallet address to make the call\\n        require(\\n            msg.sender == fundWallet,\\n            \\\"Invalid FundWallet address to withdraw\\\"\\n        );\\n        uint256 totalAmount = s_tokens[_token][fundWallet];\\n        uint256 actualAmount = totalAmount.div(10 ** decimals.sub(_decimals));\\n        token = IERC20(_token);\\n\\n        require(!locked, \\\"Reentrant call detected!\\\");\\n        locked = true;\\n        updateBalance(_token, fundWallet, totalAmount, false);\\n        require(token.transfer(fundWallet, actualAmount));\\n        locked = false;\\n    }\\n\\n    function updateExchangeAddress(address _exchangeAddress) public onlyOwner {\\n        exchange = Exchange(_exchangeAddress);\\n    }\\n\\n    function updateaDaiAddress(address _address) public onlyOwner {\\n        aDAI = address(_address);\\n    }\\n\\n    modifier isExchange() {\\n        require(msg.sender == address(exchange), \\\"Not Exchange contract\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xb6878d59320d4df2cf05086e287149f3748edf8c1c68bcc96e33c4a56b58777f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/Wallet.sol:Wallet","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":3549,"contract":"contracts/Wallet.sol:Wallet","label":"Owner","offset":0,"slot":"1","type":"t_address"},{"astId":3551,"contract":"contracts/Wallet.sol:Wallet","label":"fundWallet","offset":0,"slot":"2","type":"t_address"},{"astId":3554,"contract":"contracts/Wallet.sol:Wallet","label":"decimals","offset":0,"slot":"3","type":"t_uint256"},{"astId":3556,"contract":"contracts/Wallet.sol:Wallet","label":"aDAI","offset":0,"slot":"4","type":"t_address"},{"astId":3558,"contract":"contracts/Wallet.sol:Wallet","label":"locked","offset":20,"slot":"4","type":"t_bool"},{"astId":3564,"contract":"contracts/Wallet.sol:Wallet","label":"ethToken","offset":0,"slot":"5","type":"t_address"},{"astId":3570,"contract":"contracts/Wallet.sol:Wallet","label":"s_tokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3576,"contract":"contracts/Wallet.sol:Wallet","label":"lockedFunds","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3579,"contract":"contracts/Wallet.sol:Wallet","label":"exchange","offset":0,"slot":"8","type":"t_contract(Exchange)3136"},{"astId":3582,"contract":"contracts/Wallet.sol:Wallet","label":"token","offset":0,"slot":"9","type":"t_contract(IERC20)236"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(Exchange)3136":{"encoding":"inplace","label":"contract Exchange","numberOfBytes":"20"},"t_contract(IERC20)236":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"Withdraw(address,address,uint256,uint256)":{"notice":"Event when amount withdrawn exchange"}},"kind":"user","methods":{},"version":1}}}}}}